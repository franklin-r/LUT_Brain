
LUTBrain_NIOS.elf:     file format elf32-littlenios2
LUTBrain_NIOS.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04020244

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00015bb4 memsz 0x00015bb4 flags r-x
    LOAD off    0x00017000 vaddr 0x00000000 paddr 0x04035bd4 align 2**12
         filesz 0x000021c4 memsz 0x0004d34c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00015990  04020244  04020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000698  00000000  04035bd4  00017000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b2c  00000698  0403626c  00017698  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0004b188  000021c4  04037d98  000191c4  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  0004d34c  0004d34c  000191c4  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  04037d98  04037d98  000191c4  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000191c4  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000016b0  00000000  00000000  000191e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00033e1e  00000000  00000000  0001a898  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000e97a  00000000  00000000  0004e6b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001158c  00000000  00000000  0005d030  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00003850  00000000  00000000  0006e5bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000077e3  00000000  00000000  00071e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001efa1  00000000  00000000  000795ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  00098590  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002720  00000000  00000000  000985c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000a0726  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000a0729  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000a0735  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000a0736  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000a0737  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000a073b  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000a073f  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  000a0743  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000a074c  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000a0755  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000012  00000000  00000000  000a075e  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000003a  00000000  00000000  000a0770  2**0
                  CONTENTS, READONLY
 30 .jdi          00005850  00000000  00000000  000a07aa  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000826ef  00000000  00000000  000a5ffa  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
04020244 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000698 l    d  .rwdata	00000000 .rwdata
000021c4 l    d  .bss	00000000 .bss
0004d34c l    d  .sdram	00000000 .sdram
04037d98 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../LUTBrain_NIOS_bsp//obj/HAL/src/crt0.o
0402028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 Image.cpp
00000000 l    df *ABS*	00000000 NN.cpp
00000000 l    df *ABS*	00000000 NNLayer.cpp
00000000 l    df *ABS*	00000000 VGA.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 new_opv.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 del_opv.cc
00000000 l    df *ABS*	00000000 new_handler.cc
000021cc l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 eh_personality.cc
04022798 l     F .text	000000a4 _ZL21size_of_encoded_valueh
0402283c l     F .text	0000020c _ZL28read_encoded_value_with_basehjPKhPj
04022a48 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
04022a9c l     F .text	0000008c _ZL21base_of_encoded_valuehP15_Unwind_Context
04022b28 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
04022c5c l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3
04022ce4 l     F .text	000001c0 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
04022ea4 l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
040237d0 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
04023ec8 l     F .text	000000b8 _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
0004d214 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
04023f80 l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
04024130 l     F .text	0000005c _GLOBAL__sub_I___cxa_allocate_exception
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
000021d0 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
040269c4 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
000021d8 l     O .bss	00000004 fc_static
04026adc l     F .text	000000c0 _Unwind_RaiseException_Phase2
04026b9c l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000004e6 l     O .rodata	00000010 zeroes.4404
0402a178 l     F .text	000000bc __sbprintf
000004f6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0402a388 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0402beb8 l     F .text	00000008 __fp_unlock
0402becc l     F .text	0000019c __sinit.part.1
0402c068 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00000aa0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00000ee4 l     O .rwdata	00000020 lc_ctype_charset
00000ec4 l     O .rwdata	00000020 lc_message_charset
00000f04 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00000528 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
0402eb68 l     F .text	000000fc __sprint_r.part.0
0000065c l     O .rodata	00000010 blanks.4348
0000064c l     O .rodata	00000010 zeroes.4349
040300f4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
04033234 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
04033340 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
040333a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
040334ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0403358c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
040336f8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
040337e4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
040339b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000021b4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
04033da8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
04033edc l     F .text	00000034 alt_dev_reg
000010e4 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
040341d0 l     F .text	0000020c altera_avalon_jtag_uart_irq
040343dc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
04034a14 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
04034c7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
040350f0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
04035230 l     F .text	0000003c alt_get_errno
0403526c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00002210 g     O .bss	00000004 alt_instruction_exception_handler
04024088 g     F .text	00000028 __cxa_free_exception
04027930 g     F .text	00000018 putchar
040244fc g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0402e174 g     F .text	00000074 _mprec_log10
04023e68 g     F .text	00000018 _ZSt10unexpectedv
0402e260 g     F .text	0000008c __any_on
040307e8 g     F .text	00000054 _isatty_r
00000534 g     O .rodata	00000028 __mprec_tinytens
040338f4 g     F .text	0000007c alt_main
04027948 g     F .text	000000c0 _puts_r
0004d24c g     O .bss	00000100 alt_irq
040244e8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0402266c g     F .text	00000094 _Znaj
0403083c g     F .text	00000060 _lseek_r
04026c58 g     F .text	00000020 .hidden _Unwind_GetIPInfo
0403626c g       *ABS*	00000000 __flash_rwdata_start
04031ea0 g     F .text	00000088 .hidden __eqdf2
040238a4 g     F .text	00000084 __cxa_rethrow
00002150  w    O .rwdata	00000008 _ZTI7NNLayer
04026be4 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
04023ea4 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
04026c48 g     F .text	00000010 .hidden _Unwind_GetIP
0004d34c g       *ABS*	00000000 __alt_heap_start
04027d90 g     F .text	0000005c _kill_r
04023788 g     F .text	00000010 _ZNSt9bad_allocD2Ev
040278ec g     F .text	0000003c printf
040308fc g     F .text	0000009c _wcrtomb_r
04027b58 g     F .text	00000084 _signal_r
0402eb04 g     F .text	0000005c __sseek
0402c208 g     F .text	00000010 __sinit
040301b0 g     F .text	00000140 __swbuf_r
04024104 g     F .text	0000002c __cxa_free_dependent_exception
040241fc g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0402ccd0 g     F .text	0000007c _setlocale_r
000001ec  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
0402c070 g     F .text	00000068 __sfmoreglue
04033994 g     F .text	00000024 __malloc_unlock
04021374 g     F .text	00000078 _ZN2NN9propagateEPf
040244e8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
04023a98 g     F .text	00000020 _ZSt18uncaught_exceptionv
04024c70 g     F .text	00000440 .hidden __divsf3
04024574 g     F .text	00000020 __cxa_deleted_virtual
00000048  w    O .rodata	00000010 _ZTV2NN
0402d194 g     F .text	0000015c memmove
04021ca0 g     F .text	00000048 _ZN7NNLayerD1Ev
040244c0 g     F .text	00000004 _ZNSt9exceptionD2Ev
0402c1f0 g     F .text	00000018 _cleanup
0402d2f0 g     F .text	000000a8 _Balloc
04020290 g     F .text	0000003c _ZN5ImageC2Ev
04025ac4 g     F .text	00000070 .hidden __fixsfsi
040202cc g     F .text	0000004c _ZN5ImageC2Eii
04031f28 g     F .text	000000dc .hidden __gtdf2
000002f8  w    O .rodata	00000014 _ZTVSt13bad_exception
04035484 g     F .text	00000024 altera_nios2_gen2_irq_init
04020000 g     F .entry	0000001c __reset
04022630  w    F .text	0000003c _ZN3VGA15send_to_displayEv
04020a3c g     F .text	00000438 _ZN5Image8apply_NNEP2NNii
04026c94 g     F .text	00000008 .hidden _Unwind_GetRegionStart
040217e0 g     F .text	0000006c _ZN7NNLayerC2Ev
04020020 g       *ABS*	00000000 __flash_exceptions_start
0403078c g     F .text	0000005c _fstat_r
000021e8 g     O .bss	00000004 errno
04022184 g     F .text	0000006c _ZN3VGA3clrEv
04021d20 g     F .text	0000022c _ZN7NNLayer9propagateEPf
0402ea80 g     F .text	00000008 __seofread
04026e70 g     F .text	00000074 .hidden _Unwind_Backtrace
000021c8 g     O .bss	00000004 pVGA
000021fc g     O .bss	00000004 alt_argv
0000a144 g       *ABS*	00000000 _gp
040255e0 g     F .text	000004e4 .hidden __subsf3
0403348c g     F .text	00000020 getpid
0402354c g     F .text	00000230 __cxa_call_unexpected
04023928 g     F .text	00000008 __cxa_get_exception_ptr
040210d4 g     F .text	00000220 _ZN2NNC1Ei
00000f64 g     O .rwdata	00000180 alt_fd_list
04027928 g     F .text	00000008 _putchar_r
04026d84 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
04026c14 g     F .text	00000018 .hidden _Unwind_GetCFA
04023e80 g     F .text	00000014 _ZSt13set_terminatePFvvE
040354a8 g     F .text	00000090 alt_find_dev
0402d04c g     F .text	00000148 memcpy
04021538 g     F .text	00000144 _ZN2NN17getMaxOutputValueEv
040240b0 g     F .text	00000054 __cxa_allocate_dependent_exception
0402bec0 g     F .text	0000000c _cleanup_r
04023b30 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
04026630 g     F .text	000000dc .hidden __floatsidf
040351b4 g     F .text	0000007c alt_io_redirect
04032004 g     F .text	000000f4 .hidden __ltdf2
04035bd4 g       *ABS*	00000000 __DTOR_END__
04023b48 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
04027a08 g     F .text	00000014 puts
04035774 g     F .text	0000009c alt_exception_cause_generated_bad_addr
04020924 g     F .text	0000004c _ZN5Image12source_pixelEii
04021000 g     F .text	00000054 _ZN5ImageD1Ev
0402e9b8 g     F .text	00000074 __fpclassifyd
0402e0d0 g     F .text	000000a4 __ratio
04020e74 g     F .text	000000dc _ZN5Image13printToScreenEiiP3VGA
040300d8 g     F .text	0000001c __vfiprintf_internal
0402133c g     F .text	00000038 _ZN2NND0Ev
040345d4 g     F .text	0000021c altera_avalon_jtag_uart_read
04026f60 g     F .text	00000014 malloc
040278bc g     F .text	00000030 _printf_r
040246ec g     F .text	00000064 .hidden __udivsi3
040334e8 g     F .text	000000a4 isatty
04027bdc g     F .text	000000bc _raise_r
00000584 g     O .rodata	000000c8 __mprec_tens
0402cd4c g     F .text	0000000c __locale_charset
040356e4 g     F .text	00000090 alt_icache_flush
000021e4 g     O .bss	00000004 __malloc_top_pad
04027dec g     F .text	00000004 _getpid_r
00002194 g     O .rwdata	00000004 __mb_cur_max
0402cd7c g     F .text	0000000c _localeconv_r
0402d6fc g     F .text	0000003c __i2b
0402c68c g     F .text	000004bc __sfvwrite_r
04023cc8 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
04027c98 g     F .text	000000a8 __sigtramp_r
04027a98 g     F .text	00000054 _sbrk_r
00000344  w    O .rodata	00000020 _ZTVSt9type_info
0403089c g     F .text	00000060 _read_r
040244c8 g     F .text	0000000c _ZNKSt9exception4whatEv
000021ac g     O .rwdata	00000004 alt_max_fd
04030480 g     F .text	000000f0 _fclose_r
00000170  w    O .rodata	0000000c _ZTISt9bad_alloc
040219cc g     F .text	00000050 _Z10simpleRandv
0402be88 g     F .text	00000030 fflush
000021e0 g     O .bss	00000004 __malloc_max_sbrked_mem
0402670c g     F .text	00000110 .hidden __extendsfdf2
040315f4 g     F .text	000008ac .hidden __adddf3
040250b0 g     F .text	00000078 .hidden __nesf2
00000220  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
0402de78 g     F .text	0000010c __b2d
040310bc g     F .text	00000538 .hidden __umoddi3
04033820 g     F .text	000000d4 lseek
04023b8c g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
040237cc g     F .text	00000004 _ZdlPv
0000218c g     O .rwdata	00000004 _global_impure_ptr
04020318 g     F .text	000000a4 _ZN5Image4initEii
0402e454 g     F .text	00000564 _realloc_r
0004d34c g       *ABS*	00000000 __bss_end
04022788 g     F .text	00000010 _ZSt15get_new_handlerv
04035000 g     F .text	000000f0 alt_iic_isr_register
00002214 g     O .bss	0004b000 display
04033ca0 g     F .text	00000108 alt_tick
04026bcc g     F .text	00000018 .hidden _Unwind_SjLj_Register
04030b44 g     F .text	00000578 .hidden __udivdi3
040306e8 g     F .text	00000024 _fputwc_r
0000055c g     O .rodata	00000028 __mprec_bigtens
0402d4e0 g     F .text	00000104 __s2b
04026f48 g     F .text	00000018 abort
00002144  w    O .rwdata	00000008 _ZTI2NN
0403318c g     F .text	000000a8 .hidden __floatunsidf
0402dbb8 g     F .text	00000060 __mcmp
040239e4 g     F .text	000000b4 __cxa_end_catch
0402c228 g     F .text	00000018 __fp_lock_all
04034fb4 g     F .text	0000004c alt_ic_irq_enabled
040244c4 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
04033c04 g     F .text	0000009c alt_alarm_stop
0000220c g     O .bss	00000004 alt_irq_active
04023e40 g     F .text	00000018 _ZSt9terminatev
040200fc g     F .exceptions	000000d4 alt_irq_handler
00000f3c g     O .rwdata	00000028 alt_dev_null
040212f4 g     F .text	00000048 _ZN2NND2Ev
040244f0 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
00000190  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
04034c34 g     F .text	00000048 alt_dcache_flush_all
0402d5e4 g     F .text	00000068 __hi0bits
00002160  w    O .rwdata	00000008 _ZTISt9exception
0403310c g     F .text	00000080 .hidden __fixdfsi
000021c4 g       *ABS*	00000000 __ram_rwdata_end
040244f8 g     F .text	00000004 _ZNSt9type_infoD1Ev
000021a4 g     O .rwdata	00000008 alt_dev_list
040244f0 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
04033de4 g     F .text	000000f8 write
0402e2ec g     F .text	000000a0 _putc_r
0402450c g     F .text	00000004 _ZNSt9type_infoD0Ev
04025128 g     F .text	000000bc .hidden __gtsf2
00000698 g       *ABS*	00000000 __ram_rodata_end
040333dc g     F .text	000000b0 fstat
040335c8 g     F .text	00000130 kill
04032004 g     F .text	000000f4 .hidden __ledf2
04021054  w    F .text	00000080 _ZN3VGA15Set_Pixel_ColorEjjj
0402d930 g     F .text	00000140 __pow5mult
0402ec7c g     F .text	0000145c ___vfiprintf_internal_r
000021f4 g     O .bss	00000004 __nlocale_changed
04024750 g     F .text	00000058 .hidden __umodsi3
04024504 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
04023e94 g     F .text	00000010 _ZSt13get_terminatev
0004d34c g       *ABS*	00000000 end
04026e58 g     F .text	00000018 .hidden _Unwind_DeleteException
000021c4 g     O .bss	00000004 my_debug
04020f50 g     F .text	000000b0 _ZN5Image5printEv
04034110 g     F .text	000000c0 altera_avalon_jtag_uart_init
040201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
04023bf8 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
04035bcd g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
04034a8c g     F .text	0000007c alt_avalon_timer_sc_init
04026ee4 g     F .text	00000064 .hidden __clzsi2
04023ab8 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
040347f0 g     F .text	00000224 altera_avalon_jtag_uart_write
0402c218 g     F .text	00000004 __sfp_lock_acquire
00000280  w    O .rodata	00000012 _ZTSSt13bad_exception
040216f8 g     F .text	000000e8 _ZN2NN12printOutputsEv
0402cf68 g     F .text	000000e4 memchr
04027f64 g     F .text	000021f8 ___vfprintf_internal_r
0402c37c g     F .text	00000310 _free_r
0402184c g     F .text	0000005c _ZN7NNLayerC2Eiii
0402cd58 g     F .text	00000010 __locale_mb_cur_max
040359f0 g     F .text	00000180 __call_exitprocs
000021f0 g     O .bss	00000004 __mlocale_changed
00002184 g     O .rwdata	00000004 __malloc_sbrk_base
04020244 g     F .text	0000004c _start
00002204 g     O .bss	00000004 _alt_tick_rate
04021c54 g     F .text	0000004c _ZN7NNLayer9demo_initEiiii
00000334  w    O .rodata	0000000d _ZTSSt9type_info
0402377c g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
04027a34 g     F .text	00000064 rand
04024554 g     F .text	00000020 __cxa_pure_virtual
0402da70 g     F .text	00000148 __lshift
0000017c  w    O .rodata	00000014 _ZTVSt9bad_alloc
00002208 g     O .bss	00000004 _alt_nticks
04027d54 g     F .text	00000018 signal
040339f4 g     F .text	000000fc read
04033f48 g     F .text	00000064 alt_sys_init
04025b34 g     F .text	00000124 .hidden __floatsisf
04021000 g     F .text	00000054 _ZN5ImageD2Ev
040358d8 g     F .text	00000118 __register_exitproc
00000160  w    O .rodata	0000000d _ZTSSt9bad_alloc
04024240 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
0402d738 g     F .text	000001f8 __multiply
0403447c g     F .text	00000068 altera_avalon_jtag_uart_close
00000698 g       *ABS*	00000000 __ram_rwdata_start
04026cb4 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
00000000 g       *ABS*	00000000 __ram_rodata_start
0004d224 g     O .bss	00000028 __malloc_current_mallinfo
04026dc8 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
040250b0 g     F .text	00000078 .hidden __eqsf2
0402df84 g     F .text	0000014c __d2b
00000320  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
040244f8 g     F .text	00000004 _ZNSt9type_infoD2Ev
040244f4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
0402443c g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
04033fac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04035640 g     F .text	000000a4 alt_get_fd
04021ac0 g     F .text	0000004c _ZN7NNLayer6MYrandEi
040225ec  w    F .text	00000044 _ZN3VGAC2Eii
00002170  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
04030368 g     F .text	00000054 _close_r
04021ce8 g     F .text	00000038 _ZN7NNLayerD0Ev
0000214c  w    O .rwdata	00000004 _ZTS2NN
0403585c g     F .text	0000007c memcmp
0403406c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0004d34c g       *ABS*	00000000 __alt_stack_base
040340bc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04023798 g     F .text	00000034 _ZNSt9bad_allocD0Ev
040241fc g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
0402a234 g     F .text	00000154 __swsetup_r
04026e0c g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
04025d48 g     F .text	000008e8 .hidden __divdf3
0402c0d8 g     F .text	00000118 __sfp
0402e1e8 g     F .text	00000078 __copybits
040244fc g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
00000698 g     O .rwdata	00000408 __malloc_av_
0402c224 g     F .text	00000004 __sinit_lock_release
040320f8 g     F .text	00000718 .hidden __muldf3
0402ea2c g     F .text	00000054 __sread
000002e4  w    O .rodata	00000014 _ZTVSt9exception
040244ec g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
04035538 g     F .text	00000108 alt_find_file
04034cb8 g     F .text	000000a4 alt_dev_llist_insert
04033970 g     F .text	00000024 __malloc_lock
04033b54 g     F .text	000000b0 sbrk
000001c0  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
04023814 g     F .text	00000090 __cxa_throw
0402be2c g     F .text	0000005c _fflush_r
04026c78 g     F .text	00000010 .hidden _Unwind_SetIP
040303bc g     F .text	000000c4 _calloc_r
000021c4 g       *ABS*	00000000 __bss_start
04027794 g     F .text	00000128 memset
040221f0 g     F .text	000003fc main
00002200 g     O .bss	00000004 alt_envp
000021dc g     O .bss	00000004 __malloc_max_total_mem
0403400c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
040302f0 g     F .text	00000018 __swbuf
04027a1c g     F .text	00000018 srand
040241e4 g     F .text	0000000c __cxa_get_globals_fast
04020588 g     F .text	0000004c _ZN5Image17Get_Fractal_ColorEi
040212f4 g     F .text	00000048 _ZN2NND1Ev
0402eb60 g     F .text	00000008 __sclose
04022770 g     F .text	00000004 _ZdaPv
04000000 g       *ABS*	00000000 __alt_heap_limit
000000c4  w    O .rodata	00000010 _ZTV7NNLayer
04030570 g     F .text	00000014 fclose
0402681c g     F .text	000001a8 .hidden __truncdfsf2
0402a588 g     F .text	00001688 _dtoa_r
04026f88 g     F .text	0000080c _malloc_r
04030a58 g     F .text	00000030 __ascii_wctomb
040244d4 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
000021b0 g     O .rwdata	00000004 alt_errno
04027d6c g     F .text	00000010 _init_signal
000001b4  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0402cb48 g     F .text	000000c4 _fwalk
040244c4 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
040205d4 g     F .text	00000350 _ZN5Image12make_fractalEv
0402e38c g     F .text	000000c8 putc
040245f4 g     F .text	00000084 .hidden __divsi3
0402c258 g     F .text	00000124 _malloc_trim_r
04035bd4 g       *ABS*	00000000 __CTOR_END__
040251e4 g     F .text	000003fc .hidden __mulsf3
04027df0 g     F .text	000000dc strcmp
04035bd4 g       *ABS*	00000000 __flash_rodata_start
0000030c  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
04035bd4 g       *ABS*	00000000 __DTOR_LIST__
04021ca0 g     F .text	00000048 _ZN7NNLayerD2Ev
04031ea0 g     F .text	00000088 .hidden __nedf2
04033f10 g     F .text	00000038 alt_irq_init
04033af0 g     F .text	00000064 alt_release_fd
04021a1c g     F .text	000000a4 _ZN7NNLayer15rand_FloatRangeEff
0402420c g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
040225ec  w    F .text	00000044 _ZN3VGAC1Eii
0000039f g     O .rodata	00000100 .hidden __clz_tab
040218a8 g     F .text	00000124 _ZN7NNLayer4initEiii
000021ec g     O .bss	00000004 _PathLocale
04035810 g     F .text	00000014 atexit
04025128 g     F .text	000000bc .hidden __gesf2
04030308 g     F .text	00000060 _write_r
04020454 g     F .text	00000134 _ZN5Image17Get_Fractal_LevelEff
0402cd88 g     F .text	00000018 setlocale
04026cac g     F .text	00000008 .hidden _Unwind_GetTextRelBase
0402418c g     F .text	00000058 __cxa_call_terminate
00002190 g     O .rwdata	00000004 _impure_ptr
00002168  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
000021f8 g     O .bss	00000004 alt_argc
0402bc10 g     F .text	0000021c __sflush_r
04034dbc g     F .text	00000060 _do_dtors
0402cd74 g     F .text	00000008 __locale_cjk_lang
04021f4c g     F .text	00000094 _ZN7NNLayer16print_activationEv
040203bc g     F .text	00000098 _ZN5Image9randomizeEv
04020290 g     F .text	0000003c _ZN5ImageC1Ev
04023eb8 g     F .text	00000010 _ZSt14get_unexpectedv
04020020 g       .exceptions	00000000 alt_irq_entry
0402de14 g     F .text	00000064 __ulp
04026c9c g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0402c240 g     F .text	00000018 __fp_unlock_all
0000219c g     O .rwdata	00000008 alt_fs_list
000002c0  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
04026c88 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
04023930 g     F .text	000000b4 __cxa_begin_catch
04023b48 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
04023e58 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
04020020 g       *ABS*	00000000 __ram_exceptions_start
0402cda0 g     F .text	0000000c localeconv
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
040244e4 g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
000000d4  w    O .rodata	00000009 _ZTS7NNLayer
00002178 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
04034e50 g     F .text	00000050 alt_ic_isr_register
04024028 g     F .text	00000060 __cxa_allocate_exception
04020970 g     F .text	000000cc _ZN5Image7make_bwEv
00000214  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
04022774 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
000021c4 g       *ABS*	00000000 _edata
040217e0 g     F .text	0000006c _ZN7NNLayerC1Ev
0004d34c g       *ABS*	00000000 _end
00002158 g     O .rwdata	00000001 _ZSt7nothrow
04022f4c g     F .text	00000600 __gxx_personality_sj0
04030584 g     F .text	00000164 __fputwc
04020244 g       *ABS*	00000000 __ram_exceptions_end
040344e4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
040244c0 g     F .text	00000004 _ZNSt9exceptionD1Ev
04034f28 g     F .text	0000008c alt_ic_irq_disable
04021b0c g     F .text	00000148 _ZN7NNLayer11random_initEiii
0402ea88 g     F .text	0000007c __swrite
04022700 g     F .text	00000070 _Znwj
00002188 g     O .rwdata	00000004 __malloc_trim_threshold
0402184c g     F .text	0000005c _ZN7NNLayerC1Eiii
0402cd68 g     F .text	0000000c __locale_msgcharset
04035824 g     F .text	00000038 exit
04026c2c g     F .text	0000001c .hidden _Unwind_SetGR
0402cc0c g     F .text	000000c4 _fwalk_reent
040243a0 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
04025c58 g     F .text	000000f0 .hidden __floatunsisf
0402dc18 g     F .text	000001fc __mdiff
04023d80 g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
04024678 g     F .text	00000074 .hidden __modsi3
04023788 g     F .text	00000010 _ZNSt9bad_allocD1Ev
04000000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
0402c21c g     F .text	00000004 __sfp_lock_release
00000294  w    O .rodata	0000000c _ZTISt13bad_exception
00000000 g       *ABS*	00000000 __alt_mem_sdram
04021fe0 g     F .text	000001a4 _ZN7NNLayer5printEv
04024594 g     F .text	00000060 .hidden __fixunssfsi
0403336c g     F .text	00000034 _exit
04034b08 g     F .text	0000012c alt_alarm_start
04030ae4 g     F .text	00000060 .hidden __muldi3
04026bf8 g     F .text	0000001c .hidden _Unwind_GetGR
040241f0 g     F .text	0000000c __cxa_get_globals
0402cdac g     F .text	000001bc __smakebuf_r
0000215c g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
0402167c g     F .text	0000007c _ZN2NN5printEv
04027ecc g     F .text	00000098 strlen
04027aec g     F .text	0000006c _init_signal_r
0000217c  w    O .rwdata	00000008 _ZTISt9type_info
04035330 g     F .text	00000154 open
04031f28 g     F .text	000000dc .hidden __gedf2
00000270  w    O .rodata	0000000d _ZTSSt9exception
00002198 g     O .rwdata	00000004 __wctomb
040244e0 g     F .text	00000004 _ZNSt9exceptionD0Ev
040210d4 g     F .text	00000220 _ZN2NNC2Ei
0402ec64 g     F .text	00000018 __sprint_r
04034e1c g     F .text	00000034 alt_icache_flush_all
04026ca4 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
000021c0 g     O .rwdata	00000004 alt_priority_mask
04034ea0 g     F .text	00000088 alt_ic_irq_enable
0402a15c g     F .text	0000001c __vfprintf_internal
040202cc g     F .text	0000004c _ZN5ImageC1Eii
04030a88 g     F .text	0000005c _wctomb_r
04032810 g     F .text	000008fc .hidden __subdf3
0402d64c g     F .text	000000b0 __lo0bits
000021b8 g     O .rwdata	00000008 alt_alarm_list
04034d5c g     F .text	00000060 _do_ctors
04027d7c g     F .text	00000014 __sigtramp
04030998 g     F .text	000000c0 wcrtomb
04033270 g     F .text	000000d0 close
040247a8 g     F .text	000004c8 .hidden __addsf3
000002a0  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
04033760 g     F .text	00000084 alt_load
04024510 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
040213ec g     F .text	0000014c _ZN2NN17getMaxOutputIndexEv
0403070c g     F .text	00000080 fputwc
04027d40 g     F .text	00000014 raise
04026f74 g     F .text	00000014 free
0402c220 g     F .text	00000004 __sinit_lock_acquire
0402d3c0 g     F .text	00000120 __multadd
04023b58 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0402d398 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 4020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 402000c:	00bffd16 	blt	zero,r2,4020004 <__flash_rwdata_start+0xfffe9d98>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020010:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020014:	08409114 	ori	at,at,580
    jmp r1
 4020018:	0800683a 	jmp	at
 402001c:	00000000 	call	0 <__alt_mem_sdram>

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201d00 	call	40201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0fffb17 	ldw	r3,-20(fp)
 4020130:	e0bffc17 	ldw	r2,-16(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001426 	beq	r2,zero,402018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402013c:	00800174 	movhi	r2,5
 4020140:	10b49304 	addi	r2,r2,-11700
 4020144:	e0fffd17 	ldw	r3,-12(fp)
 4020148:	180690fa 	slli	r3,r3,3
 402014c:	10c5883a 	add	r2,r2,r3
 4020150:	10c00017 	ldw	r3,0(r2)
 4020154:	00800174 	movhi	r2,5
 4020158:	10b49304 	addi	r2,r2,-11700
 402015c:	e13ffd17 	ldw	r4,-12(fp)
 4020160:	200890fa 	slli	r4,r4,3
 4020164:	1105883a 	add	r2,r2,r4
 4020168:	10800104 	addi	r2,r2,4
 402016c:	10800017 	ldw	r2,0(r2)
 4020170:	1009883a 	mov	r4,r2
 4020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402017c:	0005313a 	rdctl	r2,ipending
 4020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020184:	e0bfff17 	ldw	r2,-4(fp)
 4020188:	00000706 	br	40201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402018c:	e0bffc17 	ldw	r2,-16(fp)
 4020190:	1085883a 	add	r2,r2,r2
 4020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020198:	e0bffd17 	ldw	r2,-12(fp)
 402019c:	10800044 	addi	r2,r2,1
 40201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40201a4:	003fe106 	br	402012c <__flash_rwdata_start+0xfffe9ec0>

    active = alt_irq_pending ();
 40201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40201ac:	e0bffb17 	ldw	r2,-20(fp)
 40201b0:	103fdb1e 	bne	r2,zero,4020120 <__flash_rwdata_start+0xfffe9eb4>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201b4:	0001883a 	nop
}
 40201b8:	0001883a 	nop
 40201bc:	e037883a 	mov	sp,fp
 40201c0:	dfc00117 	ldw	ra,4(sp)
 40201c4:	df000017 	ldw	fp,0(sp)
 40201c8:	dec00204 	addi	sp,sp,8
 40201cc:	f800283a 	ret

040201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201d0:	defffb04 	addi	sp,sp,-20
 40201d4:	dfc00415 	stw	ra,16(sp)
 40201d8:	df000315 	stw	fp,12(sp)
 40201dc:	df000304 	addi	fp,sp,12
 40201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 40201e4:	000531fa 	rdctl	r2,exception
 40201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 40201ec:	e0bffd17 	ldw	r2,-12(fp)
 40201f0:	10801f0c 	andi	r2,r2,124
 40201f4:	1004d0ba 	srli	r2,r2,2
 40201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 40201fc:	0005333a 	rdctl	r2,badaddr
 4020200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 4020204:	d0a03317 	ldw	r2,-32564(gp)
 4020208:	10000726 	beq	r2,zero,4020228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 402020c:	d0a03317 	ldw	r2,-32564(gp)
 4020210:	e0fffd17 	ldw	r3,-12(fp)
 4020214:	e1bffe17 	ldw	r6,-8(fp)
 4020218:	e17fff17 	ldw	r5,-4(fp)
 402021c:	1809883a 	mov	r4,r3
 4020220:	103ee83a 	callr	r2
 4020224:	00000206 	br	4020230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 402022c:	0005883a 	mov	r2,zero
}
 4020230:	e037883a 	mov	sp,fp
 4020234:	dfc00117 	ldw	ra,4(sp)
 4020238:	df000017 	ldw	fp,0(sp)
 402023c:	dec00204 	addi	sp,sp,8
 4020240:	f800283a 	ret

Disassembly of section .text:

04020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 4020244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4020248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 402024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 4020250:	00bffd16 	blt	zero,r2,4020248 <__flash_rwdata_start+0xfffe9fdc>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4020254:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 4020258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 402025c:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 4020260:	d6a85114 	ori	gp,gp,41284
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4020264:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 4020268:	10887114 	ori	r2,r2,8644

    movhi r3, %hi(__bss_end)
 402026c:	00c00134 	movhi	r3,4
    ori r3, r3, %lo(__bss_end)
 4020270:	18f4d314 	ori	r3,r3,54092

    beq r2, r3, 1f
 4020274:	10c00326 	beq	r2,r3,4020284 <_start+0x40>

0:
    stw zero, (r2)
 4020278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 402027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4020280:	10fffd36 	bltu	r2,r3,4020278 <__flash_rwdata_start+0xfffea00c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4020284:	40337600 	call	4033760 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020288:	40338f40 	call	40338f4 <alt_main>

0402028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 402028c:	003fff06 	br	402028c <__flash_rwdata_start+0xfffea020>

04020290 <_ZN5ImageC1Ev>:

#include "stdio.h"
#include "io.h"
#include "system.h"

Image::Image() {
 4020290:	defffe04 	addi	sp,sp,-8
 4020294:	df000115 	stw	fp,4(sp)
 4020298:	df000104 	addi	fp,sp,4
 402029c:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated constructor stub
	source_array = 0;
 40202a0:	e0bfff17 	ldw	r2,-4(fp)
 40202a4:	10000215 	stw	zero,8(r2)
	length = 0;
 40202a8:	e0bfff17 	ldw	r2,-4(fp)
 40202ac:	10000115 	stw	zero,4(r2)
	height = 0;
 40202b0:	e0bfff17 	ldw	r2,-4(fp)
 40202b4:	10000015 	stw	zero,0(r2)
}
 40202b8:	0001883a 	nop
 40202bc:	e037883a 	mov	sp,fp
 40202c0:	df000017 	ldw	fp,0(sp)
 40202c4:	dec00104 	addi	sp,sp,4
 40202c8:	f800283a 	ret

040202cc <_ZN5ImageC1Eii>:

Image::Image(int new_length, int new_height) {
 40202cc:	defffb04 	addi	sp,sp,-20
 40202d0:	dfc00415 	stw	ra,16(sp)
 40202d4:	df000315 	stw	fp,12(sp)
 40202d8:	df000304 	addi	fp,sp,12
 40202dc:	e13ffd15 	stw	r4,-12(fp)
 40202e0:	e17ffe15 	stw	r5,-8(fp)
 40202e4:	e1bfff15 	stw	r6,-4(fp)
	// TODO Auto-generated constructor stub
	source_array = 0;
 40202e8:	e0bffd17 	ldw	r2,-12(fp)
 40202ec:	10000215 	stw	zero,8(r2)
	init(new_length, new_height);
 40202f0:	e1bfff17 	ldw	r6,-4(fp)
 40202f4:	e17ffe17 	ldw	r5,-8(fp)
 40202f8:	e13ffd17 	ldw	r4,-12(fp)
 40202fc:	40203180 	call	4020318 <_ZN5Image4initEii>
}
 4020300:	0001883a 	nop
 4020304:	e037883a 	mov	sp,fp
 4020308:	dfc00117 	ldw	ra,4(sp)
 402030c:	df000017 	ldw	fp,0(sp)
 4020310:	dec00204 	addi	sp,sp,8
 4020314:	f800283a 	ret

04020318 <_ZN5Image4initEii>:

void Image::init(int new_length, int new_height) {
 4020318:	defffb04 	addi	sp,sp,-20
 402031c:	dfc00415 	stw	ra,16(sp)
 4020320:	df000315 	stw	fp,12(sp)
 4020324:	df000304 	addi	fp,sp,12
 4020328:	e13ffd15 	stw	r4,-12(fp)
 402032c:	e17ffe15 	stw	r5,-8(fp)
 4020330:	e1bfff15 	stw	r6,-4(fp)
	// TODO Auto-generated constructor stub
	length = new_length;
 4020334:	e0bffd17 	ldw	r2,-12(fp)
 4020338:	e0fffe17 	ldw	r3,-8(fp)
 402033c:	10c00115 	stw	r3,4(r2)
	height = new_height;
 4020340:	e0bffd17 	ldw	r2,-12(fp)
 4020344:	e0ffff17 	ldw	r3,-4(fp)
 4020348:	10c00015 	stw	r3,0(r2)
	if (source_array != 0) delete[] source_array;
 402034c:	e0bffd17 	ldw	r2,-12(fp)
 4020350:	10800217 	ldw	r2,8(r2)
 4020354:	10000726 	beq	r2,zero,4020374 <_ZN5Image4initEii+0x5c>
 4020358:	e0bffd17 	ldw	r2,-12(fp)
 402035c:	10800217 	ldw	r2,8(r2)
 4020360:	10000426 	beq	r2,zero,4020374 <_ZN5Image4initEii+0x5c>
 4020364:	e0bffd17 	ldw	r2,-12(fp)
 4020368:	10800217 	ldw	r2,8(r2)
 402036c:	1009883a 	mov	r4,r2
 4020370:	40227700 	call	4022770 <_ZdaPv>
	source_array = new unsigned char [height*length];
 4020374:	e0bffd17 	ldw	r2,-12(fp)
 4020378:	10c00017 	ldw	r3,0(r2)
 402037c:	e0bffd17 	ldw	r2,-12(fp)
 4020380:	10800117 	ldw	r2,4(r2)
 4020384:	1885383a 	mul	r2,r3,r2
 4020388:	1009883a 	mov	r4,r2
 402038c:	402266c0 	call	402266c <_Znaj>
 4020390:	1007883a 	mov	r3,r2
 4020394:	e0bffd17 	ldw	r2,-12(fp)
 4020398:	10c00215 	stw	r3,8(r2)
	randomize();
 402039c:	e13ffd17 	ldw	r4,-12(fp)
 40203a0:	40203bc0 	call	40203bc <_ZN5Image9randomizeEv>
}
 40203a4:	0001883a 	nop
 40203a8:	e037883a 	mov	sp,fp
 40203ac:	dfc00117 	ldw	ra,4(sp)
 40203b0:	df000017 	ldw	fp,0(sp)
 40203b4:	dec00204 	addi	sp,sp,8
 40203b8:	f800283a 	ret

040203bc <_ZN5Image9randomizeEv>:

void Image::randomize() {
 40203bc:	defffa04 	addi	sp,sp,-24
 40203c0:	dfc00515 	stw	ra,20(sp)
 40203c4:	df000415 	stw	fp,16(sp)
 40203c8:	dc000315 	stw	r16,12(sp)
 40203cc:	df000404 	addi	fp,sp,16
 40203d0:	e13ffe15 	stw	r4,-8(fp)
	for (int y=0; y<height; y++) {
 40203d4:	e03ffc15 	stw	zero,-16(fp)
 40203d8:	e0bffe17 	ldw	r2,-8(fp)
 40203dc:	10800017 	ldw	r2,0(r2)
 40203e0:	e0fffc17 	ldw	r3,-16(fp)
 40203e4:	1880140e 	bge	r3,r2,4020438 <_ZN5Image9randomizeEv+0x7c>
		for (int x=0; x<length; x++) {
 40203e8:	e03ffd15 	stw	zero,-12(fp)
 40203ec:	e0bffe17 	ldw	r2,-8(fp)
 40203f0:	10800117 	ldw	r2,4(r2)
 40203f4:	e0fffd17 	ldw	r3,-12(fp)
 40203f8:	18800b0e 	bge	r3,r2,4020428 <_ZN5Image9randomizeEv+0x6c>
			*source_pixel(x,y) = rand() &0xFF;
 40203fc:	e1bffc17 	ldw	r6,-16(fp)
 4020400:	e17ffd17 	ldw	r5,-12(fp)
 4020404:	e13ffe17 	ldw	r4,-8(fp)
 4020408:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 402040c:	1021883a 	mov	r16,r2
 4020410:	4027a340 	call	4027a34 <rand>
 4020414:	80800005 	stb	r2,0(r16)
	randomize();
}

void Image::randomize() {
	for (int y=0; y<height; y++) {
		for (int x=0; x<length; x++) {
 4020418:	e0bffd17 	ldw	r2,-12(fp)
 402041c:	10800044 	addi	r2,r2,1
 4020420:	e0bffd15 	stw	r2,-12(fp)
 4020424:	003ff106 	br	40203ec <__flash_rwdata_start+0xfffea180>
	source_array = new unsigned char [height*length];
	randomize();
}

void Image::randomize() {
	for (int y=0; y<height; y++) {
 4020428:	e0bffc17 	ldw	r2,-16(fp)
 402042c:	10800044 	addi	r2,r2,1
 4020430:	e0bffc15 	stw	r2,-16(fp)
 4020434:	003fe806 	br	40203d8 <__flash_rwdata_start+0xfffea16c>
		for (int x=0; x<length; x++) {
			*source_pixel(x,y) = rand() &0xFF;
		}
	}
}
 4020438:	0001883a 	nop
 402043c:	e6ffff04 	addi	sp,fp,-4
 4020440:	dfc00217 	ldw	ra,8(sp)
 4020444:	df000117 	ldw	fp,4(sp)
 4020448:	dc000017 	ldw	r16,0(sp)
 402044c:	dec00304 	addi	sp,sp,12
 4020450:	f800283a 	ret

04020454 <_ZN5Image17Get_Fractal_LevelEff>:

int Image::Get_Fractal_Level(float newRe, float newIm) {
 4020454:	defff404 	addi	sp,sp,-48
 4020458:	dfc00b15 	stw	ra,44(sp)
 402045c:	df000a15 	stw	fp,40(sp)
 4020460:	df000a04 	addi	fp,sp,40
 4020464:	e13ffd15 	stw	r4,-12(fp)
 4020468:	e17ffe15 	stw	r5,-8(fp)
 402046c:	e1bfff15 	stw	r6,-4(fp)
	float cRe = -0.78;
 4020470:	00afd234 	movhi	r2,48968
 4020474:	10ab8504 	addi	r2,r2,-20972
 4020478:	e0bff715 	stw	r2,-36(fp)
	float cIm = 0.158;
 402047c:	008f88b4 	movhi	r2,15906
 4020480:	10b2b044 	addi	r2,r2,-13631
 4020484:	e0bff815 	stw	r2,-32(fp)
    int i;

    for(i = 0; i < 63; i++) {
 4020488:	e03ff615 	stw	zero,-40(fp)
 402048c:	e0bff617 	ldw	r2,-40(fp)
 4020490:	10800fc8 	cmpgei	r2,r2,63
 4020494:	1000361e 	bne	r2,zero,4020570 <_ZN5Image17Get_Fractal_LevelEff+0x11c>
        float oldRe = newRe;
 4020498:	e0bffe17 	ldw	r2,-8(fp)
 402049c:	e0bff915 	stw	r2,-28(fp)
        float oldIm = newIm;
 40204a0:	e0bfff17 	ldw	r2,-4(fp)
 40204a4:	e0bffa15 	stw	r2,-24(fp)
        float sqRe = newRe*newRe;
 40204a8:	e17ffe17 	ldw	r5,-8(fp)
 40204ac:	e13ffe17 	ldw	r4,-8(fp)
 40204b0:	40251e40 	call	40251e4 <__mulsf3>
 40204b4:	1007883a 	mov	r3,r2
 40204b8:	e0fffb15 	stw	r3,-20(fp)
        float sqIm = newIm*newIm;
 40204bc:	e17fff17 	ldw	r5,-4(fp)
 40204c0:	e13fff17 	ldw	r4,-4(fp)
 40204c4:	40251e40 	call	40251e4 <__mulsf3>
 40204c8:	1007883a 	mov	r3,r2
 40204cc:	e0fffc15 	stw	r3,-16(fp)
        if((sqRe + sqIm) > 4) break;
 40204d0:	e17ffc17 	ldw	r5,-16(fp)
 40204d4:	e13ffb17 	ldw	r4,-20(fp)
 40204d8:	40247a80 	call	40247a8 <__addsf3>
 40204dc:	1007883a 	mov	r3,r2
 40204e0:	1805883a 	mov	r2,r3
 40204e4:	01502034 	movhi	r5,16512
 40204e8:	1009883a 	mov	r4,r2
 40204ec:	40251280 	call	4025128 <__gesf2>
 40204f0:	00801e16 	blt	zero,r2,402056c <_ZN5Image17Get_Fractal_LevelEff+0x118>
        newRe = sqRe - sqIm + cRe;
 40204f4:	e17ffc17 	ldw	r5,-16(fp)
 40204f8:	e13ffb17 	ldw	r4,-20(fp)
 40204fc:	40255e00 	call	40255e0 <__subsf3>
 4020500:	1007883a 	mov	r3,r2
 4020504:	1805883a 	mov	r2,r3
 4020508:	e17ff717 	ldw	r5,-36(fp)
 402050c:	1009883a 	mov	r4,r2
 4020510:	40247a80 	call	40247a8 <__addsf3>
 4020514:	1007883a 	mov	r3,r2
 4020518:	e0fffe15 	stw	r3,-8(fp)
        newIm = 2 * oldRe * oldIm + cIm;
 402051c:	e0bff917 	ldw	r2,-28(fp)
 4020520:	100b883a 	mov	r5,r2
 4020524:	1009883a 	mov	r4,r2
 4020528:	40247a80 	call	40247a8 <__addsf3>
 402052c:	1007883a 	mov	r3,r2
 4020530:	1805883a 	mov	r2,r3
 4020534:	e17ffa17 	ldw	r5,-24(fp)
 4020538:	1009883a 	mov	r4,r2
 402053c:	40251e40 	call	40251e4 <__mulsf3>
 4020540:	1007883a 	mov	r3,r2
 4020544:	1805883a 	mov	r2,r3
 4020548:	e17ff817 	ldw	r5,-32(fp)
 402054c:	1009883a 	mov	r4,r2
 4020550:	40247a80 	call	40247a8 <__addsf3>
 4020554:	1007883a 	mov	r3,r2
 4020558:	e0ffff15 	stw	r3,-4(fp)
int Image::Get_Fractal_Level(float newRe, float newIm) {
	float cRe = -0.78;
	float cIm = 0.158;
    int i;

    for(i = 0; i < 63; i++) {
 402055c:	e0bff617 	ldw	r2,-40(fp)
 4020560:	10800044 	addi	r2,r2,1
 4020564:	e0bff615 	stw	r2,-40(fp)
 4020568:	003fc806 	br	402048c <__flash_rwdata_start+0xfffea220>
        float oldRe = newRe;
        float oldIm = newIm;
        float sqRe = newRe*newRe;
        float sqIm = newIm*newIm;
        if((sqRe + sqIm) > 4) break;
 402056c:	0001883a 	nop
        newIm = 2 * oldRe * oldIm + cIm;

        //DEBUG
        //printf("(%f,%f)",newRe,newIm);
    }
    return i;
 4020570:	e0bff617 	ldw	r2,-40(fp)
}
 4020574:	e037883a 	mov	sp,fp
 4020578:	dfc00117 	ldw	ra,4(sp)
 402057c:	df000017 	ldw	fp,0(sp)
 4020580:	dec00204 	addi	sp,sp,8
 4020584:	f800283a 	ret

04020588 <_ZN5Image17Get_Fractal_ColorEi>:

int Image::Get_Fractal_Color(int level) {
 4020588:	defffd04 	addi	sp,sp,-12
 402058c:	df000215 	stw	fp,8(sp)
 4020590:	df000204 	addi	fp,sp,8
 4020594:	e13ffe15 	stw	r4,-8(fp)
 4020598:	e17fff15 	stw	r5,-4(fp)
    if (level>63) level = 63;
 402059c:	e0bfff17 	ldw	r2,-4(fp)
 40205a0:	10801010 	cmplti	r2,r2,64
 40205a4:	1000021e 	bne	r2,zero,40205b0 <_ZN5Image17Get_Fractal_ColorEi+0x28>
 40205a8:	00800fc4 	movi	r2,63
 40205ac:	e0bfff15 	stw	r2,-4(fp)
    return ((level<<3) & 0xE0)+level;
 40205b0:	e0bfff17 	ldw	r2,-4(fp)
 40205b4:	100490fa 	slli	r2,r2,3
 40205b8:	10c0380c 	andi	r3,r2,224
 40205bc:	e0bfff17 	ldw	r2,-4(fp)
 40205c0:	1885883a 	add	r2,r3,r2
}
 40205c4:	e037883a 	mov	sp,fp
 40205c8:	df000017 	ldw	fp,0(sp)
 40205cc:	dec00104 	addi	sp,sp,4
 40205d0:	f800283a 	ret

040205d4 <_ZN5Image12make_fractalEv>:

void Image::make_fractal() {
 40205d4:	defff004 	addi	sp,sp,-64
 40205d8:	dfc00f15 	stw	ra,60(sp)
 40205dc:	df000e15 	stw	fp,56(sp)
 40205e0:	dc000d15 	stw	r16,52(sp)
 40205e4:	df000e04 	addi	fp,sp,56
 40205e8:	e13ffe15 	stw	r4,-8(fp)
	float sinAngle = 0;
 40205ec:	e03ff415 	stw	zero,-48(fp)
	float cosAngle = 1;
 40205f0:	008fe034 	movhi	r2,16256
 40205f4:	e0bff515 	stw	r2,-44(fp)
	float Scale = 1;
 40205f8:	008fe034 	movhi	r2,16256
 40205fc:	e0bff615 	stw	r2,-40(fp)
	float X_position = 0;
 4020600:	e03ff715 	stw	zero,-36(fp)
	float Y_position = 0;
 4020604:	e03ff815 	stw	zero,-32(fp)

    float x,y;

    for (y=0; y<height; y++) {
 4020608:	e03ff315 	stw	zero,-52(fp)
 402060c:	e0bffe17 	ldw	r2,-8(fp)
 4020610:	10800017 	ldw	r2,0(r2)
 4020614:	1009883a 	mov	r4,r2
 4020618:	4025b340 	call	4025b34 <__floatsisf>
 402061c:	1007883a 	mov	r3,r2
 4020620:	e17ff317 	ldw	r5,-52(fp)
 4020624:	1809883a 	mov	r4,r3
 4020628:	40251280 	call	4025128 <__gesf2>
 402062c:	00800116 	blt	zero,r2,4020634 <_ZN5Image12make_fractalEv+0x60>
                int level = Get_Fractal_Level(X_position+rotated_fx, Y_position+rotated_fy);
                *source_pixel(x,y) = 4*Get_Fractal_Color(level);
            }
        }
    }
}
 4020630:	0000b606 	br	402090c <_ZN5Image12make_fractalEv+0x338>
	float Y_position = 0;

    float x,y;

    for (y=0; y<height; y++) {
        for (x=0; x<length; x++) {
 4020634:	e03ff215 	stw	zero,-56(fp)
 4020638:	e0bffe17 	ldw	r2,-8(fp)
 402063c:	10800117 	ldw	r2,4(r2)
 4020640:	1009883a 	mov	r4,r2
 4020644:	4025b340 	call	4025b34 <__floatsisf>
 4020648:	1007883a 	mov	r3,r2
 402064c:	e17ff217 	ldw	r5,-56(fp)
 4020650:	1809883a 	mov	r4,r3
 4020654:	40251280 	call	4025128 <__gesf2>
 4020658:	0080a60e 	bge	zero,r2,40208f4 <_ZN5Image12make_fractalEv+0x320>
            if ( (x==length/2) || (y==height/2) ) *source_pixel(x,y) = 0;
 402065c:	e0bffe17 	ldw	r2,-8(fp)
 4020660:	10800117 	ldw	r2,4(r2)
 4020664:	1006d7fa 	srli	r3,r2,31
 4020668:	1885883a 	add	r2,r3,r2
 402066c:	1005d07a 	srai	r2,r2,1
 4020670:	1009883a 	mov	r4,r2
 4020674:	4025b340 	call	4025b34 <__floatsisf>
 4020678:	1007883a 	mov	r3,r2
 402067c:	e17ff217 	ldw	r5,-56(fp)
 4020680:	1809883a 	mov	r4,r3
 4020684:	40250b00 	call	40250b0 <__eqsf2>
 4020688:	10000c26 	beq	r2,zero,40206bc <_ZN5Image12make_fractalEv+0xe8>
 402068c:	e0bffe17 	ldw	r2,-8(fp)
 4020690:	10800017 	ldw	r2,0(r2)
 4020694:	1006d7fa 	srli	r3,r2,31
 4020698:	1885883a 	add	r2,r3,r2
 402069c:	1005d07a 	srai	r2,r2,1
 40206a0:	1009883a 	mov	r4,r2
 40206a4:	4025b340 	call	4025b34 <__floatsisf>
 40206a8:	1007883a 	mov	r3,r2
 40206ac:	e17ff317 	ldw	r5,-52(fp)
 40206b0:	1809883a 	mov	r4,r3
 40206b4:	40250b00 	call	40250b0 <__eqsf2>
 40206b8:	10000b1e 	bne	r2,zero,40206e8 <_ZN5Image12make_fractalEv+0x114>
 40206bc:	e13ff217 	ldw	r4,-56(fp)
 40206c0:	4025ac40 	call	4025ac4 <__fixsfsi>
 40206c4:	1021883a 	mov	r16,r2
 40206c8:	e13ff317 	ldw	r4,-52(fp)
 40206cc:	4025ac40 	call	4025ac4 <__fixsfsi>
 40206d0:	100d883a 	mov	r6,r2
 40206d4:	800b883a 	mov	r5,r16
 40206d8:	e13ffe17 	ldw	r4,-8(fp)
 40206dc:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 40206e0:	10000005 	stb	zero,0(r2)
 40206e4:	00007d06 	br	40208dc <_ZN5Image12make_fractalEv+0x308>
            else {
                float fx = (x-length/2)/(length/2);
 40206e8:	e0bffe17 	ldw	r2,-8(fp)
 40206ec:	10800117 	ldw	r2,4(r2)
 40206f0:	1006d7fa 	srli	r3,r2,31
 40206f4:	1885883a 	add	r2,r3,r2
 40206f8:	1005d07a 	srai	r2,r2,1
 40206fc:	1009883a 	mov	r4,r2
 4020700:	4025b340 	call	4025b34 <__floatsisf>
 4020704:	1007883a 	mov	r3,r2
 4020708:	180b883a 	mov	r5,r3
 402070c:	e13ff217 	ldw	r4,-56(fp)
 4020710:	40255e00 	call	40255e0 <__subsf3>
 4020714:	1007883a 	mov	r3,r2
 4020718:	1821883a 	mov	r16,r3
 402071c:	e0bffe17 	ldw	r2,-8(fp)
 4020720:	10800117 	ldw	r2,4(r2)
 4020724:	1006d7fa 	srli	r3,r2,31
 4020728:	1885883a 	add	r2,r3,r2
 402072c:	1005d07a 	srai	r2,r2,1
 4020730:	1009883a 	mov	r4,r2
 4020734:	4025b340 	call	4025b34 <__floatsisf>
 4020738:	1007883a 	mov	r3,r2
 402073c:	180b883a 	mov	r5,r3
 4020740:	8009883a 	mov	r4,r16
 4020744:	4024c700 	call	4024c70 <__divsf3>
 4020748:	1007883a 	mov	r3,r2
 402074c:	e0fff915 	stw	r3,-28(fp)
                float fy = (y-height/2)/(height/2);
 4020750:	e0bffe17 	ldw	r2,-8(fp)
 4020754:	10800017 	ldw	r2,0(r2)
 4020758:	1006d7fa 	srli	r3,r2,31
 402075c:	1885883a 	add	r2,r3,r2
 4020760:	1005d07a 	srai	r2,r2,1
 4020764:	1009883a 	mov	r4,r2
 4020768:	4025b340 	call	4025b34 <__floatsisf>
 402076c:	1007883a 	mov	r3,r2
 4020770:	180b883a 	mov	r5,r3
 4020774:	e13ff317 	ldw	r4,-52(fp)
 4020778:	40255e00 	call	40255e0 <__subsf3>
 402077c:	1007883a 	mov	r3,r2
 4020780:	1821883a 	mov	r16,r3
 4020784:	e0bffe17 	ldw	r2,-8(fp)
 4020788:	10800017 	ldw	r2,0(r2)
 402078c:	1006d7fa 	srli	r3,r2,31
 4020790:	1885883a 	add	r2,r3,r2
 4020794:	1005d07a 	srai	r2,r2,1
 4020798:	1009883a 	mov	r4,r2
 402079c:	4025b340 	call	4025b34 <__floatsisf>
 40207a0:	1007883a 	mov	r3,r2
 40207a4:	180b883a 	mov	r5,r3
 40207a8:	8009883a 	mov	r4,r16
 40207ac:	4024c700 	call	4024c70 <__divsf3>
 40207b0:	1007883a 	mov	r3,r2
 40207b4:	e0fffa15 	stw	r3,-24(fp)
                float rotated_fx = (fx*cosAngle + fy*sinAngle)/Scale;
 40207b8:	e17ff517 	ldw	r5,-44(fp)
 40207bc:	e13ff917 	ldw	r4,-28(fp)
 40207c0:	40251e40 	call	40251e4 <__mulsf3>
 40207c4:	1007883a 	mov	r3,r2
 40207c8:	1821883a 	mov	r16,r3
 40207cc:	e17ff417 	ldw	r5,-48(fp)
 40207d0:	e13ffa17 	ldw	r4,-24(fp)
 40207d4:	40251e40 	call	40251e4 <__mulsf3>
 40207d8:	1007883a 	mov	r3,r2
 40207dc:	1805883a 	mov	r2,r3
 40207e0:	100b883a 	mov	r5,r2
 40207e4:	8009883a 	mov	r4,r16
 40207e8:	40247a80 	call	40247a8 <__addsf3>
 40207ec:	1007883a 	mov	r3,r2
 40207f0:	1805883a 	mov	r2,r3
 40207f4:	e17ff617 	ldw	r5,-40(fp)
 40207f8:	1009883a 	mov	r4,r2
 40207fc:	4024c700 	call	4024c70 <__divsf3>
 4020800:	1007883a 	mov	r3,r2
 4020804:	e0fffb15 	stw	r3,-20(fp)
                float rotated_fy = (-fx*sinAngle + fy*cosAngle)/Scale;
 4020808:	e0bff917 	ldw	r2,-28(fp)
 402080c:	10a0003c 	xorhi	r2,r2,32768
 4020810:	e17ff417 	ldw	r5,-48(fp)
 4020814:	1009883a 	mov	r4,r2
 4020818:	40251e40 	call	40251e4 <__mulsf3>
 402081c:	1007883a 	mov	r3,r2
 4020820:	1821883a 	mov	r16,r3
 4020824:	e17ff517 	ldw	r5,-44(fp)
 4020828:	e13ffa17 	ldw	r4,-24(fp)
 402082c:	40251e40 	call	40251e4 <__mulsf3>
 4020830:	1007883a 	mov	r3,r2
 4020834:	1805883a 	mov	r2,r3
 4020838:	100b883a 	mov	r5,r2
 402083c:	8009883a 	mov	r4,r16
 4020840:	40247a80 	call	40247a8 <__addsf3>
 4020844:	1007883a 	mov	r3,r2
 4020848:	1805883a 	mov	r2,r3
 402084c:	e17ff617 	ldw	r5,-40(fp)
 4020850:	1009883a 	mov	r4,r2
 4020854:	4024c700 	call	4024c70 <__divsf3>
 4020858:	1007883a 	mov	r3,r2
 402085c:	e0fffc15 	stw	r3,-16(fp)

                int level = Get_Fractal_Level(X_position+rotated_fx, Y_position+rotated_fy);
 4020860:	e17ffb17 	ldw	r5,-20(fp)
 4020864:	e13ff717 	ldw	r4,-36(fp)
 4020868:	40247a80 	call	40247a8 <__addsf3>
 402086c:	1007883a 	mov	r3,r2
 4020870:	1821883a 	mov	r16,r3
 4020874:	e17ffc17 	ldw	r5,-16(fp)
 4020878:	e13ff817 	ldw	r4,-32(fp)
 402087c:	40247a80 	call	40247a8 <__addsf3>
 4020880:	1007883a 	mov	r3,r2
 4020884:	1805883a 	mov	r2,r3
 4020888:	100d883a 	mov	r6,r2
 402088c:	800b883a 	mov	r5,r16
 4020890:	e13ffe17 	ldw	r4,-8(fp)
 4020894:	40204540 	call	4020454 <_ZN5Image17Get_Fractal_LevelEff>
 4020898:	e0bffd15 	stw	r2,-12(fp)
                *source_pixel(x,y) = 4*Get_Fractal_Color(level);
 402089c:	e13ff217 	ldw	r4,-56(fp)
 40208a0:	4025ac40 	call	4025ac4 <__fixsfsi>
 40208a4:	1021883a 	mov	r16,r2
 40208a8:	e13ff317 	ldw	r4,-52(fp)
 40208ac:	4025ac40 	call	4025ac4 <__fixsfsi>
 40208b0:	100d883a 	mov	r6,r2
 40208b4:	800b883a 	mov	r5,r16
 40208b8:	e13ffe17 	ldw	r4,-8(fp)
 40208bc:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 40208c0:	1021883a 	mov	r16,r2
 40208c4:	e17ffd17 	ldw	r5,-12(fp)
 40208c8:	e13ffe17 	ldw	r4,-8(fp)
 40208cc:	40205880 	call	4020588 <_ZN5Image17Get_Fractal_ColorEi>
 40208d0:	1085883a 	add	r2,r2,r2
 40208d4:	1085883a 	add	r2,r2,r2
 40208d8:	80800005 	stb	r2,0(r16)
	float Y_position = 0;

    float x,y;

    for (y=0; y<height; y++) {
        for (x=0; x<length; x++) {
 40208dc:	014fe034 	movhi	r5,16256
 40208e0:	e13ff217 	ldw	r4,-56(fp)
 40208e4:	40247a80 	call	40247a8 <__addsf3>
 40208e8:	1007883a 	mov	r3,r2
 40208ec:	e0fff215 	stw	r3,-56(fp)
 40208f0:	003f5106 	br	4020638 <__flash_rwdata_start+0xfffea3cc>
	float X_position = 0;
	float Y_position = 0;

    float x,y;

    for (y=0; y<height; y++) {
 40208f4:	014fe034 	movhi	r5,16256
 40208f8:	e13ff317 	ldw	r4,-52(fp)
 40208fc:	40247a80 	call	40247a8 <__addsf3>
 4020900:	1007883a 	mov	r3,r2
 4020904:	e0fff315 	stw	r3,-52(fp)
 4020908:	003f4006 	br	402060c <__flash_rwdata_start+0xfffea3a0>
                int level = Get_Fractal_Level(X_position+rotated_fx, Y_position+rotated_fy);
                *source_pixel(x,y) = 4*Get_Fractal_Color(level);
            }
        }
    }
}
 402090c:	e6ffff04 	addi	sp,fp,-4
 4020910:	dfc00217 	ldw	ra,8(sp)
 4020914:	df000117 	ldw	fp,4(sp)
 4020918:	dc000017 	ldw	r16,0(sp)
 402091c:	dec00304 	addi	sp,sp,12
 4020920:	f800283a 	ret

04020924 <_ZN5Image12source_pixelEii>:

unsigned char * Image::source_pixel(int x, int y) {
 4020924:	defffc04 	addi	sp,sp,-16
 4020928:	df000315 	stw	fp,12(sp)
 402092c:	df000304 	addi	fp,sp,12
 4020930:	e13ffd15 	stw	r4,-12(fp)
 4020934:	e17ffe15 	stw	r5,-8(fp)
 4020938:	e1bfff15 	stw	r6,-4(fp)
	// TODO Auto-generated constructor stub
	return source_array + (y*length+x);
 402093c:	e0bffd17 	ldw	r2,-12(fp)
 4020940:	10800217 	ldw	r2,8(r2)
 4020944:	e0fffd17 	ldw	r3,-12(fp)
 4020948:	19000117 	ldw	r4,4(r3)
 402094c:	e0ffff17 	ldw	r3,-4(fp)
 4020950:	20c9383a 	mul	r4,r4,r3
 4020954:	e0fffe17 	ldw	r3,-8(fp)
 4020958:	20c7883a 	add	r3,r4,r3
 402095c:	10c5883a 	add	r2,r2,r3
}
 4020960:	e037883a 	mov	sp,fp
 4020964:	df000017 	ldw	fp,0(sp)
 4020968:	dec00104 	addi	sp,sp,4
 402096c:	f800283a 	ret

04020970 <_ZN5Image7make_bwEv>:

void Image::make_bw() {
 4020970:	defffb04 	addi	sp,sp,-20
 4020974:	dfc00415 	stw	ra,16(sp)
 4020978:	df000315 	stw	fp,12(sp)
 402097c:	df000304 	addi	fp,sp,12
 4020980:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated constructor stub
	for (int y=0; y<height; y++) {
 4020984:	e03ffd15 	stw	zero,-12(fp)
 4020988:	e0bfff17 	ldw	r2,-4(fp)
 402098c:	10800017 	ldw	r2,0(r2)
 4020990:	e0fffd17 	ldw	r3,-12(fp)
 4020994:	1880230e 	bge	r3,r2,4020a24 <_ZN5Image7make_bwEv+0xb4>
		for (int x=0; x<length; x++) {
 4020998:	e03ffe15 	stw	zero,-8(fp)
 402099c:	e0bfff17 	ldw	r2,-4(fp)
 40209a0:	10800117 	ldw	r2,4(r2)
 40209a4:	e0fffe17 	ldw	r3,-8(fp)
 40209a8:	18801a0e 	bge	r3,r2,4020a14 <_ZN5Image7make_bwEv+0xa4>
			if (*source_pixel(x,y)>127) *source_pixel(x,y)=255;
 40209ac:	e1bffd17 	ldw	r6,-12(fp)
 40209b0:	e17ffe17 	ldw	r5,-8(fp)
 40209b4:	e13fff17 	ldw	r4,-4(fp)
 40209b8:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 40209bc:	10800003 	ldbu	r2,0(r2)
 40209c0:	10803fcc 	andi	r2,r2,255
 40209c4:	1004d1fa 	srli	r2,r2,7
 40209c8:	10803fcc 	andi	r2,r2,255
 40209cc:	10000826 	beq	r2,zero,40209f0 <_ZN5Image7make_bwEv+0x80>
 40209d0:	e1bffd17 	ldw	r6,-12(fp)
 40209d4:	e17ffe17 	ldw	r5,-8(fp)
 40209d8:	e13fff17 	ldw	r4,-4(fp)
 40209dc:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 40209e0:	1007883a 	mov	r3,r2
 40209e4:	00bfffc4 	movi	r2,-1
 40209e8:	18800005 	stb	r2,0(r3)
 40209ec:	00000506 	br	4020a04 <_ZN5Image7make_bwEv+0x94>
			else *source_pixel(x,y)=0;
 40209f0:	e1bffd17 	ldw	r6,-12(fp)
 40209f4:	e17ffe17 	ldw	r5,-8(fp)
 40209f8:	e13fff17 	ldw	r4,-4(fp)
 40209fc:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 4020a00:	10000005 	stb	zero,0(r2)
}

void Image::make_bw() {
	// TODO Auto-generated constructor stub
	for (int y=0; y<height; y++) {
		for (int x=0; x<length; x++) {
 4020a04:	e0bffe17 	ldw	r2,-8(fp)
 4020a08:	10800044 	addi	r2,r2,1
 4020a0c:	e0bffe15 	stw	r2,-8(fp)
 4020a10:	003fe206 	br	402099c <__flash_rwdata_start+0xfffea730>
	return source_array + (y*length+x);
}

void Image::make_bw() {
	// TODO Auto-generated constructor stub
	for (int y=0; y<height; y++) {
 4020a14:	e0bffd17 	ldw	r2,-12(fp)
 4020a18:	10800044 	addi	r2,r2,1
 4020a1c:	e0bffd15 	stw	r2,-12(fp)
 4020a20:	003fd906 	br	4020988 <__flash_rwdata_start+0xfffea71c>
		for (int x=0; x<length; x++) {
			if (*source_pixel(x,y)>127) *source_pixel(x,y)=255;
			else *source_pixel(x,y)=0;
		}
	}
}
 4020a24:	0001883a 	nop
 4020a28:	e037883a 	mov	sp,fp
 4020a2c:	dfc00117 	ldw	ra,4(sp)
 4020a30:	df000017 	ldw	fp,0(sp)
 4020a34:	dec00204 	addi	sp,sp,8
 4020a38:	f800283a 	ret

04020a3c <_ZN5Image8apply_NNEP2NNii>:
 *
 * Applique toutes les sous-images size x size de cette
 * image a l'entree de ce reseau de neuronnes.
 *
 *******************************************************/
Image * Image::apply_NN(NN * network, int size, int pos) {
 4020a3c:	deffd004 	addi	sp,sp,-192
 4020a40:	dfc02f15 	stw	ra,188(sp)
 4020a44:	df002e15 	stw	fp,184(sp)
 4020a48:	ddc02d15 	stw	r23,180(sp)
 4020a4c:	dd802c15 	stw	r22,176(sp)
 4020a50:	dd402b15 	stw	r21,172(sp)
 4020a54:	dd002a15 	stw	r20,168(sp)
 4020a58:	dcc02915 	stw	r19,164(sp)
 4020a5c:	dc802815 	stw	r18,160(sp)
 4020a60:	dc402715 	stw	r17,156(sp)
 4020a64:	dc002615 	stw	r16,152(sp)
 4020a68:	df002e04 	addi	fp,sp,184
 4020a6c:	e13fda15 	stw	r4,-152(fp)
 4020a70:	e17fdb15 	stw	r5,-148(fp)
 4020a74:	e1bfdc15 	stw	r6,-144(fp)
 4020a78:	e1ffdd15 	stw	r7,-140(fp)
 4020a7c:	008100b4 	movhi	r2,1026
 4020a80:	108bd304 	addi	r2,r2,12108
 4020a84:	e0bfe415 	stw	r2,-112(fp)
 4020a88:	008100f4 	movhi	r2,1027
 4020a8c:	1096dc04 	addi	r2,r2,23408
 4020a90:	e0bfe515 	stw	r2,-108(fp)
 4020a94:	e0bfe604 	addi	r2,fp,-104
 4020a98:	e0ffd204 	addi	r3,fp,-184
 4020a9c:	10c00015 	stw	r3,0(r2)
 4020aa0:	00c100b4 	movhi	r3,1026
 4020aa4:	18c38204 	addi	r3,r3,3592
 4020aa8:	10c00115 	stw	r3,4(r2)
 4020aac:	16c00215 	stw	sp,8(r2)
 4020ab0:	e0bfde04 	addi	r2,fp,-136
 4020ab4:	1009883a 	mov	r4,r2
 4020ab8:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
			pixel = 255*(network->layer[network->n_layer-1].value[pos]);
			*(result->source_pixel(x,y)) = pixel;
		}
	}
	printf("\r\n");
	return result;
 4020abc:	d805883a 	mov	r2,sp
 4020ac0:	e0bfeb15 	stw	r2,-84(fp)
 * Applique toutes les sous-images size x size de cette
 * image a l'entree de ce reseau de neuronnes.
 *
 *******************************************************/
Image * Image::apply_NN(NN * network, int size, int pos) {
	float source[size*size];
 4020ac4:	e0ffdc17 	ldw	r3,-144(fp)
 4020ac8:	e0bfdc17 	ldw	r2,-144(fp)
 4020acc:	1885383a 	mul	r2,r3,r2
 4020ad0:	10bfffc4 	addi	r2,r2,-1
 4020ad4:	e0bfd615 	stw	r2,-168(fp)
 4020ad8:	1007883a 	mov	r3,r2
 4020adc:	18c00044 	addi	r3,r3,1
 4020ae0:	e0ffec15 	stw	r3,-80(fp)
 4020ae4:	e03fed15 	stw	zero,-76(fp)
 4020ae8:	e13fec17 	ldw	r4,-80(fp)
 4020aec:	2006d6fa 	srli	r3,r4,27
 4020af0:	e17fed17 	ldw	r5,-76(fp)
 4020af4:	280a917a 	slli	r5,r5,5
 4020af8:	e17fef15 	stw	r5,-68(fp)
 4020afc:	e1bfef17 	ldw	r6,-68(fp)
 4020b00:	1986b03a 	or	r3,r3,r6
 4020b04:	e0ffef15 	stw	r3,-68(fp)
 4020b08:	e0ffec17 	ldw	r3,-80(fp)
 4020b0c:	1806917a 	slli	r3,r3,5
 4020b10:	1007883a 	mov	r3,r2
 4020b14:	18c00044 	addi	r3,r3,1
 4020b18:	e0fff015 	stw	r3,-64(fp)
 4020b1c:	e03ff115 	stw	zero,-60(fp)
 4020b20:	e13ff017 	ldw	r4,-64(fp)
 4020b24:	2006d6fa 	srli	r3,r4,27
 4020b28:	e17ff117 	ldw	r5,-60(fp)
 4020b2c:	280a917a 	slli	r5,r5,5
 4020b30:	e17ff315 	stw	r5,-52(fp)
 4020b34:	e1bff317 	ldw	r6,-52(fp)
 4020b38:	1986b03a 	or	r3,r3,r6
 4020b3c:	e0fff315 	stw	r3,-52(fp)
 4020b40:	e0fff017 	ldw	r3,-64(fp)
 4020b44:	1806917a 	slli	r3,r3,5
 4020b48:	10800044 	addi	r2,r2,1
 4020b4c:	1085883a 	add	r2,r2,r2
 4020b50:	1085883a 	add	r2,r2,r2
 4020b54:	108000c4 	addi	r2,r2,3
 4020b58:	108000c4 	addi	r2,r2,3
 4020b5c:	1004d0ba 	srli	r2,r2,2
 4020b60:	1085883a 	add	r2,r2,r2
 4020b64:	1085883a 	add	r2,r2,r2
 4020b68:	d8b7c83a 	sub	sp,sp,r2
 4020b6c:	d805883a 	mov	r2,sp
 4020b70:	108000c4 	addi	r2,r2,3
 4020b74:	1004d0ba 	srli	r2,r2,2
 4020b78:	1085883a 	add	r2,r2,r2
 4020b7c:	1085883a 	add	r2,r2,r2
 4020b80:	e0bfd715 	stw	r2,-164(fp)
	Image * result = new Image(length-size+1,height-size+1);
 4020b84:	00bfffc4 	movi	r2,-1
 4020b88:	e0bfdf15 	stw	r2,-132(fp)
 4020b8c:	01000304 	movi	r4,12
 4020b90:	40227000 	call	4022700 <_Znwj>
 4020b94:	e0bff415 	stw	r2,-48(fp)
 4020b98:	e0bfda17 	ldw	r2,-152(fp)
 4020b9c:	10c00117 	ldw	r3,4(r2)
 4020ba0:	e0bfdc17 	ldw	r2,-144(fp)
 4020ba4:	1885c83a 	sub	r2,r3,r2
 4020ba8:	11000044 	addi	r4,r2,1
 4020bac:	e0bfda17 	ldw	r2,-152(fp)
 4020bb0:	10c00017 	ldw	r3,0(r2)
 4020bb4:	e0bfdc17 	ldw	r2,-144(fp)
 4020bb8:	1885c83a 	sub	r2,r3,r2
 4020bbc:	10c00044 	addi	r3,r2,1
 4020bc0:	00800044 	movi	r2,1
 4020bc4:	e0bfdf15 	stw	r2,-132(fp)
 4020bc8:	180d883a 	mov	r6,r3
 4020bcc:	200b883a 	mov	r5,r4
 4020bd0:	e13ff417 	ldw	r4,-48(fp)
 4020bd4:	40202cc0 	call	40202cc <_ZN5ImageC1Eii>
 4020bd8:	e13ff417 	ldw	r4,-48(fp)
 4020bdc:	e13fd815 	stw	r4,-160(fp)

	printf("Processing line ");
 4020be0:	01000034 	movhi	r4,0
 4020be4:	00bfffc4 	movi	r2,-1
 4020be8:	e0bfdf15 	stw	r2,-132(fp)
 4020bec:	21000004 	addi	r4,r4,0
 4020bf0:	40278ec0 	call	40278ec <printf>
	for (int y=0; y<=height-size; y++) {
 4020bf4:	e03fd215 	stw	zero,-184(fp)
 4020bf8:	e0bfda17 	ldw	r2,-152(fp)
 4020bfc:	10c00017 	ldw	r3,0(r2)
 4020c00:	e0bfdc17 	ldw	r2,-144(fp)
 4020c04:	1887c83a 	sub	r3,r3,r2
 4020c08:	e0bfd217 	ldw	r2,-184(fp)
 4020c0c:	18807516 	blt	r3,r2,4020de4 <_ZN5Image8apply_NNEP2NNii+0x3a8>
		printf("%i,",y);
 4020c10:	e17fd217 	ldw	r5,-184(fp)
 4020c14:	01000034 	movhi	r4,0
 4020c18:	00bfffc4 	movi	r2,-1
 4020c1c:	e0bfdf15 	stw	r2,-132(fp)
 4020c20:	21000504 	addi	r4,r4,20
 4020c24:	40278ec0 	call	40278ec <printf>
		for (int x=0; x<=length-size; x++) {
 4020c28:	e03fd315 	stw	zero,-180(fp)
 4020c2c:	e0bfda17 	ldw	r2,-152(fp)
 4020c30:	10c00117 	ldw	r3,4(r2)
 4020c34:	e0bfdc17 	ldw	r2,-144(fp)
 4020c38:	1887c83a 	sub	r3,r3,r2
 4020c3c:	e0bfd317 	ldw	r2,-180(fp)
 4020c40:	18806416 	blt	r3,r2,4020dd4 <_ZN5Image8apply_NNEP2NNii+0x398>
			/* Appliquer le reseau sur un sous-bloc de l'image */
			for (int j=0; j<size; j++) {
 4020c44:	e03fd415 	stw	zero,-176(fp)
 4020c48:	e0ffd417 	ldw	r3,-176(fp)
 4020c4c:	e0bfdc17 	ldw	r2,-144(fp)
 4020c50:	1880370e 	bge	r3,r2,4020d30 <_ZN5Image8apply_NNEP2NNii+0x2f4>
				for (int i=0; i<size; i++) {
 4020c54:	e03fd515 	stw	zero,-172(fp)
 4020c58:	e0ffd517 	ldw	r3,-172(fp)
 4020c5c:	e0bfdc17 	ldw	r2,-144(fp)
 4020c60:	18802f0e 	bge	r3,r2,4020d20 <_ZN5Image8apply_NNEP2NNii+0x2e4>
					source[j*size + i] = (*source_pixel(x+i,y+j))/255.0;
 4020c64:	e0ffd417 	ldw	r3,-176(fp)
 4020c68:	e0bfdc17 	ldw	r2,-144(fp)
 4020c6c:	1887383a 	mul	r3,r3,r2
 4020c70:	e0bfd517 	ldw	r2,-172(fp)
 4020c74:	1885883a 	add	r2,r3,r2
 4020c78:	e0bff515 	stw	r2,-44(fp)
 4020c7c:	e0ffd317 	ldw	r3,-180(fp)
 4020c80:	e0bfd517 	ldw	r2,-172(fp)
 4020c84:	1889883a 	add	r4,r3,r2
 4020c88:	e0ffd217 	ldw	r3,-184(fp)
 4020c8c:	e0bfd417 	ldw	r2,-176(fp)
 4020c90:	1885883a 	add	r2,r3,r2
 4020c94:	100d883a 	mov	r6,r2
 4020c98:	200b883a 	mov	r5,r4
 4020c9c:	e13fda17 	ldw	r4,-152(fp)
 4020ca0:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 4020ca4:	10800003 	ldbu	r2,0(r2)
 4020ca8:	10803fcc 	andi	r2,r2,255
 4020cac:	1009883a 	mov	r4,r2
 4020cb0:	40266300 	call	4026630 <__floatsidf>
 4020cb4:	1011883a 	mov	r8,r2
 4020cb8:	1813883a 	mov	r9,r3
 4020cbc:	000d883a 	mov	r6,zero
 4020cc0:	01d01c34 	movhi	r7,16496
 4020cc4:	39f80004 	addi	r7,r7,-8192
 4020cc8:	4009883a 	mov	r4,r8
 4020ccc:	480b883a 	mov	r5,r9
 4020cd0:	4025d480 	call	4025d48 <__divdf3>
 4020cd4:	1009883a 	mov	r4,r2
 4020cd8:	180b883a 	mov	r5,r3
 4020cdc:	2005883a 	mov	r2,r4
 4020ce0:	2807883a 	mov	r3,r5
 4020ce4:	1009883a 	mov	r4,r2
 4020ce8:	180b883a 	mov	r5,r3
 4020cec:	402681c0 	call	402681c <__truncdfsf2>
 4020cf0:	1009883a 	mov	r4,r2
 4020cf4:	e0ffd717 	ldw	r3,-164(fp)
 4020cf8:	e17ff517 	ldw	r5,-44(fp)
 4020cfc:	e17ff517 	ldw	r5,-44(fp)
 4020d00:	2945883a 	add	r2,r5,r5
 4020d04:	1085883a 	add	r2,r2,r2
 4020d08:	1885883a 	add	r2,r3,r2
 4020d0c:	11000015 	stw	r4,0(r2)
	for (int y=0; y<=height-size; y++) {
		printf("%i,",y);
		for (int x=0; x<=length-size; x++) {
			/* Appliquer le reseau sur un sous-bloc de l'image */
			for (int j=0; j<size; j++) {
				for (int i=0; i<size; i++) {
 4020d10:	e0bfd517 	ldw	r2,-172(fp)
 4020d14:	10800044 	addi	r2,r2,1
 4020d18:	e0bfd515 	stw	r2,-172(fp)
 4020d1c:	003fce06 	br	4020c58 <__flash_rwdata_start+0xfffea9ec>
	printf("Processing line ");
	for (int y=0; y<=height-size; y++) {
		printf("%i,",y);
		for (int x=0; x<=length-size; x++) {
			/* Appliquer le reseau sur un sous-bloc de l'image */
			for (int j=0; j<size; j++) {
 4020d20:	e0bfd417 	ldw	r2,-176(fp)
 4020d24:	10800044 	addi	r2,r2,1
 4020d28:	e0bfd415 	stw	r2,-176(fp)
 4020d2c:	003fc606 	br	4020c48 <__flash_rwdata_start+0xfffea9dc>
				for (int i=0; i<size; i++) {
					source[j*size + i] = (*source_pixel(x+i,y+j))/255.0;
				}
			}
			network->propagate(source);
 4020d30:	e0ffd717 	ldw	r3,-164(fp)
 4020d34:	00bfffc4 	movi	r2,-1
 4020d38:	e0bfdf15 	stw	r2,-132(fp)
 4020d3c:	180b883a 	mov	r5,r3
 4020d40:	e13fdb17 	ldw	r4,-148(fp)
 4020d44:	40213740 	call	4021374 <_ZN2NN9propagateEPf>

			/* Stocker les bons/meilleurs matchs */
			unsigned char pixel;
			pixel = 255*(network->layer[network->n_layer-1].value[pos]);
 4020d48:	e0bfdb17 	ldw	r2,-148(fp)
 4020d4c:	10c00217 	ldw	r3,8(r2)
 4020d50:	e0bfdb17 	ldw	r2,-148(fp)
 4020d54:	10800117 	ldw	r2,4(r2)
 4020d58:	1009883a 	mov	r4,r2
 4020d5c:	00820034 	movhi	r2,2048
 4020d60:	10bfffc4 	addi	r2,r2,-1
 4020d64:	2085883a 	add	r2,r4,r2
 4020d68:	1004917a 	slli	r2,r2,5
 4020d6c:	1885883a 	add	r2,r3,r2
 4020d70:	10c00717 	ldw	r3,28(r2)
 4020d74:	e0bfdd17 	ldw	r2,-140(fp)
 4020d78:	1085883a 	add	r2,r2,r2
 4020d7c:	1085883a 	add	r2,r2,r2
 4020d80:	1885883a 	add	r2,r3,r2
 4020d84:	10c00017 	ldw	r3,0(r2)
 4020d88:	0150dff4 	movhi	r5,17279
 4020d8c:	1809883a 	mov	r4,r3
 4020d90:	40251e40 	call	40251e4 <__mulsf3>
 4020d94:	1007883a 	mov	r3,r2
 4020d98:	1805883a 	mov	r2,r3
 4020d9c:	1009883a 	mov	r4,r2
 4020da0:	40245940 	call	4024594 <__fixunssfsi>
 4020da4:	e0bfd905 	stb	r2,-156(fp)
			*(result->source_pixel(x,y)) = pixel;
 4020da8:	e1bfd217 	ldw	r6,-184(fp)
 4020dac:	e17fd317 	ldw	r5,-180(fp)
 4020db0:	e13fd817 	ldw	r4,-160(fp)
 4020db4:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 4020db8:	1007883a 	mov	r3,r2
 4020dbc:	e0bfd903 	ldbu	r2,-156(fp)
 4020dc0:	18800005 	stb	r2,0(r3)
	Image * result = new Image(length-size+1,height-size+1);

	printf("Processing line ");
	for (int y=0; y<=height-size; y++) {
		printf("%i,",y);
		for (int x=0; x<=length-size; x++) {
 4020dc4:	e0bfd317 	ldw	r2,-180(fp)
 4020dc8:	10800044 	addi	r2,r2,1
 4020dcc:	e0bfd315 	stw	r2,-180(fp)
 4020dd0:	003f9606 	br	4020c2c <__flash_rwdata_start+0xfffea9c0>
Image * Image::apply_NN(NN * network, int size, int pos) {
	float source[size*size];
	Image * result = new Image(length-size+1,height-size+1);

	printf("Processing line ");
	for (int y=0; y<=height-size; y++) {
 4020dd4:	e0bfd217 	ldw	r2,-184(fp)
 4020dd8:	10800044 	addi	r2,r2,1
 4020ddc:	e0bfd215 	stw	r2,-184(fp)
 4020de0:	003f8506 	br	4020bf8 <__flash_rwdata_start+0xfffea98c>
			unsigned char pixel;
			pixel = 255*(network->layer[network->n_layer-1].value[pos]);
			*(result->source_pixel(x,y)) = pixel;
		}
	}
	printf("\r\n");
 4020de4:	01000034 	movhi	r4,0
 4020de8:	00bfffc4 	movi	r2,-1
 4020dec:	e0bfdf15 	stw	r2,-132(fp)
 4020df0:	21000604 	addi	r4,r4,24
 4020df4:	4027a080 	call	4027a08 <puts>
	return result;
 4020df8:	e0bfd817 	ldw	r2,-160(fp)
 4020dfc:	e6ffeb17 	ldw	sp,-84(fp)
 4020e00:	e0bff615 	stw	r2,-40(fp)
 4020e04:	00000a06 	br	4020e30 <_ZN5Image8apply_NNEP2NNii+0x3f4>
 4020e08:	e7002e04 	addi	fp,fp,184
 4020e0c:	e0bfe017 	ldw	r2,-128(fp)
 4020e10:	e0bff715 	stw	r2,-36(fp)
 * image a l'entree de ce reseau de neuronnes.
 *
 *******************************************************/
Image * Image::apply_NN(NN * network, int size, int pos) {
	float source[size*size];
	Image * result = new Image(length-size+1,height-size+1);
 4020e14:	e13ff417 	ldw	r4,-48(fp)
 4020e18:	40237cc0 	call	40237cc <_ZdlPv>
 4020e1c:	e0fff717 	ldw	r3,-36(fp)
 4020e20:	00bfffc4 	movi	r2,-1
 4020e24:	e0bfdf15 	stw	r2,-132(fp)
 4020e28:	1809883a 	mov	r4,r3
 4020e2c:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 4020e30:	e0bfde04 	addi	r2,fp,-136
 4020e34:	1009883a 	mov	r4,r2
 4020e38:	4026be40 	call	4026be4 <_Unwind_SjLj_Unregister>
			*(result->source_pixel(x,y)) = pixel;
		}
	}
	printf("\r\n");
	return result;
}
 4020e3c:	e0bff617 	ldw	r2,-40(fp)
 4020e40:	e6fff804 	addi	sp,fp,-32
 4020e44:	dfc00917 	ldw	ra,36(sp)
 4020e48:	df000817 	ldw	fp,32(sp)
 4020e4c:	ddc00717 	ldw	r23,28(sp)
 4020e50:	dd800617 	ldw	r22,24(sp)
 4020e54:	dd400517 	ldw	r21,20(sp)
 4020e58:	dd000417 	ldw	r20,16(sp)
 4020e5c:	dcc00317 	ldw	r19,12(sp)
 4020e60:	dc800217 	ldw	r18,8(sp)
 4020e64:	dc400117 	ldw	r17,4(sp)
 4020e68:	dc000017 	ldw	r16,0(sp)
 4020e6c:	dec00a04 	addi	sp,sp,40
 4020e70:	f800283a 	ret

04020e74 <_ZN5Image13printToScreenEiiP3VGA>:

/**********************************************************
 * Affiche l'image a l'ecran a la position x,y.
 *
 **********************************************************/
void Image::printToScreen(int x, int y, VGA *pVGA) {
 4020e74:	defff604 	addi	sp,sp,-40
 4020e78:	dfc00915 	stw	ra,36(sp)
 4020e7c:	df000815 	stw	fp,32(sp)
 4020e80:	dc400715 	stw	r17,28(sp)
 4020e84:	dc000615 	stw	r16,24(sp)
 4020e88:	df000804 	addi	fp,sp,32
 4020e8c:	e13ffa15 	stw	r4,-24(fp)
 4020e90:	e17ffb15 	stw	r5,-20(fp)
 4020e94:	e1bffc15 	stw	r6,-16(fp)
 4020e98:	e1fffd15 	stw	r7,-12(fp)
	for(int i=0; i<length; i++) {
 4020e9c:	e03ff815 	stw	zero,-32(fp)
 4020ea0:	e0bffa17 	ldw	r2,-24(fp)
 4020ea4:	10800117 	ldw	r2,4(r2)
 4020ea8:	e0fff817 	ldw	r3,-32(fp)
 4020eac:	1880200e 	bge	r3,r2,4020f30 <_ZN5Image13printToScreenEiiP3VGA+0xbc>
		for(int j=0; j<height; j++) {
 4020eb0:	e03ff915 	stw	zero,-28(fp)
 4020eb4:	e0bffa17 	ldw	r2,-24(fp)
 4020eb8:	10800017 	ldw	r2,0(r2)
 4020ebc:	e0fff917 	ldw	r3,-28(fp)
 4020ec0:	1880170e 	bge	r3,r2,4020f20 <_ZN5Image13printToScreenEiiP3VGA+0xac>
			pVGA->Set_Pixel_Color(x+i,y+j,*source_pixel(i,j));
 4020ec4:	e0fffb17 	ldw	r3,-20(fp)
 4020ec8:	e0bff817 	ldw	r2,-32(fp)
 4020ecc:	1885883a 	add	r2,r3,r2
 4020ed0:	1021883a 	mov	r16,r2
 4020ed4:	e0fffc17 	ldw	r3,-16(fp)
 4020ed8:	e0bff917 	ldw	r2,-28(fp)
 4020edc:	1885883a 	add	r2,r3,r2
 4020ee0:	1023883a 	mov	r17,r2
 4020ee4:	e1bff917 	ldw	r6,-28(fp)
 4020ee8:	e17ff817 	ldw	r5,-32(fp)
 4020eec:	e13ffa17 	ldw	r4,-24(fp)
 4020ef0:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 4020ef4:	10800003 	ldbu	r2,0(r2)
 4020ef8:	10803fcc 	andi	r2,r2,255
 4020efc:	100f883a 	mov	r7,r2
 4020f00:	880d883a 	mov	r6,r17
 4020f04:	800b883a 	mov	r5,r16
 4020f08:	e13ffd17 	ldw	r4,-12(fp)
 4020f0c:	40210540 	call	4021054 <_ZN3VGA15Set_Pixel_ColorEjjj>
 * Affiche l'image a l'ecran a la position x,y.
 *
 **********************************************************/
void Image::printToScreen(int x, int y, VGA *pVGA) {
	for(int i=0; i<length; i++) {
		for(int j=0; j<height; j++) {
 4020f10:	e0bff917 	ldw	r2,-28(fp)
 4020f14:	10800044 	addi	r2,r2,1
 4020f18:	e0bff915 	stw	r2,-28(fp)
 4020f1c:	003fe506 	br	4020eb4 <__flash_rwdata_start+0xfffeac48>
/**********************************************************
 * Affiche l'image a l'ecran a la position x,y.
 *
 **********************************************************/
void Image::printToScreen(int x, int y, VGA *pVGA) {
	for(int i=0; i<length; i++) {
 4020f20:	e0bff817 	ldw	r2,-32(fp)
 4020f24:	10800044 	addi	r2,r2,1
 4020f28:	e0bff815 	stw	r2,-32(fp)
 4020f2c:	003fdc06 	br	4020ea0 <__flash_rwdata_start+0xfffeac34>
		for(int j=0; j<height; j++) {
			pVGA->Set_Pixel_Color(x+i,y+j,*source_pixel(i,j));
		}
	}
}
 4020f30:	0001883a 	nop
 4020f34:	e6fffe04 	addi	sp,fp,-8
 4020f38:	dfc00317 	ldw	ra,12(sp)
 4020f3c:	df000217 	ldw	fp,8(sp)
 4020f40:	dc400117 	ldw	r17,4(sp)
 4020f44:	dc000017 	ldw	r16,0(sp)
 4020f48:	dec00404 	addi	sp,sp,16
 4020f4c:	f800283a 	ret

04020f50 <_ZN5Image5printEv>:

/**********************************************************
 * Affiche l'image a l'ecran a la position x,y.
 *
 **********************************************************/
void Image::print() {
 4020f50:	defffa04 	addi	sp,sp,-24
 4020f54:	dfc00515 	stw	ra,20(sp)
 4020f58:	df000415 	stw	fp,16(sp)
 4020f5c:	df000404 	addi	fp,sp,16
 4020f60:	e13fff15 	stw	r4,-4(fp)
	printf("\n");
 4020f64:	01000284 	movi	r4,10
 4020f68:	40279300 	call	4027930 <putchar>
	for(int i=0; i<length; i++) {
 4020f6c:	e03ffc15 	stw	zero,-16(fp)
 4020f70:	e0bfff17 	ldw	r2,-4(fp)
 4020f74:	10800117 	ldw	r2,4(r2)
 4020f78:	e0fffc17 	ldw	r3,-16(fp)
 4020f7c:	18801a0e 	bge	r3,r2,4020fe8 <_ZN5Image5printEv+0x98>
		for(int j=0; j<height; j++) {
 4020f80:	e03ffd15 	stw	zero,-12(fp)
 4020f84:	e0bfff17 	ldw	r2,-4(fp)
 4020f88:	10800017 	ldw	r2,0(r2)
 4020f8c:	e0fffd17 	ldw	r3,-12(fp)
 4020f90:	18800f0e 	bge	r3,r2,4020fd0 <_ZN5Image5printEv+0x80>
			int value = (int) *source_pixel(i,j);
 4020f94:	e1bffd17 	ldw	r6,-12(fp)
 4020f98:	e17ffc17 	ldw	r5,-16(fp)
 4020f9c:	e13fff17 	ldw	r4,-4(fp)
 4020fa0:	40209240 	call	4020924 <_ZN5Image12source_pixelEii>
 4020fa4:	10800003 	ldbu	r2,0(r2)
 4020fa8:	10803fcc 	andi	r2,r2,255
 4020fac:	e0bffe15 	stw	r2,-8(fp)
			printf("%i,",value);
 4020fb0:	e17ffe17 	ldw	r5,-8(fp)
 4020fb4:	01000034 	movhi	r4,0
 4020fb8:	21000504 	addi	r4,r4,20
 4020fbc:	40278ec0 	call	40278ec <printf>
 *
 **********************************************************/
void Image::print() {
	printf("\n");
	for(int i=0; i<length; i++) {
		for(int j=0; j<height; j++) {
 4020fc0:	e0bffd17 	ldw	r2,-12(fp)
 4020fc4:	10800044 	addi	r2,r2,1
 4020fc8:	e0bffd15 	stw	r2,-12(fp)
 4020fcc:	003fed06 	br	4020f84 <__flash_rwdata_start+0xfffead18>
			int value = (int) *source_pixel(i,j);
			printf("%i,",value);
		}
		printf("\n");
 4020fd0:	01000284 	movi	r4,10
 4020fd4:	40279300 	call	4027930 <putchar>
 * Affiche l'image a l'ecran a la position x,y.
 *
 **********************************************************/
void Image::print() {
	printf("\n");
	for(int i=0; i<length; i++) {
 4020fd8:	e0bffc17 	ldw	r2,-16(fp)
 4020fdc:	10800044 	addi	r2,r2,1
 4020fe0:	e0bffc15 	stw	r2,-16(fp)
 4020fe4:	003fe206 	br	4020f70 <__flash_rwdata_start+0xfffead04>
			int value = (int) *source_pixel(i,j);
			printf("%i,",value);
		}
		printf("\n");
	}
}
 4020fe8:	0001883a 	nop
 4020fec:	e037883a 	mov	sp,fp
 4020ff0:	dfc00117 	ldw	ra,4(sp)
 4020ff4:	df000017 	ldw	fp,0(sp)
 4020ff8:	dec00204 	addi	sp,sp,8
 4020ffc:	f800283a 	ret

04021000 <_ZN5ImageD1Ev>:

Image::~Image() {
 4021000:	defffd04 	addi	sp,sp,-12
 4021004:	dfc00215 	stw	ra,8(sp)
 4021008:	df000115 	stw	fp,4(sp)
 402100c:	df000104 	addi	fp,sp,4
 4021010:	e13fff15 	stw	r4,-4(fp)
	if (source_array != 0) delete[] source_array;
 4021014:	e0bfff17 	ldw	r2,-4(fp)
 4021018:	10800217 	ldw	r2,8(r2)
 402101c:	10000726 	beq	r2,zero,402103c <_ZN5ImageD1Ev+0x3c>
 4021020:	e0bfff17 	ldw	r2,-4(fp)
 4021024:	10800217 	ldw	r2,8(r2)
 4021028:	10000426 	beq	r2,zero,402103c <_ZN5ImageD1Ev+0x3c>
 402102c:	e0bfff17 	ldw	r2,-4(fp)
 4021030:	10800217 	ldw	r2,8(r2)
 4021034:	1009883a 	mov	r4,r2
 4021038:	40227700 	call	4022770 <_ZdaPv>
}
 402103c:	0001883a 	nop
 4021040:	e037883a 	mov	sp,fp
 4021044:	dfc00117 	ldw	ra,4(sp)
 4021048:	df000017 	ldw	fp,0(sp)
 402104c:	dec00204 	addi	sp,sp,8
 4021050:	f800283a 	ret

04021054 <_ZN3VGA15Set_Pixel_ColorEjjj>:
		if ( (x>=640) || (y>=480) ) return;
		int address = 640*y+x;
		IOWR_8DIRECT(memory_address, address, 192);
	}

	inline void Set_Pixel_Color(unsigned int x, unsigned int y, unsigned int color) {
 4021054:	defffa04 	addi	sp,sp,-24
 4021058:	df000515 	stw	fp,20(sp)
 402105c:	df000504 	addi	fp,sp,20
 4021060:	e13ffc15 	stw	r4,-16(fp)
 4021064:	e17ffd15 	stw	r5,-12(fp)
 4021068:	e1bffe15 	stw	r6,-8(fp)
 402106c:	e1ffff15 	stw	r7,-4(fp)
		if ( (x>=640) || (y>=480) ) return;
 4021070:	e0bffd17 	ldw	r2,-12(fp)
 4021074:	1080a028 	cmpgeui	r2,r2,640
 4021078:	1000111e 	bne	r2,zero,40210c0 <_ZN3VGA15Set_Pixel_ColorEjjj+0x6c>
 402107c:	e0bffe17 	ldw	r2,-8(fp)
 4021080:	10807830 	cmpltui	r2,r2,480
 4021084:	10000e26 	beq	r2,zero,40210c0 <_ZN3VGA15Set_Pixel_ColorEjjj+0x6c>
		int address = 640*y+x;
 4021088:	e0bffe17 	ldw	r2,-8(fp)
 402108c:	10c0a024 	muli	r3,r2,640
 4021090:	e0bffd17 	ldw	r2,-12(fp)
 4021094:	1885883a 	add	r2,r3,r2
 4021098:	e0bffb15 	stw	r2,-20(fp)
		IOWR_8DIRECT(memory_address, address, color);
 402109c:	e0bffc17 	ldw	r2,-16(fp)
 40210a0:	10800117 	ldw	r2,4(r2)
 40210a4:	1007883a 	mov	r3,r2
 40210a8:	e0bffb17 	ldw	r2,-20(fp)
 40210ac:	1885883a 	add	r2,r3,r2
 40210b0:	1007883a 	mov	r3,r2
 40210b4:	e0bfff17 	ldw	r2,-4(fp)
 40210b8:	18800025 	stbio	r2,0(r3)
 40210bc:	00000106 	br	40210c4 <_ZN3VGA15Set_Pixel_ColorEjjj+0x70>
		int address = 640*y+x;
		IOWR_8DIRECT(memory_address, address, 192);
	}

	inline void Set_Pixel_Color(unsigned int x, unsigned int y, unsigned int color) {
		if ( (x>=640) || (y>=480) ) return;
 40210c0:	0001883a 	nop
		int address = 640*y+x;
		IOWR_8DIRECT(memory_address, address, color);
	}
 40210c4:	e037883a 	mov	sp,fp
 40210c8:	df000017 	ldw	fp,0(sp)
 40210cc:	dec00104 	addi	sp,sp,4
 40210d0:	f800283a 	ret

040210d4 <_ZN2NNC1Ei>:
 */

#include "NN.h"
#include "stdio.h"

NN::NN(int new_n_layer) {
 40210d4:	deffdf04 	addi	sp,sp,-132
 40210d8:	dfc02015 	stw	ra,128(sp)
 40210dc:	df001f15 	stw	fp,124(sp)
 40210e0:	ddc01e15 	stw	r23,120(sp)
 40210e4:	dd801d15 	stw	r22,116(sp)
 40210e8:	dd401c15 	stw	r21,112(sp)
 40210ec:	dd001b15 	stw	r20,108(sp)
 40210f0:	dcc01a15 	stw	r19,104(sp)
 40210f4:	dc801915 	stw	r18,100(sp)
 40210f8:	dc401815 	stw	r17,96(sp)
 40210fc:	dc001715 	stw	r16,92(sp)
 4021100:	df001f04 	addi	fp,sp,124
 4021104:	e13fe115 	stw	r4,-124(fp)
 4021108:	e17fe215 	stw	r5,-120(fp)
 402110c:	008100b4 	movhi	r2,1026
 4021110:	108bd304 	addi	r2,r2,12108
 4021114:	e0bfe915 	stw	r2,-92(fp)
 4021118:	008100f4 	movhi	r2,1027
 402111c:	1096dd84 	addi	r2,r2,23414
 4021120:	e0bfea15 	stw	r2,-88(fp)
 4021124:	e0bfeb04 	addi	r2,fp,-84
 4021128:	e0ffe104 	addi	r3,fp,-124
 402112c:	10c00015 	stw	r3,0(r2)
 4021130:	00c100b4 	movhi	r3,1026
 4021134:	18c48804 	addi	r3,r3,4640
 4021138:	10c00115 	stw	r3,4(r2)
 402113c:	16c00215 	stw	sp,8(r2)
 4021140:	e0bfe304 	addi	r2,fp,-116
 4021144:	1009883a 	mov	r4,r2
 4021148:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
 402114c:	00800034 	movhi	r2,0
 4021150:	10801404 	addi	r2,r2,80
 4021154:	e0ffe117 	ldw	r3,-124(fp)
 4021158:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated constructor stub
	n_layer = new_n_layer;
 402115c:	e0bfe117 	ldw	r2,-124(fp)
 4021160:	e0ffe217 	ldw	r3,-120(fp)
 4021164:	10c00115 	stw	r3,4(r2)
	layer = new NNLayer[n_layer];
 4021168:	e0bfe117 	ldw	r2,-124(fp)
 402116c:	10800117 	ldw	r2,4(r2)
 4021170:	e0bff315 	stw	r2,-52(fp)
 4021174:	0080fe34 	movhi	r2,1016
 4021178:	e13ff317 	ldw	r4,-52(fp)
 402117c:	11000436 	bltu	r2,r4,4021190 <_ZN2NNC1Ei+0xbc>
 4021180:	e0fff317 	ldw	r3,-52(fp)
 4021184:	1804917a 	slli	r2,r3,5
 4021188:	10800104 	addi	r2,r2,4
 402118c:	00000106 	br	4021194 <_ZN2NNC1Ei+0xc0>
 4021190:	00bfffc4 	movi	r2,-1
 4021194:	00ffffc4 	movi	r3,-1
 4021198:	e0ffe415 	stw	r3,-112(fp)
 402119c:	1009883a 	mov	r4,r2
 40211a0:	402266c0 	call	402266c <_Znaj>
 40211a4:	e0bff415 	stw	r2,-48(fp)
 40211a8:	e0bff317 	ldw	r2,-52(fp)
 40211ac:	e13ff417 	ldw	r4,-48(fp)
 40211b0:	20800015 	stw	r2,0(r4)
 40211b4:	e0fff417 	ldw	r3,-48(fp)
 40211b8:	18c00104 	addi	r3,r3,4
 40211bc:	e0fff515 	stw	r3,-44(fp)
 40211c0:	e13ff317 	ldw	r4,-52(fp)
 40211c4:	20bfffc4 	addi	r2,r4,-1
 40211c8:	e0bff115 	stw	r2,-60(fp)
 40211cc:	e0bff517 	ldw	r2,-44(fp)
 40211d0:	e0bff015 	stw	r2,-64(fp)
 40211d4:	e0fff117 	ldw	r3,-60(fp)
 40211d8:	18bfffe0 	cmpeqi	r2,r3,-1
 40211dc:	10000b1e 	bne	r2,zero,402120c <_ZN2NNC1Ei+0x138>
 40211e0:	00800044 	movi	r2,1
 40211e4:	e0bfe415 	stw	r2,-112(fp)
 40211e8:	e13ff017 	ldw	r4,-64(fp)
 40211ec:	40217e00 	call	40217e0 <_ZN7NNLayerC1Ev>
 40211f0:	e13ff017 	ldw	r4,-64(fp)
 40211f4:	21000804 	addi	r4,r4,32
 40211f8:	e13ff015 	stw	r4,-64(fp)
 40211fc:	e0bff117 	ldw	r2,-60(fp)
 4021200:	10bfffc4 	addi	r2,r2,-1
 4021204:	e0bff115 	stw	r2,-60(fp)
 4021208:	003ff206 	br	40211d4 <__flash_rwdata_start+0xfffeaf68>
 402120c:	e13ff417 	ldw	r4,-48(fp)
 4021210:	20c00104 	addi	r3,r4,4
 4021214:	e0bfe117 	ldw	r2,-124(fp)
 4021218:	10c00215 	stw	r3,8(r2)
}
 402121c:	00002506 	br	40212b4 <_ZN2NNC1Ei+0x1e0>
 4021220:	e7001f04 	addi	fp,fp,124
 4021224:	e0bfe517 	ldw	r2,-108(fp)
 4021228:	e0bff715 	stw	r2,-36(fp)
 402122c:	e0bff517 	ldw	r2,-44(fp)
 4021230:	10001726 	beq	r2,zero,4021290 <_ZN2NNC1Ei+0x1bc>
#include "stdio.h"

NN::NN(int new_n_layer) {
	// TODO Auto-generated constructor stub
	n_layer = new_n_layer;
	layer = new NNLayer[n_layer];
 4021234:	e0bff117 	ldw	r2,-60(fp)
 4021238:	e13ff317 	ldw	r4,-52(fp)
 402123c:	2087c83a 	sub	r3,r4,r2
 4021240:	00820034 	movhi	r2,2048
 4021244:	10bfffc4 	addi	r2,r2,-1
 4021248:	1885883a 	add	r2,r3,r2
 402124c:	1004917a 	slli	r2,r2,5
 4021250:	e0fff517 	ldw	r3,-44(fp)
 4021254:	1885883a 	add	r2,r3,r2
 4021258:	e0bff215 	stw	r2,-56(fp)
 402125c:	e13ff217 	ldw	r4,-56(fp)
 4021260:	e0bff517 	ldw	r2,-44(fp)
 4021264:	20800a26 	beq	r4,r2,4021290 <_ZN2NNC1Ei+0x1bc>
 4021268:	e0fff217 	ldw	r3,-56(fp)
 402126c:	18fff804 	addi	r3,r3,-32
 4021270:	e0fff215 	stw	r3,-56(fp)
 4021274:	e13ff217 	ldw	r4,-56(fp)
 4021278:	20800017 	ldw	r2,0(r4)
 402127c:	10800017 	ldw	r2,0(r2)
 4021280:	e03fe415 	stw	zero,-112(fp)
 4021284:	e13ff217 	ldw	r4,-56(fp)
 4021288:	103ee83a 	callr	r2
 402128c:	003ff306 	br	402125c <__flash_rwdata_start+0xfffeaff0>
 4021290:	e0bff717 	ldw	r2,-36(fp)
 4021294:	e0bff615 	stw	r2,-40(fp)
 4021298:	e13ff417 	ldw	r4,-48(fp)
 402129c:	40227700 	call	4022770 <_ZdaPv>
 40212a0:	e0fff617 	ldw	r3,-40(fp)
 40212a4:	00bfffc4 	movi	r2,-1
 40212a8:	e0bfe415 	stw	r2,-112(fp)
 40212ac:	1809883a 	mov	r4,r3
 40212b0:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 40212b4:	e0bfe304 	addi	r2,fp,-116
 40212b8:	1009883a 	mov	r4,r2
 40212bc:	4026be40 	call	4026be4 <_Unwind_SjLj_Unregister>
}
 40212c0:	e6fff804 	addi	sp,fp,-32
 40212c4:	dfc00917 	ldw	ra,36(sp)
 40212c8:	df000817 	ldw	fp,32(sp)
 40212cc:	ddc00717 	ldw	r23,28(sp)
 40212d0:	dd800617 	ldw	r22,24(sp)
 40212d4:	dd400517 	ldw	r21,20(sp)
 40212d8:	dd000417 	ldw	r20,16(sp)
 40212dc:	dcc00317 	ldw	r19,12(sp)
 40212e0:	dc800217 	ldw	r18,8(sp)
 40212e4:	dc400117 	ldw	r17,4(sp)
 40212e8:	dc000017 	ldw	r16,0(sp)
 40212ec:	dec00a04 	addi	sp,sp,40
 40212f0:	f800283a 	ret

040212f4 <_ZN2NND1Ev>:

NN::~NN() {
 40212f4:	defffd04 	addi	sp,sp,-12
 40212f8:	dfc00215 	stw	ra,8(sp)
 40212fc:	df000115 	stw	fp,4(sp)
 4021300:	df000104 	addi	fp,sp,4
 4021304:	e13fff15 	stw	r4,-4(fp)
 4021308:	00800034 	movhi	r2,0
 402130c:	10801404 	addi	r2,r2,80
 4021310:	e0ffff17 	ldw	r3,-4(fp)
 4021314:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated destructor stub
}
 4021318:	0005883a 	mov	r2,zero
 402131c:	10000226 	beq	r2,zero,4021328 <_ZN2NND1Ev+0x34>
 4021320:	e13fff17 	ldw	r4,-4(fp)
 4021324:	40237cc0 	call	40237cc <_ZdlPv>
 4021328:	e037883a 	mov	sp,fp
 402132c:	dfc00117 	ldw	ra,4(sp)
 4021330:	df000017 	ldw	fp,0(sp)
 4021334:	dec00204 	addi	sp,sp,8
 4021338:	f800283a 	ret

0402133c <_ZN2NND0Ev>:
	// TODO Auto-generated constructor stub
	n_layer = new_n_layer;
	layer = new NNLayer[n_layer];
}

NN::~NN() {
 402133c:	defffd04 	addi	sp,sp,-12
 4021340:	dfc00215 	stw	ra,8(sp)
 4021344:	df000115 	stw	fp,4(sp)
 4021348:	df000104 	addi	fp,sp,4
 402134c:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated destructor stub
}
 4021350:	e13fff17 	ldw	r4,-4(fp)
 4021354:	40212f40 	call	40212f4 <_ZN2NND1Ev>
 4021358:	e13fff17 	ldw	r4,-4(fp)
 402135c:	40237cc0 	call	40237cc <_ZdlPv>
 4021360:	e037883a 	mov	sp,fp
 4021364:	dfc00117 	ldw	ra,4(sp)
 4021368:	df000017 	ldw	fp,0(sp)
 402136c:	dec00204 	addi	sp,sp,8
 4021370:	f800283a 	ret

04021374 <_ZN2NN9propagateEPf>:

float * NN::propagate(float * source) {
 4021374:	defffb04 	addi	sp,sp,-20
 4021378:	dfc00415 	stw	ra,16(sp)
 402137c:	df000315 	stw	fp,12(sp)
 4021380:	df000304 	addi	fp,sp,12
 4021384:	e13ffe15 	stw	r4,-8(fp)
 4021388:	e17fff15 	stw	r5,-4(fp)
	for (int i=0; i<n_layer; i++) {
 402138c:	e03ffd15 	stw	zero,-12(fp)
 4021390:	e0bffe17 	ldw	r2,-8(fp)
 4021394:	10800117 	ldw	r2,4(r2)
 4021398:	e0fffd17 	ldw	r3,-12(fp)
 402139c:	18800d0e 	bge	r3,r2,40213d4 <_ZN2NN9propagateEPf+0x60>
		source = layer[i].propagate(source);
 40213a0:	e0bffe17 	ldw	r2,-8(fp)
 40213a4:	10c00217 	ldw	r3,8(r2)
 40213a8:	e0bffd17 	ldw	r2,-12(fp)
 40213ac:	1004917a 	slli	r2,r2,5
 40213b0:	1885883a 	add	r2,r3,r2
 40213b4:	e17fff17 	ldw	r5,-4(fp)
 40213b8:	1009883a 	mov	r4,r2
 40213bc:	4021d200 	call	4021d20 <_ZN7NNLayer9propagateEPf>
 40213c0:	e0bfff15 	stw	r2,-4(fp)
NN::~NN() {
	// TODO Auto-generated destructor stub
}

float * NN::propagate(float * source) {
	for (int i=0; i<n_layer; i++) {
 40213c4:	e0bffd17 	ldw	r2,-12(fp)
 40213c8:	10800044 	addi	r2,r2,1
 40213cc:	e0bffd15 	stw	r2,-12(fp)
 40213d0:	003fef06 	br	4021390 <__flash_rwdata_start+0xfffeb124>
		source = layer[i].propagate(source);
	}
	return source;
 40213d4:	e0bfff17 	ldw	r2,-4(fp)
}
 40213d8:	e037883a 	mov	sp,fp
 40213dc:	dfc00117 	ldw	ra,4(sp)
 40213e0:	df000017 	ldw	fp,0(sp)
 40213e4:	dec00204 	addi	sp,sp,8
 40213e8:	f800283a 	ret

040213ec <_ZN2NN17getMaxOutputIndexEv>:

int NN::getMaxOutputIndex() {
 40213ec:	defffa04 	addi	sp,sp,-24
 40213f0:	dfc00515 	stw	ra,20(sp)
 40213f4:	df000415 	stw	fp,16(sp)
 40213f8:	df000404 	addi	fp,sp,16
 40213fc:	e13fff15 	stw	r4,-4(fp)
	float maxval = layer[n_layer-1].value[0];
 4021400:	e0bfff17 	ldw	r2,-4(fp)
 4021404:	10c00217 	ldw	r3,8(r2)
 4021408:	e0bfff17 	ldw	r2,-4(fp)
 402140c:	10800117 	ldw	r2,4(r2)
 4021410:	1009883a 	mov	r4,r2
 4021414:	00820034 	movhi	r2,2048
 4021418:	10bfffc4 	addi	r2,r2,-1
 402141c:	2085883a 	add	r2,r4,r2
 4021420:	1004917a 	slli	r2,r2,5
 4021424:	1885883a 	add	r2,r3,r2
 4021428:	10800717 	ldw	r2,28(r2)
 402142c:	10800017 	ldw	r2,0(r2)
 4021430:	e0bffc15 	stw	r2,-16(fp)
	int maxindex = 0;
 4021434:	e03ffd15 	stw	zero,-12(fp)
	for(int i=1; i<layer[n_layer-1].n_neuron; i++) {
 4021438:	00800044 	movi	r2,1
 402143c:	e0bffe15 	stw	r2,-8(fp)
 4021440:	e0bfff17 	ldw	r2,-4(fp)
 4021444:	10c00217 	ldw	r3,8(r2)
 4021448:	e0bfff17 	ldw	r2,-4(fp)
 402144c:	10800117 	ldw	r2,4(r2)
 4021450:	1009883a 	mov	r4,r2
 4021454:	00820034 	movhi	r2,2048
 4021458:	10bfffc4 	addi	r2,r2,-1
 402145c:	2085883a 	add	r2,r4,r2
 4021460:	1004917a 	slli	r2,r2,5
 4021464:	1885883a 	add	r2,r3,r2
 4021468:	10800217 	ldw	r2,8(r2)
 402146c:	e0fffe17 	ldw	r3,-8(fp)
 4021470:	18802b0e 	bge	r3,r2,4021520 <_ZN2NN17getMaxOutputIndexEv+0x134>
		if( layer[n_layer-1].value[i] > maxval) {
 4021474:	e0bfff17 	ldw	r2,-4(fp)
 4021478:	10c00217 	ldw	r3,8(r2)
 402147c:	e0bfff17 	ldw	r2,-4(fp)
 4021480:	10800117 	ldw	r2,4(r2)
 4021484:	1009883a 	mov	r4,r2
 4021488:	00820034 	movhi	r2,2048
 402148c:	10bfffc4 	addi	r2,r2,-1
 4021490:	2085883a 	add	r2,r4,r2
 4021494:	1004917a 	slli	r2,r2,5
 4021498:	1885883a 	add	r2,r3,r2
 402149c:	10c00717 	ldw	r3,28(r2)
 40214a0:	e0bffe17 	ldw	r2,-8(fp)
 40214a4:	1085883a 	add	r2,r2,r2
 40214a8:	1085883a 	add	r2,r2,r2
 40214ac:	1885883a 	add	r2,r3,r2
 40214b0:	10c00017 	ldw	r3,0(r2)
 40214b4:	e17ffc17 	ldw	r5,-16(fp)
 40214b8:	1809883a 	mov	r4,r3
 40214bc:	40251280 	call	4025128 <__gesf2>
 40214c0:	0080130e 	bge	zero,r2,4021510 <_ZN2NN17getMaxOutputIndexEv+0x124>
			maxval = layer[n_layer-1].value[i];
 40214c4:	e0bfff17 	ldw	r2,-4(fp)
 40214c8:	10c00217 	ldw	r3,8(r2)
 40214cc:	e0bfff17 	ldw	r2,-4(fp)
 40214d0:	10800117 	ldw	r2,4(r2)
 40214d4:	1009883a 	mov	r4,r2
 40214d8:	00820034 	movhi	r2,2048
 40214dc:	10bfffc4 	addi	r2,r2,-1
 40214e0:	2085883a 	add	r2,r4,r2
 40214e4:	1004917a 	slli	r2,r2,5
 40214e8:	1885883a 	add	r2,r3,r2
 40214ec:	10c00717 	ldw	r3,28(r2)
 40214f0:	e0bffe17 	ldw	r2,-8(fp)
 40214f4:	1085883a 	add	r2,r2,r2
 40214f8:	1085883a 	add	r2,r2,r2
 40214fc:	1885883a 	add	r2,r3,r2
 4021500:	10800017 	ldw	r2,0(r2)
 4021504:	e0bffc15 	stw	r2,-16(fp)
			maxindex = i;
 4021508:	e0bffe17 	ldw	r2,-8(fp)
 402150c:	e0bffd15 	stw	r2,-12(fp)
}

int NN::getMaxOutputIndex() {
	float maxval = layer[n_layer-1].value[0];
	int maxindex = 0;
	for(int i=1; i<layer[n_layer-1].n_neuron; i++) {
 4021510:	e0bffe17 	ldw	r2,-8(fp)
 4021514:	10800044 	addi	r2,r2,1
 4021518:	e0bffe15 	stw	r2,-8(fp)
 402151c:	003fc806 	br	4021440 <__flash_rwdata_start+0xfffeb1d4>
		if( layer[n_layer-1].value[i] > maxval) {
			maxval = layer[n_layer-1].value[i];
			maxindex = i;
		}
	}
	return maxindex;
 4021520:	e0bffd17 	ldw	r2,-12(fp)
}
 4021524:	e037883a 	mov	sp,fp
 4021528:	dfc00117 	ldw	ra,4(sp)
 402152c:	df000017 	ldw	fp,0(sp)
 4021530:	dec00204 	addi	sp,sp,8
 4021534:	f800283a 	ret

04021538 <_ZN2NN17getMaxOutputValueEv>:

int NN::getMaxOutputValue() {
 4021538:	defffb04 	addi	sp,sp,-20
 402153c:	dfc00415 	stw	ra,16(sp)
 4021540:	df000315 	stw	fp,12(sp)
 4021544:	df000304 	addi	fp,sp,12
 4021548:	e13fff15 	stw	r4,-4(fp)
	float maxval = layer[n_layer-1].value[0];
 402154c:	e0bfff17 	ldw	r2,-4(fp)
 4021550:	10c00217 	ldw	r3,8(r2)
 4021554:	e0bfff17 	ldw	r2,-4(fp)
 4021558:	10800117 	ldw	r2,4(r2)
 402155c:	1009883a 	mov	r4,r2
 4021560:	00820034 	movhi	r2,2048
 4021564:	10bfffc4 	addi	r2,r2,-1
 4021568:	2085883a 	add	r2,r4,r2
 402156c:	1004917a 	slli	r2,r2,5
 4021570:	1885883a 	add	r2,r3,r2
 4021574:	10800717 	ldw	r2,28(r2)
 4021578:	10800017 	ldw	r2,0(r2)
 402157c:	e0bffd15 	stw	r2,-12(fp)
	for(int i=1; i<layer[n_layer-1].n_neuron; i++) {
 4021580:	00800044 	movi	r2,1
 4021584:	e0bffe15 	stw	r2,-8(fp)
 4021588:	e0bfff17 	ldw	r2,-4(fp)
 402158c:	10c00217 	ldw	r3,8(r2)
 4021590:	e0bfff17 	ldw	r2,-4(fp)
 4021594:	10800117 	ldw	r2,4(r2)
 4021598:	1009883a 	mov	r4,r2
 402159c:	00820034 	movhi	r2,2048
 40215a0:	10bfffc4 	addi	r2,r2,-1
 40215a4:	2085883a 	add	r2,r4,r2
 40215a8:	1004917a 	slli	r2,r2,5
 40215ac:	1885883a 	add	r2,r3,r2
 40215b0:	10800217 	ldw	r2,8(r2)
 40215b4:	e0fffe17 	ldw	r3,-8(fp)
 40215b8:	1880290e 	bge	r3,r2,4021660 <_ZN2NN17getMaxOutputValueEv+0x128>
		if( layer[n_layer-1].value[i] > maxval) {
 40215bc:	e0bfff17 	ldw	r2,-4(fp)
 40215c0:	10c00217 	ldw	r3,8(r2)
 40215c4:	e0bfff17 	ldw	r2,-4(fp)
 40215c8:	10800117 	ldw	r2,4(r2)
 40215cc:	1009883a 	mov	r4,r2
 40215d0:	00820034 	movhi	r2,2048
 40215d4:	10bfffc4 	addi	r2,r2,-1
 40215d8:	2085883a 	add	r2,r4,r2
 40215dc:	1004917a 	slli	r2,r2,5
 40215e0:	1885883a 	add	r2,r3,r2
 40215e4:	10c00717 	ldw	r3,28(r2)
 40215e8:	e0bffe17 	ldw	r2,-8(fp)
 40215ec:	1085883a 	add	r2,r2,r2
 40215f0:	1085883a 	add	r2,r2,r2
 40215f4:	1885883a 	add	r2,r3,r2
 40215f8:	10c00017 	ldw	r3,0(r2)
 40215fc:	e17ffd17 	ldw	r5,-12(fp)
 4021600:	1809883a 	mov	r4,r3
 4021604:	40251280 	call	4025128 <__gesf2>
 4021608:	0080110e 	bge	zero,r2,4021650 <_ZN2NN17getMaxOutputValueEv+0x118>
			maxval = layer[n_layer-1].value[i];
 402160c:	e0bfff17 	ldw	r2,-4(fp)
 4021610:	10c00217 	ldw	r3,8(r2)
 4021614:	e0bfff17 	ldw	r2,-4(fp)
 4021618:	10800117 	ldw	r2,4(r2)
 402161c:	1009883a 	mov	r4,r2
 4021620:	00820034 	movhi	r2,2048
 4021624:	10bfffc4 	addi	r2,r2,-1
 4021628:	2085883a 	add	r2,r4,r2
 402162c:	1004917a 	slli	r2,r2,5
 4021630:	1885883a 	add	r2,r3,r2
 4021634:	10c00717 	ldw	r3,28(r2)
 4021638:	e0bffe17 	ldw	r2,-8(fp)
 402163c:	1085883a 	add	r2,r2,r2
 4021640:	1085883a 	add	r2,r2,r2
 4021644:	1885883a 	add	r2,r3,r2
 4021648:	10800017 	ldw	r2,0(r2)
 402164c:	e0bffd15 	stw	r2,-12(fp)
	return maxindex;
}

int NN::getMaxOutputValue() {
	float maxval = layer[n_layer-1].value[0];
	for(int i=1; i<layer[n_layer-1].n_neuron; i++) {
 4021650:	e0bffe17 	ldw	r2,-8(fp)
 4021654:	10800044 	addi	r2,r2,1
 4021658:	e0bffe15 	stw	r2,-8(fp)
 402165c:	003fca06 	br	4021588 <__flash_rwdata_start+0xfffeb31c>
		if( layer[n_layer-1].value[i] > maxval) {
			maxval = layer[n_layer-1].value[i];
		}
	}
	return maxval;
 4021660:	e13ffd17 	ldw	r4,-12(fp)
 4021664:	4025ac40 	call	4025ac4 <__fixsfsi>
}
 4021668:	e037883a 	mov	sp,fp
 402166c:	dfc00117 	ldw	ra,4(sp)
 4021670:	df000017 	ldw	fp,0(sp)
 4021674:	dec00204 	addi	sp,sp,8
 4021678:	f800283a 	ret

0402167c <_ZN2NN5printEv>:

void NN::print() {
 402167c:	defffc04 	addi	sp,sp,-16
 4021680:	dfc00315 	stw	ra,12(sp)
 4021684:	df000215 	stw	fp,8(sp)
 4021688:	df000204 	addi	fp,sp,8
 402168c:	e13fff15 	stw	r4,-4(fp)
	for (int i=0; i<n_layer; i++) {
 4021690:	e03ffe15 	stw	zero,-8(fp)
 4021694:	e0bfff17 	ldw	r2,-4(fp)
 4021698:	10800117 	ldw	r2,4(r2)
 402169c:	e0fffe17 	ldw	r3,-8(fp)
 40216a0:	18800f0e 	bge	r3,r2,40216e0 <_ZN2NN5printEv+0x64>
		printf("Layer : %i\r\n",i);
 40216a4:	e17ffe17 	ldw	r5,-8(fp)
 40216a8:	01000034 	movhi	r4,0
 40216ac:	21000704 	addi	r4,r4,28
 40216b0:	40278ec0 	call	40278ec <printf>

		layer[i].print();
 40216b4:	e0bfff17 	ldw	r2,-4(fp)
 40216b8:	10c00217 	ldw	r3,8(r2)
 40216bc:	e0bffe17 	ldw	r2,-8(fp)
 40216c0:	1004917a 	slli	r2,r2,5
 40216c4:	1885883a 	add	r2,r3,r2
 40216c8:	1009883a 	mov	r4,r2
 40216cc:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>
	}
	return maxval;
}

void NN::print() {
	for (int i=0; i<n_layer; i++) {
 40216d0:	e0bffe17 	ldw	r2,-8(fp)
 40216d4:	10800044 	addi	r2,r2,1
 40216d8:	e0bffe15 	stw	r2,-8(fp)
 40216dc:	003fed06 	br	4021694 <__flash_rwdata_start+0xfffeb428>
		printf("Layer : %i\r\n",i);

		layer[i].print();
	}
}
 40216e0:	0001883a 	nop
 40216e4:	e037883a 	mov	sp,fp
 40216e8:	dfc00117 	ldw	ra,4(sp)
 40216ec:	df000017 	ldw	fp,0(sp)
 40216f0:	dec00204 	addi	sp,sp,8
 40216f4:	f800283a 	ret

040216f8 <_ZN2NN12printOutputsEv>:

void NN::printOutputs() {
 40216f8:	defffc04 	addi	sp,sp,-16
 40216fc:	dfc00315 	stw	ra,12(sp)
 4021700:	df000215 	stw	fp,8(sp)
 4021704:	df000204 	addi	fp,sp,8
 4021708:	e13fff15 	stw	r4,-4(fp)

	for(int i=0; i<layer[n_layer-1].n_neuron; i++) {
 402170c:	e03ffe15 	stw	zero,-8(fp)
 4021710:	e0bfff17 	ldw	r2,-4(fp)
 4021714:	10c00217 	ldw	r3,8(r2)
 4021718:	e0bfff17 	ldw	r2,-4(fp)
 402171c:	10800117 	ldw	r2,4(r2)
 4021720:	1009883a 	mov	r4,r2
 4021724:	00820034 	movhi	r2,2048
 4021728:	10bfffc4 	addi	r2,r2,-1
 402172c:	2085883a 	add	r2,r4,r2
 4021730:	1004917a 	slli	r2,r2,5
 4021734:	1885883a 	add	r2,r3,r2
 4021738:	10800217 	ldw	r2,8(r2)
 402173c:	e0fffe17 	ldw	r3,-8(fp)
 4021740:	18801e0e 	bge	r3,r2,40217bc <_ZN2NN12printOutputsEv+0xc4>
		printf("Neuron[%i]: %2.2f \r\n",i, layer[n_layer-1].value[i]);
 4021744:	e0bfff17 	ldw	r2,-4(fp)
 4021748:	10c00217 	ldw	r3,8(r2)
 402174c:	e0bfff17 	ldw	r2,-4(fp)
 4021750:	10800117 	ldw	r2,4(r2)
 4021754:	1009883a 	mov	r4,r2
 4021758:	00820034 	movhi	r2,2048
 402175c:	10bfffc4 	addi	r2,r2,-1
 4021760:	2085883a 	add	r2,r4,r2
 4021764:	1004917a 	slli	r2,r2,5
 4021768:	1885883a 	add	r2,r3,r2
 402176c:	10c00717 	ldw	r3,28(r2)
 4021770:	e0bffe17 	ldw	r2,-8(fp)
 4021774:	1085883a 	add	r2,r2,r2
 4021778:	1085883a 	add	r2,r2,r2
 402177c:	1885883a 	add	r2,r3,r2
 4021780:	10c00017 	ldw	r3,0(r2)
 4021784:	1809883a 	mov	r4,r3
 4021788:	402670c0 	call	402670c <__extendsfdf2>
 402178c:	1009883a 	mov	r4,r2
 4021790:	180b883a 	mov	r5,r3
 4021794:	200d883a 	mov	r6,r4
 4021798:	280f883a 	mov	r7,r5
 402179c:	e17ffe17 	ldw	r5,-8(fp)
 40217a0:	01000034 	movhi	r4,0
 40217a4:	21000b04 	addi	r4,r4,44
 40217a8:	40278ec0 	call	40278ec <printf>
	}
}

void NN::printOutputs() {

	for(int i=0; i<layer[n_layer-1].n_neuron; i++) {
 40217ac:	e0bffe17 	ldw	r2,-8(fp)
 40217b0:	10800044 	addi	r2,r2,1
 40217b4:	e0bffe15 	stw	r2,-8(fp)
 40217b8:	003fd506 	br	4021710 <__flash_rwdata_start+0xfffeb4a4>
		printf("Neuron[%i]: %2.2f \r\n",i, layer[n_layer-1].value[i]);
	}
	printf("\r\n");
 40217bc:	01000034 	movhi	r4,0
 40217c0:	21001104 	addi	r4,r4,68
 40217c4:	4027a080 	call	4027a08 <puts>
}
 40217c8:	0001883a 	nop
 40217cc:	e037883a 	mov	sp,fp
 40217d0:	dfc00117 	ldw	ra,4(sp)
 40217d4:	df000017 	ldw	fp,0(sp)
 40217d8:	dec00204 	addi	sp,sp,8
 40217dc:	f800283a 	ret

040217e0 <_ZN7NNLayerC1Ev>:

#define MAKE_TERNARY_THRESHOLD 0.3

int my_debug = 0;

NNLayer::NNLayer() {
 40217e0:	defffe04 	addi	sp,sp,-8
 40217e4:	df000115 	stw	fp,4(sp)
 40217e8:	df000104 	addi	fp,sp,4
 40217ec:	e13fff15 	stw	r4,-4(fp)
 40217f0:	00800034 	movhi	r2,0
 40217f4:	10803304 	addi	r2,r2,204
 40217f8:	e0ffff17 	ldw	r3,-4(fp)
 40217fc:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated constructor stub
	n_input = 0;
 4021800:	e0bfff17 	ldw	r2,-4(fp)
 4021804:	10000115 	stw	zero,4(r2)
	n_neuron = 0;
 4021808:	e0bfff17 	ldw	r2,-4(fp)
 402180c:	10000215 	stw	zero,8(r2)
	n_input_per_neuron = 0;
 4021810:	e0bfff17 	ldw	r2,-4(fp)
 4021814:	10000315 	stw	zero,12(r2)
	LUT_size = 0;
 4021818:	e0bfff17 	ldw	r2,-4(fp)
 402181c:	10000415 	stw	zero,16(r2)

	LUT_array = 0;
 4021820:	e0bfff17 	ldw	r2,-4(fp)
 4021824:	10000515 	stw	zero,20(r2)
	pos_array = 0;
 4021828:	e0bfff17 	ldw	r2,-4(fp)
 402182c:	10000615 	stw	zero,24(r2)
	value = 0;
 4021830:	e0bfff17 	ldw	r2,-4(fp)
 4021834:	10000715 	stw	zero,28(r2)
}
 4021838:	0001883a 	nop
 402183c:	e037883a 	mov	sp,fp
 4021840:	df000017 	ldw	fp,0(sp)
 4021844:	dec00104 	addi	sp,sp,4
 4021848:	f800283a 	ret

0402184c <_ZN7NNLayerC1Eiii>:

NNLayer::NNLayer(int new_n_input, int new_n_neuron, int nipn) {
 402184c:	defffa04 	addi	sp,sp,-24
 4021850:	dfc00515 	stw	ra,20(sp)
 4021854:	df000415 	stw	fp,16(sp)
 4021858:	df000404 	addi	fp,sp,16
 402185c:	e13ffc15 	stw	r4,-16(fp)
 4021860:	e17ffd15 	stw	r5,-12(fp)
 4021864:	e1bffe15 	stw	r6,-8(fp)
 4021868:	e1ffff15 	stw	r7,-4(fp)
 402186c:	00800034 	movhi	r2,0
 4021870:	10803304 	addi	r2,r2,204
 4021874:	e0fffc17 	ldw	r3,-16(fp)
 4021878:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated constructor stub
	init(new_n_input, new_n_neuron, nipn);
 402187c:	e1ffff17 	ldw	r7,-4(fp)
 4021880:	e1bffe17 	ldw	r6,-8(fp)
 4021884:	e17ffd17 	ldw	r5,-12(fp)
 4021888:	e13ffc17 	ldw	r4,-16(fp)
 402188c:	40218a80 	call	40218a8 <_ZN7NNLayer4initEiii>
}
 4021890:	0001883a 	nop
 4021894:	e037883a 	mov	sp,fp
 4021898:	dfc00117 	ldw	ra,4(sp)
 402189c:	df000017 	ldw	fp,0(sp)
 40218a0:	dec00204 	addi	sp,sp,8
 40218a4:	f800283a 	ret

040218a8 <_ZN7NNLayer4initEiii>:

void NNLayer::init(int new_n_input, int new_n_neuron, int nipn) {
 40218a8:	defffa04 	addi	sp,sp,-24
 40218ac:	dfc00515 	stw	ra,20(sp)
 40218b0:	df000415 	stw	fp,16(sp)
 40218b4:	df000404 	addi	fp,sp,16
 40218b8:	e13ffc15 	stw	r4,-16(fp)
 40218bc:	e17ffd15 	stw	r5,-12(fp)
 40218c0:	e1bffe15 	stw	r6,-8(fp)
 40218c4:	e1ffff15 	stw	r7,-4(fp)
	// TODO Auto-generated constructor stub
	n_input = new_n_input;
 40218c8:	e0bffc17 	ldw	r2,-16(fp)
 40218cc:	e0fffd17 	ldw	r3,-12(fp)
 40218d0:	10c00115 	stw	r3,4(r2)
	n_neuron = new_n_neuron;
 40218d4:	e0bffc17 	ldw	r2,-16(fp)
 40218d8:	e0fffe17 	ldw	r3,-8(fp)
 40218dc:	10c00215 	stw	r3,8(r2)
	n_input_per_neuron = nipn;
 40218e0:	e0bffc17 	ldw	r2,-16(fp)
 40218e4:	e0ffff17 	ldw	r3,-4(fp)
 40218e8:	10c00315 	stw	r3,12(r2)
	LUT_size = ((1<<n_input_per_neuron) + 7)/8;
 40218ec:	e0bffc17 	ldw	r2,-16(fp)
 40218f0:	10800317 	ldw	r2,12(r2)
 40218f4:	00c00044 	movi	r3,1
 40218f8:	1884983a 	sll	r2,r3,r2
 40218fc:	108001c4 	addi	r2,r2,7
 4021900:	1000010e 	bge	r2,zero,4021908 <_ZN7NNLayer4initEiii+0x60>
 4021904:	108001c4 	addi	r2,r2,7
 4021908:	1005d0fa 	srai	r2,r2,3
 402190c:	1007883a 	mov	r3,r2
 4021910:	e0bffc17 	ldw	r2,-16(fp)
 4021914:	10c00415 	stw	r3,16(r2)
	LUT_array = new unsigned char[n_neuron*LUT_size];
 4021918:	e0bffc17 	ldw	r2,-16(fp)
 402191c:	10c00217 	ldw	r3,8(r2)
 4021920:	e0bffc17 	ldw	r2,-16(fp)
 4021924:	10800417 	ldw	r2,16(r2)
 4021928:	1885383a 	mul	r2,r3,r2
 402192c:	1009883a 	mov	r4,r2
 4021930:	402266c0 	call	402266c <_Znaj>
 4021934:	1007883a 	mov	r3,r2
 4021938:	e0bffc17 	ldw	r2,-16(fp)
 402193c:	10c00515 	stw	r3,20(r2)
	pos_array = new int[n_neuron*n_input_per_neuron];
 4021940:	e0bffc17 	ldw	r2,-16(fp)
 4021944:	10c00217 	ldw	r3,8(r2)
 4021948:	e0bffc17 	ldw	r2,-16(fp)
 402194c:	10800317 	ldw	r2,12(r2)
 4021950:	1885383a 	mul	r2,r3,r2
 4021954:	00c7f034 	movhi	r3,8128
 4021958:	18800336 	bltu	r3,r2,4021968 <_ZN7NNLayer4initEiii+0xc0>
 402195c:	1085883a 	add	r2,r2,r2
 4021960:	1085883a 	add	r2,r2,r2
 4021964:	00000106 	br	402196c <_ZN7NNLayer4initEiii+0xc4>
 4021968:	00bfffc4 	movi	r2,-1
 402196c:	1009883a 	mov	r4,r2
 4021970:	402266c0 	call	402266c <_Znaj>
 4021974:	1007883a 	mov	r3,r2
 4021978:	e0bffc17 	ldw	r2,-16(fp)
 402197c:	10c00615 	stw	r3,24(r2)
	value = new float[n_neuron];
 4021980:	e0bffc17 	ldw	r2,-16(fp)
 4021984:	10800217 	ldw	r2,8(r2)
 4021988:	00c7f034 	movhi	r3,8128
 402198c:	18800336 	bltu	r3,r2,402199c <_ZN7NNLayer4initEiii+0xf4>
 4021990:	1085883a 	add	r2,r2,r2
 4021994:	1085883a 	add	r2,r2,r2
 4021998:	00000106 	br	40219a0 <_ZN7NNLayer4initEiii+0xf8>
 402199c:	00bfffc4 	movi	r2,-1
 40219a0:	1009883a 	mov	r4,r2
 40219a4:	402266c0 	call	402266c <_Znaj>
 40219a8:	1007883a 	mov	r3,r2
 40219ac:	e0bffc17 	ldw	r2,-16(fp)
 40219b0:	10c00715 	stw	r3,28(r2)
}
 40219b4:	0001883a 	nop
 40219b8:	e037883a 	mov	sp,fp
 40219bc:	dfc00117 	ldw	ra,4(sp)
 40219c0:	df000017 	ldw	fp,0(sp)
 40219c4:	dec00204 	addi	sp,sp,8
 40219c8:	f800283a 	ret

040219cc <_Z10simpleRandv>:

unsigned int simpleRand() {
 40219cc:	defffd04 	addi	sp,sp,-12
 40219d0:	dfc00215 	stw	ra,8(sp)
 40219d4:	df000115 	stw	fp,4(sp)
 40219d8:	df000104 	addi	fp,sp,4
	unsigned int result = rand();
 40219dc:	4027a340 	call	4027a34 <rand>
 40219e0:	e0bfff15 	stw	r2,-4(fp)
	result <<= 16;
 40219e4:	e0bfff17 	ldw	r2,-4(fp)
 40219e8:	1004943a 	slli	r2,r2,16
 40219ec:	e0bfff15 	stw	r2,-4(fp)
	result ^=rand();
 40219f0:	4027a340 	call	4027a34 <rand>
 40219f4:	1007883a 	mov	r3,r2
 40219f8:	e0bfff17 	ldw	r2,-4(fp)
 40219fc:	10c4f03a 	xor	r2,r2,r3
 4021a00:	e0bfff15 	stw	r2,-4(fp)

	return result;
 4021a04:	e0bfff17 	ldw	r2,-4(fp)
}
 4021a08:	e037883a 	mov	sp,fp
 4021a0c:	dfc00117 	ldw	ra,4(sp)
 4021a10:	df000017 	ldw	fp,0(sp)
 4021a14:	dec00204 	addi	sp,sp,8
 4021a18:	f800283a 	ret

04021a1c <_ZN7NNLayer15rand_FloatRangeEff>:

float NNLayer::rand_FloatRange(float a, float b) {
 4021a1c:	defff904 	addi	sp,sp,-28
 4021a20:	dfc00615 	stw	ra,24(sp)
 4021a24:	df000515 	stw	fp,20(sp)
 4021a28:	dc000415 	stw	r16,16(sp)
 4021a2c:	df000504 	addi	fp,sp,20
 4021a30:	e13ffc15 	stw	r4,-16(fp)
 4021a34:	e17ffd15 	stw	r5,-12(fp)
 4021a38:	e1bffe15 	stw	r6,-8(fp)
	float result = ((b-a)*((float)simpleRand()/0xFFFFFFFF))+a;
 4021a3c:	e17ffd17 	ldw	r5,-12(fp)
 4021a40:	e13ffe17 	ldw	r4,-8(fp)
 4021a44:	40255e00 	call	40255e0 <__subsf3>
 4021a48:	1007883a 	mov	r3,r2
 4021a4c:	1821883a 	mov	r16,r3
 4021a50:	40219cc0 	call	40219cc <_Z10simpleRandv>
 4021a54:	1009883a 	mov	r4,r2
 4021a58:	4025c580 	call	4025c58 <__floatunsisf>
 4021a5c:	1007883a 	mov	r3,r2
 4021a60:	0153e034 	movhi	r5,20352
 4021a64:	1809883a 	mov	r4,r3
 4021a68:	4024c700 	call	4024c70 <__divsf3>
 4021a6c:	1007883a 	mov	r3,r2
 4021a70:	1805883a 	mov	r2,r3
 4021a74:	100b883a 	mov	r5,r2
 4021a78:	8009883a 	mov	r4,r16
 4021a7c:	40251e40 	call	40251e4 <__mulsf3>
 4021a80:	1007883a 	mov	r3,r2
 4021a84:	1805883a 	mov	r2,r3
 4021a88:	e17ffd17 	ldw	r5,-12(fp)
 4021a8c:	1009883a 	mov	r4,r2
 4021a90:	40247a80 	call	40247a8 <__addsf3>
 4021a94:	1007883a 	mov	r3,r2
 4021a98:	e0fffb15 	stw	r3,-20(fp)
	return result;
 4021a9c:	e0bffb17 	ldw	r2,-20(fp)
 4021aa0:	1007883a 	mov	r3,r2
}
 4021aa4:	1805883a 	mov	r2,r3
 4021aa8:	e6ffff04 	addi	sp,fp,-4
 4021aac:	dfc00217 	ldw	ra,8(sp)
 4021ab0:	df000117 	ldw	fp,4(sp)
 4021ab4:	dc000017 	ldw	r16,0(sp)
 4021ab8:	dec00304 	addi	sp,sp,12
 4021abc:	f800283a 	ret

04021ac0 <_ZN7NNLayer6MYrandEi>:

int NNLayer::MYrand(int maxval) {
 4021ac0:	defffb04 	addi	sp,sp,-20
 4021ac4:	dfc00415 	stw	ra,16(sp)
 4021ac8:	df000315 	stw	fp,12(sp)
 4021acc:	df000304 	addi	fp,sp,12
 4021ad0:	e13ffe15 	stw	r4,-8(fp)
 4021ad4:	e17fff15 	stw	r5,-4(fp)
	int result = simpleRand()%maxval;
 4021ad8:	40219cc0 	call	40219cc <_Z10simpleRandv>
 4021adc:	1007883a 	mov	r3,r2
 4021ae0:	e0bfff17 	ldw	r2,-4(fp)
 4021ae4:	100b883a 	mov	r5,r2
 4021ae8:	1809883a 	mov	r4,r3
 4021aec:	40247500 	call	4024750 <__umodsi3>
 4021af0:	e0bffd15 	stw	r2,-12(fp)
	return result;
 4021af4:	e0bffd17 	ldw	r2,-12(fp)
}
 4021af8:	e037883a 	mov	sp,fp
 4021afc:	dfc00117 	ldw	ra,4(sp)
 4021b00:	df000017 	ldw	fp,0(sp)
 4021b04:	dec00204 	addi	sp,sp,8
 4021b08:	f800283a 	ret

04021b0c <_ZN7NNLayer11random_initEiii>:

void NNLayer::random_init(int new_n_input, int new_n_neuron, int nipn) {
 4021b0c:	defff604 	addi	sp,sp,-40
 4021b10:	dfc00915 	stw	ra,36(sp)
 4021b14:	df000815 	stw	fp,32(sp)
 4021b18:	dc000715 	stw	r16,28(sp)
 4021b1c:	df000804 	addi	fp,sp,32
 4021b20:	e13ffb15 	stw	r4,-20(fp)
 4021b24:	e17ffc15 	stw	r5,-16(fp)
 4021b28:	e1bffd15 	stw	r6,-12(fp)
 4021b2c:	e1fffe15 	stw	r7,-8(fp)
	// TODO Auto-generated constructor stub
	init(new_n_input, new_n_neuron, nipn);
 4021b30:	e1fffe17 	ldw	r7,-8(fp)
 4021b34:	e1bffd17 	ldw	r6,-12(fp)
 4021b38:	e17ffc17 	ldw	r5,-16(fp)
 4021b3c:	e13ffb17 	ldw	r4,-20(fp)
 4021b40:	40218a80 	call	40218a8 <_ZN7NNLayer4initEiii>

	for (int i=0; i<n_neuron * n_input_per_neuron; i++) {
 4021b44:	e03ff815 	stw	zero,-32(fp)
 4021b48:	e0bffb17 	ldw	r2,-20(fp)
 4021b4c:	10c00217 	ldw	r3,8(r2)
 4021b50:	e0bffb17 	ldw	r2,-20(fp)
 4021b54:	10800317 	ldw	r2,12(r2)
 4021b58:	1885383a 	mul	r2,r3,r2
 4021b5c:	e0fff817 	ldw	r3,-32(fp)
 4021b60:	1880100e 	bge	r3,r2,4021ba4 <_ZN7NNLayer11random_initEiii+0x98>
		pos_array[i] = MYrand(n_input);
 4021b64:	e0bffb17 	ldw	r2,-20(fp)
 4021b68:	10c00617 	ldw	r3,24(r2)
 4021b6c:	e0bff817 	ldw	r2,-32(fp)
 4021b70:	1085883a 	add	r2,r2,r2
 4021b74:	1085883a 	add	r2,r2,r2
 4021b78:	18a1883a 	add	r16,r3,r2
 4021b7c:	e0bffb17 	ldw	r2,-20(fp)
 4021b80:	10800117 	ldw	r2,4(r2)
 4021b84:	100b883a 	mov	r5,r2
 4021b88:	e13ffb17 	ldw	r4,-20(fp)
 4021b8c:	4021ac00 	call	4021ac0 <_ZN7NNLayer6MYrandEi>
 4021b90:	80800015 	stw	r2,0(r16)

void NNLayer::random_init(int new_n_input, int new_n_neuron, int nipn) {
	// TODO Auto-generated constructor stub
	init(new_n_input, new_n_neuron, nipn);

	for (int i=0; i<n_neuron * n_input_per_neuron; i++) {
 4021b94:	e0bff817 	ldw	r2,-32(fp)
 4021b98:	10800044 	addi	r2,r2,1
 4021b9c:	e0bff815 	stw	r2,-32(fp)
 4021ba0:	003fe906 	br	4021b48 <__flash_rwdata_start+0xfffeb8dc>
		pos_array[i] = MYrand(n_input);
	}

	for (int i=0; i<n_neuron * LUT_size; i++) {
 4021ba4:	e03ff915 	stw	zero,-28(fp)
 4021ba8:	e0bffb17 	ldw	r2,-20(fp)
 4021bac:	10c00217 	ldw	r3,8(r2)
 4021bb0:	e0bffb17 	ldw	r2,-20(fp)
 4021bb4:	10800417 	ldw	r2,16(r2)
 4021bb8:	1885383a 	mul	r2,r3,r2
 4021bbc:	e0fff917 	ldw	r3,-28(fp)
 4021bc0:	18800c0e 	bge	r3,r2,4021bf4 <_ZN7NNLayer11random_initEiii+0xe8>
		LUT_array[i] = MYrand(0x100);
 4021bc4:	e0bffb17 	ldw	r2,-20(fp)
 4021bc8:	10c00517 	ldw	r3,20(r2)
 4021bcc:	e0bff917 	ldw	r2,-28(fp)
 4021bd0:	18a1883a 	add	r16,r3,r2
 4021bd4:	01404004 	movi	r5,256
 4021bd8:	e13ffb17 	ldw	r4,-20(fp)
 4021bdc:	4021ac00 	call	4021ac0 <_ZN7NNLayer6MYrandEi>
 4021be0:	80800005 	stb	r2,0(r16)

	for (int i=0; i<n_neuron * n_input_per_neuron; i++) {
		pos_array[i] = MYrand(n_input);
	}

	for (int i=0; i<n_neuron * LUT_size; i++) {
 4021be4:	e0bff917 	ldw	r2,-28(fp)
 4021be8:	10800044 	addi	r2,r2,1
 4021bec:	e0bff915 	stw	r2,-28(fp)
 4021bf0:	003fed06 	br	4021ba8 <__flash_rwdata_start+0xfffeb93c>
		LUT_array[i] = MYrand(0x100);
	}

	for (int i=0; i<n_neuron; i++) {
 4021bf4:	e03ffa15 	stw	zero,-24(fp)
 4021bf8:	e0bffb17 	ldw	r2,-20(fp)
 4021bfc:	10800217 	ldw	r2,8(r2)
 4021c00:	e0fffa17 	ldw	r3,-24(fp)
 4021c04:	18800c0e 	bge	r3,r2,4021c38 <_ZN7NNLayer11random_initEiii+0x12c>
		value[i] = -1;
 4021c08:	e0bffb17 	ldw	r2,-20(fp)
 4021c0c:	10c00717 	ldw	r3,28(r2)
 4021c10:	e0bffa17 	ldw	r2,-24(fp)
 4021c14:	1085883a 	add	r2,r2,r2
 4021c18:	1085883a 	add	r2,r2,r2
 4021c1c:	1885883a 	add	r2,r3,r2
 4021c20:	00efe034 	movhi	r3,49024
 4021c24:	10c00015 	stw	r3,0(r2)

	for (int i=0; i<n_neuron * LUT_size; i++) {
		LUT_array[i] = MYrand(0x100);
	}

	for (int i=0; i<n_neuron; i++) {
 4021c28:	e0bffa17 	ldw	r2,-24(fp)
 4021c2c:	10800044 	addi	r2,r2,1
 4021c30:	e0bffa15 	stw	r2,-24(fp)
 4021c34:	003ff006 	br	4021bf8 <__flash_rwdata_start+0xfffeb98c>
		value[i] = -1;
	}

}
 4021c38:	0001883a 	nop
 4021c3c:	e6ffff04 	addi	sp,fp,-4
 4021c40:	dfc00217 	ldw	ra,8(sp)
 4021c44:	df000117 	ldw	fp,4(sp)
 4021c48:	dc000017 	ldw	r16,0(sp)
 4021c4c:	dec00304 	addi	sp,sp,12
 4021c50:	f800283a 	ret

04021c54 <_ZN7NNLayer9demo_initEiiii>:

void NNLayer::demo_init(int layer, int new_n_input, int new_n_neuron, int nipn) {
 4021c54:	defffa04 	addi	sp,sp,-24
 4021c58:	dfc00515 	stw	ra,20(sp)
 4021c5c:	df000415 	stw	fp,16(sp)
 4021c60:	df000404 	addi	fp,sp,16
 4021c64:	e13ffc15 	stw	r4,-16(fp)
 4021c68:	e17ffd15 	stw	r5,-12(fp)
 4021c6c:	e1bffe15 	stw	r6,-8(fp)
 4021c70:	e1ffff15 	stw	r7,-4(fp)
	// TODO Auto-generated constructor stub
	random_init(new_n_input, new_n_neuron, nipn);
 4021c74:	e1c00217 	ldw	r7,8(fp)
 4021c78:	e1bfff17 	ldw	r6,-4(fp)
 4021c7c:	e17ffe17 	ldw	r5,-8(fp)
 4021c80:	e13ffc17 	ldw	r4,-16(fp)
 4021c84:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>
}
 4021c88:	0001883a 	nop
 4021c8c:	e037883a 	mov	sp,fp
 4021c90:	dfc00117 	ldw	ra,4(sp)
 4021c94:	df000017 	ldw	fp,0(sp)
 4021c98:	dec00204 	addi	sp,sp,8
 4021c9c:	f800283a 	ret

04021ca0 <_ZN7NNLayerD1Ev>:

NNLayer::~NNLayer() {
 4021ca0:	defffd04 	addi	sp,sp,-12
 4021ca4:	dfc00215 	stw	ra,8(sp)
 4021ca8:	df000115 	stw	fp,4(sp)
 4021cac:	df000104 	addi	fp,sp,4
 4021cb0:	e13fff15 	stw	r4,-4(fp)
 4021cb4:	00800034 	movhi	r2,0
 4021cb8:	10803304 	addi	r2,r2,204
 4021cbc:	e0ffff17 	ldw	r3,-4(fp)
 4021cc0:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated destructor stub
}
 4021cc4:	0005883a 	mov	r2,zero
 4021cc8:	10000226 	beq	r2,zero,4021cd4 <_ZN7NNLayerD1Ev+0x34>
 4021ccc:	e13fff17 	ldw	r4,-4(fp)
 4021cd0:	40237cc0 	call	40237cc <_ZdlPv>
 4021cd4:	e037883a 	mov	sp,fp
 4021cd8:	dfc00117 	ldw	ra,4(sp)
 4021cdc:	df000017 	ldw	fp,0(sp)
 4021ce0:	dec00204 	addi	sp,sp,8
 4021ce4:	f800283a 	ret

04021ce8 <_ZN7NNLayerD0Ev>:
void NNLayer::demo_init(int layer, int new_n_input, int new_n_neuron, int nipn) {
	// TODO Auto-generated constructor stub
	random_init(new_n_input, new_n_neuron, nipn);
}

NNLayer::~NNLayer() {
 4021ce8:	defffd04 	addi	sp,sp,-12
 4021cec:	dfc00215 	stw	ra,8(sp)
 4021cf0:	df000115 	stw	fp,4(sp)
 4021cf4:	df000104 	addi	fp,sp,4
 4021cf8:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated destructor stub
}
 4021cfc:	e13fff17 	ldw	r4,-4(fp)
 4021d00:	4021ca00 	call	4021ca0 <_ZN7NNLayerD1Ev>
 4021d04:	e13fff17 	ldw	r4,-4(fp)
 4021d08:	40237cc0 	call	40237cc <_ZdlPv>
 4021d0c:	e037883a 	mov	sp,fp
 4021d10:	dfc00117 	ldw	ra,4(sp)
 4021d14:	df000017 	ldw	fp,0(sp)
 4021d18:	dec00204 	addi	sp,sp,8
 4021d1c:	f800283a 	ret

04021d20 <_ZN7NNLayer9propagateEPf>:

float * NNLayer::propagate(float * source) {
 4021d20:	defff504 	addi	sp,sp,-44
 4021d24:	dfc00a15 	stw	ra,40(sp)
 4021d28:	df000915 	stw	fp,36(sp)
 4021d2c:	dc000815 	stw	r16,32(sp)
 4021d30:	df000904 	addi	fp,sp,36
 4021d34:	e13ffd15 	stw	r4,-12(fp)
 4021d38:	e17ffe15 	stw	r5,-8(fp)
	// TODO Auto-generated constructor stub
	int i;

	if (my_debug) for (i=0; i<n_input; i++) {
 4021d3c:	d0a02017 	ldw	r2,-32640(gp)
 4021d40:	10001a26 	beq	r2,zero,4021dac <_ZN7NNLayer9propagateEPf+0x8c>
 4021d44:	e03ff815 	stw	zero,-32(fp)
 4021d48:	e0bffd17 	ldw	r2,-12(fp)
 4021d4c:	10800117 	ldw	r2,4(r2)
 4021d50:	e0fff817 	ldw	r3,-32(fp)
 4021d54:	1880150e 	bge	r3,r2,4021dac <_ZN7NNLayer9propagateEPf+0x8c>
		printf("Input %i = %f\r\n", i, source[i]);
 4021d58:	e0bff817 	ldw	r2,-32(fp)
 4021d5c:	1085883a 	add	r2,r2,r2
 4021d60:	1085883a 	add	r2,r2,r2
 4021d64:	1007883a 	mov	r3,r2
 4021d68:	e0bffe17 	ldw	r2,-8(fp)
 4021d6c:	10c5883a 	add	r2,r2,r3
 4021d70:	10c00017 	ldw	r3,0(r2)
 4021d74:	1809883a 	mov	r4,r3
 4021d78:	402670c0 	call	402670c <__extendsfdf2>
 4021d7c:	1009883a 	mov	r4,r2
 4021d80:	180b883a 	mov	r5,r3
 4021d84:	200d883a 	mov	r6,r4
 4021d88:	280f883a 	mov	r7,r5
 4021d8c:	e17ff817 	ldw	r5,-32(fp)
 4021d90:	01000034 	movhi	r4,0
 4021d94:	21001604 	addi	r4,r4,88
 4021d98:	40278ec0 	call	40278ec <printf>

float * NNLayer::propagate(float * source) {
	// TODO Auto-generated constructor stub
	int i;

	if (my_debug) for (i=0; i<n_input; i++) {
 4021d9c:	e0bff817 	ldw	r2,-32(fp)
 4021da0:	10800044 	addi	r2,r2,1
 4021da4:	e0bff815 	stw	r2,-32(fp)
 4021da8:	003fe706 	br	4021d48 <__flash_rwdata_start+0xfffebadc>
		printf("Input %i = %f\r\n", i, source[i]);
	}

	int * current_pos = pos_array;
 4021dac:	e0bffd17 	ldw	r2,-12(fp)
 4021db0:	10800617 	ldw	r2,24(r2)
 4021db4:	e0bff915 	stw	r2,-28(fp)
	for (int i=0; i<n_neuron; i++) {
 4021db8:	e03ffa15 	stw	zero,-24(fp)
 4021dbc:	e0bffd17 	ldw	r2,-12(fp)
 4021dc0:	10800217 	ldw	r2,8(r2)
 4021dc4:	e0fffa17 	ldw	r3,-24(fp)
 4021dc8:	1880540e 	bge	r3,r2,4021f1c <_ZN7NNLayer9propagateEPf+0x1fc>
		int LUT_Address = 0;
 4021dcc:	e03ffb15 	stw	zero,-20(fp)
		for (int j = 0; j<n_input_per_neuron; j++) {
 4021dd0:	e03ffc15 	stw	zero,-16(fp)
 4021dd4:	e0bffd17 	ldw	r2,-12(fp)
 4021dd8:	10800317 	ldw	r2,12(r2)
 4021ddc:	e0fffc17 	ldw	r3,-16(fp)
 4021de0:	18801c0e 	bge	r3,r2,4021e54 <_ZN7NNLayer9propagateEPf+0x134>
			if (source[*(current_pos++)] != 0) LUT_Address += (1 << j);
 4021de4:	e0bff917 	ldw	r2,-28(fp)
 4021de8:	10c00104 	addi	r3,r2,4
 4021dec:	e0fff915 	stw	r3,-28(fp)
 4021df0:	10800017 	ldw	r2,0(r2)
 4021df4:	1085883a 	add	r2,r2,r2
 4021df8:	1085883a 	add	r2,r2,r2
 4021dfc:	1007883a 	mov	r3,r2
 4021e00:	e0bffe17 	ldw	r2,-8(fp)
 4021e04:	10c5883a 	add	r2,r2,r3
 4021e08:	10c00017 	ldw	r3,0(r2)
 4021e0c:	04000044 	movi	r16,1
 4021e10:	000b883a 	mov	r5,zero
 4021e14:	1809883a 	mov	r4,r3
 4021e18:	40250b00 	call	40250b0 <__eqsf2>
 4021e1c:	1000011e 	bne	r2,zero,4021e24 <_ZN7NNLayer9propagateEPf+0x104>
 4021e20:	0021883a 	mov	r16,zero
 4021e24:	80803fcc 	andi	r2,r16,255
 4021e28:	10000626 	beq	r2,zero,4021e44 <_ZN7NNLayer9propagateEPf+0x124>
 4021e2c:	00c00044 	movi	r3,1
 4021e30:	e0bffc17 	ldw	r2,-16(fp)
 4021e34:	1884983a 	sll	r2,r3,r2
 4021e38:	e0fffb17 	ldw	r3,-20(fp)
 4021e3c:	1885883a 	add	r2,r3,r2
 4021e40:	e0bffb15 	stw	r2,-20(fp)
	}

	int * current_pos = pos_array;
	for (int i=0; i<n_neuron; i++) {
		int LUT_Address = 0;
		for (int j = 0; j<n_input_per_neuron; j++) {
 4021e44:	e0bffc17 	ldw	r2,-16(fp)
 4021e48:	10800044 	addi	r2,r2,1
 4021e4c:	e0bffc15 	stw	r2,-16(fp)
 4021e50:	003fe006 	br	4021dd4 <__flash_rwdata_start+0xfffebb68>
			if (source[*(current_pos++)] != 0) LUT_Address += (1 << j);
		}
		value[i] = 1 & (LUT_array[LUT_size * i + (LUT_Address >> 3)] >> (LUT_Address & 0x7));
 4021e54:	e0bffd17 	ldw	r2,-12(fp)
 4021e58:	10c00717 	ldw	r3,28(r2)
 4021e5c:	e0bffa17 	ldw	r2,-24(fp)
 4021e60:	1085883a 	add	r2,r2,r2
 4021e64:	1085883a 	add	r2,r2,r2
 4021e68:	18a1883a 	add	r16,r3,r2
 4021e6c:	e0bffd17 	ldw	r2,-12(fp)
 4021e70:	10800517 	ldw	r2,20(r2)
 4021e74:	e0fffd17 	ldw	r3,-12(fp)
 4021e78:	19000417 	ldw	r4,16(r3)
 4021e7c:	e0fffa17 	ldw	r3,-24(fp)
 4021e80:	20c9383a 	mul	r4,r4,r3
 4021e84:	e0fffb17 	ldw	r3,-20(fp)
 4021e88:	1807d0fa 	srai	r3,r3,3
 4021e8c:	20c7883a 	add	r3,r4,r3
 4021e90:	10c5883a 	add	r2,r2,r3
 4021e94:	10800003 	ldbu	r2,0(r2)
 4021e98:	10c03fcc 	andi	r3,r2,255
 4021e9c:	e0bffb17 	ldw	r2,-20(fp)
 4021ea0:	108001cc 	andi	r2,r2,7
 4021ea4:	1885d83a 	sra	r2,r3,r2
 4021ea8:	1080004c 	andi	r2,r2,1
 4021eac:	1009883a 	mov	r4,r2
 4021eb0:	4025b340 	call	4025b34 <__floatsisf>
 4021eb4:	1007883a 	mov	r3,r2
 4021eb8:	80c00015 	stw	r3,0(r16)
		if (my_debug) printf("LUT%i[%i] = %f\r\n", i, LUT_Address, value[i]);
 4021ebc:	d0a02017 	ldw	r2,-32640(gp)
 4021ec0:	10001226 	beq	r2,zero,4021f0c <_ZN7NNLayer9propagateEPf+0x1ec>
 4021ec4:	e0bffd17 	ldw	r2,-12(fp)
 4021ec8:	10c00717 	ldw	r3,28(r2)
 4021ecc:	e0bffa17 	ldw	r2,-24(fp)
 4021ed0:	1085883a 	add	r2,r2,r2
 4021ed4:	1085883a 	add	r2,r2,r2
 4021ed8:	1885883a 	add	r2,r3,r2
 4021edc:	10c00017 	ldw	r3,0(r2)
 4021ee0:	1809883a 	mov	r4,r3
 4021ee4:	402670c0 	call	402670c <__extendsfdf2>
 4021ee8:	1009883a 	mov	r4,r2
 4021eec:	180b883a 	mov	r5,r3
 4021ef0:	d9400015 	stw	r5,0(sp)
 4021ef4:	200f883a 	mov	r7,r4
 4021ef8:	e1bffb17 	ldw	r6,-20(fp)
 4021efc:	e17ffa17 	ldw	r5,-24(fp)
 4021f00:	01000034 	movhi	r4,0
 4021f04:	21001a04 	addi	r4,r4,104
 4021f08:	40278ec0 	call	40278ec <printf>
	if (my_debug) for (i=0; i<n_input; i++) {
		printf("Input %i = %f\r\n", i, source[i]);
	}

	int * current_pos = pos_array;
	for (int i=0; i<n_neuron; i++) {
 4021f0c:	e0bffa17 	ldw	r2,-24(fp)
 4021f10:	10800044 	addi	r2,r2,1
 4021f14:	e0bffa15 	stw	r2,-24(fp)
 4021f18:	003fa806 	br	4021dbc <__flash_rwdata_start+0xfffebb50>
		}
		value[i] = 1 & (LUT_array[LUT_size * i + (LUT_Address >> 3)] >> (LUT_Address & 0x7));
		if (my_debug) printf("LUT%i[%i] = %f\r\n", i, LUT_Address, value[i]);
	}

	if (my_debug) print();
 4021f1c:	d0a02017 	ldw	r2,-32640(gp)
 4021f20:	10000226 	beq	r2,zero,4021f2c <_ZN7NNLayer9propagateEPf+0x20c>
 4021f24:	e13ffd17 	ldw	r4,-12(fp)
 4021f28:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>

	return value;
 4021f2c:	e0bffd17 	ldw	r2,-12(fp)
 4021f30:	10800717 	ldw	r2,28(r2)
}
 4021f34:	e6ffff04 	addi	sp,fp,-4
 4021f38:	dfc00217 	ldw	ra,8(sp)
 4021f3c:	df000117 	ldw	fp,4(sp)
 4021f40:	dc000017 	ldw	r16,0(sp)
 4021f44:	dec00304 	addi	sp,sp,12
 4021f48:	f800283a 	ret

04021f4c <_ZN7NNLayer16print_activationEv>:

void NNLayer::print_activation() {
 4021f4c:	defffc04 	addi	sp,sp,-16
 4021f50:	dfc00315 	stw	ra,12(sp)
 4021f54:	df000215 	stw	fp,8(sp)
 4021f58:	df000204 	addi	fp,sp,8
 4021f5c:	e13fff15 	stw	r4,-4(fp)
	printf("---------------\n");
 4021f60:	01000034 	movhi	r4,0
 4021f64:	21001f04 	addi	r4,r4,124
 4021f68:	4027a080 	call	4027a08 <puts>
	for (int i=0; i<n_neuron; i++) {
 4021f6c:	e03ffe15 	stw	zero,-8(fp)
 4021f70:	e0bfff17 	ldw	r2,-4(fp)
 4021f74:	10800217 	ldw	r2,8(r2)
 4021f78:	e0fffe17 	ldw	r3,-8(fp)
 4021f7c:	1880120e 	bge	r3,r2,4021fc8 <_ZN7NNLayer16print_activationEv+0x7c>
		printf("%i, %i\n", i, (int)value[i]);
 4021f80:	e0bfff17 	ldw	r2,-4(fp)
 4021f84:	10c00717 	ldw	r3,28(r2)
 4021f88:	e0bffe17 	ldw	r2,-8(fp)
 4021f8c:	1085883a 	add	r2,r2,r2
 4021f90:	1085883a 	add	r2,r2,r2
 4021f94:	1885883a 	add	r2,r3,r2
 4021f98:	10c00017 	ldw	r3,0(r2)
 4021f9c:	1809883a 	mov	r4,r3
 4021fa0:	4025ac40 	call	4025ac4 <__fixsfsi>
 4021fa4:	100d883a 	mov	r6,r2
 4021fa8:	e17ffe17 	ldw	r5,-8(fp)
 4021fac:	01000034 	movhi	r4,0
 4021fb0:	21002304 	addi	r4,r4,140
 4021fb4:	40278ec0 	call	40278ec <printf>
	return value;
}

void NNLayer::print_activation() {
	printf("---------------\n");
	for (int i=0; i<n_neuron; i++) {
 4021fb8:	e0bffe17 	ldw	r2,-8(fp)
 4021fbc:	10800044 	addi	r2,r2,1
 4021fc0:	e0bffe15 	stw	r2,-8(fp)
 4021fc4:	003fea06 	br	4021f70 <__flash_rwdata_start+0xfffebd04>
		printf("%i, %i\n", i, (int)value[i]);
	}
}
 4021fc8:	0001883a 	nop
 4021fcc:	e037883a 	mov	sp,fp
 4021fd0:	dfc00117 	ldw	ra,4(sp)
 4021fd4:	df000017 	ldw	fp,0(sp)
 4021fd8:	dec00204 	addi	sp,sp,8
 4021fdc:	f800283a 	ret

04021fe0 <_ZN7NNLayer5printEv>:

void NNLayer::print() {
 4021fe0:	defff804 	addi	sp,sp,-32
 4021fe4:	dfc00715 	stw	ra,28(sp)
 4021fe8:	df000615 	stw	fp,24(sp)
 4021fec:	df000604 	addi	fp,sp,24
 4021ff0:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated constructor stub
	int * current_pos = pos_array;
 4021ff4:	e0bfff17 	ldw	r2,-4(fp)
 4021ff8:	10800617 	ldw	r2,24(r2)
 4021ffc:	e0bffa15 	stw	r2,-24(fp)

	for (int i=0; i<n_neuron; i++) {
 4022000:	e03ffb15 	stw	zero,-20(fp)
 4022004:	e0bfff17 	ldw	r2,-4(fp)
 4022008:	10800217 	ldw	r2,8(r2)
 402200c:	e0fffb17 	ldw	r3,-20(fp)
 4022010:	1880560e 	bge	r3,r2,402216c <_ZN7NNLayer5printEv+0x18c>
		printf("Neuron %i { ", i);
 4022014:	e17ffb17 	ldw	r5,-20(fp)
 4022018:	01000034 	movhi	r4,0
 402201c:	21002504 	addi	r4,r4,148
 4022020:	40278ec0 	call	40278ec <printf>
		for (int j=0; j<n_input_per_neuron; j++) {
 4022024:	e03ffc15 	stw	zero,-16(fp)
 4022028:	e0bfff17 	ldw	r2,-4(fp)
 402202c:	10800317 	ldw	r2,12(r2)
 4022030:	e0fffc17 	ldw	r3,-16(fp)
 4022034:	1880170e 	bge	r3,r2,4022094 <_ZN7NNLayer5printEv+0xb4>
			if (j!=0) printf(", %i", *(current_pos++));
 4022038:	e0bffc17 	ldw	r2,-16(fp)
 402203c:	10000926 	beq	r2,zero,4022064 <_ZN7NNLayer5printEv+0x84>
 4022040:	e0bffa17 	ldw	r2,-24(fp)
 4022044:	10c00104 	addi	r3,r2,4
 4022048:	e0fffa15 	stw	r3,-24(fp)
 402204c:	10800017 	ldw	r2,0(r2)
 4022050:	100b883a 	mov	r5,r2
 4022054:	01000034 	movhi	r4,0
 4022058:	21002904 	addi	r4,r4,164
 402205c:	40278ec0 	call	40278ec <printf>
 4022060:	00000806 	br	4022084 <_ZN7NNLayer5printEv+0xa4>
			else printf("%i", *(current_pos++));
 4022064:	e0bffa17 	ldw	r2,-24(fp)
 4022068:	10c00104 	addi	r3,r2,4
 402206c:	e0fffa15 	stw	r3,-24(fp)
 4022070:	10800017 	ldw	r2,0(r2)
 4022074:	100b883a 	mov	r5,r2
 4022078:	01000034 	movhi	r4,0
 402207c:	21002b04 	addi	r4,r4,172
 4022080:	40278ec0 	call	40278ec <printf>
	// TODO Auto-generated constructor stub
	int * current_pos = pos_array;

	for (int i=0; i<n_neuron; i++) {
		printf("Neuron %i { ", i);
		for (int j=0; j<n_input_per_neuron; j++) {
 4022084:	e0bffc17 	ldw	r2,-16(fp)
 4022088:	10800044 	addi	r2,r2,1
 402208c:	e0bffc15 	stw	r2,-16(fp)
 4022090:	003fe506 	br	4022028 <__flash_rwdata_start+0xfffebdbc>
			if (j!=0) printf(", %i", *(current_pos++));
			else printf("%i", *(current_pos++));
		}
		printf("}, %f, {",value[i]);
 4022094:	e0bfff17 	ldw	r2,-4(fp)
 4022098:	10c00717 	ldw	r3,28(r2)
 402209c:	e0bffb17 	ldw	r2,-20(fp)
 40220a0:	1085883a 	add	r2,r2,r2
 40220a4:	1085883a 	add	r2,r2,r2
 40220a8:	1885883a 	add	r2,r3,r2
 40220ac:	10c00017 	ldw	r3,0(r2)
 40220b0:	1809883a 	mov	r4,r3
 40220b4:	402670c0 	call	402670c <__extendsfdf2>
 40220b8:	100d883a 	mov	r6,r2
 40220bc:	180f883a 	mov	r7,r3
 40220c0:	300b883a 	mov	r5,r6
 40220c4:	380d883a 	mov	r6,r7
 40220c8:	01000034 	movhi	r4,0
 40220cc:	21002c04 	addi	r4,r4,176
 40220d0:	40278ec0 	call	40278ec <printf>
		for (int j=LUT_size-1; j>=0; j--) {
 40220d4:	e0bfff17 	ldw	r2,-4(fp)
 40220d8:	10800417 	ldw	r2,16(r2)
 40220dc:	10bfffc4 	addi	r2,r2,-1
 40220e0:	e0bffd15 	stw	r2,-12(fp)
 40220e4:	e0bffd17 	ldw	r2,-12(fp)
 40220e8:	10001916 	blt	r2,zero,4022150 <_ZN7NNLayer5printEv+0x170>
			unsigned int hex_value = LUT_array[LUT_size * i + j];
 40220ec:	e0bfff17 	ldw	r2,-4(fp)
 40220f0:	10800517 	ldw	r2,20(r2)
 40220f4:	e0ffff17 	ldw	r3,-4(fp)
 40220f8:	19000417 	ldw	r4,16(r3)
 40220fc:	e0fffb17 	ldw	r3,-20(fp)
 4022100:	20c9383a 	mul	r4,r4,r3
 4022104:	e0fffd17 	ldw	r3,-12(fp)
 4022108:	20c7883a 	add	r3,r4,r3
 402210c:	10c5883a 	add	r2,r2,r3
 4022110:	10800003 	ldbu	r2,0(r2)
 4022114:	10803fcc 	andi	r2,r2,255
 4022118:	e0bffe15 	stw	r2,-8(fp)
			if (hex_value<16) printf("0");
 402211c:	e0bffe17 	ldw	r2,-8(fp)
 4022120:	10800428 	cmpgeui	r2,r2,16
 4022124:	1000021e 	bne	r2,zero,4022130 <_ZN7NNLayer5printEv+0x150>
 4022128:	01000c04 	movi	r4,48
 402212c:	40279300 	call	4027930 <putchar>
			printf("%x",hex_value);
 4022130:	e17ffe17 	ldw	r5,-8(fp)
 4022134:	01000034 	movhi	r4,0
 4022138:	21002f04 	addi	r4,r4,188
 402213c:	40278ec0 	call	40278ec <printf>
		for (int j=0; j<n_input_per_neuron; j++) {
			if (j!=0) printf(", %i", *(current_pos++));
			else printf("%i", *(current_pos++));
		}
		printf("}, %f, {",value[i]);
		for (int j=LUT_size-1; j>=0; j--) {
 4022140:	e0bffd17 	ldw	r2,-12(fp)
 4022144:	10bfffc4 	addi	r2,r2,-1
 4022148:	e0bffd15 	stw	r2,-12(fp)
 402214c:	003fe506 	br	40220e4 <__flash_rwdata_start+0xfffebe78>
			unsigned int hex_value = LUT_array[LUT_size * i + j];
			if (hex_value<16) printf("0");
			printf("%x",hex_value);
		}
		printf("}\r\n");
 4022150:	01000034 	movhi	r4,0
 4022154:	21003004 	addi	r4,r4,192
 4022158:	4027a080 	call	4027a08 <puts>

void NNLayer::print() {
	// TODO Auto-generated constructor stub
	int * current_pos = pos_array;

	for (int i=0; i<n_neuron; i++) {
 402215c:	e0bffb17 	ldw	r2,-20(fp)
 4022160:	10800044 	addi	r2,r2,1
 4022164:	e0bffb15 	stw	r2,-20(fp)
 4022168:	003fa606 	br	4022004 <__flash_rwdata_start+0xfffebd98>
			if (hex_value<16) printf("0");
			printf("%x",hex_value);
		}
		printf("}\r\n");
	}
}
 402216c:	0001883a 	nop
 4022170:	e037883a 	mov	sp,fp
 4022174:	dfc00117 	ldw	ra,4(sp)
 4022178:	df000017 	ldw	fp,0(sp)
 402217c:	dec00204 	addi	sp,sp,8
 4022180:	f800283a 	ret

04022184 <_ZN3VGA3clrEv>:
#include "VGA.h"
#include "io.h"

//-------------------------------------------------------------------------
void VGA::clr() {
 4022184:	defffd04 	addi	sp,sp,-12
 4022188:	df000215 	stw	fp,8(sp)
 402218c:	df000204 	addi	fp,sp,8
 4022190:	e13fff15 	stw	r4,-4(fp)
  int x;
  for (x=0;x<640*480/4;x++) {
 4022194:	e03ffe15 	stw	zero,-8(fp)
 4022198:	e0fffe17 	ldw	r3,-8(fp)
 402219c:	00800074 	movhi	r2,1
 40221a0:	108affc4 	addi	r2,r2,11263
 40221a4:	10c00d16 	blt	r2,r3,40221dc <_ZN3VGA3clrEv+0x58>
     IOWR(memory_address, x, 0x0);
 40221a8:	e0bffe17 	ldw	r2,-8(fp)
 40221ac:	1085883a 	add	r2,r2,r2
 40221b0:	1085883a 	add	r2,r2,r2
 40221b4:	1007883a 	mov	r3,r2
 40221b8:	e0bfff17 	ldw	r2,-4(fp)
 40221bc:	10800117 	ldw	r2,4(r2)
 40221c0:	1885883a 	add	r2,r3,r2
 40221c4:	0007883a 	mov	r3,zero
 40221c8:	10c00035 	stwio	r3,0(r2)
#include "io.h"

//-------------------------------------------------------------------------
void VGA::clr() {
  int x;
  for (x=0;x<640*480/4;x++) {
 40221cc:	e0bffe17 	ldw	r2,-8(fp)
 40221d0:	10800044 	addi	r2,r2,1
 40221d4:	e0bffe15 	stw	r2,-8(fp)
 40221d8:	003fef06 	br	4022198 <__flash_rwdata_start+0xfffebf2c>
     IOWR(memory_address, x, 0x0);
  }
}
 40221dc:	0001883a 	nop
 40221e0:	e037883a 	mov	sp,fp
 40221e4:	df000017 	ldw	fp,0(sp)
 40221e8:	dec00104 	addi	sp,sp,4
 40221ec:	f800283a 	ret

040221f0 <main>:

/*********************************************************************
 * main
 *********************************************************************/
int main(int argc, char **argv)
{
 40221f0:	deffd504 	addi	sp,sp,-172
 40221f4:	dfc02a15 	stw	ra,168(sp)
 40221f8:	df002915 	stw	fp,164(sp)
 40221fc:	ddc02815 	stw	r23,160(sp)
 4022200:	dd802715 	stw	r22,156(sp)
 4022204:	dd402615 	stw	r21,152(sp)
 4022208:	dd002515 	stw	r20,148(sp)
 402220c:	dcc02415 	stw	r19,144(sp)
 4022210:	dc802315 	stw	r18,140(sp)
 4022214:	dc402215 	stw	r17,136(sp)
 4022218:	dc002115 	stw	r16,132(sp)
 402221c:	df002904 	addi	fp,sp,164
 4022220:	e13fe215 	stw	r4,-120(fp)
 4022224:	e17fe315 	stw	r5,-116(fp)
 4022228:	008100b4 	movhi	r2,1026
 402222c:	108bd304 	addi	r2,r2,12108
 4022230:	e0bfea15 	stw	r2,-88(fp)
 4022234:	008100f4 	movhi	r2,1027
 4022238:	1096df04 	addi	r2,r2,23420
 402223c:	e0bfeb15 	stw	r2,-84(fp)
 4022240:	e0bfec04 	addi	r2,fp,-80
 4022244:	e0ffd704 	addi	r3,fp,-164
 4022248:	10c00015 	stw	r3,0(r2)
 402224c:	00c100b4 	movhi	r3,1026
 4022250:	18c95804 	addi	r3,r3,9568
 4022254:	10c00115 	stw	r3,4(r2)
 4022258:	16c00215 	stw	sp,8(r2)
 402225c:	e0bfe404 	addi	r2,fp,-112
 4022260:	1009883a 	mov	r4,r2
 4022264:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
	printf("Entering ELE8307 Fall 2018 Project main() \r\n");
 4022268:	01000034 	movhi	r4,0
 402226c:	00bfffc4 	movi	r2,-1
 4022270:	e0bfe515 	stw	r2,-108(fp)
 4022274:	21003804 	addi	r4,r4,224
 4022278:	4027a080 	call	4027a08 <puts>

	pVGA = new VGA(ELE8307_VGA_0_BASE, (int)display);
 402227c:	01000204 	movi	r4,8
 4022280:	40227000 	call	4022700 <_Znwj>
 4022284:	e0bff115 	stw	r2,-60(fp)
 4022288:	00800034 	movhi	r2,0
 402228c:	10888504 	addi	r2,r2,8724
 4022290:	100d883a 	mov	r6,r2
 4022294:	01410134 	movhi	r5,1028
 4022298:	29440004 	addi	r5,r5,4096
 402229c:	e13ff117 	ldw	r4,-60(fp)
 40222a0:	40225ec0 	call	40225ec <_ZN3VGAC1Eii>
 40222a4:	e0bff117 	ldw	r2,-60(fp)
 40222a8:	d0a02115 	stw	r2,-32636(gp)
	pVGA->send_to_display();
 40222ac:	d0a02117 	ldw	r2,-32636(gp)
 40222b0:	1009883a 	mov	r4,r2
 40222b4:	40226300 	call	4022630 <_ZN3VGA15send_to_displayEv>
	pVGA->clr();
 40222b8:	d0a02117 	ldw	r2,-32636(gp)
 40222bc:	1009883a 	mov	r4,r2
 40222c0:	40221840 	call	4022184 <_ZN3VGA3clrEv>

    /* Initialisation et application a une image de la machine neuronale (poids aleatoires) */

    printf("> Exemple 1: NN Aleatoire \r\n");
 40222c4:	01000034 	movhi	r4,0
 40222c8:	21004304 	addi	r4,r4,268
 40222cc:	4027a080 	call	4027a08 <puts>
    NN network(5);
 40222d0:	e0bfdc04 	addi	r2,fp,-144
 40222d4:	01400144 	movi	r5,5
 40222d8:	1009883a 	mov	r4,r2
 40222dc:	40210d40 	call	40210d4 <_ZN2NNC1Ei>
    int matrix_size = 16;
 40222e0:	00800404 	movi	r2,16
 40222e4:	e0bfd815 	stw	r2,-160(fp)

    network.layer[0].random_init(matrix_size*matrix_size, 40, 8);
 40222e8:	e13fde17 	ldw	r4,-136(fp)
 40222ec:	e0ffd817 	ldw	r3,-160(fp)
 40222f0:	e0bfd817 	ldw	r2,-160(fp)
 40222f4:	1887383a 	mul	r3,r3,r2
 40222f8:	00800044 	movi	r2,1
 40222fc:	e0bfe515 	stw	r2,-108(fp)
 4022300:	01c00204 	movi	r7,8
 4022304:	01800a04 	movi	r6,40
 4022308:	180b883a 	mov	r5,r3
 402230c:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>
    network.layer[1].random_init(40, 40, 6);
 4022310:	e0bfde17 	ldw	r2,-136(fp)
 4022314:	10800804 	addi	r2,r2,32
 4022318:	01c00184 	movi	r7,6
 402231c:	01800a04 	movi	r6,40
 4022320:	01400a04 	movi	r5,40
 4022324:	1009883a 	mov	r4,r2
 4022328:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>
    network.layer[2].random_init(40, 40, 6);
 402232c:	e0bfde17 	ldw	r2,-136(fp)
 4022330:	10801004 	addi	r2,r2,64
 4022334:	01c00184 	movi	r7,6
 4022338:	01800a04 	movi	r6,40
 402233c:	01400a04 	movi	r5,40
 4022340:	1009883a 	mov	r4,r2
 4022344:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>
    network.layer[3].random_init(40, 40, 6);
 4022348:	e0bfde17 	ldw	r2,-136(fp)
 402234c:	10801804 	addi	r2,r2,96
 4022350:	01c00184 	movi	r7,6
 4022354:	01800a04 	movi	r6,40
 4022358:	01400a04 	movi	r5,40
 402235c:	1009883a 	mov	r4,r2
 4022360:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>
    network.layer[4].random_init(40, 10, 6);
 4022364:	e0bfde17 	ldw	r2,-136(fp)
 4022368:	10802004 	addi	r2,r2,128
 402236c:	01c00184 	movi	r7,6
 4022370:	01800284 	movi	r6,10
 4022374:	01400a04 	movi	r5,40
 4022378:	1009883a 	mov	r4,r2
 402237c:	4021b0c0 	call	4021b0c <_ZN7NNLayer11random_initEiii>

    network.layer[0].print();
 4022380:	e0bfde17 	ldw	r2,-136(fp)
 4022384:	1009883a 	mov	r4,r2
 4022388:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>
    network.layer[1].print();
 402238c:	e0bfde17 	ldw	r2,-136(fp)
 4022390:	10800804 	addi	r2,r2,32
 4022394:	1009883a 	mov	r4,r2
 4022398:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>
    network.layer[2].print();
 402239c:	e0bfde17 	ldw	r2,-136(fp)
 40223a0:	10801004 	addi	r2,r2,64
 40223a4:	1009883a 	mov	r4,r2
 40223a8:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>
    network.layer[3].print();
 40223ac:	e0bfde17 	ldw	r2,-136(fp)
 40223b0:	10801804 	addi	r2,r2,96
 40223b4:	1009883a 	mov	r4,r2
 40223b8:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>
    network.layer[4].print();
 40223bc:	e0bfde17 	ldw	r2,-136(fp)
 40223c0:	10802004 	addi	r2,r2,128
 40223c4:	1009883a 	mov	r4,r2
 40223c8:	4021fe00 	call	4021fe0 <_ZN7NNLayer5printEv>

	Image my_image(60,200);
 40223cc:	e0bfdf04 	addi	r2,fp,-132
 40223d0:	01803204 	movi	r6,200
 40223d4:	01400f04 	movi	r5,60
 40223d8:	1009883a 	mov	r4,r2
 40223dc:	40202cc0 	call	40202cc <_ZN5ImageC1Eii>
	my_image.make_fractal();
 40223e0:	e0ffdf04 	addi	r3,fp,-132
 40223e4:	00800084 	movi	r2,2
 40223e8:	e0bfe515 	stw	r2,-108(fp)
 40223ec:	1809883a 	mov	r4,r3
 40223f0:	40205d40 	call	40205d4 <_ZN5Image12make_fractalEv>
	my_image.printToScreen(0,0,pVGA);
 40223f4:	d0e02117 	ldw	r3,-32636(gp)
 40223f8:	e0bfdf04 	addi	r2,fp,-132
 40223fc:	180f883a 	mov	r7,r3
 4022400:	000d883a 	mov	r6,zero
 4022404:	000b883a 	mov	r5,zero
 4022408:	1009883a 	mov	r4,r2
 402240c:	4020e740 	call	4020e74 <_ZN5Image13printToScreenEiiP3VGA>
	my_image.make_bw();
 4022410:	e0bfdf04 	addi	r2,fp,-132
 4022414:	1009883a 	mov	r4,r2
 4022418:	40209700 	call	4020970 <_ZN5Image7make_bwEv>
	my_image.printToScreen(120,0,pVGA);
 402241c:	d0e02117 	ldw	r3,-32636(gp)
 4022420:	e0bfdf04 	addi	r2,fp,-132
 4022424:	180f883a 	mov	r7,r3
 4022428:	000d883a 	mov	r6,zero
 402242c:	01401e04 	movi	r5,120
 4022430:	1009883a 	mov	r4,r2
 4022434:	4020e740 	call	4020e74 <_ZN5Image13printToScreenEiiP3VGA>
	printf("Start processing ...\r\n");
 4022438:	01000034 	movhi	r4,0
 402243c:	21004a04 	addi	r4,r4,296
 4022440:	4027a080 	call	4027a08 <puts>

	for (int i=0;i<10;i++) {
 4022444:	e03fd715 	stw	zero,-164(fp)
 4022448:	e0bfd717 	ldw	r2,-164(fp)
 402244c:	10800288 	cmpgei	r2,r2,10
 4022450:	10002d1e 	bne	r2,zero,4022508 <main+0x318>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4022454:	d0a03117 	ldw	r2,-32572(gp)
		int time1 = alt_nticks();
 4022458:	e0bfd915 	stw	r2,-156(fp)
		Image * result_image = my_image.apply_NN(&network, matrix_size, i);
 402245c:	e13fdc04 	addi	r4,fp,-144
 4022460:	e0ffdf04 	addi	r3,fp,-132
 4022464:	00800084 	movi	r2,2
 4022468:	e0bfe515 	stw	r2,-108(fp)
 402246c:	e1ffd717 	ldw	r7,-164(fp)
 4022470:	e1bfd817 	ldw	r6,-160(fp)
 4022474:	200b883a 	mov	r5,r4
 4022478:	1809883a 	mov	r4,r3
 402247c:	4020a3c0 	call	4020a3c <_ZN5Image8apply_NNEP2NNii>
 4022480:	e0bfda15 	stw	r2,-152(fp)
 4022484:	d0a03117 	ldw	r2,-32572(gp)
		int time2 = alt_nticks();
 4022488:	e0bfdb15 	stw	r2,-148(fp)
		result_image->printToScreen(60*i,240,pVGA);
 402248c:	e0bfd717 	ldw	r2,-164(fp)
 4022490:	10c00f24 	muli	r3,r2,60
 4022494:	d1202117 	ldw	r4,-32636(gp)
 4022498:	00800084 	movi	r2,2
 402249c:	e0bfe515 	stw	r2,-108(fp)
 40224a0:	200f883a 	mov	r7,r4
 40224a4:	01803c04 	movi	r6,240
 40224a8:	180b883a 	mov	r5,r3
 40224ac:	e13fda17 	ldw	r4,-152(fp)
 40224b0:	4020e740 	call	4020e74 <_ZN5Image13printToScreenEiiP3VGA>
		delete result_image;
 40224b4:	e0ffda17 	ldw	r3,-152(fp)
 40224b8:	e0fff215 	stw	r3,-56(fp)
 40224bc:	e0bff217 	ldw	r2,-56(fp)
 40224c0:	10000426 	beq	r2,zero,40224d4 <main+0x2e4>
 40224c4:	e13ff217 	ldw	r4,-56(fp)
 40224c8:	40210000 	call	4021000 <_ZN5ImageD1Ev>
 40224cc:	e13ff217 	ldw	r4,-56(fp)
 40224d0:	40237cc0 	call	40237cc <_ZdlPv>
		printf("done in %d ms\r\n",(time2-time1));
 40224d4:	e0ffdb17 	ldw	r3,-148(fp)
 40224d8:	e0bfd917 	ldw	r2,-156(fp)
 40224dc:	1885c83a 	sub	r2,r3,r2
 40224e0:	100b883a 	mov	r5,r2
 40224e4:	01000034 	movhi	r4,0
 40224e8:	00800084 	movi	r2,2
 40224ec:	e0bfe515 	stw	r2,-108(fp)
 40224f0:	21005004 	addi	r4,r4,320
 40224f4:	40278ec0 	call	40278ec <printf>
	my_image.printToScreen(0,0,pVGA);
	my_image.make_bw();
	my_image.printToScreen(120,0,pVGA);
	printf("Start processing ...\r\n");

	for (int i=0;i<10;i++) {
 40224f8:	e0bfd717 	ldw	r2,-164(fp)
 40224fc:	10800044 	addi	r2,r2,1
 4022500:	e0bfd715 	stw	r2,-164(fp)
 4022504:	003fd006 	br	4022448 <__flash_rwdata_start+0xfffec1dc>
		result_image->printToScreen(60*i,240,pVGA);
		delete result_image;
		printf("done in %d ms\r\n",(time2-time1));
	}

	return 0;
 4022508:	e03ff315 	stw	zero,-52(fp)
    network.layer[1].print();
    network.layer[2].print();
    network.layer[3].print();
    network.layer[4].print();

	Image my_image(60,200);
 402250c:	e0ffdf04 	addi	r3,fp,-132
 4022510:	00800044 	movi	r2,1
 4022514:	e0bfe515 	stw	r2,-108(fp)
 4022518:	1809883a 	mov	r4,r3
 402251c:	40210000 	call	4021000 <_ZN5ImageD1Ev>
	pVGA->clr();

    /* Initialisation et application a une image de la machine neuronale (poids aleatoires) */

    printf("> Exemple 1: NN Aleatoire \r\n");
    NN network(5);
 4022520:	e0ffdc04 	addi	r3,fp,-144
 4022524:	00bfffc4 	movi	r2,-1
 4022528:	e0bfe515 	stw	r2,-108(fp)
 402252c:	1809883a 	mov	r4,r3
 4022530:	40212f40 	call	40212f4 <_ZN2NND1Ev>
 4022534:	e0fff317 	ldw	r3,-52(fp)
 4022538:	e0fff415 	stw	r3,-48(fp)
 402253c:	00001a06 	br	40225a8 <main+0x3b8>
 4022540:	e0fff615 	stw	r3,-40(fp)
    network.layer[1].print();
    network.layer[2].print();
    network.layer[3].print();
    network.layer[4].print();

	Image my_image(60,200);
 4022544:	e0bfdf04 	addi	r2,fp,-132
 4022548:	e03fe515 	stw	zero,-108(fp)
 402254c:	1009883a 	mov	r4,r2
 4022550:	40210000 	call	4021000 <_ZN5ImageD1Ev>
 4022554:	e0bff617 	ldw	r2,-40(fp)
 4022558:	e0bff515 	stw	r2,-44(fp)
 402255c:	00000906 	br	4022584 <main+0x394>
 4022560:	e7002904 	addi	fp,fp,164
 4022564:	e0ffe617 	ldw	r3,-104(fp)
 4022568:	e0bfe517 	ldw	r2,-108(fp)
 402256c:	10000426 	beq	r2,zero,4022580 <main+0x390>
 4022570:	10bfffc4 	addi	r2,r2,-1
 4022574:	103ff226 	beq	r2,zero,4022540 <__flash_rwdata_start+0xfffec2d4>
 4022578:	10bfffc4 	addi	r2,r2,-1
 402257c:	003b68fa 	trap	3
 4022580:	e0fff515 	stw	r3,-44(fp)
	pVGA->clr();

    /* Initialisation et application a une image de la machine neuronale (poids aleatoires) */

    printf("> Exemple 1: NN Aleatoire \r\n");
    NN network(5);
 4022584:	e0bfdc04 	addi	r2,fp,-144
 4022588:	e03fe515 	stw	zero,-108(fp)
 402258c:	1009883a 	mov	r4,r2
 4022590:	40212f40 	call	40212f4 <_ZN2NND1Ev>
 4022594:	e0fff517 	ldw	r3,-44(fp)
 4022598:	00bfffc4 	movi	r2,-1
 402259c:	e0bfe515 	stw	r2,-108(fp)
 40225a0:	1809883a 	mov	r4,r3
 40225a4:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 40225a8:	e0bfe404 	addi	r2,fp,-112
 40225ac:	1009883a 	mov	r4,r2
 40225b0:	4026be40 	call	4026be4 <_Unwind_SjLj_Unregister>
		delete result_image;
		printf("done in %d ms\r\n",(time2-time1));
	}

	return 0;
}
 40225b4:	e0bff417 	ldw	r2,-48(fp)
 40225b8:	e6fff804 	addi	sp,fp,-32
 40225bc:	dfc00917 	ldw	ra,36(sp)
 40225c0:	df000817 	ldw	fp,32(sp)
 40225c4:	ddc00717 	ldw	r23,28(sp)
 40225c8:	dd800617 	ldw	r22,24(sp)
 40225cc:	dd400517 	ldw	r21,20(sp)
 40225d0:	dd000417 	ldw	r20,16(sp)
 40225d4:	dcc00317 	ldw	r19,12(sp)
 40225d8:	dc800217 	ldw	r18,8(sp)
 40225dc:	dc400117 	ldw	r17,4(sp)
 40225e0:	dc000017 	ldw	r16,0(sp)
 40225e4:	dec00a04 	addi	sp,sp,40
 40225e8:	f800283a 	ret

040225ec <_ZN3VGAC1Eii>:
class VGA {
	int system_base_address;
	int memory_address;

public:
	VGA(int system_base_address, int memory_address) : system_base_address(system_base_address), memory_address(memory_address) {};
 40225ec:	defffc04 	addi	sp,sp,-16
 40225f0:	df000315 	stw	fp,12(sp)
 40225f4:	df000304 	addi	fp,sp,12
 40225f8:	e13ffd15 	stw	r4,-12(fp)
 40225fc:	e17ffe15 	stw	r5,-8(fp)
 4022600:	e1bfff15 	stw	r6,-4(fp)
 4022604:	e0bffd17 	ldw	r2,-12(fp)
 4022608:	e0fffe17 	ldw	r3,-8(fp)
 402260c:	10c00015 	stw	r3,0(r2)
 4022610:	e0bffd17 	ldw	r2,-12(fp)
 4022614:	e0ffff17 	ldw	r3,-4(fp)
 4022618:	10c00115 	stw	r3,4(r2)
 402261c:	0001883a 	nop
 4022620:	e037883a 	mov	sp,fp
 4022624:	df000017 	ldw	fp,0(sp)
 4022628:	dec00104 	addi	sp,sp,4
 402262c:	f800283a 	ret

04022630 <_ZN3VGA15send_to_displayEv>:
		if ( (x>=640) || (y>=480) ) return;
		int address = 640*y+x;
		IOWR_8DIRECT(memory_address, address, color);
	}

	inline void send_to_display() {
 4022630:	defffe04 	addi	sp,sp,-8
 4022634:	df000115 	stw	fp,4(sp)
 4022638:	df000104 	addi	fp,sp,4
 402263c:	e13fff15 	stw	r4,-4(fp)
		IOWR(system_base_address,0,memory_address);
 4022640:	e0bfff17 	ldw	r2,-4(fp)
 4022644:	10800017 	ldw	r2,0(r2)
 4022648:	1007883a 	mov	r3,r2
 402264c:	e0bfff17 	ldw	r2,-4(fp)
 4022650:	10800117 	ldw	r2,4(r2)
 4022654:	18800035 	stwio	r2,0(r3)
	}
 4022658:	0001883a 	nop
 402265c:	e037883a 	mov	sp,fp
 4022660:	df000017 	ldw	fp,0(sp)
 4022664:	dec00104 	addi	sp,sp,4
 4022668:	f800283a 	ret

0402266c <_Znaj>:
 402266c:	008100b4 	movhi	r2,1026
 4022670:	defff004 	addi	sp,sp,-64
 4022674:	108bd304 	addi	r2,r2,12108
 4022678:	d8800615 	stw	r2,24(sp)
 402267c:	008100f4 	movhi	r2,1027
 4022680:	1096e104 	addi	r2,r2,23428
 4022684:	d8800715 	stw	r2,28(sp)
 4022688:	008100b4 	movhi	r2,1026
 402268c:	1089b804 	addi	r2,r2,9952
 4022690:	d9000d15 	stw	r4,52(sp)
 4022694:	d809883a 	mov	r4,sp
 4022698:	d8800915 	stw	r2,36(sp)
 402269c:	dfc00f15 	stw	ra,60(sp)
 40226a0:	df000e15 	stw	fp,56(sp)
 40226a4:	dec00815 	stw	sp,32(sp)
 40226a8:	dec00a15 	stw	sp,40(sp)
 40226ac:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
 40226b0:	d9000d17 	ldw	r4,52(sp)
 40226b4:	00800044 	movi	r2,1
 40226b8:	d8800115 	stw	r2,4(sp)
 40226bc:	40227000 	call	4022700 <_Znwj>
 40226c0:	d809883a 	mov	r4,sp
 40226c4:	d8800d15 	stw	r2,52(sp)
 40226c8:	4026be40 	call	4026be4 <_Unwind_SjLj_Unregister>
 40226cc:	d8800d17 	ldw	r2,52(sp)
 40226d0:	dfc00f17 	ldw	ra,60(sp)
 40226d4:	df000e17 	ldw	fp,56(sp)
 40226d8:	dec01004 	addi	sp,sp,64
 40226dc:	f800283a 	ret
 40226e0:	d8800317 	ldw	r2,12(sp)
 40226e4:	00ffffc4 	movi	r3,-1
 40226e8:	d9000217 	ldw	r4,8(sp)
 40226ec:	10c00226 	beq	r2,r3,40226f8 <_Znaj+0x8c>
 40226f0:	d8c00115 	stw	r3,4(sp)
 40226f4:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 40226f8:	d8800115 	stw	r2,4(sp)
 40226fc:	402354c0 	call	402354c <__cxa_call_unexpected>

04022700 <_Znwj>:
 4022700:	defffe04 	addi	sp,sp,-8
 4022704:	dc000015 	stw	r16,0(sp)
 4022708:	dfc00115 	stw	ra,4(sp)
 402270c:	2021883a 	mov	r16,r4
 4022710:	2000011e 	bne	r4,zero,4022718 <_Znwj+0x18>
 4022714:	04000044 	movi	r16,1
 4022718:	8009883a 	mov	r4,r16
 402271c:	4026f600 	call	4026f60 <malloc>
 4022720:	10000426 	beq	r2,zero,4022734 <_Znwj+0x34>
 4022724:	dfc00117 	ldw	ra,4(sp)
 4022728:	dc000017 	ldw	r16,0(sp)
 402272c:	dec00204 	addi	sp,sp,8
 4022730:	f800283a 	ret
 4022734:	40227880 	call	4022788 <_ZSt15get_new_handlerv>
 4022738:	10000226 	beq	r2,zero,4022744 <_Znwj+0x44>
 402273c:	103ee83a 	callr	r2
 4022740:	003ff506 	br	4022718 <__flash_rwdata_start+0xfffec4ac>
 4022744:	01000104 	movi	r4,4
 4022748:	40240280 	call	4024028 <__cxa_allocate_exception>
 402274c:	00c00034 	movhi	r3,0
 4022750:	018100b4 	movhi	r6,1026
 4022754:	01400034 	movhi	r5,0
 4022758:	18c06104 	addi	r3,r3,388
 402275c:	318de204 	addi	r6,r6,14216
 4022760:	29405c04 	addi	r5,r5,368
 4022764:	1009883a 	mov	r4,r2
 4022768:	10c00015 	stw	r3,0(r2)
 402276c:	40238140 	call	4023814 <__cxa_throw>

04022770 <_ZdaPv>:
 4022770:	40237cc1 	jmpi	40237cc <_ZdlPv>

04022774 <_ZSt15set_new_handlerPFvvE>:
 4022774:	00c00034 	movhi	r3,0
 4022778:	18c87304 	addi	r3,r3,8652
 402277c:	18800017 	ldw	r2,0(r3)
 4022780:	19000015 	stw	r4,0(r3)
 4022784:	f800283a 	ret

04022788 <_ZSt15get_new_handlerv>:
 4022788:	00800034 	movhi	r2,0
 402278c:	10887304 	addi	r2,r2,8652
 4022790:	10800017 	ldw	r2,0(r2)
 4022794:	f800283a 	ret

04022798 <_ZL21size_of_encoded_valueh>:
 4022798:	deffff04 	addi	sp,sp,-4
 402279c:	dfc00015 	stw	ra,0(sp)
 40227a0:	20c03fcc 	andi	r3,r4,255
 40227a4:	00803fc4 	movi	r2,255
 40227a8:	18802026 	beq	r3,r2,402282c <_ZL21size_of_encoded_valueh+0x94>
 40227ac:	210001cc 	andi	r4,r4,7
 40227b0:	00800144 	movi	r2,5
 40227b4:	11001c36 	bltu	r2,r4,4022828 <_ZL21size_of_encoded_valueh+0x90>
 40227b8:	200890ba 	slli	r4,r4,2
 40227bc:	008100b4 	movhi	r2,1026
 40227c0:	1089f404 	addi	r2,r2,10192
 40227c4:	2089883a 	add	r4,r4,r2
 40227c8:	20800017 	ldw	r2,0(r4)
 40227cc:	1000683a 	jmp	r2
 40227d0:	040227e8 	cmpgeui	r16,zero,2207
 40227d4:	04022828 	cmpgeui	r16,zero,2208
 40227d8:	040227f8 	rdprs	r16,zero,2207
 40227dc:	040227e8 	cmpgeui	r16,zero,2207
 40227e0:	04022818 	cmpnei	r16,zero,2208
 40227e4:	04022808 	cmpgei	r16,zero,2208
 40227e8:	00800104 	movi	r2,4
 40227ec:	dfc00017 	ldw	ra,0(sp)
 40227f0:	dec00104 	addi	sp,sp,4
 40227f4:	f800283a 	ret
 40227f8:	00800084 	movi	r2,2
 40227fc:	dfc00017 	ldw	ra,0(sp)
 4022800:	dec00104 	addi	sp,sp,4
 4022804:	f800283a 	ret
 4022808:	00800044 	movi	r2,1
 402280c:	dfc00017 	ldw	ra,0(sp)
 4022810:	dec00104 	addi	sp,sp,4
 4022814:	f800283a 	ret
 4022818:	00800204 	movi	r2,8
 402281c:	dfc00017 	ldw	ra,0(sp)
 4022820:	dec00104 	addi	sp,sp,4
 4022824:	f800283a 	ret
 4022828:	4026f480 	call	4026f48 <abort>
 402282c:	0005883a 	mov	r2,zero
 4022830:	dfc00017 	ldw	ra,0(sp)
 4022834:	dec00104 	addi	sp,sp,4
 4022838:	f800283a 	ret

0402283c <_ZL28read_encoded_value_with_basehjPKhPj>:
 402283c:	deffff04 	addi	sp,sp,-4
 4022840:	dfc00015 	stw	ra,0(sp)
 4022844:	20c03fcc 	andi	r3,r4,255
 4022848:	00801404 	movi	r2,80
 402284c:	18807326 	beq	r3,r2,4022a1c <_ZL28read_encoded_value_with_basehjPKhPj+0x1e0>
 4022850:	20c003cc 	andi	r3,r4,15
 4022854:	00800304 	movi	r2,12
 4022858:	10c06f36 	bltu	r2,r3,4022a18 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
 402285c:	180690ba 	slli	r3,r3,2
 4022860:	020100b4 	movhi	r8,1026
 4022864:	420a1d04 	addi	r8,r8,10356
 4022868:	1a07883a 	add	r3,r3,r8
 402286c:	18800017 	ldw	r2,0(r3)
 4022870:	1000683a 	jmp	r2
 4022874:	040228a8 	cmpgeui	r16,zero,2210
 4022878:	040229c4 	movi	r16,2215
 402287c:	04022a00 	call	4022a0 <__alt_heap_start+0x3b4f54>
 4022880:	040228a8 	cmpgeui	r16,zero,2210
 4022884:	0402290c 	andi	r16,zero,2212
 4022888:	04022960 	cmpeqi	r16,zero,2213
 402288c:	04022a18 	cmpnei	r16,zero,2216
 4022890:	04022a18 	cmpnei	r16,zero,2216
 4022894:	04022a18 	cmpnei	r16,zero,2216
 4022898:	0402296c 	andhi	r16,zero,2213
 402289c:	0402293c 	xorhi	r16,zero,2212
 40228a0:	040228a8 	cmpgeui	r16,zero,2210
 40228a4:	0402290c 	andi	r16,zero,2212
 40228a8:	30800043 	ldbu	r2,1(r6)
 40228ac:	30c00083 	ldbu	r3,2(r6)
 40228b0:	324000c3 	ldbu	r9,3(r6)
 40228b4:	32000003 	ldbu	r8,0(r6)
 40228b8:	1004923a 	slli	r2,r2,8
 40228bc:	1806943a 	slli	r3,r3,16
 40228c0:	4812963a 	slli	r9,r9,24
 40228c4:	1204b03a 	or	r2,r2,r8
 40228c8:	1884b03a 	or	r2,r3,r2
 40228cc:	4886b03a 	or	r3,r9,r2
 40228d0:	30800104 	addi	r2,r6,4
 40228d4:	18000926 	beq	r3,zero,40228fc <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 40228d8:	22001c0c 	andi	r8,r4,112
 40228dc:	02400404 	movi	r9,16
 40228e0:	42405726 	beq	r8,r9,4022a40 <_ZL28read_encoded_value_with_basehjPKhPj+0x204>
 40228e4:	21003fcc 	andi	r4,r4,255
 40228e8:	2100201c 	xori	r4,r4,128
 40228ec:	213fe004 	addi	r4,r4,-128
 40228f0:	1947883a 	add	r3,r3,r5
 40228f4:	2000010e 	bge	r4,zero,40228fc <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 40228f8:	18c00017 	ldw	r3,0(r3)
 40228fc:	38c00015 	stw	r3,0(r7)
 4022900:	dfc00017 	ldw	ra,0(sp)
 4022904:	dec00104 	addi	sp,sp,4
 4022908:	f800283a 	ret
 402290c:	30800043 	ldbu	r2,1(r6)
 4022910:	30c00083 	ldbu	r3,2(r6)
 4022914:	324000c3 	ldbu	r9,3(r6)
 4022918:	32000003 	ldbu	r8,0(r6)
 402291c:	1004923a 	slli	r2,r2,8
 4022920:	1806943a 	slli	r3,r3,16
 4022924:	4812963a 	slli	r9,r9,24
 4022928:	1204b03a 	or	r2,r2,r8
 402292c:	1884b03a 	or	r2,r3,r2
 4022930:	4886b03a 	or	r3,r9,r2
 4022934:	30800204 	addi	r2,r6,8
 4022938:	003fe606 	br	40228d4 <__flash_rwdata_start+0xfffec668>
 402293c:	30c00043 	ldbu	r3,1(r6)
 4022940:	32000003 	ldbu	r8,0(r6)
 4022944:	30800084 	addi	r2,r6,2
 4022948:	1806923a 	slli	r3,r3,8
 402294c:	1a06b03a 	or	r3,r3,r8
 4022950:	18ffffcc 	andi	r3,r3,65535
 4022954:	18e0001c 	xori	r3,r3,32768
 4022958:	18e00004 	addi	r3,r3,-32768
 402295c:	003fdd06 	br	40228d4 <__flash_rwdata_start+0xfffec668>
 4022960:	30c00003 	ldbu	r3,0(r6)
 4022964:	30800044 	addi	r2,r6,1
 4022968:	003fda06 	br	40228d4 <__flash_rwdata_start+0xfffec668>
 402296c:	3017883a 	mov	r11,r6
 4022970:	0007883a 	mov	r3,zero
 4022974:	0013883a 	mov	r9,zero
 4022978:	5a800003 	ldbu	r10,0(r11)
 402297c:	58800044 	addi	r2,r11,1
 4022980:	1017883a 	mov	r11,r2
 4022984:	52001fcc 	andi	r8,r10,127
 4022988:	4250983a 	sll	r8,r8,r9
 402298c:	53003fcc 	andi	r12,r10,255
 4022990:	6300201c 	xori	r12,r12,128
 4022994:	633fe004 	addi	r12,r12,-128
 4022998:	1a06b03a 	or	r3,r3,r8
 402299c:	4a4001c4 	addi	r9,r9,7
 40229a0:	603ff516 	blt	r12,zero,4022978 <__flash_rwdata_start+0xfffec70c>
 40229a4:	020007c4 	movi	r8,31
 40229a8:	427fca36 	bltu	r8,r9,40228d4 <__flash_rwdata_start+0xfffec668>
 40229ac:	5280100c 	andi	r10,r10,64
 40229b0:	503fc826 	beq	r10,zero,40228d4 <__flash_rwdata_start+0xfffec668>
 40229b4:	023fffc4 	movi	r8,-1
 40229b8:	4252983a 	sll	r9,r8,r9
 40229bc:	1a46b03a 	or	r3,r3,r9
 40229c0:	003fc506 	br	40228d8 <__flash_rwdata_start+0xfffec66c>
 40229c4:	3017883a 	mov	r11,r6
 40229c8:	0007883a 	mov	r3,zero
 40229cc:	0015883a 	mov	r10,zero
 40229d0:	5a000003 	ldbu	r8,0(r11)
 40229d4:	58800044 	addi	r2,r11,1
 40229d8:	1017883a 	mov	r11,r2
 40229dc:	42401fcc 	andi	r9,r8,127
 40229e0:	4a92983a 	sll	r9,r9,r10
 40229e4:	42003fcc 	andi	r8,r8,255
 40229e8:	4200201c 	xori	r8,r8,128
 40229ec:	423fe004 	addi	r8,r8,-128
 40229f0:	1a46b03a 	or	r3,r3,r9
 40229f4:	528001c4 	addi	r10,r10,7
 40229f8:	403ff516 	blt	r8,zero,40229d0 <__flash_rwdata_start+0xfffec764>
 40229fc:	003fb506 	br	40228d4 <__flash_rwdata_start+0xfffec668>
 4022a00:	30c00043 	ldbu	r3,1(r6)
 4022a04:	32000003 	ldbu	r8,0(r6)
 4022a08:	30800084 	addi	r2,r6,2
 4022a0c:	1806923a 	slli	r3,r3,8
 4022a10:	1a06b03a 	or	r3,r3,r8
 4022a14:	003faf06 	br	40228d4 <__flash_rwdata_start+0xfffec668>
 4022a18:	4026f480 	call	4026f48 <abort>
 4022a1c:	308000c4 	addi	r2,r6,3
 4022a20:	00ffff04 	movi	r3,-4
 4022a24:	10c4703a 	and	r2,r2,r3
 4022a28:	10c00017 	ldw	r3,0(r2)
 4022a2c:	10800104 	addi	r2,r2,4
 4022a30:	38c00015 	stw	r3,0(r7)
 4022a34:	dfc00017 	ldw	ra,0(sp)
 4022a38:	dec00104 	addi	sp,sp,4
 4022a3c:	f800283a 	ret
 4022a40:	300b883a 	mov	r5,r6
 4022a44:	003fa706 	br	40228e4 <__flash_rwdata_start+0xfffec678>

04022a48 <_ZL15get_ttype_entryP16lsda_header_infom>:
 4022a48:	defffc04 	addi	sp,sp,-16
 4022a4c:	dfc00315 	stw	ra,12(sp)
 4022a50:	dc400215 	stw	r17,8(sp)
 4022a54:	dc000115 	stw	r16,4(sp)
 4022a58:	2021883a 	mov	r16,r4
 4022a5c:	21000503 	ldbu	r4,20(r4)
 4022a60:	2823883a 	mov	r17,r5
 4022a64:	40227980 	call	4022798 <_ZL21size_of_encoded_valueh>
 4022a68:	1445383a 	mul	r2,r2,r17
 4022a6c:	81800317 	ldw	r6,12(r16)
 4022a70:	81400217 	ldw	r5,8(r16)
 4022a74:	81000503 	ldbu	r4,20(r16)
 4022a78:	d80f883a 	mov	r7,sp
 4022a7c:	308dc83a 	sub	r6,r6,r2
 4022a80:	402283c0 	call	402283c <_ZL28read_encoded_value_with_basehjPKhPj>
 4022a84:	d8800017 	ldw	r2,0(sp)
 4022a88:	dfc00317 	ldw	ra,12(sp)
 4022a8c:	dc400217 	ldw	r17,8(sp)
 4022a90:	dc000117 	ldw	r16,4(sp)
 4022a94:	dec00404 	addi	sp,sp,16
 4022a98:	f800283a 	ret

04022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 4022a9c:	deffff04 	addi	sp,sp,-4
 4022aa0:	dfc00015 	stw	ra,0(sp)
 4022aa4:	20c03fcc 	andi	r3,r4,255
 4022aa8:	00803fc4 	movi	r2,255
 4022aac:	18800e26 	beq	r3,r2,4022ae8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 4022ab0:	20801c0c 	andi	r2,r4,112
 4022ab4:	00c00804 	movi	r3,32
 4022ab8:	10c01726 	beq	r2,r3,4022b18 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x7c>
 4022abc:	18800e2e 	bgeu	r3,r2,4022af8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
 4022ac0:	00c01004 	movi	r3,64
 4022ac4:	10c01026 	beq	r2,r3,4022b08 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
 4022ac8:	00c01404 	movi	r3,80
 4022acc:	10c00626 	beq	r2,r3,4022ae8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 4022ad0:	00c00c04 	movi	r3,48
 4022ad4:	10c00b1e 	bne	r2,r3,4022b04 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 4022ad8:	2809883a 	mov	r4,r5
 4022adc:	dfc00017 	ldw	ra,0(sp)
 4022ae0:	dec00104 	addi	sp,sp,4
 4022ae4:	4026ca41 	jmpi	4026ca4 <_Unwind_GetDataRelBase>
 4022ae8:	0005883a 	mov	r2,zero
 4022aec:	dfc00017 	ldw	ra,0(sp)
 4022af0:	dec00104 	addi	sp,sp,4
 4022af4:	f800283a 	ret
 4022af8:	103ffb26 	beq	r2,zero,4022ae8 <__flash_rwdata_start+0xfffec87c>
 4022afc:	00c00404 	movi	r3,16
 4022b00:	10fff926 	beq	r2,r3,4022ae8 <__flash_rwdata_start+0xfffec87c>
 4022b04:	4026f480 	call	4026f48 <abort>
 4022b08:	2809883a 	mov	r4,r5
 4022b0c:	dfc00017 	ldw	ra,0(sp)
 4022b10:	dec00104 	addi	sp,sp,4
 4022b14:	4026c941 	jmpi	4026c94 <_Unwind_GetRegionStart>
 4022b18:	2809883a 	mov	r4,r5
 4022b1c:	dfc00017 	ldw	ra,0(sp)
 4022b20:	dec00104 	addi	sp,sp,4
 4022b24:	4026cac1 	jmpi	4026cac <_Unwind_GetTextRelBase>

04022b28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 4022b28:	defffb04 	addi	sp,sp,-20
 4022b2c:	dcc00315 	stw	r19,12(sp)
 4022b30:	dc400115 	stw	r17,4(sp)
 4022b34:	dc000015 	stw	r16,0(sp)
 4022b38:	dfc00415 	stw	ra,16(sp)
 4022b3c:	dc800215 	stw	r18,8(sp)
 4022b40:	2027883a 	mov	r19,r4
 4022b44:	2821883a 	mov	r16,r5
 4022b48:	3023883a 	mov	r17,r6
 4022b4c:	20003f26 	beq	r4,zero,4022c4c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 4022b50:	4026c940 	call	4026c94 <_Unwind_GetRegionStart>
 4022b54:	88800015 	stw	r2,0(r17)
 4022b58:	84800003 	ldbu	r18,0(r16)
 4022b5c:	00c03fc4 	movi	r3,255
 4022b60:	84000044 	addi	r16,r16,1
 4022b64:	90c03726 	beq	r18,r3,4022c44 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 4022b68:	980b883a 	mov	r5,r19
 4022b6c:	9009883a 	mov	r4,r18
 4022b70:	4022a9c0 	call	4022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 4022b74:	800d883a 	mov	r6,r16
 4022b78:	89c00104 	addi	r7,r17,4
 4022b7c:	100b883a 	mov	r5,r2
 4022b80:	9009883a 	mov	r4,r18
 4022b84:	402283c0 	call	402283c <_ZL28read_encoded_value_with_basehjPKhPj>
 4022b88:	1021883a 	mov	r16,r2
 4022b8c:	80c00003 	ldbu	r3,0(r16)
 4022b90:	01003fc4 	movi	r4,255
 4022b94:	80800044 	addi	r2,r16,1
 4022b98:	88c00505 	stb	r3,20(r17)
 4022b9c:	18c03fcc 	andi	r3,r3,255
 4022ba0:	19002c26 	beq	r3,r4,4022c54 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 4022ba4:	100f883a 	mov	r7,r2
 4022ba8:	000d883a 	mov	r6,zero
 4022bac:	000b883a 	mov	r5,zero
 4022bb0:	38c00003 	ldbu	r3,0(r7)
 4022bb4:	10800044 	addi	r2,r2,1
 4022bb8:	100f883a 	mov	r7,r2
 4022bbc:	19001fcc 	andi	r4,r3,127
 4022bc0:	2148983a 	sll	r4,r4,r5
 4022bc4:	18c03fcc 	andi	r3,r3,255
 4022bc8:	18c0201c 	xori	r3,r3,128
 4022bcc:	18ffe004 	addi	r3,r3,-128
 4022bd0:	310cb03a 	or	r6,r6,r4
 4022bd4:	294001c4 	addi	r5,r5,7
 4022bd8:	183ff516 	blt	r3,zero,4022bb0 <__flash_rwdata_start+0xfffec944>
 4022bdc:	118d883a 	add	r6,r2,r6
 4022be0:	89800315 	stw	r6,12(r17)
 4022be4:	10c00003 	ldbu	r3,0(r2)
 4022be8:	000d883a 	mov	r6,zero
 4022bec:	10800044 	addi	r2,r2,1
 4022bf0:	88c00545 	stb	r3,21(r17)
 4022bf4:	000b883a 	mov	r5,zero
 4022bf8:	10c00003 	ldbu	r3,0(r2)
 4022bfc:	10800044 	addi	r2,r2,1
 4022c00:	19001fcc 	andi	r4,r3,127
 4022c04:	2148983a 	sll	r4,r4,r5
 4022c08:	18c03fcc 	andi	r3,r3,255
 4022c0c:	18c0201c 	xori	r3,r3,128
 4022c10:	18ffe004 	addi	r3,r3,-128
 4022c14:	310cb03a 	or	r6,r6,r4
 4022c18:	294001c4 	addi	r5,r5,7
 4022c1c:	183ff616 	blt	r3,zero,4022bf8 <__flash_rwdata_start+0xfffec98c>
 4022c20:	118d883a 	add	r6,r2,r6
 4022c24:	89800415 	stw	r6,16(r17)
 4022c28:	dfc00417 	ldw	ra,16(sp)
 4022c2c:	dcc00317 	ldw	r19,12(sp)
 4022c30:	dc800217 	ldw	r18,8(sp)
 4022c34:	dc400117 	ldw	r17,4(sp)
 4022c38:	dc000017 	ldw	r16,0(sp)
 4022c3c:	dec00504 	addi	sp,sp,20
 4022c40:	f800283a 	ret
 4022c44:	88800115 	stw	r2,4(r17)
 4022c48:	003fd006 	br	4022b8c <__flash_rwdata_start+0xfffec920>
 4022c4c:	0005883a 	mov	r2,zero
 4022c50:	003fc006 	br	4022b54 <__flash_rwdata_start+0xfffec8e8>
 4022c54:	88000315 	stw	zero,12(r17)
 4022c58:	003fe206 	br	4022be4 <__flash_rwdata_start+0xfffec978>

04022c5c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>:
 4022c5c:	28800017 	ldw	r2,0(r5)
 4022c60:	30c00017 	ldw	r3,0(r6)
 4022c64:	defffb04 	addi	sp,sp,-20
 4022c68:	10800217 	ldw	r2,8(r2)
 4022c6c:	dc400315 	stw	r17,12(sp)
 4022c70:	dc000215 	stw	r16,8(sp)
 4022c74:	d9400115 	stw	r5,4(sp)
 4022c78:	dfc00415 	stw	ra,16(sp)
 4022c7c:	2021883a 	mov	r16,r4
 4022c80:	d8c00015 	stw	r3,0(sp)
 4022c84:	2809883a 	mov	r4,r5
 4022c88:	3023883a 	mov	r17,r6
 4022c8c:	103ee83a 	callr	r2
 4022c90:	10803fcc 	andi	r2,r2,255
 4022c94:	d9400117 	ldw	r5,4(sp)
 4022c98:	10000326 	beq	r2,zero,4022ca8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x4c>
 4022c9c:	d8800017 	ldw	r2,0(sp)
 4022ca0:	10800017 	ldw	r2,0(r2)
 4022ca4:	d8800015 	stw	r2,0(sp)
 4022ca8:	80800017 	ldw	r2,0(r16)
 4022cac:	01c00044 	movi	r7,1
 4022cb0:	d80d883a 	mov	r6,sp
 4022cb4:	10800417 	ldw	r2,16(r2)
 4022cb8:	8009883a 	mov	r4,r16
 4022cbc:	103ee83a 	callr	r2
 4022cc0:	10c03fcc 	andi	r3,r2,255
 4022cc4:	18000226 	beq	r3,zero,4022cd0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x74>
 4022cc8:	d8c00017 	ldw	r3,0(sp)
 4022ccc:	88c00015 	stw	r3,0(r17)
 4022cd0:	dfc00417 	ldw	ra,16(sp)
 4022cd4:	dc400317 	ldw	r17,12(sp)
 4022cd8:	dc000217 	ldw	r16,8(sp)
 4022cdc:	dec00504 	addi	sp,sp,20
 4022ce0:	f800283a 	ret

04022ce4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 4022ce4:	defff604 	addi	sp,sp,-40
 4022ce8:	dc000415 	stw	r16,16(sp)
 4022cec:	3821d23a 	srai	r16,r7,8
 4022cf0:	dc800615 	stw	r18,24(sp)
 4022cf4:	dc400515 	stw	r17,20(sp)
 4022cf8:	dfc00915 	stw	ra,36(sp)
 4022cfc:	dd000815 	stw	r20,32(sp)
 4022d00:	dcc00715 	stw	r19,28(sp)
 4022d04:	d9400215 	stw	r5,8(sp)
 4022d08:	3825883a 	mov	r18,r7
 4022d0c:	2023883a 	mov	r17,r4
 4022d10:	8000010e 	bge	r16,zero,4022d18 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x34>
 4022d14:	0421c83a 	sub	r16,zero,r16
 4022d18:	000b883a 	mov	r5,zero
 4022d1c:	01000144 	movi	r4,5
 4022d20:	d9800315 	stw	r6,12(sp)
 4022d24:	4022a9c0 	call	4022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 4022d28:	d9800317 	ldw	r6,12(sp)
 4022d2c:	d9c00104 	addi	r7,sp,4
 4022d30:	100b883a 	mov	r5,r2
 4022d34:	01000144 	movi	r4,5
 4022d38:	402283c0 	call	402283c <_ZL28read_encoded_value_with_basehjPKhPj>
 4022d3c:	11fffe64 	muli	r7,r2,-7
 4022d40:	0007883a 	mov	r3,zero
 4022d44:	11400003 	ldbu	r5,0(r2)
 4022d48:	110001e4 	muli	r4,r2,7
 4022d4c:	10800044 	addi	r2,r2,1
 4022d50:	29801fcc 	andi	r6,r5,127
 4022d54:	21c9883a 	add	r4,r4,r7
 4022d58:	3108983a 	sll	r4,r6,r4
 4022d5c:	29403fcc 	andi	r5,r5,255
 4022d60:	2940201c 	xori	r5,r5,128
 4022d64:	297fe004 	addi	r5,r5,-128
 4022d68:	1906b03a 	or	r3,r3,r4
 4022d6c:	283ff516 	blt	r5,zero,4022d44 <__flash_rwdata_start+0xfffecad8>
 4022d70:	10c5883a 	add	r2,r2,r3
 4022d74:	11fffe64 	muli	r7,r2,-7
 4022d78:	0009883a 	mov	r4,zero
 4022d7c:	11400003 	ldbu	r5,0(r2)
 4022d80:	10c001e4 	muli	r3,r2,7
 4022d84:	10800044 	addi	r2,r2,1
 4022d88:	29801fcc 	andi	r6,r5,127
 4022d8c:	19c7883a 	add	r3,r3,r7
 4022d90:	30c6983a 	sll	r3,r6,r3
 4022d94:	29403fcc 	andi	r5,r5,255
 4022d98:	2940201c 	xori	r5,r5,128
 4022d9c:	297fe004 	addi	r5,r5,-128
 4022da0:	20c8b03a 	or	r4,r4,r3
 4022da4:	283ff516 	blt	r5,zero,4022d7c <__flash_rwdata_start+0xfffecb10>
 4022da8:	80c03fcc 	andi	r3,r16,255
 4022dac:	18ffffc4 	addi	r3,r3,-1
 4022db0:	10c7883a 	add	r3,r2,r3
 4022db4:	210000c4 	addi	r4,r4,3
 4022db8:	197ffe64 	muli	r5,r3,-7
 4022dbc:	2085883a 	add	r2,r4,r2
 4022dc0:	04ffff04 	movi	r19,-4
 4022dc4:	14e6703a 	and	r19,r2,r19
 4022dc8:	0021883a 	mov	r16,zero
 4022dcc:	18800003 	ldbu	r2,0(r3)
 4022dd0:	190001e4 	muli	r4,r3,7
 4022dd4:	1d000044 	addi	r20,r3,1
 4022dd8:	10c01fcc 	andi	r3,r2,127
 4022ddc:	2149883a 	add	r4,r4,r5
 4022de0:	1908983a 	sll	r4,r3,r4
 4022de4:	10803fcc 	andi	r2,r2,255
 4022de8:	1080201c 	xori	r2,r2,128
 4022dec:	10bfe004 	addi	r2,r2,-128
 4022df0:	a007883a 	mov	r3,r20
 4022df4:	8120b03a 	or	r16,r16,r4
 4022df8:	103ff416 	blt	r2,zero,4022dcc <__flash_rwdata_start+0xfffecb60>
 4022dfc:	94803fcc 	andi	r18,r18,255
 4022e00:	80001f26 	beq	r16,zero,4022e80 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x19c>
 4022e04:	9009883a 	mov	r4,r18
 4022e08:	40227980 	call	4022798 <_ZL21size_of_encoded_valueh>
 4022e0c:	81bfffc4 	addi	r6,r16,-1
 4022e10:	308d383a 	mul	r6,r6,r2
 4022e14:	d9400a17 	ldw	r5,40(sp)
 4022e18:	d80f883a 	mov	r7,sp
 4022e1c:	9009883a 	mov	r4,r18
 4022e20:	34cd883a 	add	r6,r6,r19
 4022e24:	402283c0 	call	402283c <_ZL28read_encoded_value_with_basehjPKhPj>
 4022e28:	d9000017 	ldw	r4,0(sp)
 4022e2c:	d9800204 	addi	r6,sp,8
 4022e30:	880b883a 	mov	r5,r17
 4022e34:	4022c5c0 	call	4022c5c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 4022e38:	10c03fcc 	andi	r3,r2,255
 4022e3c:	1800111e 	bne	r3,zero,4022e84 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x1a0>
 4022e40:	a17ffe64 	muli	r5,r20,-7
 4022e44:	a007883a 	mov	r3,r20
 4022e48:	0021883a 	mov	r16,zero
 4022e4c:	19000003 	ldbu	r4,0(r3)
 4022e50:	18c001e4 	muli	r3,r3,7
 4022e54:	a5000044 	addi	r20,r20,1
 4022e58:	20801fcc 	andi	r2,r4,127
 4022e5c:	1947883a 	add	r3,r3,r5
 4022e60:	10c4983a 	sll	r2,r2,r3
 4022e64:	21003fcc 	andi	r4,r4,255
 4022e68:	2100201c 	xori	r4,r4,128
 4022e6c:	213fe004 	addi	r4,r4,-128
 4022e70:	a007883a 	mov	r3,r20
 4022e74:	80a0b03a 	or	r16,r16,r2
 4022e78:	203ff416 	blt	r4,zero,4022e4c <__flash_rwdata_start+0xfffecbe0>
 4022e7c:	003fe006 	br	4022e00 <__flash_rwdata_start+0xfffecb94>
 4022e80:	0005883a 	mov	r2,zero
 4022e84:	dfc00917 	ldw	ra,36(sp)
 4022e88:	dd000817 	ldw	r20,32(sp)
 4022e8c:	dcc00717 	ldw	r19,28(sp)
 4022e90:	dc800617 	ldw	r18,24(sp)
 4022e94:	dc400517 	ldw	r17,20(sp)
 4022e98:	dc000417 	ldw	r16,16(sp)
 4022e9c:	dec00a04 	addi	sp,sp,40
 4022ea0:	f800283a 	ret

04022ea4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 4022ea4:	defffb04 	addi	sp,sp,-20
 4022ea8:	dc000115 	stw	r16,4(sp)
 4022eac:	24000317 	ldw	r16,12(r4)
 4022eb0:	01ce303a 	nor	r7,zero,r7
 4022eb4:	dc800315 	stw	r18,12(sp)
 4022eb8:	dc400215 	stw	r17,8(sp)
 4022ebc:	dfc00415 	stw	ra,16(sp)
 4022ec0:	2023883a 	mov	r17,r4
 4022ec4:	2825883a 	mov	r18,r5
 4022ec8:	d9800015 	stw	r6,0(sp)
 4022ecc:	81e1883a 	add	r16,r16,r7
 4022ed0:	800d883a 	mov	r6,r16
 4022ed4:	000b883a 	mov	r5,zero
 4022ed8:	0009883a 	mov	r4,zero
 4022edc:	30800003 	ldbu	r2,0(r6)
 4022ee0:	84000044 	addi	r16,r16,1
 4022ee4:	800d883a 	mov	r6,r16
 4022ee8:	10c01fcc 	andi	r3,r2,127
 4022eec:	1906983a 	sll	r3,r3,r4
 4022ef0:	10803fcc 	andi	r2,r2,255
 4022ef4:	1080201c 	xori	r2,r2,128
 4022ef8:	10bfe004 	addi	r2,r2,-128
 4022efc:	28cab03a 	or	r5,r5,r3
 4022f00:	210001c4 	addi	r4,r4,7
 4022f04:	103ff516 	blt	r2,zero,4022edc <__flash_rwdata_start+0xfffecc70>
 4022f08:	28000e26 	beq	r5,zero,4022f44 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 4022f0c:	8809883a 	mov	r4,r17
 4022f10:	4022a480 	call	4022a48 <_ZL15get_ttype_entryP16lsda_header_infom>
 4022f14:	d80d883a 	mov	r6,sp
 4022f18:	900b883a 	mov	r5,r18
 4022f1c:	1009883a 	mov	r4,r2
 4022f20:	4022c5c0 	call	4022c5c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 4022f24:	10c03fcc 	andi	r3,r2,255
 4022f28:	183fe926 	beq	r3,zero,4022ed0 <__flash_rwdata_start+0xfffecc64>
 4022f2c:	dfc00417 	ldw	ra,16(sp)
 4022f30:	dc800317 	ldw	r18,12(sp)
 4022f34:	dc400217 	ldw	r17,8(sp)
 4022f38:	dc000117 	ldw	r16,4(sp)
 4022f3c:	dec00504 	addi	sp,sp,20
 4022f40:	f800283a 	ret
 4022f44:	0005883a 	mov	r2,zero
 4022f48:	003ff806 	br	4022f2c <__flash_rwdata_start+0xfffeccc0>

04022f4c <__gxx_personality_sj0>:
 4022f4c:	008100b4 	movhi	r2,1026
 4022f50:	deffdd04 	addi	sp,sp,-140
 4022f54:	108bd304 	addi	r2,r2,12108
 4022f58:	d8800e15 	stw	r2,56(sp)
 4022f5c:	008100f4 	movhi	r2,1027
 4022f60:	1096e604 	addi	r2,r2,23448
 4022f64:	d8800f15 	stw	r2,60(sp)
 4022f68:	008100b4 	movhi	r2,1026
 4022f6c:	108d4904 	addi	r2,r2,13604
 4022f70:	d9001515 	stw	r4,84(sp)
 4022f74:	d9000804 	addi	r4,sp,32
 4022f78:	d8801115 	stw	r2,68(sp)
 4022f7c:	dfc02215 	stw	ra,136(sp)
 4022f80:	df002115 	stw	fp,132(sp)
 4022f84:	dec01015 	stw	sp,64(sp)
 4022f88:	dec01215 	stw	sp,72(sp)
 4022f8c:	d9401915 	stw	r5,100(sp)
 4022f90:	d9801615 	stw	r6,88(sp)
 4022f94:	d9c01715 	stw	r7,92(sp)
 4022f98:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
 4022f9c:	d8c01517 	ldw	r3,84(sp)
 4022fa0:	d8000715 	stw	zero,28(sp)
 4022fa4:	d8000615 	stw	zero,24(sp)
 4022fa8:	00800044 	movi	r2,1
 4022fac:	18800926 	beq	r3,r2,4022fd4 <__gxx_personality_sj0+0x88>
 4022fb0:	01c000c4 	movi	r7,3
 4022fb4:	d9c01515 	stw	r7,84(sp)
 4022fb8:	d9000804 	addi	r4,sp,32
 4022fbc:	4026be40 	call	4026be4 <_Unwind_SjLj_Unregister>
 4022fc0:	d8801517 	ldw	r2,84(sp)
 4022fc4:	dfc02217 	ldw	ra,136(sp)
 4022fc8:	df002117 	ldw	fp,132(sp)
 4022fcc:	dec02304 	addi	sp,sp,140
 4022fd0:	f800283a 	ret
 4022fd4:	d9001617 	ldw	r4,88(sp)
 4022fd8:	00af3574 	movhi	r2,48341
 4022fdc:	d9c01717 	ldw	r7,92(sp)
 4022fe0:	10b54004 	addi	r2,r2,-11008
 4022fe4:	00ee2cb4 	movhi	r3,47282
 4022fe8:	2085883a 	add	r2,r4,r2
 4022fec:	18eaaf04 	addi	r3,r3,-21828
 4022ff0:	d8801b15 	stw	r2,108(sp)
 4022ff4:	38c7883a 	add	r3,r7,r3
 4022ff8:	1105803a 	cmpltu	r2,r2,r4
 4022ffc:	10c7883a 	add	r3,r2,r3
 4023000:	d8c01c15 	stw	r3,112(sp)
 4023004:	d8c01917 	ldw	r3,100(sp)
 4023008:	00800184 	movi	r2,6
 402300c:	18805426 	beq	r3,r2,4023160 <__gxx_personality_sj0+0x214>
 4023010:	d9002417 	ldw	r4,144(sp)
 4023014:	00bfffc4 	movi	r2,-1
 4023018:	d8800915 	stw	r2,36(sp)
 402301c:	4026c880 	call	4026c88 <_Unwind_GetLanguageSpecificData>
 4023020:	d8801a15 	stw	r2,104(sp)
 4023024:	1000c926 	beq	r2,zero,402334c <__gxx_personality_sj0+0x400>
 4023028:	d9002417 	ldw	r4,144(sp)
 402302c:	d80d883a 	mov	r6,sp
 4023030:	100b883a 	mov	r5,r2
 4023034:	4022b280 	call	4022b28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 4023038:	d9402417 	ldw	r5,144(sp)
 402303c:	d9000503 	ldbu	r4,20(sp)
 4023040:	d8801515 	stw	r2,84(sp)
 4023044:	4022a9c0 	call	4022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 4023048:	d9002417 	ldw	r4,144(sp)
 402304c:	d9400604 	addi	r5,sp,24
 4023050:	d8800215 	stw	r2,8(sp)
 4023054:	4026c580 	call	4026c58 <_Unwind_GetIPInfo>
 4023058:	d8c00617 	ldw	r3,24(sp)
 402305c:	18006126 	beq	r3,zero,40231e4 <__gxx_personality_sj0+0x298>
 4023060:	1000ba16 	blt	r2,zero,402334c <__gxx_personality_sj0+0x400>
 4023064:	10002f1e 	bne	r2,zero,4023124 <__gxx_personality_sj0+0x1d8>
 4023068:	d8001515 	stw	zero,84(sp)
 402306c:	d8001f15 	stw	zero,124(sp)
 4023070:	d8001815 	stw	zero,96(sp)
 4023074:	00c00044 	movi	r3,1
 4023078:	d9001917 	ldw	r4,100(sp)
 402307c:	2080004c 	andi	r2,r4,1
 4023080:	1000b51e 	bne	r2,zero,4023358 <__gxx_personality_sj0+0x40c>
 4023084:	d9001917 	ldw	r4,100(sp)
 4023088:	2080020c 	andi	r2,r4,8
 402308c:	1000b71e 	bne	r2,zero,402336c <__gxx_personality_sj0+0x420>
 4023090:	d9c01c17 	ldw	r7,112(sp)
 4023094:	3800b826 	beq	r7,zero,4023378 <__gxx_personality_sj0+0x42c>
 4023098:	00800044 	movi	r2,1
 402309c:	1880b526 	beq	r3,r2,4023374 <__gxx_personality_sj0+0x428>
 40230a0:	d9c01517 	ldw	r7,84(sp)
 40230a4:	3800f516 	blt	r7,zero,402347c <__gxx_personality_sj0+0x530>
 40230a8:	d9002417 	ldw	r4,144(sp)
 40230ac:	d9802317 	ldw	r6,140(sp)
 40230b0:	00bfffc4 	movi	r2,-1
 40230b4:	000b883a 	mov	r5,zero
 40230b8:	d8800915 	stw	r2,36(sp)
 40230bc:	4026c2c0 	call	4026c2c <_Unwind_SetGR>
 40230c0:	d9801517 	ldw	r6,84(sp)
 40230c4:	d9002417 	ldw	r4,144(sp)
 40230c8:	01400044 	movi	r5,1
 40230cc:	4026c2c0 	call	4026c2c <_Unwind_SetGR>
 40230d0:	d9002417 	ldw	r4,144(sp)
 40230d4:	d9401f17 	ldw	r5,124(sp)
 40230d8:	4026c780 	call	4026c78 <_Unwind_SetIP>
 40230dc:	010001c4 	movi	r4,7
 40230e0:	d9001515 	stw	r4,84(sp)
 40230e4:	003fb406 	br	4022fb8 <__flash_rwdata_start+0xfffecd4c>
 40230e8:	000f883a 	mov	r7,zero
 40230ec:	000d883a 	mov	r6,zero
 40230f0:	19000003 	ldbu	r4,0(r3)
 40230f4:	18c00044 	addi	r3,r3,1
 40230f8:	d8c01515 	stw	r3,84(sp)
 40230fc:	21401fcc 	andi	r5,r4,127
 4023100:	298a983a 	sll	r5,r5,r6
 4023104:	21003fcc 	andi	r4,r4,255
 4023108:	2100201c 	xori	r4,r4,128
 402310c:	213fe004 	addi	r4,r4,-128
 4023110:	394eb03a 	or	r7,r7,r5
 4023114:	318001c4 	addi	r6,r6,7
 4023118:	203ff516 	blt	r4,zero,40230f0 <__flash_rwdata_start+0xfffece84>
 402311c:	10bfffc4 	addi	r2,r2,-1
 4023120:	10003226 	beq	r2,zero,40231ec <__gxx_personality_sj0+0x2a0>
 4023124:	d9c01517 	ldw	r7,84(sp)
 4023128:	0011883a 	mov	r8,zero
 402312c:	000d883a 	mov	r6,zero
 4023130:	39000003 	ldbu	r4,0(r7)
 4023134:	38c00044 	addi	r3,r7,1
 4023138:	180f883a 	mov	r7,r3
 402313c:	21401fcc 	andi	r5,r4,127
 4023140:	298a983a 	sll	r5,r5,r6
 4023144:	21003fcc 	andi	r4,r4,255
 4023148:	2100201c 	xori	r4,r4,128
 402314c:	213fe004 	addi	r4,r4,-128
 4023150:	4150b03a 	or	r8,r8,r5
 4023154:	318001c4 	addi	r6,r6,7
 4023158:	203ff516 	blt	r4,zero,4023130 <__flash_rwdata_start+0xfffecec4>
 402315c:	003fe206 	br	40230e8 <__flash_rwdata_start+0xfffece7c>
 4023160:	d9001c17 	ldw	r4,112(sp)
 4023164:	203faa1e 	bne	r4,zero,4023010 <__flash_rwdata_start+0xfffecda4>
 4023168:	d9c01517 	ldw	r7,84(sp)
 402316c:	d8801b17 	ldw	r2,108(sp)
 4023170:	38bfa736 	bltu	r7,r2,4023010 <__flash_rwdata_start+0xfffecda4>
 4023174:	d8c02317 	ldw	r3,140(sp)
 4023178:	18fffe17 	ldw	r3,-8(r3)
 402317c:	d8c01f15 	stw	r3,124(sp)
 4023180:	18008226 	beq	r3,zero,402338c <__gxx_personality_sj0+0x440>
 4023184:	d9002317 	ldw	r4,140(sp)
 4023188:	d9c02317 	ldw	r7,140(sp)
 402318c:	213ffb17 	ldw	r4,-20(r4)
 4023190:	39fffd17 	ldw	r7,-12(r7)
 4023194:	d9001515 	stw	r4,84(sp)
 4023198:	d9c01a15 	stw	r7,104(sp)
 402319c:	d8801517 	ldw	r2,84(sp)
 40231a0:	103fc10e 	bge	r2,zero,40230a8 <__flash_rwdata_start+0xfffece3c>
 40231a4:	d9002417 	ldw	r4,144(sp)
 40231a8:	d9401a17 	ldw	r5,104(sp)
 40231ac:	d80d883a 	mov	r6,sp
 40231b0:	00bfffc4 	movi	r2,-1
 40231b4:	d8800915 	stw	r2,36(sp)
 40231b8:	4022b280 	call	4022b28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 40231bc:	d9402417 	ldw	r5,144(sp)
 40231c0:	d9000503 	ldbu	r4,20(sp)
 40231c4:	4022a9c0 	call	4022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 40231c8:	d9000503 	ldbu	r4,20(sp)
 40231cc:	d9402417 	ldw	r5,144(sp)
 40231d0:	d8800215 	stw	r2,8(sp)
 40231d4:	4022a9c0 	call	4022a9c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 40231d8:	d8c02317 	ldw	r3,140(sp)
 40231dc:	18bffe15 	stw	r2,-8(r3)
 40231e0:	003fb106 	br	40230a8 <__flash_rwdata_start+0xfffece3c>
 40231e4:	10bfffc4 	addi	r2,r2,-1
 40231e8:	003f9d06 	br	4023060 <__flash_rwdata_start+0xfffecdf4>
 40231ec:	42000044 	addi	r8,r8,1
 40231f0:	da001f15 	stw	r8,124(sp)
 40231f4:	38005326 	beq	r7,zero,4023344 <__gxx_personality_sj0+0x3f8>
 40231f8:	d8800417 	ldw	r2,16(sp)
 40231fc:	39ffffc4 	addi	r7,r7,-1
 4023200:	11c5883a 	add	r2,r2,r7
 4023204:	d8801815 	stw	r2,96(sp)
 4023208:	40005026 	beq	r8,zero,402334c <__gxx_personality_sj0+0x400>
 402320c:	10007426 	beq	r2,zero,40233e0 <__gxx_personality_sj0+0x494>
 4023210:	d8801917 	ldw	r2,100(sp)
 4023214:	1080020c 	andi	r2,r2,8
 4023218:	d8802015 	stw	r2,128(sp)
 402321c:	1000a21e 	bne	r2,zero,40234a8 <__gxx_personality_sj0+0x55c>
 4023220:	d8c01c17 	ldw	r3,112(sp)
 4023224:	1800b026 	beq	r3,zero,40234e8 <__gxx_personality_sj0+0x59c>
 4023228:	01c00034 	movhi	r7,0
 402322c:	39c85c04 	addi	r7,r7,8560
 4023230:	d9c01e15 	stw	r7,120(sp)
 4023234:	d8001d05 	stb	zero,116(sp)
 4023238:	d8c01817 	ldw	r3,96(sp)
 402323c:	d8001515 	stw	zero,84(sp)
 4023240:	0009883a 	mov	r4,zero
 4023244:	19400003 	ldbu	r5,0(r3)
 4023248:	18800044 	addi	r2,r3,1
 402324c:	d9c01517 	ldw	r7,84(sp)
 4023250:	28c01fcc 	andi	r3,r5,127
 4023254:	1906983a 	sll	r3,r3,r4
 4023258:	29803fcc 	andi	r6,r5,255
 402325c:	3180201c 	xori	r6,r6,128
 4023260:	38ceb03a 	or	r7,r7,r3
 4023264:	d8801715 	stw	r2,92(sp)
 4023268:	31bfe004 	addi	r6,r6,-128
 402326c:	d9c01515 	stw	r7,84(sp)
 4023270:	210001c4 	addi	r4,r4,7
 4023274:	1007883a 	mov	r3,r2
 4023278:	303ff216 	blt	r6,zero,4023244 <__flash_rwdata_start+0xfffecfd8>
 402327c:	00c007c4 	movi	r3,31
 4023280:	19000836 	bltu	r3,r4,40232a4 <__gxx_personality_sj0+0x358>
 4023284:	2940100c 	andi	r5,r5,64
 4023288:	28000626 	beq	r5,zero,40232a4 <__gxx_personality_sj0+0x358>
 402328c:	01c00044 	movi	r7,1
 4023290:	3908983a 	sll	r4,r7,r4
 4023294:	d8c01517 	ldw	r3,84(sp)
 4023298:	0109c83a 	sub	r4,zero,r4
 402329c:	1906b03a 	or	r3,r3,r4
 40232a0:	d8c01515 	stw	r3,84(sp)
 40232a4:	d8001615 	stw	zero,88(sp)
 40232a8:	0009883a 	mov	r4,zero
 40232ac:	11400003 	ldbu	r5,0(r2)
 40232b0:	d9c01617 	ldw	r7,88(sp)
 40232b4:	10800044 	addi	r2,r2,1
 40232b8:	28c01fcc 	andi	r3,r5,127
 40232bc:	1906983a 	sll	r3,r3,r4
 40232c0:	29803fcc 	andi	r6,r5,255
 40232c4:	3180201c 	xori	r6,r6,128
 40232c8:	38ceb03a 	or	r7,r7,r3
 40232cc:	31bfe004 	addi	r6,r6,-128
 40232d0:	d9c01615 	stw	r7,88(sp)
 40232d4:	210001c4 	addi	r4,r4,7
 40232d8:	303ff416 	blt	r6,zero,40232ac <__flash_rwdata_start+0xfffed040>
 40232dc:	008007c4 	movi	r2,31
 40232e0:	11000736 	bltu	r2,r4,4023300 <__gxx_personality_sj0+0x3b4>
 40232e4:	2940100c 	andi	r5,r5,64
 40232e8:	28000526 	beq	r5,zero,4023300 <__gxx_personality_sj0+0x3b4>
 40232ec:	00c00044 	movi	r3,1
 40232f0:	1908983a 	sll	r4,r3,r4
 40232f4:	0109c83a 	sub	r4,zero,r4
 40232f8:	390eb03a 	or	r7,r7,r4
 40232fc:	d9c01615 	stw	r7,88(sp)
 4023300:	d9001517 	ldw	r4,84(sp)
 4023304:	20003c26 	beq	r4,zero,40233f8 <__gxx_personality_sj0+0x4ac>
 4023308:	01003e0e 	bge	zero,r4,4023404 <__gxx_personality_sj0+0x4b8>
 402330c:	01ffffc4 	movi	r7,-1
 4023310:	200b883a 	mov	r5,r4
 4023314:	d809883a 	mov	r4,sp
 4023318:	d9c00915 	stw	r7,36(sp)
 402331c:	4022a480 	call	4022a48 <_ZL15get_ttype_entryP16lsda_header_infom>
 4023320:	10005f26 	beq	r2,zero,40234a0 <__gxx_personality_sj0+0x554>
 4023324:	d8c01e17 	ldw	r3,120(sp)
 4023328:	1800571e 	bne	r3,zero,4023488 <__gxx_personality_sj0+0x53c>
 402332c:	d9001617 	ldw	r4,88(sp)
 4023330:	20002926 	beq	r4,zero,40233d8 <__gxx_personality_sj0+0x48c>
 4023334:	d9c01717 	ldw	r7,92(sp)
 4023338:	390f883a 	add	r7,r7,r4
 402333c:	d9c01815 	stw	r7,96(sp)
 4023340:	003fbd06 	br	4023238 <__flash_rwdata_start+0xfffecfcc>
 4023344:	d8c01f17 	ldw	r3,124(sp)
 4023348:	1800251e 	bne	r3,zero,40233e0 <__gxx_personality_sj0+0x494>
 402334c:	01000204 	movi	r4,8
 4023350:	d9001515 	stw	r4,84(sp)
 4023354:	003f1806 	br	4022fb8 <__flash_rwdata_start+0xfffecd4c>
 4023358:	d8801c17 	ldw	r2,112(sp)
 402335c:	10000d26 	beq	r2,zero,4023394 <__gxx_personality_sj0+0x448>
 4023360:	00800184 	movi	r2,6
 4023364:	d8801515 	stw	r2,84(sp)
 4023368:	003f1306 	br	4022fb8 <__flash_rwdata_start+0xfffecd4c>
 402336c:	00800044 	movi	r2,1
 4023370:	18bf4d1e 	bne	r3,r2,40230a8 <__flash_rwdata_start+0xfffece3c>
 4023374:	4023e400 	call	4023e40 <_ZSt9terminatev>
 4023378:	d9001b17 	ldw	r4,108(sp)
 402337c:	00800044 	movi	r2,1
 4023380:	113f4536 	bltu	r2,r4,4023098 <__flash_rwdata_start+0xfffece2c>
 4023384:	00800044 	movi	r2,1
 4023388:	18bf841e 	bne	r3,r2,402319c <__flash_rwdata_start+0xfffecf30>
 402338c:	d9002317 	ldw	r4,140(sp)
 4023390:	402418c0 	call	402418c <__cxa_call_terminate>
 4023394:	d8c01b17 	ldw	r3,108(sp)
 4023398:	00800044 	movi	r2,1
 402339c:	10fff036 	bltu	r2,r3,4023360 <__flash_rwdata_start+0xfffed0f4>
 40233a0:	d9002317 	ldw	r4,140(sp)
 40233a4:	d8801817 	ldw	r2,96(sp)
 40233a8:	d9c01517 	ldw	r7,84(sp)
 40233ac:	d8c01a17 	ldw	r3,104(sp)
 40233b0:	20bffc15 	stw	r2,-16(r4)
 40233b4:	d8800717 	ldw	r2,28(sp)
 40233b8:	21fffb15 	stw	r7,-20(r4)
 40233bc:	d9c01f17 	ldw	r7,124(sp)
 40233c0:	20bfff15 	stw	r2,-4(r4)
 40233c4:	00800184 	movi	r2,6
 40233c8:	20fffd15 	stw	r3,-12(r4)
 40233cc:	21fffe15 	stw	r7,-8(r4)
 40233d0:	d8801515 	stw	r2,84(sp)
 40233d4:	003ef806 	br	4022fb8 <__flash_rwdata_start+0xfffecd4c>
 40233d8:	d8801d03 	ldbu	r2,116(sp)
 40233dc:	103fdb26 	beq	r2,zero,402334c <__flash_rwdata_start+0xfffed0e0>
 40233e0:	d8c01917 	ldw	r3,100(sp)
 40233e4:	1880004c 	andi	r2,r3,1
 40233e8:	103fd81e 	bne	r2,zero,402334c <__flash_rwdata_start+0xfffed0e0>
 40233ec:	d8001515 	stw	zero,84(sp)
 40233f0:	00c00084 	movi	r3,2
 40233f4:	003f2306 	br	4023084 <__flash_rwdata_start+0xfffece18>
 40233f8:	00c00044 	movi	r3,1
 40233fc:	d8c01d05 	stb	r3,116(sp)
 4023400:	003fca06 	br	402332c <__flash_rwdata_start+0xfffed0c0>
 4023404:	d9001e17 	ldw	r4,120(sp)
 4023408:	20000426 	beq	r4,zero,402341c <__gxx_personality_sj0+0x4d0>
 402340c:	d9c02017 	ldw	r7,128(sp)
 4023410:	3800021e 	bne	r7,zero,402341c <__gxx_personality_sj0+0x4d0>
 4023414:	d8801c17 	ldw	r2,112(sp)
 4023418:	10002726 	beq	r2,zero,40234b8 <__gxx_personality_sj0+0x56c>
 402341c:	d8801517 	ldw	r2,84(sp)
 4023420:	000d883a 	mov	r6,zero
 4023424:	000b883a 	mov	r5,zero
 4023428:	0088303a 	nor	r4,zero,r2
 402342c:	d8800317 	ldw	r2,12(sp)
 4023430:	1109883a 	add	r4,r2,r4
 4023434:	20800003 	ldbu	r2,0(r4)
 4023438:	21000044 	addi	r4,r4,1
 402343c:	10c01fcc 	andi	r3,r2,127
 4023440:	1946983a 	sll	r3,r3,r5
 4023444:	10803fcc 	andi	r2,r2,255
 4023448:	1080201c 	xori	r2,r2,128
 402344c:	10bfe004 	addi	r2,r2,-128
 4023450:	30ccb03a 	or	r6,r6,r3
 4023454:	294001c4 	addi	r5,r5,7
 4023458:	103ff616 	blt	r2,zero,4023434 <__flash_rwdata_start+0xfffed1c8>
 402345c:	3005003a 	cmpeq	r2,r6,zero
 4023460:	10803fcc 	andi	r2,r2,255
 4023464:	103fb126 	beq	r2,zero,402332c <__flash_rwdata_start+0xfffed0c0>
 4023468:	d9c01917 	ldw	r7,100(sp)
 402346c:	3880004c 	andi	r2,r7,1
 4023470:	103fb91e 	bne	r2,zero,4023358 <__flash_rwdata_start+0xfffed0ec>
 4023474:	d8802017 	ldw	r2,128(sp)
 4023478:	10002d26 	beq	r2,zero,4023530 <__gxx_personality_sj0+0x5e4>
 402347c:	00800044 	movi	r2,1
 4023480:	d8800915 	stw	r2,36(sp)
 4023484:	4023e680 	call	4023e68 <_ZSt10unexpectedv>
 4023488:	d9800704 	addi	r6,sp,28
 402348c:	180b883a 	mov	r5,r3
 4023490:	1009883a 	mov	r4,r2
 4023494:	4022c5c0 	call	4022c5c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 4023498:	10803fcc 	andi	r2,r2,255
 402349c:	103fa326 	beq	r2,zero,402332c <__flash_rwdata_start+0xfffed0c0>
 40234a0:	00c000c4 	movi	r3,3
 40234a4:	003ef406 	br	4023078 <__flash_rwdata_start+0xfffece0c>
 40234a8:	01000034 	movhi	r4,0
 40234ac:	21085a04 	addi	r4,r4,8552
 40234b0:	d9001e15 	stw	r4,120(sp)
 40234b4:	003f5f06 	br	4023234 <__flash_rwdata_start+0xfffecfc8>
 40234b8:	d9001b17 	ldw	r4,108(sp)
 40234bc:	00c00044 	movi	r3,1
 40234c0:	193fd636 	bltu	r3,r4,402341c <__flash_rwdata_start+0xfffed1b0>
 40234c4:	01ffffc4 	movi	r7,-1
 40234c8:	d9c00915 	stw	r7,36(sp)
 40234cc:	d9800717 	ldw	r6,28(sp)
 40234d0:	d9c01517 	ldw	r7,84(sp)
 40234d4:	d9401e17 	ldw	r5,120(sp)
 40234d8:	d809883a 	mov	r4,sp
 40234dc:	4022ea40 	call	4022ea4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 40234e0:	1080005c 	xori	r2,r2,1
 40234e4:	003fde06 	br	4023460 <__flash_rwdata_start+0xfffed1f4>
 40234e8:	d9001b17 	ldw	r4,108(sp)
 40234ec:	00800044 	movi	r2,1
 40234f0:	113f4d36 	bltu	r2,r4,4023228 <__flash_rwdata_start+0xfffecfbc>
 40234f4:	d9c02317 	ldw	r7,140(sp)
 40234f8:	38800017 	ldw	r2,0(r7)
 40234fc:	1080004c 	andi	r2,r2,1
 4023500:	1000061e 	bne	r2,zero,402351c <__gxx_personality_sj0+0x5d0>
 4023504:	d8c02317 	ldw	r3,140(sp)
 4023508:	18800504 	addi	r2,r3,20
 402350c:	d8800715 	stw	r2,28(sp)
 4023510:	10bff017 	ldw	r2,-64(r2)
 4023514:	d8801e15 	stw	r2,120(sp)
 4023518:	003f4606 	br	4023234 <__flash_rwdata_start+0xfffecfc8>
 402351c:	38bff517 	ldw	r2,-44(r7)
 4023520:	003ffa06 	br	402350c <__flash_rwdata_start+0xfffed2a0>
 4023524:	d9000a17 	ldw	r4,40(sp)
 4023528:	40239300 	call	4023930 <__cxa_begin_catch>
 402352c:	003f9106 	br	4023374 <__flash_rwdata_start+0xfffed108>
 4023530:	d9c01c17 	ldw	r7,112(sp)
 4023534:	383eda1e 	bne	r7,zero,40230a0 <__flash_rwdata_start+0xfffece34>
 4023538:	d8c01b17 	ldw	r3,108(sp)
 402353c:	00800044 	movi	r2,1
 4023540:	10fed736 	bltu	r2,r3,40230a0 <__flash_rwdata_start+0xfffece34>
 4023544:	00c000c4 	movi	r3,3
 4023548:	003f8e06 	br	4023384 <__flash_rwdata_start+0xfffed118>

0402354c <__cxa_call_unexpected>:
 402354c:	008100b4 	movhi	r2,1026
 4023550:	deffe604 	addi	sp,sp,-104
 4023554:	108bd304 	addi	r2,r2,12108
 4023558:	d8800d15 	stw	r2,52(sp)
 402355c:	008100f4 	movhi	r2,1027
 4023560:	1096ea04 	addi	r2,r2,23464
 4023564:	d8800e15 	stw	r2,56(sp)
 4023568:	d8800104 	addi	r2,sp,4
 402356c:	d8800f15 	stw	r2,60(sp)
 4023570:	008100b4 	movhi	r2,1026
 4023574:	108d7604 	addi	r2,r2,13784
 4023578:	d9001415 	stw	r4,80(sp)
 402357c:	d9000704 	addi	r4,sp,28
 4023580:	dfc01915 	stw	ra,100(sp)
 4023584:	d8801015 	stw	r2,64(sp)
 4023588:	df001815 	stw	fp,96(sp)
 402358c:	dec01115 	stw	sp,68(sp)
 4023590:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
 4023594:	d9001417 	ldw	r4,80(sp)
 4023598:	40239300 	call	4023930 <__cxa_begin_catch>
 402359c:	d8c01417 	ldw	r3,80(sp)
 40235a0:	18bffe17 	ldw	r2,-8(r3)
 40235a4:	193ff717 	ldw	r4,-36(r3)
 40235a8:	18fffd17 	ldw	r3,-12(r3)
 40235ac:	d8800315 	stw	r2,12(sp)
 40235b0:	d8c01615 	stw	r3,88(sp)
 40235b4:	d8c01417 	ldw	r3,80(sp)
 40235b8:	18fffb17 	ldw	r3,-20(r3)
 40235bc:	d8c01515 	stw	r3,84(sp)
 40235c0:	d8c01417 	ldw	r3,80(sp)
 40235c4:	18fff817 	ldw	r3,-32(r3)
 40235c8:	d8c01415 	stw	r3,80(sp)
 40235cc:	00c00044 	movi	r3,1
 40235d0:	d8c00815 	stw	r3,32(sp)
 40235d4:	4023e580 	call	4023e58 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 40235d8:	d8c00917 	ldw	r3,36(sp)
 40235dc:	d8800817 	ldw	r2,32(sp)
 40235e0:	d8c01715 	stw	r3,92(sp)
 40235e4:	10000a26 	beq	r2,zero,4023610 <__cxa_call_unexpected+0xc4>
 40235e8:	10bfffc4 	addi	r2,r2,-1
 40235ec:	10000126 	beq	r2,zero,40235f4 <__cxa_call_unexpected+0xa8>
 40235f0:	003b68fa 	trap	3
 40235f4:	d8000815 	stw	zero,32(sp)
 40235f8:	40239e40 	call	40239e4 <__cxa_end_catch>
 40235fc:	40239e40 	call	40239e4 <__cxa_end_catch>
 4023600:	d9001717 	ldw	r4,92(sp)
 4023604:	00bfffc4 	movi	r2,-1
 4023608:	d8800815 	stw	r2,32(sp)
 402360c:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 4023610:	d9001717 	ldw	r4,92(sp)
 4023614:	40239300 	call	4023930 <__cxa_begin_catch>
 4023618:	40241e40 	call	40241e4 <__cxa_get_globals_fast>
 402361c:	10800017 	ldw	r2,0(r2)
 4023620:	10c00b17 	ldw	r3,44(r2)
 4023624:	18c0004c 	andi	r3,r3,1
 4023628:	18001e26 	beq	r3,zero,40236a4 <__cxa_call_unexpected+0x158>
 402362c:	10800017 	ldw	r2,0(r2)
 4023630:	d8801715 	stw	r2,92(sp)
 4023634:	d8801517 	ldw	r2,84(sp)
 4023638:	00802b0e 	bge	zero,r2,40236e8 <__cxa_call_unexpected+0x19c>
 402363c:	d8c01717 	ldw	r3,92(sp)
 4023640:	d8800317 	ldw	r2,12(sp)
 4023644:	d9c01517 	ldw	r7,84(sp)
 4023648:	193ff017 	ldw	r4,-64(r3)
 402364c:	d9801617 	ldw	r6,88(sp)
 4023650:	d8800015 	stw	r2,0(sp)
 4023654:	180b883a 	mov	r5,r3
 4023658:	00800084 	movi	r2,2
 402365c:	d8800815 	stw	r2,32(sp)
 4023660:	4022ce40 	call	4022ce4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 4023664:	10803fcc 	andi	r2,r2,255
 4023668:	10001e1e 	bne	r2,zero,40236e4 <__cxa_call_unexpected+0x198>
 402366c:	d8800317 	ldw	r2,12(sp)
 4023670:	d9c01517 	ldw	r7,84(sp)
 4023674:	d9801617 	ldw	r6,88(sp)
 4023678:	01000034 	movhi	r4,0
 402367c:	d8800015 	stw	r2,0(sp)
 4023680:	2100a504 	addi	r4,r4,660
 4023684:	00800084 	movi	r2,2
 4023688:	000b883a 	mov	r5,zero
 402368c:	d8800815 	stw	r2,32(sp)
 4023690:	4022ce40 	call	4022ce4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 4023694:	10803fcc 	andi	r2,r2,255
 4023698:	1000051e 	bne	r2,zero,40236b0 <__cxa_call_unexpected+0x164>
 402369c:	d9001417 	ldw	r4,80(sp)
 40236a0:	4023d800 	call	4023d80 <_ZN10__cxxabiv111__terminateEPFvvE>
 40236a4:	10801004 	addi	r2,r2,64
 40236a8:	d8801715 	stw	r2,92(sp)
 40236ac:	003fe106 	br	4023634 <__flash_rwdata_start+0xfffed3c8>
 40236b0:	01000104 	movi	r4,4
 40236b4:	40240280 	call	4024028 <__cxa_allocate_exception>
 40236b8:	00c00034 	movhi	r3,0
 40236bc:	18c0c004 	addi	r3,r3,768
 40236c0:	018100b4 	movhi	r6,1026
 40236c4:	01400034 	movhi	r5,0
 40236c8:	10c00015 	stw	r3,0(r2)
 40236cc:	31913104 	addi	r6,r6,17604
 40236d0:	00c00084 	movi	r3,2
 40236d4:	2940a504 	addi	r5,r5,660
 40236d8:	1009883a 	mov	r4,r2
 40236dc:	d8c00815 	stw	r3,32(sp)
 40236e0:	40238140 	call	4023814 <__cxa_throw>
 40236e4:	40238a40 	call	40238a4 <__cxa_rethrow>
 40236e8:	d9401617 	ldw	r5,88(sp)
 40236ec:	00800084 	movi	r2,2
 40236f0:	d9800104 	addi	r6,sp,4
 40236f4:	0009883a 	mov	r4,zero
 40236f8:	d8800815 	stw	r2,32(sp)
 40236fc:	4022b280 	call	4022b28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 4023700:	d9801717 	ldw	r6,92(sp)
 4023704:	d9c01517 	ldw	r7,84(sp)
 4023708:	d9000104 	addi	r4,sp,4
 402370c:	317ff017 	ldw	r5,-64(r6)
 4023710:	4022ea40 	call	4022ea4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 4023714:	10803fcc 	andi	r2,r2,255
 4023718:	1000171e 	bne	r2,zero,4023778 <__cxa_call_unexpected+0x22c>
 402371c:	d9c01517 	ldw	r7,84(sp)
 4023720:	01400034 	movhi	r5,0
 4023724:	00800084 	movi	r2,2
 4023728:	2940a504 	addi	r5,r5,660
 402372c:	000d883a 	mov	r6,zero
 4023730:	d9000104 	addi	r4,sp,4
 4023734:	d8800815 	stw	r2,32(sp)
 4023738:	4022ea40 	call	4022ea4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 402373c:	10803fcc 	andi	r2,r2,255
 4023740:	103fd626 	beq	r2,zero,402369c <__flash_rwdata_start+0xfffed430>
 4023744:	01000104 	movi	r4,4
 4023748:	40240280 	call	4024028 <__cxa_allocate_exception>
 402374c:	00c00034 	movhi	r3,0
 4023750:	18c0c004 	addi	r3,r3,768
 4023754:	018100b4 	movhi	r6,1026
 4023758:	01400034 	movhi	r5,0
 402375c:	10c00015 	stw	r3,0(r2)
 4023760:	31913104 	addi	r6,r6,17604
 4023764:	00c00084 	movi	r3,2
 4023768:	2940a504 	addi	r5,r5,660
 402376c:	1009883a 	mov	r4,r2
 4023770:	d8c00815 	stw	r3,32(sp)
 4023774:	40238140 	call	4023814 <__cxa_throw>
 4023778:	40238a40 	call	40238a4 <__cxa_rethrow>

0402377c <_ZNKSt9bad_alloc4whatEv>:
 402377c:	00800034 	movhi	r2,0
 4023780:	10805404 	addi	r2,r2,336
 4023784:	f800283a 	ret

04023788 <_ZNSt9bad_allocD1Ev>:
 4023788:	00800034 	movhi	r2,0
 402378c:	10806104 	addi	r2,r2,388
 4023790:	20800015 	stw	r2,0(r4)
 4023794:	40244c01 	jmpi	40244c0 <_ZNSt9exceptionD1Ev>

04023798 <_ZNSt9bad_allocD0Ev>:
 4023798:	defffe04 	addi	sp,sp,-8
 402379c:	00800034 	movhi	r2,0
 40237a0:	dc000015 	stw	r16,0(sp)
 40237a4:	dfc00115 	stw	ra,4(sp)
 40237a8:	10806104 	addi	r2,r2,388
 40237ac:	20800015 	stw	r2,0(r4)
 40237b0:	2021883a 	mov	r16,r4
 40237b4:	40244c00 	call	40244c0 <_ZNSt9exceptionD1Ev>
 40237b8:	8009883a 	mov	r4,r16
 40237bc:	dfc00117 	ldw	ra,4(sp)
 40237c0:	dc000017 	ldw	r16,0(sp)
 40237c4:	dec00204 	addi	sp,sp,8
 40237c8:	40237cc1 	jmpi	40237cc <_ZdlPv>

040237cc <_ZdlPv>:
 40237cc:	4026f741 	jmpi	4026f74 <free>

040237d0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 40237d0:	defffe04 	addi	sp,sp,-8
 40237d4:	dfc00115 	stw	ra,4(sp)
 40237d8:	dc000015 	stw	r16,0(sp)
 40237dc:	00800044 	movi	r2,1
 40237e0:	11000a36 	bltu	r2,r4,402380c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 40237e4:	28bff617 	ldw	r2,-40(r5)
 40237e8:	2c000504 	addi	r16,r5,20
 40237ec:	10000226 	beq	r2,zero,40237f8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 40237f0:	8009883a 	mov	r4,r16
 40237f4:	103ee83a 	callr	r2
 40237f8:	8009883a 	mov	r4,r16
 40237fc:	dfc00117 	ldw	ra,4(sp)
 4023800:	dc000017 	ldw	r16,0(sp)
 4023804:	dec00204 	addi	sp,sp,8
 4023808:	40240881 	jmpi	4024088 <__cxa_free_exception>
 402380c:	293ff817 	ldw	r4,-32(r5)
 4023810:	4023d800 	call	4023d80 <_ZN10__cxxabiv111__terminateEPFvvE>

04023814 <__cxa_throw>:
 4023814:	defffb04 	addi	sp,sp,-20
 4023818:	dfc00415 	stw	ra,16(sp)
 402381c:	dcc00315 	stw	r19,12(sp)
 4023820:	dc800215 	stw	r18,8(sp)
 4023824:	2827883a 	mov	r19,r5
 4023828:	3025883a 	mov	r18,r6
 402382c:	dc400115 	stw	r17,4(sp)
 4023830:	dc000015 	stw	r16,0(sp)
 4023834:	2021883a 	mov	r16,r4
 4023838:	40241f00 	call	40241f0 <__cxa_get_globals>
 402383c:	10c00117 	ldw	r3,4(r2)
 4023840:	847ffb04 	addi	r17,r16,-20
 4023844:	18c00044 	addi	r3,r3,1
 4023848:	10c00115 	stw	r3,4(r2)
 402384c:	00800044 	movi	r2,1
 4023850:	80bfef15 	stw	r2,-68(r16)
 4023854:	84fff015 	stw	r19,-64(r16)
 4023858:	84bff115 	stw	r18,-60(r16)
 402385c:	4023eb80 	call	4023eb8 <_ZSt14get_unexpectedv>
 4023860:	80bff215 	stw	r2,-56(r16)
 4023864:	4023e940 	call	4023e94 <_ZSt13get_terminatev>
 4023868:	80bff315 	stw	r2,-52(r16)
 402386c:	0090caf4 	movhi	r2,17195
 4023870:	108ac004 	addi	r2,r2,11008
 4023874:	80bffb15 	stw	r2,-20(r16)
 4023878:	0091d3b4 	movhi	r2,18254
 402387c:	109550c4 	addi	r2,r2,21827
 4023880:	80bffc15 	stw	r2,-16(r16)
 4023884:	008100b4 	movhi	r2,1026
 4023888:	108df404 	addi	r2,r2,14288
 402388c:	8809883a 	mov	r4,r17
 4023890:	80bffd15 	stw	r2,-12(r16)
 4023894:	4026cb40 	call	4026cb4 <_Unwind_SjLj_RaiseException>
 4023898:	8809883a 	mov	r4,r17
 402389c:	40239300 	call	4023930 <__cxa_begin_catch>
 40238a0:	4023e400 	call	4023e40 <_ZSt9terminatev>

040238a4 <__cxa_rethrow>:
 40238a4:	defffe04 	addi	sp,sp,-8
 40238a8:	dfc00115 	stw	ra,4(sp)
 40238ac:	dc000015 	stw	r16,0(sp)
 40238b0:	40241f00 	call	40241f0 <__cxa_get_globals>
 40238b4:	10c00117 	ldw	r3,4(r2)
 40238b8:	11000017 	ldw	r4,0(r2)
 40238bc:	18c00044 	addi	r3,r3,1
 40238c0:	10c00115 	stw	r3,4(r2)
 40238c4:	20001126 	beq	r4,zero,402390c <__cxa_rethrow+0x68>
 40238c8:	21400b17 	ldw	r5,44(r4)
 40238cc:	01ef3574 	movhi	r7,48341
 40238d0:	39f54004 	addi	r7,r7,-11008
 40238d4:	29cf883a 	add	r7,r5,r7
 40238d8:	20c00c17 	ldw	r3,48(r4)
 40238dc:	394d803a 	cmpltu	r6,r7,r5
 40238e0:	016e2cb4 	movhi	r5,47282
 40238e4:	296aaf04 	addi	r5,r5,-21828
 40238e8:	1947883a 	add	r3,r3,r5
 40238ec:	30c7883a 	add	r3,r6,r3
 40238f0:	18000726 	beq	r3,zero,4023910 <__cxa_rethrow+0x6c>
 40238f4:	10000015 	stw	zero,0(r2)
 40238f8:	24000b04 	addi	r16,r4,44
 40238fc:	8009883a 	mov	r4,r16
 4023900:	4026e0c0 	call	4026e0c <_Unwind_SjLj_Resume_or_Rethrow>
 4023904:	8009883a 	mov	r4,r16
 4023908:	40239300 	call	4023930 <__cxa_begin_catch>
 402390c:	4023e400 	call	4023e40 <_ZSt9terminatev>
 4023910:	00c00044 	movi	r3,1
 4023914:	19fff736 	bltu	r3,r7,40238f4 <__flash_rwdata_start+0xfffed688>
 4023918:	20800517 	ldw	r2,20(r4)
 402391c:	0085c83a 	sub	r2,zero,r2
 4023920:	20800515 	stw	r2,20(r4)
 4023924:	003ff406 	br	40238f8 <__flash_rwdata_start+0xfffed68c>

04023928 <__cxa_get_exception_ptr>:
 4023928:	20bfff17 	ldw	r2,-4(r4)
 402392c:	f800283a 	ret

04023930 <__cxa_begin_catch>:
 4023930:	defffe04 	addi	sp,sp,-8
 4023934:	dc000015 	stw	r16,0(sp)
 4023938:	dfc00115 	stw	ra,4(sp)
 402393c:	2021883a 	mov	r16,r4
 4023940:	40241f00 	call	40241f0 <__cxa_get_globals>
 4023944:	81000017 	ldw	r4,0(r16)
 4023948:	80c00117 	ldw	r3,4(r16)
 402394c:	01af3574 	movhi	r6,48341
 4023950:	31b54004 	addi	r6,r6,-11008
 4023954:	016e2cb4 	movhi	r5,47282
 4023958:	296aaf04 	addi	r5,r5,-21828
 402395c:	218d883a 	add	r6,r4,r6
 4023960:	3109803a 	cmpltu	r4,r6,r4
 4023964:	1947883a 	add	r3,r3,r5
 4023968:	20c7883a 	add	r3,r4,r3
 402396c:	817ff504 	addi	r5,r16,-44
 4023970:	11000017 	ldw	r4,0(r2)
 4023974:	18000726 	beq	r3,zero,4023994 <__cxa_begin_catch+0x64>
 4023978:	2000191e 	bne	r4,zero,40239e0 <__cxa_begin_catch+0xb0>
 402397c:	11400015 	stw	r5,0(r2)
 4023980:	0005883a 	mov	r2,zero
 4023984:	dfc00117 	ldw	ra,4(sp)
 4023988:	dc000017 	ldw	r16,0(sp)
 402398c:	dec00204 	addi	sp,sp,8
 4023990:	f800283a 	ret
 4023994:	01c00044 	movi	r7,1
 4023998:	39bff736 	bltu	r7,r6,4023978 <__flash_rwdata_start+0xfffed70c>
 402399c:	80fffa17 	ldw	r3,-24(r16)
 40239a0:	18000d16 	blt	r3,zero,40239d8 <__cxa_begin_catch+0xa8>
 40239a4:	18c00044 	addi	r3,r3,1
 40239a8:	11800117 	ldw	r6,4(r2)
 40239ac:	80fffa15 	stw	r3,-24(r16)
 40239b0:	30ffffc4 	addi	r3,r6,-1
 40239b4:	10c00115 	stw	r3,4(r2)
 40239b8:	21400226 	beq	r4,r5,40239c4 <__cxa_begin_catch+0x94>
 40239bc:	813ff915 	stw	r4,-28(r16)
 40239c0:	11400015 	stw	r5,0(r2)
 40239c4:	80bfff17 	ldw	r2,-4(r16)
 40239c8:	dfc00117 	ldw	ra,4(sp)
 40239cc:	dc000017 	ldw	r16,0(sp)
 40239d0:	dec00204 	addi	sp,sp,8
 40239d4:	f800283a 	ret
 40239d8:	38c7c83a 	sub	r3,r7,r3
 40239dc:	003ff206 	br	40239a8 <__flash_rwdata_start+0xfffed73c>
 40239e0:	4023e400 	call	4023e40 <_ZSt9terminatev>

040239e4 <__cxa_end_catch>:
 40239e4:	deffff04 	addi	sp,sp,-4
 40239e8:	dfc00015 	stw	ra,0(sp)
 40239ec:	40241e40 	call	40241e4 <__cxa_get_globals_fast>
 40239f0:	11000017 	ldw	r4,0(r2)
 40239f4:	20001426 	beq	r4,zero,4023a48 <__cxa_end_catch+0x64>
 40239f8:	21400b17 	ldw	r5,44(r4)
 40239fc:	01ef3574 	movhi	r7,48341
 4023a00:	39f54004 	addi	r7,r7,-11008
 4023a04:	29cf883a 	add	r7,r5,r7
 4023a08:	20c00c17 	ldw	r3,48(r4)
 4023a0c:	394d803a 	cmpltu	r6,r7,r5
 4023a10:	016e2cb4 	movhi	r5,47282
 4023a14:	296aaf04 	addi	r5,r5,-21828
 4023a18:	1947883a 	add	r3,r3,r5
 4023a1c:	30c7883a 	add	r3,r6,r3
 4023a20:	18000c1e 	bne	r3,zero,4023a54 <__cxa_end_catch+0x70>
 4023a24:	00c00044 	movi	r3,1
 4023a28:	19c00a36 	bltu	r3,r7,4023a54 <__cxa_end_catch+0x70>
 4023a2c:	20c00517 	ldw	r3,20(r4)
 4023a30:	18000d16 	blt	r3,zero,4023a68 <__cxa_end_catch+0x84>
 4023a34:	18ffffc4 	addi	r3,r3,-1
 4023a38:	18001026 	beq	r3,zero,4023a7c <__cxa_end_catch+0x98>
 4023a3c:	00bfffc4 	movi	r2,-1
 4023a40:	18801426 	beq	r3,r2,4023a94 <__cxa_end_catch+0xb0>
 4023a44:	20c00515 	stw	r3,20(r4)
 4023a48:	dfc00017 	ldw	ra,0(sp)
 4023a4c:	dec00104 	addi	sp,sp,4
 4023a50:	f800283a 	ret
 4023a54:	21000b04 	addi	r4,r4,44
 4023a58:	10000015 	stw	zero,0(r2)
 4023a5c:	dfc00017 	ldw	ra,0(sp)
 4023a60:	dec00104 	addi	sp,sp,4
 4023a64:	4026e581 	jmpi	4026e58 <_Unwind_DeleteException>
 4023a68:	18c00044 	addi	r3,r3,1
 4023a6c:	183ff51e 	bne	r3,zero,4023a44 <__flash_rwdata_start+0xfffed7d8>
 4023a70:	21400417 	ldw	r5,16(r4)
 4023a74:	11400015 	stw	r5,0(r2)
 4023a78:	003ff206 	br	4023a44 <__flash_rwdata_start+0xfffed7d8>
 4023a7c:	20c00417 	ldw	r3,16(r4)
 4023a80:	21000b04 	addi	r4,r4,44
 4023a84:	10c00015 	stw	r3,0(r2)
 4023a88:	dfc00017 	ldw	ra,0(sp)
 4023a8c:	dec00104 	addi	sp,sp,4
 4023a90:	4026e581 	jmpi	4026e58 <_Unwind_DeleteException>
 4023a94:	4023e400 	call	4023e40 <_ZSt9terminatev>

04023a98 <_ZSt18uncaught_exceptionv>:
 4023a98:	deffff04 	addi	sp,sp,-4
 4023a9c:	dfc00015 	stw	ra,0(sp)
 4023aa0:	40241f00 	call	40241f0 <__cxa_get_globals>
 4023aa4:	10800117 	ldw	r2,4(r2)
 4023aa8:	1004c03a 	cmpne	r2,r2,zero
 4023aac:	dfc00017 	ldw	ra,0(sp)
 4023ab0:	dec00104 	addi	sp,sp,4
 4023ab4:	f800283a 	ret

04023ab8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 4023ab8:	20800017 	ldw	r2,0(r4)
 4023abc:	defffa04 	addi	sp,sp,-24
 4023ac0:	dc000415 	stw	r16,16(sp)
 4023ac4:	10800617 	ldw	r2,24(r2)
 4023ac8:	3021883a 	mov	r16,r6
 4023acc:	31800017 	ldw	r6,0(r6)
 4023ad0:	00c00404 	movi	r3,16
 4023ad4:	d8c00215 	stw	r3,8(sp)
 4023ad8:	dfc00515 	stw	ra,20(sp)
 4023adc:	d8000015 	stw	zero,0(sp)
 4023ae0:	d8000115 	stw	zero,4(sp)
 4023ae4:	d8000315 	stw	zero,12(sp)
 4023ae8:	d80f883a 	mov	r7,sp
 4023aec:	103ee83a 	callr	r2
 4023af0:	d8800117 	ldw	r2,4(sp)
 4023af4:	00c00184 	movi	r3,6
 4023af8:	1080018c 	andi	r2,r2,6
 4023afc:	10c00526 	beq	r2,r3,4023b14 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 4023b00:	0005883a 	mov	r2,zero
 4023b04:	dfc00517 	ldw	ra,20(sp)
 4023b08:	dc000417 	ldw	r16,16(sp)
 4023b0c:	dec00604 	addi	sp,sp,24
 4023b10:	f800283a 	ret
 4023b14:	d8c00017 	ldw	r3,0(sp)
 4023b18:	00800044 	movi	r2,1
 4023b1c:	80c00015 	stw	r3,0(r16)
 4023b20:	dfc00517 	ldw	ra,20(sp)
 4023b24:	dc000417 	ldw	r16,16(sp)
 4023b28:	dec00604 	addi	sp,sp,24
 4023b2c:	f800283a 	ret

04023b30 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 4023b30:	d8800017 	ldw	r2,0(sp)
 4023b34:	11800226 	beq	r2,r6,4023b40 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 4023b38:	00800044 	movi	r2,1
 4023b3c:	f800283a 	ret
 4023b40:	00800184 	movi	r2,6
 4023b44:	f800283a 	ret

04023b48 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 4023b48:	00800034 	movhi	r2,0
 4023b4c:	10807204 	addi	r2,r2,456
 4023b50:	20800015 	stw	r2,0(r4)
 4023b54:	40244f81 	jmpi	40244f8 <_ZNSt9type_infoD1Ev>

04023b58 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 4023b58:	defffe04 	addi	sp,sp,-8
 4023b5c:	00800034 	movhi	r2,0
 4023b60:	dc000015 	stw	r16,0(sp)
 4023b64:	dfc00115 	stw	ra,4(sp)
 4023b68:	10807204 	addi	r2,r2,456
 4023b6c:	20800015 	stw	r2,0(r4)
 4023b70:	2021883a 	mov	r16,r4
 4023b74:	40244f80 	call	40244f8 <_ZNSt9type_infoD1Ev>
 4023b78:	8009883a 	mov	r4,r16
 4023b7c:	dfc00117 	ldw	ra,4(sp)
 4023b80:	dc000017 	ldw	r16,0(sp)
 4023b84:	dec00204 	addi	sp,sp,8
 4023b88:	40237cc1 	jmpi	40237cc <_ZdlPv>

04023b8c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 4023b8c:	21000117 	ldw	r4,4(r4)
 4023b90:	29400117 	ldw	r5,4(r5)
 4023b94:	defffd04 	addi	sp,sp,-12
 4023b98:	dc400115 	stw	r17,4(sp)
 4023b9c:	dc000015 	stw	r16,0(sp)
 4023ba0:	dfc00215 	stw	ra,8(sp)
 4023ba4:	3023883a 	mov	r17,r6
 4023ba8:	3821883a 	mov	r16,r7
 4023bac:	21400526 	beq	r4,r5,4023bc4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 4023bb0:	20c00007 	ldb	r3,0(r4)
 4023bb4:	00800a84 	movi	r2,42
 4023bb8:	18800d26 	beq	r3,r2,4023bf0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 4023bbc:	4027df00 	call	4027df0 <strcmp>
 4023bc0:	10000b1e 	bne	r2,zero,4023bf0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 4023bc4:	00800204 	movi	r2,8
 4023bc8:	80800315 	stw	r2,12(r16)
 4023bcc:	00800184 	movi	r2,6
 4023bd0:	80800115 	stw	r2,4(r16)
 4023bd4:	84400015 	stw	r17,0(r16)
 4023bd8:	00800044 	movi	r2,1
 4023bdc:	dfc00217 	ldw	ra,8(sp)
 4023be0:	dc400117 	ldw	r17,4(sp)
 4023be4:	dc000017 	ldw	r16,0(sp)
 4023be8:	dec00304 	addi	sp,sp,12
 4023bec:	f800283a 	ret
 4023bf0:	0005883a 	mov	r2,zero
 4023bf4:	003ff906 	br	4023bdc <__flash_rwdata_start+0xfffed970>

04023bf8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 4023bf8:	defffa04 	addi	sp,sp,-24
 4023bfc:	dc800415 	stw	r18,16(sp)
 4023c00:	d8800817 	ldw	r2,32(sp)
 4023c04:	dc800617 	ldw	r18,24(sp)
 4023c08:	dc400315 	stw	r17,12(sp)
 4023c0c:	dc000215 	stw	r16,8(sp)
 4023c10:	dfc00515 	stw	ra,20(sp)
 4023c14:	dc400917 	ldw	r17,36(sp)
 4023c18:	24000117 	ldw	r16,4(r4)
 4023c1c:	90801526 	beq	r18,r2,4023c74 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x7c>
 4023c20:	39400117 	ldw	r5,4(r7)
 4023c24:	2c000826 	beq	r5,r16,4023c48 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
 4023c28:	80c00007 	ldb	r3,0(r16)
 4023c2c:	00800a84 	movi	r2,42
 4023c30:	18800926 	beq	r3,r2,4023c58 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 4023c34:	8009883a 	mov	r4,r16
 4023c38:	d9800115 	stw	r6,4(sp)
 4023c3c:	4027df00 	call	4027df0 <strcmp>
 4023c40:	d9800117 	ldw	r6,4(sp)
 4023c44:	1000041e 	bne	r2,zero,4023c58 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 4023c48:	00800044 	movi	r2,1
 4023c4c:	8c800015 	stw	r18,0(r17)
 4023c50:	89800115 	stw	r6,4(r17)
 4023c54:	88800315 	stw	r2,12(r17)
 4023c58:	0005883a 	mov	r2,zero
 4023c5c:	dfc00517 	ldw	ra,20(sp)
 4023c60:	dc800417 	ldw	r18,16(sp)
 4023c64:	dc400317 	ldw	r17,12(sp)
 4023c68:	dc000217 	ldw	r16,8(sp)
 4023c6c:	dec00604 	addi	sp,sp,24
 4023c70:	f800283a 	ret
 4023c74:	d8800717 	ldw	r2,28(sp)
 4023c78:	11400117 	ldw	r5,4(r2)
 4023c7c:	81400a26 	beq	r16,r5,4023ca8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
 4023c80:	80c00007 	ldb	r3,0(r16)
 4023c84:	00800a84 	movi	r2,42
 4023c88:	18800c26 	beq	r3,r2,4023cbc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 4023c8c:	8009883a 	mov	r4,r16
 4023c90:	d9800115 	stw	r6,4(sp)
 4023c94:	d9c00015 	stw	r7,0(sp)
 4023c98:	4027df00 	call	4027df0 <strcmp>
 4023c9c:	d9800117 	ldw	r6,4(sp)
 4023ca0:	d9c00017 	ldw	r7,0(sp)
 4023ca4:	1000021e 	bne	r2,zero,4023cb0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 4023ca8:	89800215 	stw	r6,8(r17)
 4023cac:	003fea06 	br	4023c58 <__flash_rwdata_start+0xfffed9ec>
 4023cb0:	39400117 	ldw	r5,4(r7)
 4023cb4:	817fdf1e 	bne	r16,r5,4023c34 <__flash_rwdata_start+0xfffed9c8>
 4023cb8:	003fe306 	br	4023c48 <__flash_rwdata_start+0xfffed9dc>
 4023cbc:	38800117 	ldw	r2,4(r7)
 4023cc0:	80bfe51e 	bne	r16,r2,4023c58 <__flash_rwdata_start+0xfffed9ec>
 4023cc4:	003fe006 	br	4023c48 <__flash_rwdata_start+0xfffed9dc>

04023cc8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 4023cc8:	20800117 	ldw	r2,4(r4)
 4023ccc:	28c00117 	ldw	r3,4(r5)
 4023cd0:	10c02926 	beq	r2,r3,4023d78 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 4023cd4:	defffb04 	addi	sp,sp,-20
 4023cd8:	dcc00315 	stw	r19,12(sp)
 4023cdc:	dc800215 	stw	r18,8(sp)
 4023ce0:	dc400115 	stw	r17,4(sp)
 4023ce4:	dc000015 	stw	r16,0(sp)
 4023ce8:	dfc00415 	stw	ra,16(sp)
 4023cec:	2821883a 	mov	r16,r5
 4023cf0:	11400007 	ldb	r5,0(r2)
 4023cf4:	2025883a 	mov	r18,r4
 4023cf8:	01000a84 	movi	r4,42
 4023cfc:	3823883a 	mov	r17,r7
 4023d00:	3027883a 	mov	r19,r6
 4023d04:	29000626 	beq	r5,r4,4023d20 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 4023d08:	180b883a 	mov	r5,r3
 4023d0c:	1009883a 	mov	r4,r2
 4023d10:	4027df00 	call	4027df0 <strcmp>
 4023d14:	1000021e 	bne	r2,zero,4023d20 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 4023d18:	00800044 	movi	r2,1
 4023d1c:	00000306 	br	4023d2c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
 4023d20:	008000c4 	movi	r2,3
 4023d24:	1440082e 	bgeu	r2,r17,4023d48 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 4023d28:	0005883a 	mov	r2,zero
 4023d2c:	dfc00417 	ldw	ra,16(sp)
 4023d30:	dcc00317 	ldw	r19,12(sp)
 4023d34:	dc800217 	ldw	r18,8(sp)
 4023d38:	dc400117 	ldw	r17,4(sp)
 4023d3c:	dc000017 	ldw	r16,0(sp)
 4023d40:	dec00504 	addi	sp,sp,20
 4023d44:	f800283a 	ret
 4023d48:	80800017 	ldw	r2,0(r16)
 4023d4c:	980d883a 	mov	r6,r19
 4023d50:	900b883a 	mov	r5,r18
 4023d54:	10800517 	ldw	r2,20(r2)
 4023d58:	8009883a 	mov	r4,r16
 4023d5c:	dfc00417 	ldw	ra,16(sp)
 4023d60:	dcc00317 	ldw	r19,12(sp)
 4023d64:	dc800217 	ldw	r18,8(sp)
 4023d68:	dc400117 	ldw	r17,4(sp)
 4023d6c:	dc000017 	ldw	r16,0(sp)
 4023d70:	dec00504 	addi	sp,sp,20
 4023d74:	1000683a 	jmp	r2
 4023d78:	00800044 	movi	r2,1
 4023d7c:	f800283a 	ret

04023d80 <_ZN10__cxxabiv111__terminateEPFvvE>:
 4023d80:	008100b4 	movhi	r2,1026
 4023d84:	deffef04 	addi	sp,sp,-68
 4023d88:	108bd304 	addi	r2,r2,12108
 4023d8c:	d8800615 	stw	r2,24(sp)
 4023d90:	008100f4 	movhi	r2,1027
 4023d94:	1096ee04 	addi	r2,r2,23480
 4023d98:	d8800715 	stw	r2,28(sp)
 4023d9c:	008100b4 	movhi	r2,1026
 4023da0:	108f7604 	addi	r2,r2,15832
 4023da4:	d9000d15 	stw	r4,52(sp)
 4023da8:	d809883a 	mov	r4,sp
 4023dac:	d8800915 	stw	r2,36(sp)
 4023db0:	dfc01015 	stw	ra,64(sp)
 4023db4:	df000f15 	stw	fp,60(sp)
 4023db8:	dec00815 	stw	sp,32(sp)
 4023dbc:	dec00a15 	stw	sp,40(sp)
 4023dc0:	4026bcc0 	call	4026bcc <_Unwind_SjLj_Register>
 4023dc4:	00800044 	movi	r2,1
 4023dc8:	d8800115 	stw	r2,4(sp)
 4023dcc:	d8800d17 	ldw	r2,52(sp)
 4023dd0:	103ee83a 	callr	r2
 4023dd4:	4026f480 	call	4026f48 <abort>
 4023dd8:	d8c00217 	ldw	r3,8(sp)
 4023ddc:	d8800117 	ldw	r2,4(sp)
 4023de0:	d8c00d15 	stw	r3,52(sp)
 4023de4:	d8c00317 	ldw	r3,12(sp)
 4023de8:	d8c00e15 	stw	r3,56(sp)
 4023dec:	10000b26 	beq	r2,zero,4023e1c <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 4023df0:	10bfffc4 	addi	r2,r2,-1
 4023df4:	10000126 	beq	r2,zero,4023dfc <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 4023df8:	003b68fa 	trap	3
 4023dfc:	d8000115 	stw	zero,4(sp)
 4023e00:	40239e40 	call	40239e4 <__cxa_end_catch>
 4023e04:	d8c00e17 	ldw	r3,56(sp)
 4023e08:	00bfffc4 	movi	r2,-1
 4023e0c:	18800826 	beq	r3,r2,4023e30 <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 4023e10:	d9000d17 	ldw	r4,52(sp)
 4023e14:	d8800115 	stw	r2,4(sp)
 4023e18:	4026dc80 	call	4026dc8 <_Unwind_SjLj_Resume>
 4023e1c:	d9000d17 	ldw	r4,52(sp)
 4023e20:	40239300 	call	4023930 <__cxa_begin_catch>
 4023e24:	00800084 	movi	r2,2
 4023e28:	d8800115 	stw	r2,4(sp)
 4023e2c:	4026f480 	call	4026f48 <abort>
 4023e30:	d8800e17 	ldw	r2,56(sp)
 4023e34:	d9000d17 	ldw	r4,52(sp)
 4023e38:	d8800115 	stw	r2,4(sp)
 4023e3c:	402354c0 	call	402354c <__cxa_call_unexpected>

04023e40 <_ZSt9terminatev>:
 4023e40:	00800034 	movhi	r2,0
 4023e44:	10885e04 	addi	r2,r2,8568
 4023e48:	11000017 	ldw	r4,0(r2)
 4023e4c:	deffff04 	addi	sp,sp,-4
 4023e50:	dfc00015 	stw	ra,0(sp)
 4023e54:	4023d800 	call	4023d80 <_ZN10__cxxabiv111__terminateEPFvvE>

04023e58 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 4023e58:	deffff04 	addi	sp,sp,-4
 4023e5c:	dfc00015 	stw	ra,0(sp)
 4023e60:	203ee83a 	callr	r4
 4023e64:	4023e400 	call	4023e40 <_ZSt9terminatev>

04023e68 <_ZSt10unexpectedv>:
 4023e68:	00800034 	movhi	r2,0
 4023e6c:	10885704 	addi	r2,r2,8540
 4023e70:	11000017 	ldw	r4,0(r2)
 4023e74:	deffff04 	addi	sp,sp,-4
 4023e78:	dfc00015 	stw	ra,0(sp)
 4023e7c:	4023e580 	call	4023e58 <_ZN10__cxxabiv112__unexpectedEPFvvE>

04023e80 <_ZSt13set_terminatePFvvE>:
 4023e80:	00c00034 	movhi	r3,0
 4023e84:	18c85e04 	addi	r3,r3,8568
 4023e88:	18800017 	ldw	r2,0(r3)
 4023e8c:	19000015 	stw	r4,0(r3)
 4023e90:	f800283a 	ret

04023e94 <_ZSt13get_terminatev>:
 4023e94:	00800034 	movhi	r2,0
 4023e98:	10885e04 	addi	r2,r2,8568
 4023e9c:	10800017 	ldw	r2,0(r2)
 4023ea0:	f800283a 	ret

04023ea4 <_ZSt14set_unexpectedPFvvE>:
 4023ea4:	00c00034 	movhi	r3,0
 4023ea8:	18c85704 	addi	r3,r3,8540
 4023eac:	18800017 	ldw	r2,0(r3)
 4023eb0:	19000015 	stw	r4,0(r3)
 4023eb4:	f800283a 	ret

04023eb8 <_ZSt14get_unexpectedv>:
 4023eb8:	00800034 	movhi	r2,0
 4023ebc:	10885704 	addi	r2,r2,8540
 4023ec0:	10800017 	ldw	r2,0(r2)
 4023ec4:	f800283a 	ret

04023ec8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 4023ec8:	01800174 	movhi	r6,5
 4023ecc:	31b48504 	addi	r6,r6,-11756
 4023ed0:	31400117 	ldw	r5,4(r6)
 4023ed4:	223fff04 	addi	r8,r4,-4
 4023ed8:	227fff17 	ldw	r9,-4(r4)
 4023edc:	28001326 	beq	r5,zero,4023f2c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x64>
 4023ee0:	424f883a 	add	r7,r8,r9
 4023ee4:	29c01426 	beq	r5,r7,4023f38 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x70>
 4023ee8:	28c00117 	ldw	r3,4(r5)
 4023eec:	18001c26 	beq	r3,zero,4023f60 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x98>
 4023ef0:	38c00336 	bltu	r7,r3,4023f00 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 4023ef4:	00001e06 	br	4023f70 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa8>
 4023ef8:	3880052e 	bgeu	r7,r2,4023f10 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>
 4023efc:	1007883a 	mov	r3,r2
 4023f00:	18800117 	ldw	r2,4(r3)
 4023f04:	29800104 	addi	r6,r5,4
 4023f08:	180b883a 	mov	r5,r3
 4023f0c:	103ffa1e 	bne	r2,zero,4023ef8 <__flash_rwdata_start+0xfffedc8c>
 4023f10:	19400017 	ldw	r5,0(r3)
 4023f14:	194f883a 	add	r7,r3,r5
 4023f18:	41c00e26 	beq	r8,r7,4023f54 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>
 4023f1c:	20800015 	stw	r2,0(r4)
 4023f20:	30800017 	ldw	r2,0(r6)
 4023f24:	12000115 	stw	r8,4(r2)
 4023f28:	f800283a 	ret
 4023f2c:	20000015 	stw	zero,0(r4)
 4023f30:	32000115 	stw	r8,4(r6)
 4023f34:	f800283a 	ret
 4023f38:	28c00017 	ldw	r3,0(r5)
 4023f3c:	28800117 	ldw	r2,4(r5)
 4023f40:	1a53883a 	add	r9,r3,r9
 4023f44:	227fff15 	stw	r9,-4(r4)
 4023f48:	20800015 	stw	r2,0(r4)
 4023f4c:	32000115 	stw	r8,4(r6)
 4023f50:	f800283a 	ret
 4023f54:	494b883a 	add	r5,r9,r5
 4023f58:	19400015 	stw	r5,0(r3)
 4023f5c:	f800283a 	ret
 4023f60:	0005883a 	mov	r2,zero
 4023f64:	2807883a 	mov	r3,r5
 4023f68:	31800104 	addi	r6,r6,4
 4023f6c:	003fe806 	br	4023f10 <__flash_rwdata_start+0xfffedca4>
 4023f70:	1805883a 	mov	r2,r3
 4023f74:	31800104 	addi	r6,r6,4
 4023f78:	2807883a 	mov	r3,r5
 4023f7c:	003fe406 	br	4023f10 <__flash_rwdata_start+0xfffedca4>

04023f80 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 4023f80:	20800104 	addi	r2,r4,4
 4023f84:	00c001c4 	movi	r3,7
 4023f88:	1880112e 	bgeu	r3,r2,4023fd0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
 4023f8c:	20c9883a 	add	r4,r4,r3
 4023f90:	00bfff04 	movi	r2,-4
 4023f94:	208a703a 	and	r5,r4,r2
 4023f98:	01800174 	movhi	r6,5
 4023f9c:	31b48504 	addi	r6,r6,-11756
 4023fa0:	30c00117 	ldw	r3,4(r6)
 4023fa4:	18000826 	beq	r3,zero,4023fc8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 4023fa8:	19000017 	ldw	r4,0(r3)
 4023fac:	21400436 	bltu	r4,r5,4023fc0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
 4023fb0:	00001a06 	br	402401c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x9c>
 4023fb4:	11000017 	ldw	r4,0(r2)
 4023fb8:	2140072e 	bgeu	r4,r5,4023fd8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 4023fbc:	1007883a 	mov	r3,r2
 4023fc0:	18800117 	ldw	r2,4(r3)
 4023fc4:	103ffb1e 	bne	r2,zero,4023fb4 <__flash_rwdata_start+0xfffedd48>
 4023fc8:	0005883a 	mov	r2,zero
 4023fcc:	f800283a 	ret
 4023fd0:	01400204 	movi	r5,8
 4023fd4:	003ff006 	br	4023f98 <__flash_rwdata_start+0xfffedd2c>
 4023fd8:	18c00104 	addi	r3,r3,4
 4023fdc:	2149c83a 	sub	r4,r4,r5
 4023fe0:	018001c4 	movi	r6,7
 4023fe4:	3100092e 	bgeu	r6,r4,402400c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x8c>
 4023fe8:	11c00117 	ldw	r7,4(r2)
 4023fec:	114d883a 	add	r6,r2,r5
 4023ff0:	31000015 	stw	r4,0(r6)
 4023ff4:	31c00115 	stw	r7,4(r6)
 4023ff8:	18800017 	ldw	r2,0(r3)
 4023ffc:	11400015 	stw	r5,0(r2)
 4024000:	19800015 	stw	r6,0(r3)
 4024004:	10800104 	addi	r2,r2,4
 4024008:	f800283a 	ret
 402400c:	11000117 	ldw	r4,4(r2)
 4024010:	10800104 	addi	r2,r2,4
 4024014:	19000015 	stw	r4,0(r3)
 4024018:	f800283a 	ret
 402401c:	1805883a 	mov	r2,r3
 4024020:	30c00104 	addi	r3,r6,4
 4024024:	003fed06 	br	4023fdc <__flash_rwdata_start+0xfffedd70>

04024028 <__cxa_allocate_exception>:
 4024028:	defffd04 	addi	sp,sp,-12
 402402c:	dc400115 	stw	r17,4(sp)
 4024030:	24401104 	addi	r17,r4,68
 4024034:	8809883a 	mov	r4,r17
 4024038:	dc000015 	stw	r16,0(sp)
 402403c:	dfc00215 	stw	ra,8(sp)
 4024040:	4026f600 	call	4026f60 <malloc>
 4024044:	1021883a 	mov	r16,r2
 4024048:	10000a26 	beq	r2,zero,4024074 <__cxa_allocate_exception+0x4c>
 402404c:	01801104 	movi	r6,68
 4024050:	000b883a 	mov	r5,zero
 4024054:	8009883a 	mov	r4,r16
 4024058:	40277940 	call	4027794 <memset>
 402405c:	80801104 	addi	r2,r16,68
 4024060:	dfc00217 	ldw	ra,8(sp)
 4024064:	dc400117 	ldw	r17,4(sp)
 4024068:	dc000017 	ldw	r16,0(sp)
 402406c:	dec00304 	addi	sp,sp,12
 4024070:	f800283a 	ret
 4024074:	8809883a 	mov	r4,r17
 4024078:	4023f800 	call	4023f80 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 402407c:	1021883a 	mov	r16,r2
 4024080:	103ff21e 	bne	r2,zero,402404c <__flash_rwdata_start+0xfffedde0>
 4024084:	4023e400 	call	4023e40 <_ZSt9terminatev>

04024088 <__cxa_free_exception>:
 4024088:	00c00174 	movhi	r3,5
 402408c:	18f48504 	addi	r3,r3,-11756
 4024090:	18800217 	ldw	r2,8(r3)
 4024094:	213fef04 	addi	r4,r4,-68
 4024098:	1100042e 	bgeu	r2,r4,40240ac <__cxa_free_exception+0x24>
 402409c:	18c00317 	ldw	r3,12(r3)
 40240a0:	10c5883a 	add	r2,r2,r3
 40240a4:	2080012e 	bgeu	r4,r2,40240ac <__cxa_free_exception+0x24>
 40240a8:	4023ec81 	jmpi	4023ec8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 40240ac:	4026f741 	jmpi	4026f74 <free>

040240b0 <__cxa_allocate_dependent_exception>:
 40240b0:	defffe04 	addi	sp,sp,-8
 40240b4:	01001004 	movi	r4,64
 40240b8:	dc000015 	stw	r16,0(sp)
 40240bc:	dfc00115 	stw	ra,4(sp)
 40240c0:	4026f600 	call	4026f60 <malloc>
 40240c4:	1021883a 	mov	r16,r2
 40240c8:	10000926 	beq	r2,zero,40240f0 <__cxa_allocate_dependent_exception+0x40>
 40240cc:	01801004 	movi	r6,64
 40240d0:	000b883a 	mov	r5,zero
 40240d4:	8009883a 	mov	r4,r16
 40240d8:	40277940 	call	4027794 <memset>
 40240dc:	8005883a 	mov	r2,r16
 40240e0:	dfc00117 	ldw	ra,4(sp)
 40240e4:	dc000017 	ldw	r16,0(sp)
 40240e8:	dec00204 	addi	sp,sp,8
 40240ec:	f800283a 	ret
 40240f0:	01001004 	movi	r4,64
 40240f4:	4023f800 	call	4023f80 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 40240f8:	1021883a 	mov	r16,r2
 40240fc:	103ff31e 	bne	r2,zero,40240cc <__flash_rwdata_start+0xfffede60>
 4024100:	4023e400 	call	4023e40 <_ZSt9terminatev>

04024104 <__cxa_free_dependent_exception>:
 4024104:	01400174 	movhi	r5,5
 4024108:	29748504 	addi	r5,r5,-11756
 402410c:	28c00217 	ldw	r3,8(r5)
 4024110:	2005883a 	mov	r2,r4
 4024114:	1900042e 	bgeu	r3,r4,4024128 <__cxa_free_dependent_exception+0x24>
 4024118:	29400317 	ldw	r5,12(r5)
 402411c:	1947883a 	add	r3,r3,r5
 4024120:	20c0012e 	bgeu	r4,r3,4024128 <__cxa_free_dependent_exception+0x24>
 4024124:	4023ec81 	jmpi	4023ec8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 4024128:	1009883a 	mov	r4,r2
 402412c:	4026f741 	jmpi	4026f74 <free>

04024130 <_GLOBAL__sub_I___cxa_allocate_exception>:
 4024130:	defffd04 	addi	sp,sp,-12
 4024134:	dc400115 	stw	r17,4(sp)
 4024138:	dc000015 	stw	r16,0(sp)
 402413c:	04424004 	movi	r17,2304
 4024140:	04000174 	movhi	r16,5
 4024144:	84348504 	addi	r16,r16,-11756
 4024148:	8809883a 	mov	r4,r17
 402414c:	dfc00215 	stw	ra,8(sp)
 4024150:	84400315 	stw	r17,12(r16)
 4024154:	4026f600 	call	4026f60 <malloc>
 4024158:	80800215 	stw	r2,8(r16)
 402415c:	10000826 	beq	r2,zero,4024180 <_GLOBAL__sub_I___cxa_allocate_exception+0x50>
 4024160:	80800115 	stw	r2,4(r16)
 4024164:	14400015 	stw	r17,0(r2)
 4024168:	10000115 	stw	zero,4(r2)
 402416c:	dfc00217 	ldw	ra,8(sp)
 4024170:	dc400117 	ldw	r17,4(sp)
 4024174:	dc000017 	ldw	r16,0(sp)
 4024178:	dec00304 	addi	sp,sp,12
 402417c:	f800283a 	ret
 4024180:	80000315 	stw	zero,12(r16)
 4024184:	80000115 	stw	zero,4(r16)
 4024188:	003ff806 	br	402416c <__flash_rwdata_start+0xfffedf00>

0402418c <__cxa_call_terminate>:
 402418c:	defffe04 	addi	sp,sp,-8
 4024190:	dfc00115 	stw	ra,4(sp)
 4024194:	dc000015 	stw	r16,0(sp)
 4024198:	20000d26 	beq	r4,zero,40241d0 <__cxa_call_terminate+0x44>
 402419c:	2021883a 	mov	r16,r4
 40241a0:	40239300 	call	4023930 <__cxa_begin_catch>
 40241a4:	80c00017 	ldw	r3,0(r16)
 40241a8:	016f3574 	movhi	r5,48341
 40241ac:	29754004 	addi	r5,r5,-11008
 40241b0:	194b883a 	add	r5,r3,r5
 40241b4:	80800117 	ldw	r2,4(r16)
 40241b8:	28c9803a 	cmpltu	r4,r5,r3
 40241bc:	00ee2cb4 	movhi	r3,47282
 40241c0:	18eaaf04 	addi	r3,r3,-21828
 40241c4:	10c5883a 	add	r2,r2,r3
 40241c8:	2085883a 	add	r2,r4,r2
 40241cc:	10000126 	beq	r2,zero,40241d4 <__cxa_call_terminate+0x48>
 40241d0:	4023e400 	call	4023e40 <_ZSt9terminatev>
 40241d4:	00800044 	movi	r2,1
 40241d8:	117ffd36 	bltu	r2,r5,40241d0 <__flash_rwdata_start+0xfffedf64>
 40241dc:	813ff817 	ldw	r4,-32(r16)
 40241e0:	4023d800 	call	4023d80 <_ZN10__cxxabiv111__terminateEPFvvE>

040241e4 <__cxa_get_globals_fast>:
 40241e4:	00800034 	movhi	r2,0
 40241e8:	10887404 	addi	r2,r2,8656
 40241ec:	f800283a 	ret

040241f0 <__cxa_get_globals>:
 40241f0:	00800034 	movhi	r2,0
 40241f4:	10887404 	addi	r2,r2,8656
 40241f8:	f800283a 	ret

040241fc <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 40241fc:	00800034 	movhi	r2,0
 4024200:	10808a04 	addi	r2,r2,552
 4024204:	20800015 	stw	r2,0(r4)
 4024208:	4023b481 	jmpi	4023b48 <_ZN10__cxxabiv117__class_type_infoD1Ev>

0402420c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 402420c:	defffe04 	addi	sp,sp,-8
 4024210:	00800034 	movhi	r2,0
 4024214:	dc000015 	stw	r16,0(sp)
 4024218:	dfc00115 	stw	ra,4(sp)
 402421c:	10808a04 	addi	r2,r2,552
 4024220:	20800015 	stw	r2,0(r4)
 4024224:	2021883a 	mov	r16,r4
 4024228:	4023b480 	call	4023b48 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 402422c:	8009883a 	mov	r4,r16
 4024230:	dfc00117 	ldw	ra,4(sp)
 4024234:	dc000017 	ldw	r16,0(sp)
 4024238:	dec00204 	addi	sp,sp,8
 402423c:	40237cc1 	jmpi	40237cc <_ZdlPv>

04024240 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 4024240:	defff504 	addi	sp,sp,-44
 4024244:	dc000115 	stw	r16,4(sp)
 4024248:	38800117 	ldw	r2,4(r7)
 402424c:	24000117 	ldw	r16,4(r4)
 4024250:	df000915 	stw	fp,36(sp)
 4024254:	ddc00815 	stw	r23,32(sp)
 4024258:	dd800715 	stw	r22,28(sp)
 402425c:	dcc00415 	stw	r19,16(sp)
 4024260:	dc800315 	stw	r18,12(sp)
 4024264:	dc400215 	stw	r17,8(sp)
 4024268:	dfc00a15 	stw	ra,40(sp)
 402426c:	dd400615 	stw	r21,24(sp)
 4024270:	dd000515 	stw	r20,20(sp)
 4024274:	2823883a 	mov	r17,r5
 4024278:	3039883a 	mov	fp,r6
 402427c:	dcc00b17 	ldw	r19,44(sp)
 4024280:	ddc00c17 	ldw	r23,48(sp)
 4024284:	dd800d17 	ldw	r22,52(sp)
 4024288:	dc800e17 	ldw	r18,56(sp)
 402428c:	80800b26 	beq	r16,r2,40242bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
 4024290:	80c00007 	ldb	r3,0(r16)
 4024294:	2029883a 	mov	r20,r4
 4024298:	01000a84 	movi	r4,42
 402429c:	382b883a 	mov	r21,r7
 40242a0:	19001a26 	beq	r3,r4,402430c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 40242a4:	100b883a 	mov	r5,r2
 40242a8:	8009883a 	mov	r4,r16
 40242ac:	d8c00015 	stw	r3,0(sp)
 40242b0:	4027df00 	call	4027df0 <strcmp>
 40242b4:	d8c00017 	ldw	r3,0(sp)
 40242b8:	1000141e 	bne	r2,zero,402430c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 40242bc:	94c00015 	stw	r19,0(r18)
 40242c0:	97000115 	stw	fp,4(r18)
 40242c4:	88002816 	blt	r17,zero,4024368 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x128>
 40242c8:	9c63883a 	add	r17,r19,r17
 40242cc:	b4403226 	beq	r22,r17,4024398 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 40242d0:	00800044 	movi	r2,1
 40242d4:	90800315 	stw	r2,12(r18)
 40242d8:	0005883a 	mov	r2,zero
 40242dc:	dfc00a17 	ldw	ra,40(sp)
 40242e0:	df000917 	ldw	fp,36(sp)
 40242e4:	ddc00817 	ldw	r23,32(sp)
 40242e8:	dd800717 	ldw	r22,28(sp)
 40242ec:	dd400617 	ldw	r21,24(sp)
 40242f0:	dd000517 	ldw	r20,20(sp)
 40242f4:	dcc00417 	ldw	r19,16(sp)
 40242f8:	dc800317 	ldw	r18,12(sp)
 40242fc:	dc400217 	ldw	r17,8(sp)
 4024300:	dc000117 	ldw	r16,4(sp)
 4024304:	dec00b04 	addi	sp,sp,44
 4024308:	f800283a 	ret
 402430c:	9d801926 	beq	r19,r22,4024374 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
 4024310:	a1000217 	ldw	r4,8(r20)
 4024314:	a80f883a 	mov	r7,r21
 4024318:	e00d883a 	mov	r6,fp
 402431c:	20800017 	ldw	r2,0(r4)
 4024320:	dc800e15 	stw	r18,56(sp)
 4024324:	dd800d15 	stw	r22,52(sp)
 4024328:	ddc00c15 	stw	r23,48(sp)
 402432c:	dcc00b15 	stw	r19,44(sp)
 4024330:	10800717 	ldw	r2,28(r2)
 4024334:	880b883a 	mov	r5,r17
 4024338:	dfc00a17 	ldw	ra,40(sp)
 402433c:	df000917 	ldw	fp,36(sp)
 4024340:	ddc00817 	ldw	r23,32(sp)
 4024344:	dd800717 	ldw	r22,28(sp)
 4024348:	dd400617 	ldw	r21,24(sp)
 402434c:	dd000517 	ldw	r20,20(sp)
 4024350:	dcc00417 	ldw	r19,16(sp)
 4024354:	dc800317 	ldw	r18,12(sp)
 4024358:	dc400217 	ldw	r17,8(sp)
 402435c:	dc000117 	ldw	r16,4(sp)
 4024360:	dec00b04 	addi	sp,sp,44
 4024364:	1000683a 	jmp	r2
 4024368:	00bfff84 	movi	r2,-2
 402436c:	88bfda1e 	bne	r17,r2,40242d8 <__flash_rwdata_start+0xfffee06c>
 4024370:	003fd706 	br	40242d0 <__flash_rwdata_start+0xfffee064>
 4024374:	b9400117 	ldw	r5,4(r23)
 4024378:	81400526 	beq	r16,r5,4024390 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 402437c:	00800a84 	movi	r2,42
 4024380:	18bfe326 	beq	r3,r2,4024310 <__flash_rwdata_start+0xfffee0a4>
 4024384:	8009883a 	mov	r4,r16
 4024388:	4027df00 	call	4027df0 <strcmp>
 402438c:	103fe01e 	bne	r2,zero,4024310 <__flash_rwdata_start+0xfffee0a4>
 4024390:	97000215 	stw	fp,8(r18)
 4024394:	003fd006 	br	40242d8 <__flash_rwdata_start+0xfffee06c>
 4024398:	00800184 	movi	r2,6
 402439c:	003fcd06 	br	40242d4 <__flash_rwdata_start+0xfffee068>

040243a0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 40243a0:	defffa04 	addi	sp,sp,-24
 40243a4:	dc000215 	stw	r16,8(sp)
 40243a8:	dc000617 	ldw	r16,24(sp)
 40243ac:	dc800415 	stw	r18,16(sp)
 40243b0:	dc400315 	stw	r17,12(sp)
 40243b4:	dfc00515 	stw	ra,20(sp)
 40243b8:	2023883a 	mov	r17,r4
 40243bc:	2825883a 	mov	r18,r5
 40243c0:	81800b26 	beq	r16,r6,40243f0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 40243c4:	89000217 	ldw	r4,8(r17)
 40243c8:	900b883a 	mov	r5,r18
 40243cc:	20800017 	ldw	r2,0(r4)
 40243d0:	dc000615 	stw	r16,24(sp)
 40243d4:	10800817 	ldw	r2,32(r2)
 40243d8:	dfc00517 	ldw	ra,20(sp)
 40243dc:	dc800417 	ldw	r18,16(sp)
 40243e0:	dc400317 	ldw	r17,12(sp)
 40243e4:	dc000217 	ldw	r16,8(sp)
 40243e8:	dec00604 	addi	sp,sp,24
 40243ec:	1000683a 	jmp	r2
 40243f0:	21000117 	ldw	r4,4(r4)
 40243f4:	39400117 	ldw	r5,4(r7)
 40243f8:	21400926 	beq	r4,r5,4024420 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 40243fc:	20c00007 	ldb	r3,0(r4)
 4024400:	00800a84 	movi	r2,42
 4024404:	18bfef26 	beq	r3,r2,40243c4 <__flash_rwdata_start+0xfffee158>
 4024408:	d9800015 	stw	r6,0(sp)
 402440c:	d9c00115 	stw	r7,4(sp)
 4024410:	4027df00 	call	4027df0 <strcmp>
 4024414:	d9800017 	ldw	r6,0(sp)
 4024418:	d9c00117 	ldw	r7,4(sp)
 402441c:	103fe91e 	bne	r2,zero,40243c4 <__flash_rwdata_start+0xfffee158>
 4024420:	00800184 	movi	r2,6
 4024424:	dfc00517 	ldw	ra,20(sp)
 4024428:	dc800417 	ldw	r18,16(sp)
 402442c:	dc400317 	ldw	r17,12(sp)
 4024430:	dc000217 	ldw	r16,8(sp)
 4024434:	dec00604 	addi	sp,sp,24
 4024438:	f800283a 	ret

0402443c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 402443c:	defffb04 	addi	sp,sp,-20
 4024440:	dcc00315 	stw	r19,12(sp)
 4024444:	dc800215 	stw	r18,8(sp)
 4024448:	dc400115 	stw	r17,4(sp)
 402444c:	dc000015 	stw	r16,0(sp)
 4024450:	dfc00415 	stw	ra,16(sp)
 4024454:	2027883a 	mov	r19,r4
 4024458:	2821883a 	mov	r16,r5
 402445c:	3023883a 	mov	r17,r6
 4024460:	3825883a 	mov	r18,r7
 4024464:	4023b8c0 	call	4023b8c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 4024468:	10c03fcc 	andi	r3,r2,255
 402446c:	18000726 	beq	r3,zero,402448c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 4024470:	dfc00417 	ldw	ra,16(sp)
 4024474:	dcc00317 	ldw	r19,12(sp)
 4024478:	dc800217 	ldw	r18,8(sp)
 402447c:	dc400117 	ldw	r17,4(sp)
 4024480:	dc000017 	ldw	r16,0(sp)
 4024484:	dec00504 	addi	sp,sp,20
 4024488:	f800283a 	ret
 402448c:	99000217 	ldw	r4,8(r19)
 4024490:	900f883a 	mov	r7,r18
 4024494:	880d883a 	mov	r6,r17
 4024498:	20800017 	ldw	r2,0(r4)
 402449c:	800b883a 	mov	r5,r16
 40244a0:	10800617 	ldw	r2,24(r2)
 40244a4:	dfc00417 	ldw	ra,16(sp)
 40244a8:	dcc00317 	ldw	r19,12(sp)
 40244ac:	dc800217 	ldw	r18,8(sp)
 40244b0:	dc400117 	ldw	r17,4(sp)
 40244b4:	dc000017 	ldw	r16,0(sp)
 40244b8:	dec00504 	addi	sp,sp,20
 40244bc:	1000683a 	jmp	r2

040244c0 <_ZNSt9exceptionD1Ev>:
 40244c0:	f800283a 	ret

040244c4 <_ZNSt13bad_exceptionD1Ev>:
 40244c4:	f800283a 	ret

040244c8 <_ZNKSt9exception4whatEv>:
 40244c8:	00800034 	movhi	r2,0
 40244cc:	10809304 	addi	r2,r2,588
 40244d0:	f800283a 	ret

040244d4 <_ZNKSt13bad_exception4whatEv>:
 40244d4:	00800034 	movhi	r2,0
 40244d8:	10809704 	addi	r2,r2,604
 40244dc:	f800283a 	ret

040244e0 <_ZNSt9exceptionD0Ev>:
 40244e0:	40237cc1 	jmpi	40237cc <_ZdlPv>

040244e4 <_ZNSt13bad_exceptionD0Ev>:
 40244e4:	40237cc1 	jmpi	40237cc <_ZdlPv>

040244e8 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 40244e8:	f800283a 	ret

040244ec <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 40244ec:	40237cc1 	jmpi	40237cc <_ZdlPv>

040244f0 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 40244f0:	f800283a 	ret

040244f4 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 40244f4:	40237cc1 	jmpi	40237cc <_ZdlPv>

040244f8 <_ZNSt9type_infoD1Ev>:
 40244f8:	f800283a 	ret

040244fc <_ZNKSt9type_info14__is_pointer_pEv>:
 40244fc:	0005883a 	mov	r2,zero
 4024500:	f800283a 	ret

04024504 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 4024504:	0005883a 	mov	r2,zero
 4024508:	f800283a 	ret

0402450c <_ZNSt9type_infoD0Ev>:
 402450c:	40237cc1 	jmpi	40237cc <_ZdlPv>

04024510 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 4024510:	21000117 	ldw	r4,4(r4)
 4024514:	29400117 	ldw	r5,4(r5)
 4024518:	21400c26 	beq	r4,r5,402454c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 402451c:	20c00007 	ldb	r3,0(r4)
 4024520:	00800a84 	movi	r2,42
 4024524:	18800726 	beq	r3,r2,4024544 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 4024528:	deffff04 	addi	sp,sp,-4
 402452c:	dfc00015 	stw	ra,0(sp)
 4024530:	4027df00 	call	4027df0 <strcmp>
 4024534:	1005003a 	cmpeq	r2,r2,zero
 4024538:	dfc00017 	ldw	ra,0(sp)
 402453c:	dec00104 	addi	sp,sp,4
 4024540:	f800283a 	ret
 4024544:	0005883a 	mov	r2,zero
 4024548:	f800283a 	ret
 402454c:	00800044 	movi	r2,1
 4024550:	f800283a 	ret

04024554 <__cxa_pure_virtual>:
 4024554:	01400034 	movhi	r5,0
 4024558:	deffff04 	addi	sp,sp,-4
 402455c:	2940d904 	addi	r5,r5,868
 4024560:	018006c4 	movi	r6,27
 4024564:	01000084 	movi	r4,2
 4024568:	dfc00015 	stw	ra,0(sp)
 402456c:	4033de40 	call	4033de4 <write>
 4024570:	4023e400 	call	4023e40 <_ZSt9terminatev>

04024574 <__cxa_deleted_virtual>:
 4024574:	01400034 	movhi	r5,0
 4024578:	deffff04 	addi	sp,sp,-4
 402457c:	2940e004 	addi	r5,r5,896
 4024580:	01800784 	movi	r6,30
 4024584:	01000084 	movi	r4,2
 4024588:	dfc00015 	stw	ra,0(sp)
 402458c:	4033de40 	call	4033de4 <write>
 4024590:	4023e400 	call	4023e40 <_ZSt9terminatev>

04024594 <__fixunssfsi>:
 4024594:	defffd04 	addi	sp,sp,-12
 4024598:	dc000015 	stw	r16,0(sp)
 402459c:	0413c034 	movhi	r16,20224
 40245a0:	800b883a 	mov	r5,r16
 40245a4:	dc400115 	stw	r17,4(sp)
 40245a8:	dfc00215 	stw	ra,8(sp)
 40245ac:	2023883a 	mov	r17,r4
 40245b0:	40251280 	call	4025128 <__gesf2>
 40245b4:	1000070e 	bge	r2,zero,40245d4 <__fixunssfsi+0x40>
 40245b8:	8809883a 	mov	r4,r17
 40245bc:	4025ac40 	call	4025ac4 <__fixsfsi>
 40245c0:	dfc00217 	ldw	ra,8(sp)
 40245c4:	dc400117 	ldw	r17,4(sp)
 40245c8:	dc000017 	ldw	r16,0(sp)
 40245cc:	dec00304 	addi	sp,sp,12
 40245d0:	f800283a 	ret
 40245d4:	800b883a 	mov	r5,r16
 40245d8:	8809883a 	mov	r4,r17
 40245dc:	40255e00 	call	40255e0 <__subsf3>
 40245e0:	1009883a 	mov	r4,r2
 40245e4:	4025ac40 	call	4025ac4 <__fixsfsi>
 40245e8:	00e00034 	movhi	r3,32768
 40245ec:	10c5883a 	add	r2,r2,r3
 40245f0:	003ff306 	br	40245c0 <__flash_rwdata_start+0xfffee354>

040245f4 <__divsi3>:
 40245f4:	20001b16 	blt	r4,zero,4024664 <__divsi3+0x70>
 40245f8:	000f883a 	mov	r7,zero
 40245fc:	28001616 	blt	r5,zero,4024658 <__divsi3+0x64>
 4024600:	200d883a 	mov	r6,r4
 4024604:	29001a2e 	bgeu	r5,r4,4024670 <__divsi3+0x7c>
 4024608:	00800804 	movi	r2,32
 402460c:	00c00044 	movi	r3,1
 4024610:	00000106 	br	4024618 <__divsi3+0x24>
 4024614:	10000d26 	beq	r2,zero,402464c <__divsi3+0x58>
 4024618:	294b883a 	add	r5,r5,r5
 402461c:	10bfffc4 	addi	r2,r2,-1
 4024620:	18c7883a 	add	r3,r3,r3
 4024624:	293ffb36 	bltu	r5,r4,4024614 <__flash_rwdata_start+0xfffee3a8>
 4024628:	0005883a 	mov	r2,zero
 402462c:	18000726 	beq	r3,zero,402464c <__divsi3+0x58>
 4024630:	0005883a 	mov	r2,zero
 4024634:	31400236 	bltu	r6,r5,4024640 <__divsi3+0x4c>
 4024638:	314dc83a 	sub	r6,r6,r5
 402463c:	10c4b03a 	or	r2,r2,r3
 4024640:	1806d07a 	srli	r3,r3,1
 4024644:	280ad07a 	srli	r5,r5,1
 4024648:	183ffa1e 	bne	r3,zero,4024634 <__flash_rwdata_start+0xfffee3c8>
 402464c:	38000126 	beq	r7,zero,4024654 <__divsi3+0x60>
 4024650:	0085c83a 	sub	r2,zero,r2
 4024654:	f800283a 	ret
 4024658:	014bc83a 	sub	r5,zero,r5
 402465c:	39c0005c 	xori	r7,r7,1
 4024660:	003fe706 	br	4024600 <__flash_rwdata_start+0xfffee394>
 4024664:	0109c83a 	sub	r4,zero,r4
 4024668:	01c00044 	movi	r7,1
 402466c:	003fe306 	br	40245fc <__flash_rwdata_start+0xfffee390>
 4024670:	00c00044 	movi	r3,1
 4024674:	003fee06 	br	4024630 <__flash_rwdata_start+0xfffee3c4>

04024678 <__modsi3>:
 4024678:	20001716 	blt	r4,zero,40246d8 <__modsi3+0x60>
 402467c:	000f883a 	mov	r7,zero
 4024680:	2005883a 	mov	r2,r4
 4024684:	28001216 	blt	r5,zero,40246d0 <__modsi3+0x58>
 4024688:	2900162e 	bgeu	r5,r4,40246e4 <__modsi3+0x6c>
 402468c:	01800804 	movi	r6,32
 4024690:	00c00044 	movi	r3,1
 4024694:	00000106 	br	402469c <__modsi3+0x24>
 4024698:	30000a26 	beq	r6,zero,40246c4 <__modsi3+0x4c>
 402469c:	294b883a 	add	r5,r5,r5
 40246a0:	31bfffc4 	addi	r6,r6,-1
 40246a4:	18c7883a 	add	r3,r3,r3
 40246a8:	293ffb36 	bltu	r5,r4,4024698 <__flash_rwdata_start+0xfffee42c>
 40246ac:	18000526 	beq	r3,zero,40246c4 <__modsi3+0x4c>
 40246b0:	1806d07a 	srli	r3,r3,1
 40246b4:	11400136 	bltu	r2,r5,40246bc <__modsi3+0x44>
 40246b8:	1145c83a 	sub	r2,r2,r5
 40246bc:	280ad07a 	srli	r5,r5,1
 40246c0:	183ffb1e 	bne	r3,zero,40246b0 <__flash_rwdata_start+0xfffee444>
 40246c4:	38000126 	beq	r7,zero,40246cc <__modsi3+0x54>
 40246c8:	0085c83a 	sub	r2,zero,r2
 40246cc:	f800283a 	ret
 40246d0:	014bc83a 	sub	r5,zero,r5
 40246d4:	003fec06 	br	4024688 <__flash_rwdata_start+0xfffee41c>
 40246d8:	0109c83a 	sub	r4,zero,r4
 40246dc:	01c00044 	movi	r7,1
 40246e0:	003fe706 	br	4024680 <__flash_rwdata_start+0xfffee414>
 40246e4:	00c00044 	movi	r3,1
 40246e8:	003ff106 	br	40246b0 <__flash_rwdata_start+0xfffee444>

040246ec <__udivsi3>:
 40246ec:	200d883a 	mov	r6,r4
 40246f0:	2900152e 	bgeu	r5,r4,4024748 <__udivsi3+0x5c>
 40246f4:	28001416 	blt	r5,zero,4024748 <__udivsi3+0x5c>
 40246f8:	00800804 	movi	r2,32
 40246fc:	00c00044 	movi	r3,1
 4024700:	00000206 	br	402470c <__udivsi3+0x20>
 4024704:	10000e26 	beq	r2,zero,4024740 <__udivsi3+0x54>
 4024708:	28000516 	blt	r5,zero,4024720 <__udivsi3+0x34>
 402470c:	294b883a 	add	r5,r5,r5
 4024710:	10bfffc4 	addi	r2,r2,-1
 4024714:	18c7883a 	add	r3,r3,r3
 4024718:	293ffa36 	bltu	r5,r4,4024704 <__flash_rwdata_start+0xfffee498>
 402471c:	18000826 	beq	r3,zero,4024740 <__udivsi3+0x54>
 4024720:	0005883a 	mov	r2,zero
 4024724:	31400236 	bltu	r6,r5,4024730 <__udivsi3+0x44>
 4024728:	314dc83a 	sub	r6,r6,r5
 402472c:	10c4b03a 	or	r2,r2,r3
 4024730:	1806d07a 	srli	r3,r3,1
 4024734:	280ad07a 	srli	r5,r5,1
 4024738:	183ffa1e 	bne	r3,zero,4024724 <__flash_rwdata_start+0xfffee4b8>
 402473c:	f800283a 	ret
 4024740:	0005883a 	mov	r2,zero
 4024744:	f800283a 	ret
 4024748:	00c00044 	movi	r3,1
 402474c:	003ff406 	br	4024720 <__flash_rwdata_start+0xfffee4b4>

04024750 <__umodsi3>:
 4024750:	2005883a 	mov	r2,r4
 4024754:	2900122e 	bgeu	r5,r4,40247a0 <__umodsi3+0x50>
 4024758:	28001116 	blt	r5,zero,40247a0 <__umodsi3+0x50>
 402475c:	01800804 	movi	r6,32
 4024760:	00c00044 	movi	r3,1
 4024764:	00000206 	br	4024770 <__umodsi3+0x20>
 4024768:	30000c26 	beq	r6,zero,402479c <__umodsi3+0x4c>
 402476c:	28000516 	blt	r5,zero,4024784 <__umodsi3+0x34>
 4024770:	294b883a 	add	r5,r5,r5
 4024774:	31bfffc4 	addi	r6,r6,-1
 4024778:	18c7883a 	add	r3,r3,r3
 402477c:	293ffa36 	bltu	r5,r4,4024768 <__flash_rwdata_start+0xfffee4fc>
 4024780:	18000626 	beq	r3,zero,402479c <__umodsi3+0x4c>
 4024784:	1806d07a 	srli	r3,r3,1
 4024788:	11400136 	bltu	r2,r5,4024790 <__umodsi3+0x40>
 402478c:	1145c83a 	sub	r2,r2,r5
 4024790:	280ad07a 	srli	r5,r5,1
 4024794:	183ffb1e 	bne	r3,zero,4024784 <__flash_rwdata_start+0xfffee518>
 4024798:	f800283a 	ret
 402479c:	f800283a 	ret
 40247a0:	00c00044 	movi	r3,1
 40247a4:	003ff706 	br	4024784 <__flash_rwdata_start+0xfffee518>

040247a8 <__addsf3>:
 40247a8:	defffc04 	addi	sp,sp,-16
 40247ac:	2004d7fa 	srli	r2,r4,31
 40247b0:	280cd5fa 	srli	r6,r5,23
 40247b4:	dc000015 	stw	r16,0(sp)
 40247b8:	00c02034 	movhi	r3,128
 40247bc:	2020d5fa 	srli	r16,r4,23
 40247c0:	280ed7fa 	srli	r7,r5,31
 40247c4:	18ffffc4 	addi	r3,r3,-1
 40247c8:	dc400115 	stw	r17,4(sp)
 40247cc:	1908703a 	and	r4,r3,r4
 40247d0:	194a703a 	and	r5,r3,r5
 40247d4:	dfc00315 	stw	ra,12(sp)
 40247d8:	dc800215 	stw	r18,8(sp)
 40247dc:	14403fcc 	andi	r17,r2,255
 40247e0:	84003fcc 	andi	r16,r16,255
 40247e4:	200890fa 	slli	r4,r4,3
 40247e8:	31803fcc 	andi	r6,r6,255
 40247ec:	280a90fa 	slli	r5,r5,3
 40247f0:	89c05026 	beq	r17,r7,4024934 <__addsf3+0x18c>
 40247f4:	8185c83a 	sub	r2,r16,r6
 40247f8:	00807a0e 	bge	zero,r2,40249e4 <__addsf3+0x23c>
 40247fc:	30001e1e 	bne	r6,zero,4024878 <__addsf3+0xd0>
 4024800:	28006d1e 	bne	r5,zero,40249b8 <__addsf3+0x210>
 4024804:	208001cc 	andi	r2,r4,7
 4024808:	10000426 	beq	r2,zero,402481c <__addsf3+0x74>
 402480c:	208003cc 	andi	r2,r4,15
 4024810:	00c00104 	movi	r3,4
 4024814:	10c00126 	beq	r2,r3,402481c <__addsf3+0x74>
 4024818:	20c9883a 	add	r4,r4,r3
 402481c:	2081002c 	andhi	r2,r4,1024
 4024820:	10003926 	beq	r2,zero,4024908 <__addsf3+0x160>
 4024824:	84000044 	addi	r16,r16,1
 4024828:	00803fc4 	movi	r2,255
 402482c:	80807826 	beq	r16,r2,4024a10 <__addsf3+0x268>
 4024830:	200891ba 	slli	r4,r4,6
 4024834:	8805883a 	mov	r2,r17
 4024838:	2008d27a 	srli	r4,r4,9
 402483c:	84003fcc 	andi	r16,r16,255
 4024840:	800695fa 	slli	r3,r16,23
 4024844:	10803fcc 	andi	r2,r2,255
 4024848:	04002034 	movhi	r16,128
 402484c:	843fffc4 	addi	r16,r16,-1
 4024850:	100497fa 	slli	r2,r2,31
 4024854:	2408703a 	and	r4,r4,r16
 4024858:	20e0b03a 	or	r16,r4,r3
 402485c:	8084b03a 	or	r2,r16,r2
 4024860:	dfc00317 	ldw	ra,12(sp)
 4024864:	dc800217 	ldw	r18,8(sp)
 4024868:	dc400117 	ldw	r17,4(sp)
 402486c:	dc000017 	ldw	r16,0(sp)
 4024870:	dec00404 	addi	sp,sp,16
 4024874:	f800283a 	ret
 4024878:	00c03fc4 	movi	r3,255
 402487c:	80ffe126 	beq	r16,r3,4024804 <__flash_rwdata_start+0xfffee598>
 4024880:	29410034 	orhi	r5,r5,1024
 4024884:	00c006c4 	movi	r3,27
 4024888:	18807516 	blt	r3,r2,4024a60 <__addsf3+0x2b8>
 402488c:	00c00804 	movi	r3,32
 4024890:	1887c83a 	sub	r3,r3,r2
 4024894:	28c6983a 	sll	r3,r5,r3
 4024898:	288ad83a 	srl	r5,r5,r2
 402489c:	1804c03a 	cmpne	r2,r3,zero
 40248a0:	288ab03a 	or	r5,r5,r2
 40248a4:	2149c83a 	sub	r4,r4,r5
 40248a8:	2081002c 	andhi	r2,r4,1024
 40248ac:	10001426 	beq	r2,zero,4024900 <__addsf3+0x158>
 40248b0:	04810034 	movhi	r18,1024
 40248b4:	94bfffc4 	addi	r18,r18,-1
 40248b8:	24a4703a 	and	r18,r4,r18
 40248bc:	9009883a 	mov	r4,r18
 40248c0:	4026ee40 	call	4026ee4 <__clzsi2>
 40248c4:	10bffec4 	addi	r2,r2,-5
 40248c8:	90a4983a 	sll	r18,r18,r2
 40248cc:	14005416 	blt	r2,r16,4024a20 <__addsf3+0x278>
 40248d0:	1405c83a 	sub	r2,r2,r16
 40248d4:	11000044 	addi	r4,r2,1
 40248d8:	00800804 	movi	r2,32
 40248dc:	1105c83a 	sub	r2,r2,r4
 40248e0:	9084983a 	sll	r2,r18,r2
 40248e4:	9124d83a 	srl	r18,r18,r4
 40248e8:	0021883a 	mov	r16,zero
 40248ec:	1008c03a 	cmpne	r4,r2,zero
 40248f0:	9108b03a 	or	r4,r18,r4
 40248f4:	003fc306 	br	4024804 <__flash_rwdata_start+0xfffee598>
 40248f8:	1000db26 	beq	r2,zero,4024c68 <__addsf3+0x4c0>
 40248fc:	1009883a 	mov	r4,r2
 4024900:	208001cc 	andi	r2,r4,7
 4024904:	103fc11e 	bne	r2,zero,402480c <__flash_rwdata_start+0xfffee5a0>
 4024908:	2006d0fa 	srli	r3,r4,3
 402490c:	01003fc4 	movi	r4,255
 4024910:	8805883a 	mov	r2,r17
 4024914:	8100241e 	bne	r16,r4,40249a8 <__addsf3+0x200>
 4024918:	18006e26 	beq	r3,zero,4024ad4 <__addsf3+0x32c>
 402491c:	19001034 	orhi	r4,r3,64
 4024920:	00c02034 	movhi	r3,128
 4024924:	18ffffc4 	addi	r3,r3,-1
 4024928:	043fffc4 	movi	r16,-1
 402492c:	20c8703a 	and	r4,r4,r3
 4024930:	003fc206 	br	402483c <__flash_rwdata_start+0xfffee5d0>
 4024934:	8187c83a 	sub	r3,r16,r6
 4024938:	00c03e0e 	bge	zero,r3,4024a34 <__addsf3+0x28c>
 402493c:	30002326 	beq	r6,zero,40249cc <__addsf3+0x224>
 4024940:	01803fc4 	movi	r6,255
 4024944:	81bfaf26 	beq	r16,r6,4024804 <__flash_rwdata_start+0xfffee598>
 4024948:	29410034 	orhi	r5,r5,1024
 402494c:	018006c4 	movi	r6,27
 4024950:	30c07416 	blt	r6,r3,4024b24 <__addsf3+0x37c>
 4024954:	01800804 	movi	r6,32
 4024958:	30cdc83a 	sub	r6,r6,r3
 402495c:	298c983a 	sll	r6,r5,r6
 4024960:	28cad83a 	srl	r5,r5,r3
 4024964:	3006c03a 	cmpne	r3,r6,zero
 4024968:	28cab03a 	or	r5,r5,r3
 402496c:	2149883a 	add	r4,r4,r5
 4024970:	20c1002c 	andhi	r3,r4,1024
 4024974:	183fe226 	beq	r3,zero,4024900 <__flash_rwdata_start+0xfffee694>
 4024978:	84000044 	addi	r16,r16,1
 402497c:	00c03fc4 	movi	r3,255
 4024980:	80c05426 	beq	r16,r3,4024ad4 <__addsf3+0x32c>
 4024984:	00bf0034 	movhi	r2,64512
 4024988:	10bfffc4 	addi	r2,r2,-1
 402498c:	20c0004c 	andi	r3,r4,1
 4024990:	2088703a 	and	r4,r4,r2
 4024994:	2008d07a 	srli	r4,r4,1
 4024998:	20c8b03a 	or	r4,r4,r3
 402499c:	003f9906 	br	4024804 <__flash_rwdata_start+0xfffee598>
 40249a0:	0007883a 	mov	r3,zero
 40249a4:	0005883a 	mov	r2,zero
 40249a8:	01002034 	movhi	r4,128
 40249ac:	213fffc4 	addi	r4,r4,-1
 40249b0:	1908703a 	and	r4,r3,r4
 40249b4:	003fa106 	br	402483c <__flash_rwdata_start+0xfffee5d0>
 40249b8:	10bfffc4 	addi	r2,r2,-1
 40249bc:	103fb926 	beq	r2,zero,40248a4 <__flash_rwdata_start+0xfffee638>
 40249c0:	00c03fc4 	movi	r3,255
 40249c4:	80ffaf1e 	bne	r16,r3,4024884 <__flash_rwdata_start+0xfffee618>
 40249c8:	003f8e06 	br	4024804 <__flash_rwdata_start+0xfffee598>
 40249cc:	283f8d26 	beq	r5,zero,4024804 <__flash_rwdata_start+0xfffee598>
 40249d0:	18ffffc4 	addi	r3,r3,-1
 40249d4:	183fe526 	beq	r3,zero,402496c <__flash_rwdata_start+0xfffee700>
 40249d8:	01803fc4 	movi	r6,255
 40249dc:	81bfdb1e 	bne	r16,r6,402494c <__flash_rwdata_start+0xfffee6e0>
 40249e0:	003f8806 	br	4024804 <__flash_rwdata_start+0xfffee598>
 40249e4:	1000201e 	bne	r2,zero,4024a68 <__addsf3+0x2c0>
 40249e8:	80800044 	addi	r2,r16,1
 40249ec:	10803fcc 	andi	r2,r2,255
 40249f0:	01800044 	movi	r6,1
 40249f4:	3080450e 	bge	r6,r2,4024b0c <__addsf3+0x364>
 40249f8:	2165c83a 	sub	r18,r4,r5
 40249fc:	90c1002c 	andhi	r3,r18,1024
 4024a00:	18002b26 	beq	r3,zero,4024ab0 <__addsf3+0x308>
 4024a04:	2925c83a 	sub	r18,r5,r4
 4024a08:	3823883a 	mov	r17,r7
 4024a0c:	003fab06 	br	40248bc <__flash_rwdata_start+0xfffee650>
 4024a10:	8805883a 	mov	r2,r17
 4024a14:	043fffc4 	movi	r16,-1
 4024a18:	0009883a 	mov	r4,zero
 4024a1c:	003f8706 	br	402483c <__flash_rwdata_start+0xfffee5d0>
 4024a20:	013f0034 	movhi	r4,64512
 4024a24:	213fffc4 	addi	r4,r4,-1
 4024a28:	80a1c83a 	sub	r16,r16,r2
 4024a2c:	9108703a 	and	r4,r18,r4
 4024a30:	003f7406 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024a34:	1800411e 	bne	r3,zero,4024b3c <__addsf3+0x394>
 4024a38:	80c00044 	addi	r3,r16,1
 4024a3c:	19c03fcc 	andi	r7,r3,255
 4024a40:	01800044 	movi	r6,1
 4024a44:	31c0260e 	bge	r6,r7,4024ae0 <__addsf3+0x338>
 4024a48:	01803fc4 	movi	r6,255
 4024a4c:	19802126 	beq	r3,r6,4024ad4 <__addsf3+0x32c>
 4024a50:	2149883a 	add	r4,r4,r5
 4024a54:	2008d07a 	srli	r4,r4,1
 4024a58:	1821883a 	mov	r16,r3
 4024a5c:	003f6906 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024a60:	01400044 	movi	r5,1
 4024a64:	003f8f06 	br	40248a4 <__flash_rwdata_start+0xfffee638>
 4024a68:	8000151e 	bne	r16,zero,4024ac0 <__addsf3+0x318>
 4024a6c:	20002f26 	beq	r4,zero,4024b2c <__addsf3+0x384>
 4024a70:	0084303a 	nor	r2,zero,r2
 4024a74:	10000a26 	beq	r2,zero,4024aa0 <__addsf3+0x2f8>
 4024a78:	00c03fc4 	movi	r3,255
 4024a7c:	30c02b26 	beq	r6,r3,4024b2c <__addsf3+0x384>
 4024a80:	00c006c4 	movi	r3,27
 4024a84:	18806d16 	blt	r3,r2,4024c3c <__addsf3+0x494>
 4024a88:	00c00804 	movi	r3,32
 4024a8c:	1887c83a 	sub	r3,r3,r2
 4024a90:	20c6983a 	sll	r3,r4,r3
 4024a94:	2084d83a 	srl	r2,r4,r2
 4024a98:	1808c03a 	cmpne	r4,r3,zero
 4024a9c:	1108b03a 	or	r4,r2,r4
 4024aa0:	2909c83a 	sub	r4,r5,r4
 4024aa4:	3021883a 	mov	r16,r6
 4024aa8:	3823883a 	mov	r17,r7
 4024aac:	003f7e06 	br	40248a8 <__flash_rwdata_start+0xfffee63c>
 4024ab0:	903f821e 	bne	r18,zero,40248bc <__flash_rwdata_start+0xfffee650>
 4024ab4:	0005883a 	mov	r2,zero
 4024ab8:	0021883a 	mov	r16,zero
 4024abc:	003fba06 	br	40249a8 <__flash_rwdata_start+0xfffee73c>
 4024ac0:	00c03fc4 	movi	r3,255
 4024ac4:	30c01926 	beq	r6,r3,4024b2c <__addsf3+0x384>
 4024ac8:	0085c83a 	sub	r2,zero,r2
 4024acc:	21010034 	orhi	r4,r4,1024
 4024ad0:	003feb06 	br	4024a80 <__flash_rwdata_start+0xfffee814>
 4024ad4:	043fffc4 	movi	r16,-1
 4024ad8:	0009883a 	mov	r4,zero
 4024adc:	003f5706 	br	402483c <__flash_rwdata_start+0xfffee5d0>
 4024ae0:	80004a1e 	bne	r16,zero,4024c0c <__addsf3+0x464>
 4024ae4:	20005926 	beq	r4,zero,4024c4c <__addsf3+0x4a4>
 4024ae8:	283f4626 	beq	r5,zero,4024804 <__flash_rwdata_start+0xfffee598>
 4024aec:	2149883a 	add	r4,r4,r5
 4024af0:	2081002c 	andhi	r2,r4,1024
 4024af4:	103f8226 	beq	r2,zero,4024900 <__flash_rwdata_start+0xfffee694>
 4024af8:	00bf0034 	movhi	r2,64512
 4024afc:	10bfffc4 	addi	r2,r2,-1
 4024b00:	3021883a 	mov	r16,r6
 4024b04:	2088703a 	and	r4,r4,r2
 4024b08:	003f3e06 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024b0c:	8000121e 	bne	r16,zero,4024b58 <__addsf3+0x3b0>
 4024b10:	2000261e 	bne	r4,zero,4024bac <__addsf3+0x404>
 4024b14:	283fa226 	beq	r5,zero,40249a0 <__flash_rwdata_start+0xfffee734>
 4024b18:	2809883a 	mov	r4,r5
 4024b1c:	3823883a 	mov	r17,r7
 4024b20:	003f3806 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024b24:	01400044 	movi	r5,1
 4024b28:	003f9006 	br	402496c <__flash_rwdata_start+0xfffee700>
 4024b2c:	2809883a 	mov	r4,r5
 4024b30:	3021883a 	mov	r16,r6
 4024b34:	3823883a 	mov	r17,r7
 4024b38:	003f3206 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024b3c:	80000c1e 	bne	r16,zero,4024b70 <__addsf3+0x3c8>
 4024b40:	20002f26 	beq	r4,zero,4024c00 <__addsf3+0x458>
 4024b44:	00c6303a 	nor	r3,zero,r3
 4024b48:	18002b1e 	bne	r3,zero,4024bf8 <__addsf3+0x450>
 4024b4c:	2149883a 	add	r4,r4,r5
 4024b50:	3021883a 	mov	r16,r6
 4024b54:	003f8606 	br	4024970 <__flash_rwdata_start+0xfffee704>
 4024b58:	20001b1e 	bne	r4,zero,4024bc8 <__addsf3+0x420>
 4024b5c:	28003926 	beq	r5,zero,4024c44 <__addsf3+0x49c>
 4024b60:	2809883a 	mov	r4,r5
 4024b64:	3823883a 	mov	r17,r7
 4024b68:	04003fc4 	movi	r16,255
 4024b6c:	003f2506 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024b70:	01c03fc4 	movi	r7,255
 4024b74:	31c02226 	beq	r6,r7,4024c00 <__addsf3+0x458>
 4024b78:	00c7c83a 	sub	r3,zero,r3
 4024b7c:	21010034 	orhi	r4,r4,1024
 4024b80:	01c006c4 	movi	r7,27
 4024b84:	38c03616 	blt	r7,r3,4024c60 <__addsf3+0x4b8>
 4024b88:	01c00804 	movi	r7,32
 4024b8c:	38cfc83a 	sub	r7,r7,r3
 4024b90:	21ce983a 	sll	r7,r4,r7
 4024b94:	20c6d83a 	srl	r3,r4,r3
 4024b98:	3808c03a 	cmpne	r4,r7,zero
 4024b9c:	1906b03a 	or	r3,r3,r4
 4024ba0:	1949883a 	add	r4,r3,r5
 4024ba4:	3021883a 	mov	r16,r6
 4024ba8:	003f7106 	br	4024970 <__flash_rwdata_start+0xfffee704>
 4024bac:	283f1526 	beq	r5,zero,4024804 <__flash_rwdata_start+0xfffee598>
 4024bb0:	2145c83a 	sub	r2,r4,r5
 4024bb4:	10c1002c 	andhi	r3,r2,1024
 4024bb8:	183f4f26 	beq	r3,zero,40248f8 <__flash_rwdata_start+0xfffee68c>
 4024bbc:	2909c83a 	sub	r4,r5,r4
 4024bc0:	3823883a 	mov	r17,r7
 4024bc4:	003f0f06 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024bc8:	28001a26 	beq	r5,zero,4024c34 <__addsf3+0x48c>
 4024bcc:	2008d0fa 	srli	r4,r4,3
 4024bd0:	2080102c 	andhi	r2,r4,64
 4024bd4:	10000526 	beq	r2,zero,4024bec <__addsf3+0x444>
 4024bd8:	280ad0fa 	srli	r5,r5,3
 4024bdc:	2880102c 	andhi	r2,r5,64
 4024be0:	1000021e 	bne	r2,zero,4024bec <__addsf3+0x444>
 4024be4:	2809883a 	mov	r4,r5
 4024be8:	3823883a 	mov	r17,r7
 4024bec:	200890fa 	slli	r4,r4,3
 4024bf0:	04003fc4 	movi	r16,255
 4024bf4:	003f0306 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024bf8:	01c03fc4 	movi	r7,255
 4024bfc:	31ffe01e 	bne	r6,r7,4024b80 <__flash_rwdata_start+0xfffee914>
 4024c00:	2809883a 	mov	r4,r5
 4024c04:	3021883a 	mov	r16,r6
 4024c08:	003efe06 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024c0c:	20001126 	beq	r4,zero,4024c54 <__addsf3+0x4ac>
 4024c10:	28000826 	beq	r5,zero,4024c34 <__addsf3+0x48c>
 4024c14:	2008d0fa 	srli	r4,r4,3
 4024c18:	2080102c 	andhi	r2,r4,64
 4024c1c:	103ff326 	beq	r2,zero,4024bec <__flash_rwdata_start+0xfffee980>
 4024c20:	280ad0fa 	srli	r5,r5,3
 4024c24:	2880102c 	andhi	r2,r5,64
 4024c28:	103ff01e 	bne	r2,zero,4024bec <__flash_rwdata_start+0xfffee980>
 4024c2c:	2809883a 	mov	r4,r5
 4024c30:	003fee06 	br	4024bec <__flash_rwdata_start+0xfffee980>
 4024c34:	04003fc4 	movi	r16,255
 4024c38:	003ef206 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024c3c:	01000044 	movi	r4,1
 4024c40:	003f9706 	br	4024aa0 <__flash_rwdata_start+0xfffee834>
 4024c44:	0005883a 	mov	r2,zero
 4024c48:	003f3406 	br	402491c <__flash_rwdata_start+0xfffee6b0>
 4024c4c:	2809883a 	mov	r4,r5
 4024c50:	003eec06 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024c54:	2809883a 	mov	r4,r5
 4024c58:	04003fc4 	movi	r16,255
 4024c5c:	003ee906 	br	4024804 <__flash_rwdata_start+0xfffee598>
 4024c60:	00c00044 	movi	r3,1
 4024c64:	003fce06 	br	4024ba0 <__flash_rwdata_start+0xfffee934>
 4024c68:	0005883a 	mov	r2,zero
 4024c6c:	003f4e06 	br	40249a8 <__flash_rwdata_start+0xfffee73c>

04024c70 <__divsf3>:
 4024c70:	defff504 	addi	sp,sp,-44
 4024c74:	200cd5fa 	srli	r6,r4,23
 4024c78:	dcc00415 	stw	r19,16(sp)
 4024c7c:	2026d7fa 	srli	r19,r4,31
 4024c80:	00c02034 	movhi	r3,128
 4024c84:	dd800715 	stw	r22,28(sp)
 4024c88:	dd000515 	stw	r20,20(sp)
 4024c8c:	dc800315 	stw	r18,12(sp)
 4024c90:	18ffffc4 	addi	r3,r3,-1
 4024c94:	dfc00a15 	stw	ra,40(sp)
 4024c98:	df000915 	stw	fp,36(sp)
 4024c9c:	ddc00815 	stw	r23,32(sp)
 4024ca0:	dd400615 	stw	r21,24(sp)
 4024ca4:	dc400215 	stw	r17,8(sp)
 4024ca8:	dc000115 	stw	r16,4(sp)
 4024cac:	35003fcc 	andi	r20,r6,255
 4024cb0:	1924703a 	and	r18,r3,r4
 4024cb4:	9d803fcc 	andi	r22,r19,255
 4024cb8:	a0005226 	beq	r20,zero,4024e04 <__divsf3+0x194>
 4024cbc:	00803fc4 	movi	r2,255
 4024cc0:	a0802e26 	beq	r20,r2,4024d7c <__divsf3+0x10c>
 4024cc4:	91002034 	orhi	r4,r18,128
 4024cc8:	202490fa 	slli	r18,r4,3
 4024ccc:	a53fe044 	addi	r20,r20,-127
 4024cd0:	0021883a 	mov	r16,zero
 4024cd4:	002f883a 	mov	r23,zero
 4024cd8:	280cd5fa 	srli	r6,r5,23
 4024cdc:	282ad7fa 	srli	r21,r5,31
 4024ce0:	00c02034 	movhi	r3,128
 4024ce4:	18ffffc4 	addi	r3,r3,-1
 4024ce8:	31803fcc 	andi	r6,r6,255
 4024cec:	1962703a 	and	r17,r3,r5
 4024cf0:	af003fcc 	andi	fp,r21,255
 4024cf4:	30004a26 	beq	r6,zero,4024e20 <__divsf3+0x1b0>
 4024cf8:	00803fc4 	movi	r2,255
 4024cfc:	30804526 	beq	r6,r2,4024e14 <__divsf3+0x1a4>
 4024d00:	89402034 	orhi	r5,r17,128
 4024d04:	282290fa 	slli	r17,r5,3
 4024d08:	31bfe044 	addi	r6,r6,-127
 4024d0c:	000b883a 	mov	r5,zero
 4024d10:	2c20b03a 	or	r16,r5,r16
 4024d14:	802090ba 	slli	r16,r16,2
 4024d18:	008100b4 	movhi	r2,1026
 4024d1c:	10934f04 	addi	r2,r2,19772
 4024d20:	80a1883a 	add	r16,r16,r2
 4024d24:	81000017 	ldw	r4,0(r16)
 4024d28:	9d46f03a 	xor	r3,r19,r21
 4024d2c:	180f883a 	mov	r7,r3
 4024d30:	18803fcc 	andi	r2,r3,255
 4024d34:	a18dc83a 	sub	r6,r20,r6
 4024d38:	2000683a 	jmp	r4
 4024d3c:	04024f20 	cmpeqi	r16,zero,2364
 4024d40:	04024da4 	muli	r16,zero,2358
 4024d44:	04024f14 	movui	r16,2364
 4024d48:	04024d90 	cmplti	r16,zero,2358
 4024d4c:	04024f14 	movui	r16,2364
 4024d50:	04024eec 	andhi	r16,zero,2363
 4024d54:	04024f14 	movui	r16,2364
 4024d58:	04024d90 	cmplti	r16,zero,2358
 4024d5c:	04024da4 	muli	r16,zero,2358
 4024d60:	04024da4 	muli	r16,zero,2358
 4024d64:	04024eec 	andhi	r16,zero,2363
 4024d68:	04024d90 	cmplti	r16,zero,2358
 4024d6c:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024d70:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024d74:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024d78:	04024fb4 	movhi	r16,2366
 4024d7c:	9000581e 	bne	r18,zero,4024ee0 <__divsf3+0x270>
 4024d80:	04000204 	movi	r16,8
 4024d84:	05c00084 	movi	r23,2
 4024d88:	003fd306 	br	4024cd8 <__flash_rwdata_start+0xfffeea6c>
 4024d8c:	0023883a 	mov	r17,zero
 4024d90:	e02d883a 	mov	r22,fp
 4024d94:	282f883a 	mov	r23,r5
 4024d98:	00800084 	movi	r2,2
 4024d9c:	b8808f1e 	bne	r23,r2,4024fdc <__divsf3+0x36c>
 4024da0:	b005883a 	mov	r2,r22
 4024da4:	11c0004c 	andi	r7,r2,1
 4024da8:	013fffc4 	movi	r4,-1
 4024dac:	000d883a 	mov	r6,zero
 4024db0:	21003fcc 	andi	r4,r4,255
 4024db4:	200895fa 	slli	r4,r4,23
 4024db8:	38803fcc 	andi	r2,r7,255
 4024dbc:	00c02034 	movhi	r3,128
 4024dc0:	100497fa 	slli	r2,r2,31
 4024dc4:	18ffffc4 	addi	r3,r3,-1
 4024dc8:	30c6703a 	and	r3,r6,r3
 4024dcc:	1906b03a 	or	r3,r3,r4
 4024dd0:	1884b03a 	or	r2,r3,r2
 4024dd4:	dfc00a17 	ldw	ra,40(sp)
 4024dd8:	df000917 	ldw	fp,36(sp)
 4024ddc:	ddc00817 	ldw	r23,32(sp)
 4024de0:	dd800717 	ldw	r22,28(sp)
 4024de4:	dd400617 	ldw	r21,24(sp)
 4024de8:	dd000517 	ldw	r20,20(sp)
 4024dec:	dcc00417 	ldw	r19,16(sp)
 4024df0:	dc800317 	ldw	r18,12(sp)
 4024df4:	dc400217 	ldw	r17,8(sp)
 4024df8:	dc000117 	ldw	r16,4(sp)
 4024dfc:	dec00b04 	addi	sp,sp,44
 4024e00:	f800283a 	ret
 4024e04:	90002b1e 	bne	r18,zero,4024eb4 <__divsf3+0x244>
 4024e08:	04000104 	movi	r16,4
 4024e0c:	05c00044 	movi	r23,1
 4024e10:	003fb106 	br	4024cd8 <__flash_rwdata_start+0xfffeea6c>
 4024e14:	8800251e 	bne	r17,zero,4024eac <__divsf3+0x23c>
 4024e18:	01400084 	movi	r5,2
 4024e1c:	00000206 	br	4024e28 <__divsf3+0x1b8>
 4024e20:	88001a1e 	bne	r17,zero,4024e8c <__divsf3+0x21c>
 4024e24:	01400044 	movi	r5,1
 4024e28:	8160b03a 	or	r16,r16,r5
 4024e2c:	802090ba 	slli	r16,r16,2
 4024e30:	00c100b4 	movhi	r3,1026
 4024e34:	18d39304 	addi	r3,r3,20044
 4024e38:	80e1883a 	add	r16,r16,r3
 4024e3c:	80c00017 	ldw	r3,0(r16)
 4024e40:	9d44f03a 	xor	r2,r19,r21
 4024e44:	a18dc83a 	sub	r6,r20,r6
 4024e48:	1800683a 	jmp	r3
 4024e4c:	04024da4 	muli	r16,zero,2358
 4024e50:	04024da4 	muli	r16,zero,2358
 4024e54:	04024ff0 	cmpltui	r16,zero,2367
 4024e58:	04024d8c 	andi	r16,zero,2358
 4024e5c:	04024ff0 	cmpltui	r16,zero,2367
 4024e60:	04024eec 	andhi	r16,zero,2363
 4024e64:	04024ff0 	cmpltui	r16,zero,2367
 4024e68:	04024d8c 	andi	r16,zero,2358
 4024e6c:	04024da4 	muli	r16,zero,2358
 4024e70:	04024da4 	muli	r16,zero,2358
 4024e74:	04024eec 	andhi	r16,zero,2363
 4024e78:	04024d8c 	andi	r16,zero,2358
 4024e7c:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024e80:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024e84:	04025000 	call	402500 <__alt_heap_start+0x3b51b4>
 4024e88:	04025018 	cmpnei	r16,zero,2368
 4024e8c:	8809883a 	mov	r4,r17
 4024e90:	4026ee40 	call	4026ee4 <__clzsi2>
 4024e94:	10fffec4 	addi	r3,r2,-5
 4024e98:	10801d84 	addi	r2,r2,118
 4024e9c:	88e2983a 	sll	r17,r17,r3
 4024ea0:	008dc83a 	sub	r6,zero,r2
 4024ea4:	000b883a 	mov	r5,zero
 4024ea8:	003f9906 	br	4024d10 <__flash_rwdata_start+0xfffeeaa4>
 4024eac:	014000c4 	movi	r5,3
 4024eb0:	003f9706 	br	4024d10 <__flash_rwdata_start+0xfffeeaa4>
 4024eb4:	9009883a 	mov	r4,r18
 4024eb8:	d9400015 	stw	r5,0(sp)
 4024ebc:	4026ee40 	call	4026ee4 <__clzsi2>
 4024ec0:	10fffec4 	addi	r3,r2,-5
 4024ec4:	11801d84 	addi	r6,r2,118
 4024ec8:	90e4983a 	sll	r18,r18,r3
 4024ecc:	01a9c83a 	sub	r20,zero,r6
 4024ed0:	0021883a 	mov	r16,zero
 4024ed4:	002f883a 	mov	r23,zero
 4024ed8:	d9400017 	ldw	r5,0(sp)
 4024edc:	003f7e06 	br	4024cd8 <__flash_rwdata_start+0xfffeea6c>
 4024ee0:	04000304 	movi	r16,12
 4024ee4:	05c000c4 	movi	r23,3
 4024ee8:	003f7b06 	br	4024cd8 <__flash_rwdata_start+0xfffeea6c>
 4024eec:	01802034 	movhi	r6,128
 4024ef0:	000f883a 	mov	r7,zero
 4024ef4:	31bfffc4 	addi	r6,r6,-1
 4024ef8:	013fffc4 	movi	r4,-1
 4024efc:	003fac06 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4024f00:	01400044 	movi	r5,1
 4024f04:	2909c83a 	sub	r4,r5,r4
 4024f08:	00c006c4 	movi	r3,27
 4024f0c:	19004b0e 	bge	r3,r4,402503c <__divsf3+0x3cc>
 4024f10:	114e703a 	and	r7,r2,r5
 4024f14:	0009883a 	mov	r4,zero
 4024f18:	000d883a 	mov	r6,zero
 4024f1c:	003fa406 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4024f20:	9006917a 	slli	r3,r18,5
 4024f24:	8822917a 	slli	r17,r17,5
 4024f28:	1c40372e 	bgeu	r3,r17,4025008 <__divsf3+0x398>
 4024f2c:	31bfffc4 	addi	r6,r6,-1
 4024f30:	010006c4 	movi	r4,27
 4024f34:	000b883a 	mov	r5,zero
 4024f38:	180f883a 	mov	r7,r3
 4024f3c:	294b883a 	add	r5,r5,r5
 4024f40:	18c7883a 	add	r3,r3,r3
 4024f44:	38000116 	blt	r7,zero,4024f4c <__divsf3+0x2dc>
 4024f48:	1c400236 	bltu	r3,r17,4024f54 <__divsf3+0x2e4>
 4024f4c:	1c47c83a 	sub	r3,r3,r17
 4024f50:	29400054 	ori	r5,r5,1
 4024f54:	213fffc4 	addi	r4,r4,-1
 4024f58:	203ff71e 	bne	r4,zero,4024f38 <__flash_rwdata_start+0xfffeeccc>
 4024f5c:	1806c03a 	cmpne	r3,r3,zero
 4024f60:	1962b03a 	or	r17,r3,r5
 4024f64:	31001fc4 	addi	r4,r6,127
 4024f68:	013fe50e 	bge	zero,r4,4024f00 <__flash_rwdata_start+0xfffeec94>
 4024f6c:	88c001cc 	andi	r3,r17,7
 4024f70:	18000426 	beq	r3,zero,4024f84 <__divsf3+0x314>
 4024f74:	88c003cc 	andi	r3,r17,15
 4024f78:	01400104 	movi	r5,4
 4024f7c:	19400126 	beq	r3,r5,4024f84 <__divsf3+0x314>
 4024f80:	8963883a 	add	r17,r17,r5
 4024f84:	88c2002c 	andhi	r3,r17,2048
 4024f88:	18000426 	beq	r3,zero,4024f9c <__divsf3+0x32c>
 4024f8c:	00fe0034 	movhi	r3,63488
 4024f90:	18ffffc4 	addi	r3,r3,-1
 4024f94:	31002004 	addi	r4,r6,128
 4024f98:	88e2703a 	and	r17,r17,r3
 4024f9c:	00c03f84 	movi	r3,254
 4024fa0:	193f8016 	blt	r3,r4,4024da4 <__flash_rwdata_start+0xfffeeb38>
 4024fa4:	880c91ba 	slli	r6,r17,6
 4024fa8:	11c0004c 	andi	r7,r2,1
 4024fac:	300cd27a 	srli	r6,r6,9
 4024fb0:	003f7f06 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4024fb4:	9080102c 	andhi	r2,r18,64
 4024fb8:	10000226 	beq	r2,zero,4024fc4 <__divsf3+0x354>
 4024fbc:	8880102c 	andhi	r2,r17,64
 4024fc0:	10001826 	beq	r2,zero,4025024 <__divsf3+0x3b4>
 4024fc4:	00802034 	movhi	r2,128
 4024fc8:	91801034 	orhi	r6,r18,64
 4024fcc:	10bfffc4 	addi	r2,r2,-1
 4024fd0:	980f883a 	mov	r7,r19
 4024fd4:	308c703a 	and	r6,r6,r2
 4024fd8:	003fc706 	br	4024ef8 <__flash_rwdata_start+0xfffeec8c>
 4024fdc:	008000c4 	movi	r2,3
 4024fe0:	b8802d26 	beq	r23,r2,4025098 <__divsf3+0x428>
 4024fe4:	00c00044 	movi	r3,1
 4024fe8:	b005883a 	mov	r2,r22
 4024fec:	b8ffdd1e 	bne	r23,r3,4024f64 <__flash_rwdata_start+0xfffeecf8>
 4024ff0:	11c0004c 	andi	r7,r2,1
 4024ff4:	0009883a 	mov	r4,zero
 4024ff8:	000d883a 	mov	r6,zero
 4024ffc:	003f6c06 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4025000:	9023883a 	mov	r17,r18
 4025004:	003f6406 	br	4024d98 <__flash_rwdata_start+0xfffeeb2c>
 4025008:	1c47c83a 	sub	r3,r3,r17
 402500c:	01000684 	movi	r4,26
 4025010:	01400044 	movi	r5,1
 4025014:	003fc806 	br	4024f38 <__flash_rwdata_start+0xfffeeccc>
 4025018:	9080102c 	andhi	r2,r18,64
 402501c:	103fe926 	beq	r2,zero,4024fc4 <__flash_rwdata_start+0xfffeed58>
 4025020:	0023883a 	mov	r17,zero
 4025024:	00802034 	movhi	r2,128
 4025028:	89801034 	orhi	r6,r17,64
 402502c:	10bfffc4 	addi	r2,r2,-1
 4025030:	a80f883a 	mov	r7,r21
 4025034:	308c703a 	and	r6,r6,r2
 4025038:	003faf06 	br	4024ef8 <__flash_rwdata_start+0xfffeec8c>
 402503c:	01c00804 	movi	r7,32
 4025040:	390fc83a 	sub	r7,r7,r4
 4025044:	89ce983a 	sll	r7,r17,r7
 4025048:	890ad83a 	srl	r5,r17,r4
 402504c:	380ec03a 	cmpne	r7,r7,zero
 4025050:	29cab03a 	or	r5,r5,r7
 4025054:	28c001cc 	andi	r3,r5,7
 4025058:	18000426 	beq	r3,zero,402506c <__divsf3+0x3fc>
 402505c:	28c003cc 	andi	r3,r5,15
 4025060:	01000104 	movi	r4,4
 4025064:	19000126 	beq	r3,r4,402506c <__divsf3+0x3fc>
 4025068:	290b883a 	add	r5,r5,r4
 402506c:	28c1002c 	andhi	r3,r5,1024
 4025070:	18000426 	beq	r3,zero,4025084 <__divsf3+0x414>
 4025074:	11c0004c 	andi	r7,r2,1
 4025078:	01000044 	movi	r4,1
 402507c:	000d883a 	mov	r6,zero
 4025080:	003f4b06 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4025084:	280a91ba 	slli	r5,r5,6
 4025088:	11c0004c 	andi	r7,r2,1
 402508c:	0009883a 	mov	r4,zero
 4025090:	280cd27a 	srli	r6,r5,9
 4025094:	003f4606 	br	4024db0 <__flash_rwdata_start+0xfffeeb44>
 4025098:	00802034 	movhi	r2,128
 402509c:	89801034 	orhi	r6,r17,64
 40250a0:	10bfffc4 	addi	r2,r2,-1
 40250a4:	b00f883a 	mov	r7,r22
 40250a8:	308c703a 	and	r6,r6,r2
 40250ac:	003f9206 	br	4024ef8 <__flash_rwdata_start+0xfffeec8c>

040250b0 <__eqsf2>:
 40250b0:	2006d5fa 	srli	r3,r4,23
 40250b4:	280cd5fa 	srli	r6,r5,23
 40250b8:	01c02034 	movhi	r7,128
 40250bc:	39ffffc4 	addi	r7,r7,-1
 40250c0:	18c03fcc 	andi	r3,r3,255
 40250c4:	02003fc4 	movi	r8,255
 40250c8:	3904703a 	and	r2,r7,r4
 40250cc:	31803fcc 	andi	r6,r6,255
 40250d0:	394e703a 	and	r7,r7,r5
 40250d4:	2008d7fa 	srli	r4,r4,31
 40250d8:	280ad7fa 	srli	r5,r5,31
 40250dc:	1a000d26 	beq	r3,r8,4025114 <__eqsf2+0x64>
 40250e0:	02003fc4 	movi	r8,255
 40250e4:	32000826 	beq	r6,r8,4025108 <__eqsf2+0x58>
 40250e8:	19800226 	beq	r3,r6,40250f4 <__eqsf2+0x44>
 40250ec:	00800044 	movi	r2,1
 40250f0:	f800283a 	ret
 40250f4:	11fffd1e 	bne	r2,r7,40250ec <__flash_rwdata_start+0xfffeee80>
 40250f8:	21400926 	beq	r4,r5,4025120 <__eqsf2+0x70>
 40250fc:	183ffb1e 	bne	r3,zero,40250ec <__flash_rwdata_start+0xfffeee80>
 4025100:	1004c03a 	cmpne	r2,r2,zero
 4025104:	f800283a 	ret
 4025108:	383ff726 	beq	r7,zero,40250e8 <__flash_rwdata_start+0xfffeee7c>
 402510c:	00800044 	movi	r2,1
 4025110:	f800283a 	ret
 4025114:	103ff226 	beq	r2,zero,40250e0 <__flash_rwdata_start+0xfffeee74>
 4025118:	00800044 	movi	r2,1
 402511c:	f800283a 	ret
 4025120:	0005883a 	mov	r2,zero
 4025124:	f800283a 	ret

04025128 <__gesf2>:
 4025128:	2004d5fa 	srli	r2,r4,23
 402512c:	2806d5fa 	srli	r3,r5,23
 4025130:	01802034 	movhi	r6,128
 4025134:	31bfffc4 	addi	r6,r6,-1
 4025138:	10803fcc 	andi	r2,r2,255
 402513c:	01c03fc4 	movi	r7,255
 4025140:	3110703a 	and	r8,r6,r4
 4025144:	18c03fcc 	andi	r3,r3,255
 4025148:	314c703a 	and	r6,r6,r5
 402514c:	2008d7fa 	srli	r4,r4,31
 4025150:	280ad7fa 	srli	r5,r5,31
 4025154:	11c01926 	beq	r2,r7,40251bc <__gesf2+0x94>
 4025158:	01c03fc4 	movi	r7,255
 402515c:	19c00f26 	beq	r3,r7,402519c <__gesf2+0x74>
 4025160:	1000061e 	bne	r2,zero,402517c <__gesf2+0x54>
 4025164:	400f003a 	cmpeq	r7,r8,zero
 4025168:	1800071e 	bne	r3,zero,4025188 <__gesf2+0x60>
 402516c:	3000061e 	bne	r6,zero,4025188 <__gesf2+0x60>
 4025170:	0005883a 	mov	r2,zero
 4025174:	40000e1e 	bne	r8,zero,40251b0 <__gesf2+0x88>
 4025178:	f800283a 	ret
 402517c:	18000a1e 	bne	r3,zero,40251a8 <__gesf2+0x80>
 4025180:	30000b26 	beq	r6,zero,40251b0 <__gesf2+0x88>
 4025184:	000f883a 	mov	r7,zero
 4025188:	29403fcc 	andi	r5,r5,255
 402518c:	38000726 	beq	r7,zero,40251ac <__gesf2+0x84>
 4025190:	28000826 	beq	r5,zero,40251b4 <__gesf2+0x8c>
 4025194:	00800044 	movi	r2,1
 4025198:	f800283a 	ret
 402519c:	303ff026 	beq	r6,zero,4025160 <__flash_rwdata_start+0xfffeeef4>
 40251a0:	00bfff84 	movi	r2,-2
 40251a4:	f800283a 	ret
 40251a8:	29403fcc 	andi	r5,r5,255
 40251ac:	21400526 	beq	r4,r5,40251c4 <__gesf2+0x9c>
 40251b0:	203ff826 	beq	r4,zero,4025194 <__flash_rwdata_start+0xfffeef28>
 40251b4:	00bfffc4 	movi	r2,-1
 40251b8:	f800283a 	ret
 40251bc:	403fe626 	beq	r8,zero,4025158 <__flash_rwdata_start+0xfffeeeec>
 40251c0:	003ff706 	br	40251a0 <__flash_rwdata_start+0xfffeef34>
 40251c4:	18bffa16 	blt	r3,r2,40251b0 <__flash_rwdata_start+0xfffeef44>
 40251c8:	10c00216 	blt	r2,r3,40251d4 <__gesf2+0xac>
 40251cc:	323ff836 	bltu	r6,r8,40251b0 <__flash_rwdata_start+0xfffeef44>
 40251d0:	4180022e 	bgeu	r8,r6,40251dc <__gesf2+0xb4>
 40251d4:	203fef1e 	bne	r4,zero,4025194 <__flash_rwdata_start+0xfffeef28>
 40251d8:	003ff606 	br	40251b4 <__flash_rwdata_start+0xfffeef48>
 40251dc:	0005883a 	mov	r2,zero
 40251e0:	f800283a 	ret

040251e4 <__mulsf3>:
 40251e4:	defff504 	addi	sp,sp,-44
 40251e8:	dc000115 	stw	r16,4(sp)
 40251ec:	2020d5fa 	srli	r16,r4,23
 40251f0:	dd400615 	stw	r21,24(sp)
 40251f4:	202ad7fa 	srli	r21,r4,31
 40251f8:	dc800315 	stw	r18,12(sp)
 40251fc:	04802034 	movhi	r18,128
 4025200:	df000915 	stw	fp,36(sp)
 4025204:	dd000515 	stw	r20,20(sp)
 4025208:	94bfffc4 	addi	r18,r18,-1
 402520c:	dfc00a15 	stw	ra,40(sp)
 4025210:	ddc00815 	stw	r23,32(sp)
 4025214:	dd800715 	stw	r22,28(sp)
 4025218:	dcc00415 	stw	r19,16(sp)
 402521c:	dc400215 	stw	r17,8(sp)
 4025220:	84003fcc 	andi	r16,r16,255
 4025224:	9124703a 	and	r18,r18,r4
 4025228:	a829883a 	mov	r20,r21
 402522c:	af003fcc 	andi	fp,r21,255
 4025230:	80005426 	beq	r16,zero,4025384 <__mulsf3+0x1a0>
 4025234:	00803fc4 	movi	r2,255
 4025238:	80802f26 	beq	r16,r2,40252f8 <__mulsf3+0x114>
 402523c:	91002034 	orhi	r4,r18,128
 4025240:	202490fa 	slli	r18,r4,3
 4025244:	843fe044 	addi	r16,r16,-127
 4025248:	0023883a 	mov	r17,zero
 402524c:	002f883a 	mov	r23,zero
 4025250:	2804d5fa 	srli	r2,r5,23
 4025254:	282cd7fa 	srli	r22,r5,31
 4025258:	01002034 	movhi	r4,128
 402525c:	213fffc4 	addi	r4,r4,-1
 4025260:	10803fcc 	andi	r2,r2,255
 4025264:	2166703a 	and	r19,r4,r5
 4025268:	b1803fcc 	andi	r6,r22,255
 402526c:	10004c26 	beq	r2,zero,40253a0 <__mulsf3+0x1bc>
 4025270:	00c03fc4 	movi	r3,255
 4025274:	10c04726 	beq	r2,r3,4025394 <__mulsf3+0x1b0>
 4025278:	99002034 	orhi	r4,r19,128
 402527c:	202690fa 	slli	r19,r4,3
 4025280:	10bfe044 	addi	r2,r2,-127
 4025284:	0007883a 	mov	r3,zero
 4025288:	80a1883a 	add	r16,r16,r2
 402528c:	010003c4 	movi	r4,15
 4025290:	1c44b03a 	or	r2,r3,r17
 4025294:	b56af03a 	xor	r21,r22,r21
 4025298:	81c00044 	addi	r7,r16,1
 402529c:	20806b36 	bltu	r4,r2,402544c <__mulsf3+0x268>
 40252a0:	100490ba 	slli	r2,r2,2
 40252a4:	010100b4 	movhi	r4,1026
 40252a8:	2114ae04 	addi	r4,r4,21176
 40252ac:	1105883a 	add	r2,r2,r4
 40252b0:	10800017 	ldw	r2,0(r2)
 40252b4:	1000683a 	jmp	r2
 40252b8:	0402544c 	andi	r16,zero,2385
 40252bc:	0402530c 	andi	r16,zero,2380
 40252c0:	0402530c 	andi	r16,zero,2380
 40252c4:	04025308 	cmpgei	r16,zero,2380
 40252c8:	04025430 	cmpltui	r16,zero,2384
 40252cc:	04025430 	cmpltui	r16,zero,2384
 40252d0:	0402541c 	xori	r16,zero,2384
 40252d4:	04025308 	cmpgei	r16,zero,2380
 40252d8:	04025430 	cmpltui	r16,zero,2384
 40252dc:	0402541c 	xori	r16,zero,2384
 40252e0:	04025430 	cmpltui	r16,zero,2384
 40252e4:	04025308 	cmpgei	r16,zero,2380
 40252e8:	0402543c 	xorhi	r16,zero,2384
 40252ec:	0402543c 	xorhi	r16,zero,2384
 40252f0:	0402543c 	xorhi	r16,zero,2384
 40252f4:	04025518 	cmpnei	r16,zero,2388
 40252f8:	90003b1e 	bne	r18,zero,40253e8 <__mulsf3+0x204>
 40252fc:	04400204 	movi	r17,8
 4025300:	05c00084 	movi	r23,2
 4025304:	003fd206 	br	4025250 <__flash_rwdata_start+0xfffeefe4>
 4025308:	302b883a 	mov	r21,r6
 402530c:	00800084 	movi	r2,2
 4025310:	18802626 	beq	r3,r2,40253ac <__mulsf3+0x1c8>
 4025314:	008000c4 	movi	r2,3
 4025318:	1880ab26 	beq	r3,r2,40255c8 <__mulsf3+0x3e4>
 402531c:	00800044 	movi	r2,1
 4025320:	1880a21e 	bne	r3,r2,40255ac <__mulsf3+0x3c8>
 4025324:	a829883a 	mov	r20,r21
 4025328:	0007883a 	mov	r3,zero
 402532c:	0009883a 	mov	r4,zero
 4025330:	18803fcc 	andi	r2,r3,255
 4025334:	100695fa 	slli	r3,r2,23
 4025338:	a0803fcc 	andi	r2,r20,255
 402533c:	100a97fa 	slli	r5,r2,31
 4025340:	00802034 	movhi	r2,128
 4025344:	10bfffc4 	addi	r2,r2,-1
 4025348:	2084703a 	and	r2,r4,r2
 402534c:	10c4b03a 	or	r2,r2,r3
 4025350:	1144b03a 	or	r2,r2,r5
 4025354:	dfc00a17 	ldw	ra,40(sp)
 4025358:	df000917 	ldw	fp,36(sp)
 402535c:	ddc00817 	ldw	r23,32(sp)
 4025360:	dd800717 	ldw	r22,28(sp)
 4025364:	dd400617 	ldw	r21,24(sp)
 4025368:	dd000517 	ldw	r20,20(sp)
 402536c:	dcc00417 	ldw	r19,16(sp)
 4025370:	dc800317 	ldw	r18,12(sp)
 4025374:	dc400217 	ldw	r17,8(sp)
 4025378:	dc000117 	ldw	r16,4(sp)
 402537c:	dec00b04 	addi	sp,sp,44
 4025380:	f800283a 	ret
 4025384:	90000d1e 	bne	r18,zero,40253bc <__mulsf3+0x1d8>
 4025388:	04400104 	movi	r17,4
 402538c:	05c00044 	movi	r23,1
 4025390:	003faf06 	br	4025250 <__flash_rwdata_start+0xfffeefe4>
 4025394:	9806c03a 	cmpne	r3,r19,zero
 4025398:	18c00084 	addi	r3,r3,2
 402539c:	003fba06 	br	4025288 <__flash_rwdata_start+0xfffef01c>
 40253a0:	9800141e 	bne	r19,zero,40253f4 <__mulsf3+0x210>
 40253a4:	00c00044 	movi	r3,1
 40253a8:	003fb706 	br	4025288 <__flash_rwdata_start+0xfffef01c>
 40253ac:	a829883a 	mov	r20,r21
 40253b0:	00ffffc4 	movi	r3,-1
 40253b4:	0009883a 	mov	r4,zero
 40253b8:	003fdd06 	br	4025330 <__flash_rwdata_start+0xfffef0c4>
 40253bc:	9009883a 	mov	r4,r18
 40253c0:	d9400015 	stw	r5,0(sp)
 40253c4:	4026ee40 	call	4026ee4 <__clzsi2>
 40253c8:	10fffec4 	addi	r3,r2,-5
 40253cc:	10801d84 	addi	r2,r2,118
 40253d0:	90e4983a 	sll	r18,r18,r3
 40253d4:	00a1c83a 	sub	r16,zero,r2
 40253d8:	0023883a 	mov	r17,zero
 40253dc:	002f883a 	mov	r23,zero
 40253e0:	d9400017 	ldw	r5,0(sp)
 40253e4:	003f9a06 	br	4025250 <__flash_rwdata_start+0xfffeefe4>
 40253e8:	04400304 	movi	r17,12
 40253ec:	05c000c4 	movi	r23,3
 40253f0:	003f9706 	br	4025250 <__flash_rwdata_start+0xfffeefe4>
 40253f4:	9809883a 	mov	r4,r19
 40253f8:	d9800015 	stw	r6,0(sp)
 40253fc:	4026ee40 	call	4026ee4 <__clzsi2>
 4025400:	10fffec4 	addi	r3,r2,-5
 4025404:	10801d84 	addi	r2,r2,118
 4025408:	98e6983a 	sll	r19,r19,r3
 402540c:	0085c83a 	sub	r2,zero,r2
 4025410:	0007883a 	mov	r3,zero
 4025414:	d9800017 	ldw	r6,0(sp)
 4025418:	003f9b06 	br	4025288 <__flash_rwdata_start+0xfffef01c>
 402541c:	01002034 	movhi	r4,128
 4025420:	0029883a 	mov	r20,zero
 4025424:	213fffc4 	addi	r4,r4,-1
 4025428:	00ffffc4 	movi	r3,-1
 402542c:	003fc006 	br	4025330 <__flash_rwdata_start+0xfffef0c4>
 4025430:	9027883a 	mov	r19,r18
 4025434:	b807883a 	mov	r3,r23
 4025438:	003fb406 	br	402530c <__flash_rwdata_start+0xfffef0a0>
 402543c:	9027883a 	mov	r19,r18
 4025440:	e02b883a 	mov	r21,fp
 4025444:	b807883a 	mov	r3,r23
 4025448:	003fb006 	br	402530c <__flash_rwdata_start+0xfffef0a0>
 402544c:	9004d43a 	srli	r2,r18,16
 4025450:	9810d43a 	srli	r8,r19,16
 4025454:	94bfffcc 	andi	r18,r18,65535
 4025458:	993fffcc 	andi	r4,r19,65535
 402545c:	910d383a 	mul	r6,r18,r4
 4025460:	20a7383a 	mul	r19,r4,r2
 4025464:	9225383a 	mul	r18,r18,r8
 4025468:	3006d43a 	srli	r3,r6,16
 402546c:	1211383a 	mul	r8,r2,r8
 4025470:	94e5883a 	add	r18,r18,r19
 4025474:	1c87883a 	add	r3,r3,r18
 4025478:	1cc0022e 	bgeu	r3,r19,4025484 <__mulsf3+0x2a0>
 402547c:	00800074 	movhi	r2,1
 4025480:	4091883a 	add	r8,r8,r2
 4025484:	1804943a 	slli	r2,r3,16
 4025488:	31bfffcc 	andi	r6,r6,65535
 402548c:	1806d43a 	srli	r3,r3,16
 4025490:	1185883a 	add	r2,r2,r6
 4025494:	102691ba 	slli	r19,r2,6
 4025498:	1a07883a 	add	r3,r3,r8
 402549c:	1004d6ba 	srli	r2,r2,26
 40254a0:	180891ba 	slli	r4,r3,6
 40254a4:	9826c03a 	cmpne	r19,r19,zero
 40254a8:	9884b03a 	or	r2,r19,r2
 40254ac:	1126b03a 	or	r19,r2,r4
 40254b0:	9882002c 	andhi	r2,r19,2048
 40254b4:	10000426 	beq	r2,zero,40254c8 <__mulsf3+0x2e4>
 40254b8:	9804d07a 	srli	r2,r19,1
 40254bc:	9900004c 	andi	r4,r19,1
 40254c0:	3821883a 	mov	r16,r7
 40254c4:	1126b03a 	or	r19,r2,r4
 40254c8:	80c01fc4 	addi	r3,r16,127
 40254cc:	00c0210e 	bge	zero,r3,4025554 <__mulsf3+0x370>
 40254d0:	988001cc 	andi	r2,r19,7
 40254d4:	10000426 	beq	r2,zero,40254e8 <__mulsf3+0x304>
 40254d8:	988003cc 	andi	r2,r19,15
 40254dc:	01000104 	movi	r4,4
 40254e0:	11000126 	beq	r2,r4,40254e8 <__mulsf3+0x304>
 40254e4:	9927883a 	add	r19,r19,r4
 40254e8:	9882002c 	andhi	r2,r19,2048
 40254ec:	10000426 	beq	r2,zero,4025500 <__mulsf3+0x31c>
 40254f0:	00be0034 	movhi	r2,63488
 40254f4:	10bfffc4 	addi	r2,r2,-1
 40254f8:	80c02004 	addi	r3,r16,128
 40254fc:	98a6703a 	and	r19,r19,r2
 4025500:	00803f84 	movi	r2,254
 4025504:	10ffa916 	blt	r2,r3,40253ac <__flash_rwdata_start+0xfffef140>
 4025508:	980891ba 	slli	r4,r19,6
 402550c:	a829883a 	mov	r20,r21
 4025510:	2008d27a 	srli	r4,r4,9
 4025514:	003f8606 	br	4025330 <__flash_rwdata_start+0xfffef0c4>
 4025518:	9080102c 	andhi	r2,r18,64
 402551c:	10000826 	beq	r2,zero,4025540 <__mulsf3+0x35c>
 4025520:	9880102c 	andhi	r2,r19,64
 4025524:	1000061e 	bne	r2,zero,4025540 <__mulsf3+0x35c>
 4025528:	00802034 	movhi	r2,128
 402552c:	99001034 	orhi	r4,r19,64
 4025530:	10bfffc4 	addi	r2,r2,-1
 4025534:	b029883a 	mov	r20,r22
 4025538:	2088703a 	and	r4,r4,r2
 402553c:	003fba06 	br	4025428 <__flash_rwdata_start+0xfffef1bc>
 4025540:	00802034 	movhi	r2,128
 4025544:	91001034 	orhi	r4,r18,64
 4025548:	10bfffc4 	addi	r2,r2,-1
 402554c:	2088703a 	and	r4,r4,r2
 4025550:	003fb506 	br	4025428 <__flash_rwdata_start+0xfffef1bc>
 4025554:	00800044 	movi	r2,1
 4025558:	10c7c83a 	sub	r3,r2,r3
 402555c:	008006c4 	movi	r2,27
 4025560:	10ff7016 	blt	r2,r3,4025324 <__flash_rwdata_start+0xfffef0b8>
 4025564:	00800804 	movi	r2,32
 4025568:	10c5c83a 	sub	r2,r2,r3
 402556c:	9884983a 	sll	r2,r19,r2
 4025570:	98c6d83a 	srl	r3,r19,r3
 4025574:	1004c03a 	cmpne	r2,r2,zero
 4025578:	1884b03a 	or	r2,r3,r2
 402557c:	10c001cc 	andi	r3,r2,7
 4025580:	18000426 	beq	r3,zero,4025594 <__mulsf3+0x3b0>
 4025584:	10c003cc 	andi	r3,r2,15
 4025588:	01000104 	movi	r4,4
 402558c:	19000126 	beq	r3,r4,4025594 <__mulsf3+0x3b0>
 4025590:	1105883a 	add	r2,r2,r4
 4025594:	10c1002c 	andhi	r3,r2,1024
 4025598:	18000626 	beq	r3,zero,40255b4 <__mulsf3+0x3d0>
 402559c:	a829883a 	mov	r20,r21
 40255a0:	00c00044 	movi	r3,1
 40255a4:	0009883a 	mov	r4,zero
 40255a8:	003f6106 	br	4025330 <__flash_rwdata_start+0xfffef0c4>
 40255ac:	3821883a 	mov	r16,r7
 40255b0:	003fc506 	br	40254c8 <__flash_rwdata_start+0xfffef25c>
 40255b4:	100491ba 	slli	r2,r2,6
 40255b8:	a829883a 	mov	r20,r21
 40255bc:	0007883a 	mov	r3,zero
 40255c0:	1008d27a 	srli	r4,r2,9
 40255c4:	003f5a06 	br	4025330 <__flash_rwdata_start+0xfffef0c4>
 40255c8:	00802034 	movhi	r2,128
 40255cc:	99001034 	orhi	r4,r19,64
 40255d0:	10bfffc4 	addi	r2,r2,-1
 40255d4:	a829883a 	mov	r20,r21
 40255d8:	2088703a 	and	r4,r4,r2
 40255dc:	003f9206 	br	4025428 <__flash_rwdata_start+0xfffef1bc>

040255e0 <__subsf3>:
 40255e0:	defffc04 	addi	sp,sp,-16
 40255e4:	280cd5fa 	srli	r6,r5,23
 40255e8:	dc000015 	stw	r16,0(sp)
 40255ec:	01c02034 	movhi	r7,128
 40255f0:	2020d5fa 	srli	r16,r4,23
 40255f4:	39ffffc4 	addi	r7,r7,-1
 40255f8:	3906703a 	and	r3,r7,r4
 40255fc:	dc400115 	stw	r17,4(sp)
 4025600:	394e703a 	and	r7,r7,r5
 4025604:	2022d7fa 	srli	r17,r4,31
 4025608:	dfc00315 	stw	ra,12(sp)
 402560c:	dc800215 	stw	r18,8(sp)
 4025610:	31803fcc 	andi	r6,r6,255
 4025614:	01003fc4 	movi	r4,255
 4025618:	84003fcc 	andi	r16,r16,255
 402561c:	180690fa 	slli	r3,r3,3
 4025620:	2804d7fa 	srli	r2,r5,31
 4025624:	380e90fa 	slli	r7,r7,3
 4025628:	31006d26 	beq	r6,r4,40257e0 <__subsf3+0x200>
 402562c:	1080005c 	xori	r2,r2,1
 4025630:	8189c83a 	sub	r4,r16,r6
 4025634:	14404f26 	beq	r2,r17,4025774 <__subsf3+0x194>
 4025638:	0100770e 	bge	zero,r4,4025818 <__subsf3+0x238>
 402563c:	30001e1e 	bne	r6,zero,40256b8 <__subsf3+0xd8>
 4025640:	38006a1e 	bne	r7,zero,40257ec <__subsf3+0x20c>
 4025644:	188001cc 	andi	r2,r3,7
 4025648:	10000426 	beq	r2,zero,402565c <__subsf3+0x7c>
 402564c:	188003cc 	andi	r2,r3,15
 4025650:	01000104 	movi	r4,4
 4025654:	11000126 	beq	r2,r4,402565c <__subsf3+0x7c>
 4025658:	1907883a 	add	r3,r3,r4
 402565c:	1881002c 	andhi	r2,r3,1024
 4025660:	10003926 	beq	r2,zero,4025748 <__subsf3+0x168>
 4025664:	84000044 	addi	r16,r16,1
 4025668:	00803fc4 	movi	r2,255
 402566c:	80807526 	beq	r16,r2,4025844 <__subsf3+0x264>
 4025670:	180691ba 	slli	r3,r3,6
 4025674:	8880004c 	andi	r2,r17,1
 4025678:	180ad27a 	srli	r5,r3,9
 402567c:	84003fcc 	andi	r16,r16,255
 4025680:	800695fa 	slli	r3,r16,23
 4025684:	10803fcc 	andi	r2,r2,255
 4025688:	01002034 	movhi	r4,128
 402568c:	213fffc4 	addi	r4,r4,-1
 4025690:	100497fa 	slli	r2,r2,31
 4025694:	2920703a 	and	r16,r5,r4
 4025698:	80e0b03a 	or	r16,r16,r3
 402569c:	8084b03a 	or	r2,r16,r2
 40256a0:	dfc00317 	ldw	ra,12(sp)
 40256a4:	dc800217 	ldw	r18,8(sp)
 40256a8:	dc400117 	ldw	r17,4(sp)
 40256ac:	dc000017 	ldw	r16,0(sp)
 40256b0:	dec00404 	addi	sp,sp,16
 40256b4:	f800283a 	ret
 40256b8:	00803fc4 	movi	r2,255
 40256bc:	80bfe126 	beq	r16,r2,4025644 <__flash_rwdata_start+0xfffef3d8>
 40256c0:	39c10034 	orhi	r7,r7,1024
 40256c4:	008006c4 	movi	r2,27
 40256c8:	11007416 	blt	r2,r4,402589c <__subsf3+0x2bc>
 40256cc:	00800804 	movi	r2,32
 40256d0:	1105c83a 	sub	r2,r2,r4
 40256d4:	3884983a 	sll	r2,r7,r2
 40256d8:	390ed83a 	srl	r7,r7,r4
 40256dc:	1008c03a 	cmpne	r4,r2,zero
 40256e0:	390eb03a 	or	r7,r7,r4
 40256e4:	19c7c83a 	sub	r3,r3,r7
 40256e8:	1881002c 	andhi	r2,r3,1024
 40256ec:	10001426 	beq	r2,zero,4025740 <__subsf3+0x160>
 40256f0:	04810034 	movhi	r18,1024
 40256f4:	94bfffc4 	addi	r18,r18,-1
 40256f8:	1ca4703a 	and	r18,r3,r18
 40256fc:	9009883a 	mov	r4,r18
 4025700:	4026ee40 	call	4026ee4 <__clzsi2>
 4025704:	10bffec4 	addi	r2,r2,-5
 4025708:	90a4983a 	sll	r18,r18,r2
 402570c:	14005116 	blt	r2,r16,4025854 <__subsf3+0x274>
 4025710:	1405c83a 	sub	r2,r2,r16
 4025714:	10c00044 	addi	r3,r2,1
 4025718:	00800804 	movi	r2,32
 402571c:	10c5c83a 	sub	r2,r2,r3
 4025720:	9084983a 	sll	r2,r18,r2
 4025724:	90e4d83a 	srl	r18,r18,r3
 4025728:	0021883a 	mov	r16,zero
 402572c:	1006c03a 	cmpne	r3,r2,zero
 4025730:	90c6b03a 	or	r3,r18,r3
 4025734:	003fc306 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025738:	2000e026 	beq	r4,zero,4025abc <__subsf3+0x4dc>
 402573c:	2007883a 	mov	r3,r4
 4025740:	188001cc 	andi	r2,r3,7
 4025744:	103fc11e 	bne	r2,zero,402564c <__flash_rwdata_start+0xfffef3e0>
 4025748:	180ad0fa 	srli	r5,r3,3
 402574c:	00c03fc4 	movi	r3,255
 4025750:	8880004c 	andi	r2,r17,1
 4025754:	80c0031e 	bne	r16,r3,4025764 <__subsf3+0x184>
 4025758:	28006d26 	beq	r5,zero,4025910 <__subsf3+0x330>
 402575c:	29401034 	orhi	r5,r5,64
 4025760:	043fffc4 	movi	r16,-1
 4025764:	00c02034 	movhi	r3,128
 4025768:	18ffffc4 	addi	r3,r3,-1
 402576c:	28ca703a 	and	r5,r5,r3
 4025770:	003fc206 	br	402567c <__flash_rwdata_start+0xfffef410>
 4025774:	01003c0e 	bge	zero,r4,4025868 <__subsf3+0x288>
 4025778:	30002126 	beq	r6,zero,4025800 <__subsf3+0x220>
 402577c:	01403fc4 	movi	r5,255
 4025780:	817fb026 	beq	r16,r5,4025644 <__flash_rwdata_start+0xfffef3d8>
 4025784:	39c10034 	orhi	r7,r7,1024
 4025788:	014006c4 	movi	r5,27
 402578c:	29007416 	blt	r5,r4,4025960 <__subsf3+0x380>
 4025790:	01400804 	movi	r5,32
 4025794:	290bc83a 	sub	r5,r5,r4
 4025798:	394a983a 	sll	r5,r7,r5
 402579c:	390ed83a 	srl	r7,r7,r4
 40257a0:	2808c03a 	cmpne	r4,r5,zero
 40257a4:	390eb03a 	or	r7,r7,r4
 40257a8:	19c7883a 	add	r3,r3,r7
 40257ac:	1901002c 	andhi	r4,r3,1024
 40257b0:	20003826 	beq	r4,zero,4025894 <__subsf3+0x2b4>
 40257b4:	84000044 	addi	r16,r16,1
 40257b8:	01003fc4 	movi	r4,255
 40257bc:	81005426 	beq	r16,r4,4025910 <__subsf3+0x330>
 40257c0:	1023883a 	mov	r17,r2
 40257c4:	00bf0034 	movhi	r2,64512
 40257c8:	10bfffc4 	addi	r2,r2,-1
 40257cc:	1900004c 	andi	r4,r3,1
 40257d0:	1886703a 	and	r3,r3,r2
 40257d4:	1806d07a 	srli	r3,r3,1
 40257d8:	1906b03a 	or	r3,r3,r4
 40257dc:	003f9906 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 40257e0:	383f9226 	beq	r7,zero,402562c <__flash_rwdata_start+0xfffef3c0>
 40257e4:	10803fcc 	andi	r2,r2,255
 40257e8:	003f9106 	br	4025630 <__flash_rwdata_start+0xfffef3c4>
 40257ec:	213fffc4 	addi	r4,r4,-1
 40257f0:	203fbc26 	beq	r4,zero,40256e4 <__flash_rwdata_start+0xfffef478>
 40257f4:	00803fc4 	movi	r2,255
 40257f8:	80bfb21e 	bne	r16,r2,40256c4 <__flash_rwdata_start+0xfffef458>
 40257fc:	003f9106 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025800:	383f9026 	beq	r7,zero,4025644 <__flash_rwdata_start+0xfffef3d8>
 4025804:	213fffc4 	addi	r4,r4,-1
 4025808:	203fe726 	beq	r4,zero,40257a8 <__flash_rwdata_start+0xfffef53c>
 402580c:	01403fc4 	movi	r5,255
 4025810:	817fdd1e 	bne	r16,r5,4025788 <__flash_rwdata_start+0xfffef51c>
 4025814:	003f8b06 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025818:	2000221e 	bne	r4,zero,40258a4 <__subsf3+0x2c4>
 402581c:	81000044 	addi	r4,r16,1
 4025820:	21003fcc 	andi	r4,r4,255
 4025824:	01400044 	movi	r5,1
 4025828:	2900470e 	bge	r5,r4,4025948 <__subsf3+0x368>
 402582c:	19e5c83a 	sub	r18,r3,r7
 4025830:	9141002c 	andhi	r5,r18,1024
 4025834:	28002d26 	beq	r5,zero,40258ec <__subsf3+0x30c>
 4025838:	38e5c83a 	sub	r18,r7,r3
 402583c:	1023883a 	mov	r17,r2
 4025840:	003fae06 	br	40256fc <__flash_rwdata_start+0xfffef490>
 4025844:	8880004c 	andi	r2,r17,1
 4025848:	043fffc4 	movi	r16,-1
 402584c:	000b883a 	mov	r5,zero
 4025850:	003f8a06 	br	402567c <__flash_rwdata_start+0xfffef410>
 4025854:	00ff0034 	movhi	r3,64512
 4025858:	18ffffc4 	addi	r3,r3,-1
 402585c:	80a1c83a 	sub	r16,r16,r2
 4025860:	90c6703a 	and	r3,r18,r3
 4025864:	003f7706 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025868:	2000431e 	bne	r4,zero,4025978 <__subsf3+0x398>
 402586c:	81000044 	addi	r4,r16,1
 4025870:	21803fcc 	andi	r6,r4,255
 4025874:	01400044 	movi	r5,1
 4025878:	2980280e 	bge	r5,r6,402591c <__subsf3+0x33c>
 402587c:	01403fc4 	movi	r5,255
 4025880:	21402326 	beq	r4,r5,4025910 <__subsf3+0x330>
 4025884:	19c7883a 	add	r3,r3,r7
 4025888:	1806d07a 	srli	r3,r3,1
 402588c:	2021883a 	mov	r16,r4
 4025890:	003f6c06 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025894:	1023883a 	mov	r17,r2
 4025898:	003fa906 	br	4025740 <__flash_rwdata_start+0xfffef4d4>
 402589c:	01c00044 	movi	r7,1
 40258a0:	003f9006 	br	40256e4 <__flash_rwdata_start+0xfffef478>
 40258a4:	8000151e 	bne	r16,zero,40258fc <__subsf3+0x31c>
 40258a8:	18002f26 	beq	r3,zero,4025968 <__subsf3+0x388>
 40258ac:	0108303a 	nor	r4,zero,r4
 40258b0:	20000a26 	beq	r4,zero,40258dc <__subsf3+0x2fc>
 40258b4:	01403fc4 	movi	r5,255
 40258b8:	31402b26 	beq	r6,r5,4025968 <__subsf3+0x388>
 40258bc:	014006c4 	movi	r5,27
 40258c0:	29006e16 	blt	r5,r4,4025a7c <__subsf3+0x49c>
 40258c4:	01400804 	movi	r5,32
 40258c8:	290bc83a 	sub	r5,r5,r4
 40258cc:	194a983a 	sll	r5,r3,r5
 40258d0:	1908d83a 	srl	r4,r3,r4
 40258d4:	2806c03a 	cmpne	r3,r5,zero
 40258d8:	20c6b03a 	or	r3,r4,r3
 40258dc:	38c7c83a 	sub	r3,r7,r3
 40258e0:	3021883a 	mov	r16,r6
 40258e4:	1023883a 	mov	r17,r2
 40258e8:	003f7f06 	br	40256e8 <__flash_rwdata_start+0xfffef47c>
 40258ec:	903f831e 	bne	r18,zero,40256fc <__flash_rwdata_start+0xfffef490>
 40258f0:	0005883a 	mov	r2,zero
 40258f4:	0021883a 	mov	r16,zero
 40258f8:	003f9a06 	br	4025764 <__flash_rwdata_start+0xfffef4f8>
 40258fc:	01403fc4 	movi	r5,255
 4025900:	31401926 	beq	r6,r5,4025968 <__subsf3+0x388>
 4025904:	0109c83a 	sub	r4,zero,r4
 4025908:	18c10034 	orhi	r3,r3,1024
 402590c:	003feb06 	br	40258bc <__flash_rwdata_start+0xfffef650>
 4025910:	043fffc4 	movi	r16,-1
 4025914:	000b883a 	mov	r5,zero
 4025918:	003f5806 	br	402567c <__flash_rwdata_start+0xfffef410>
 402591c:	8000481e 	bne	r16,zero,4025a40 <__subsf3+0x460>
 4025920:	18006226 	beq	r3,zero,4025aac <__subsf3+0x4cc>
 4025924:	383f4726 	beq	r7,zero,4025644 <__flash_rwdata_start+0xfffef3d8>
 4025928:	19c7883a 	add	r3,r3,r7
 402592c:	1881002c 	andhi	r2,r3,1024
 4025930:	103f8326 	beq	r2,zero,4025740 <__flash_rwdata_start+0xfffef4d4>
 4025934:	00bf0034 	movhi	r2,64512
 4025938:	10bfffc4 	addi	r2,r2,-1
 402593c:	2821883a 	mov	r16,r5
 4025940:	1886703a 	and	r3,r3,r2
 4025944:	003f3f06 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025948:	80001c1e 	bne	r16,zero,40259bc <__subsf3+0x3dc>
 402594c:	1800261e 	bne	r3,zero,40259e8 <__subsf3+0x408>
 4025950:	38004c26 	beq	r7,zero,4025a84 <__subsf3+0x4a4>
 4025954:	3807883a 	mov	r3,r7
 4025958:	1023883a 	mov	r17,r2
 402595c:	003f3906 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025960:	01c00044 	movi	r7,1
 4025964:	003f9006 	br	40257a8 <__flash_rwdata_start+0xfffef53c>
 4025968:	3807883a 	mov	r3,r7
 402596c:	3021883a 	mov	r16,r6
 4025970:	1023883a 	mov	r17,r2
 4025974:	003f3306 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025978:	8000161e 	bne	r16,zero,40259d4 <__subsf3+0x3f4>
 402597c:	18002d26 	beq	r3,zero,4025a34 <__subsf3+0x454>
 4025980:	0108303a 	nor	r4,zero,r4
 4025984:	20000a26 	beq	r4,zero,40259b0 <__subsf3+0x3d0>
 4025988:	01403fc4 	movi	r5,255
 402598c:	31402926 	beq	r6,r5,4025a34 <__subsf3+0x454>
 4025990:	014006c4 	movi	r5,27
 4025994:	29004716 	blt	r5,r4,4025ab4 <__subsf3+0x4d4>
 4025998:	01400804 	movi	r5,32
 402599c:	290bc83a 	sub	r5,r5,r4
 40259a0:	194a983a 	sll	r5,r3,r5
 40259a4:	1908d83a 	srl	r4,r3,r4
 40259a8:	2806c03a 	cmpne	r3,r5,zero
 40259ac:	20c6b03a 	or	r3,r4,r3
 40259b0:	19c7883a 	add	r3,r3,r7
 40259b4:	3021883a 	mov	r16,r6
 40259b8:	003f7c06 	br	40257ac <__flash_rwdata_start+0xfffef540>
 40259bc:	1800111e 	bne	r3,zero,4025a04 <__subsf3+0x424>
 40259c0:	38003326 	beq	r7,zero,4025a90 <__subsf3+0x4b0>
 40259c4:	3807883a 	mov	r3,r7
 40259c8:	1023883a 	mov	r17,r2
 40259cc:	04003fc4 	movi	r16,255
 40259d0:	003f1c06 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 40259d4:	01403fc4 	movi	r5,255
 40259d8:	31401626 	beq	r6,r5,4025a34 <__subsf3+0x454>
 40259dc:	0109c83a 	sub	r4,zero,r4
 40259e0:	18c10034 	orhi	r3,r3,1024
 40259e4:	003fea06 	br	4025990 <__flash_rwdata_start+0xfffef724>
 40259e8:	383f1626 	beq	r7,zero,4025644 <__flash_rwdata_start+0xfffef3d8>
 40259ec:	19c9c83a 	sub	r4,r3,r7
 40259f0:	2141002c 	andhi	r5,r4,1024
 40259f4:	283f5026 	beq	r5,zero,4025738 <__flash_rwdata_start+0xfffef4cc>
 40259f8:	38c7c83a 	sub	r3,r7,r3
 40259fc:	1023883a 	mov	r17,r2
 4025a00:	003f1006 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025a04:	38001b26 	beq	r7,zero,4025a74 <__subsf3+0x494>
 4025a08:	1806d0fa 	srli	r3,r3,3
 4025a0c:	1900102c 	andhi	r4,r3,64
 4025a10:	20000526 	beq	r4,zero,4025a28 <__subsf3+0x448>
 4025a14:	380ed0fa 	srli	r7,r7,3
 4025a18:	3900102c 	andhi	r4,r7,64
 4025a1c:	2000021e 	bne	r4,zero,4025a28 <__subsf3+0x448>
 4025a20:	3807883a 	mov	r3,r7
 4025a24:	1023883a 	mov	r17,r2
 4025a28:	180690fa 	slli	r3,r3,3
 4025a2c:	04003fc4 	movi	r16,255
 4025a30:	003f0406 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025a34:	3807883a 	mov	r3,r7
 4025a38:	3021883a 	mov	r16,r6
 4025a3c:	003f0106 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025a40:	18001726 	beq	r3,zero,4025aa0 <__subsf3+0x4c0>
 4025a44:	38000b26 	beq	r7,zero,4025a74 <__subsf3+0x494>
 4025a48:	1806d0fa 	srli	r3,r3,3
 4025a4c:	1900102c 	andhi	r4,r3,64
 4025a50:	20000426 	beq	r4,zero,4025a64 <__subsf3+0x484>
 4025a54:	380ed0fa 	srli	r7,r7,3
 4025a58:	3900102c 	andhi	r4,r7,64
 4025a5c:	2000011e 	bne	r4,zero,4025a64 <__subsf3+0x484>
 4025a60:	3807883a 	mov	r3,r7
 4025a64:	180690fa 	slli	r3,r3,3
 4025a68:	1023883a 	mov	r17,r2
 4025a6c:	04003fc4 	movi	r16,255
 4025a70:	003ef406 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025a74:	04003fc4 	movi	r16,255
 4025a78:	003ef206 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025a7c:	00c00044 	movi	r3,1
 4025a80:	003f9606 	br	40258dc <__flash_rwdata_start+0xfffef670>
 4025a84:	000b883a 	mov	r5,zero
 4025a88:	0005883a 	mov	r2,zero
 4025a8c:	003f3506 	br	4025764 <__flash_rwdata_start+0xfffef4f8>
 4025a90:	01402034 	movhi	r5,128
 4025a94:	297fffc4 	addi	r5,r5,-1
 4025a98:	0005883a 	mov	r2,zero
 4025a9c:	003f2f06 	br	402575c <__flash_rwdata_start+0xfffef4f0>
 4025aa0:	3807883a 	mov	r3,r7
 4025aa4:	04003fc4 	movi	r16,255
 4025aa8:	003ee606 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025aac:	3807883a 	mov	r3,r7
 4025ab0:	003ee406 	br	4025644 <__flash_rwdata_start+0xfffef3d8>
 4025ab4:	00c00044 	movi	r3,1
 4025ab8:	003fbd06 	br	40259b0 <__flash_rwdata_start+0xfffef744>
 4025abc:	0005883a 	mov	r2,zero
 4025ac0:	003f2806 	br	4025764 <__flash_rwdata_start+0xfffef4f8>

04025ac4 <__fixsfsi>:
 4025ac4:	200ad5fa 	srli	r5,r4,23
 4025ac8:	00c02034 	movhi	r3,128
 4025acc:	18ffffc4 	addi	r3,r3,-1
 4025ad0:	29403fcc 	andi	r5,r5,255
 4025ad4:	00801f84 	movi	r2,126
 4025ad8:	1906703a 	and	r3,r3,r4
 4025adc:	2008d7fa 	srli	r4,r4,31
 4025ae0:	11400e0e 	bge	r2,r5,4025b1c <__fixsfsi+0x58>
 4025ae4:	00802744 	movi	r2,157
 4025ae8:	11400816 	blt	r2,r5,4025b0c <__fixsfsi+0x48>
 4025aec:	00802544 	movi	r2,149
 4025af0:	18c02034 	orhi	r3,r3,128
 4025af4:	11400b0e 	bge	r2,r5,4025b24 <__fixsfsi+0x60>
 4025af8:	28bfda84 	addi	r2,r5,-150
 4025afc:	1884983a 	sll	r2,r3,r2
 4025b00:	20000726 	beq	r4,zero,4025b20 <__fixsfsi+0x5c>
 4025b04:	0085c83a 	sub	r2,zero,r2
 4025b08:	f800283a 	ret
 4025b0c:	00a00034 	movhi	r2,32768
 4025b10:	10bfffc4 	addi	r2,r2,-1
 4025b14:	2085883a 	add	r2,r4,r2
 4025b18:	f800283a 	ret
 4025b1c:	0005883a 	mov	r2,zero
 4025b20:	f800283a 	ret
 4025b24:	00802584 	movi	r2,150
 4025b28:	1145c83a 	sub	r2,r2,r5
 4025b2c:	1884d83a 	srl	r2,r3,r2
 4025b30:	003ff306 	br	4025b00 <__flash_rwdata_start+0xfffef894>

04025b34 <__floatsisf>:
 4025b34:	defffd04 	addi	sp,sp,-12
 4025b38:	dfc00215 	stw	ra,8(sp)
 4025b3c:	dc400115 	stw	r17,4(sp)
 4025b40:	dc000015 	stw	r16,0(sp)
 4025b44:	20003526 	beq	r4,zero,4025c1c <__floatsisf+0xe8>
 4025b48:	2021883a 	mov	r16,r4
 4025b4c:	2022d7fa 	srli	r17,r4,31
 4025b50:	20003616 	blt	r4,zero,4025c2c <__floatsisf+0xf8>
 4025b54:	8009883a 	mov	r4,r16
 4025b58:	4026ee40 	call	4026ee4 <__clzsi2>
 4025b5c:	00c02784 	movi	r3,158
 4025b60:	1887c83a 	sub	r3,r3,r2
 4025b64:	01002584 	movi	r4,150
 4025b68:	20c01416 	blt	r4,r3,4025bbc <__floatsisf+0x88>
 4025b6c:	20c9c83a 	sub	r4,r4,r3
 4025b70:	8120983a 	sll	r16,r16,r4
 4025b74:	00802034 	movhi	r2,128
 4025b78:	10bfffc4 	addi	r2,r2,-1
 4025b7c:	8809883a 	mov	r4,r17
 4025b80:	80a0703a 	and	r16,r16,r2
 4025b84:	18803fcc 	andi	r2,r3,255
 4025b88:	100695fa 	slli	r3,r2,23
 4025b8c:	20803fcc 	andi	r2,r4,255
 4025b90:	100897fa 	slli	r4,r2,31
 4025b94:	00802034 	movhi	r2,128
 4025b98:	10bfffc4 	addi	r2,r2,-1
 4025b9c:	8084703a 	and	r2,r16,r2
 4025ba0:	10c4b03a 	or	r2,r2,r3
 4025ba4:	1104b03a 	or	r2,r2,r4
 4025ba8:	dfc00217 	ldw	ra,8(sp)
 4025bac:	dc400117 	ldw	r17,4(sp)
 4025bb0:	dc000017 	ldw	r16,0(sp)
 4025bb4:	dec00304 	addi	sp,sp,12
 4025bb8:	f800283a 	ret
 4025bbc:	01002644 	movi	r4,153
 4025bc0:	20c01c16 	blt	r4,r3,4025c34 <__floatsisf+0x100>
 4025bc4:	20c9c83a 	sub	r4,r4,r3
 4025bc8:	8120983a 	sll	r16,r16,r4
 4025bcc:	013f0034 	movhi	r4,64512
 4025bd0:	213fffc4 	addi	r4,r4,-1
 4025bd4:	814001cc 	andi	r5,r16,7
 4025bd8:	8108703a 	and	r4,r16,r4
 4025bdc:	28000426 	beq	r5,zero,4025bf0 <__floatsisf+0xbc>
 4025be0:	840003cc 	andi	r16,r16,15
 4025be4:	01400104 	movi	r5,4
 4025be8:	81400126 	beq	r16,r5,4025bf0 <__floatsisf+0xbc>
 4025bec:	2149883a 	add	r4,r4,r5
 4025bf0:	2141002c 	andhi	r5,r4,1024
 4025bf4:	28000526 	beq	r5,zero,4025c0c <__floatsisf+0xd8>
 4025bf8:	00c027c4 	movi	r3,159
 4025bfc:	1887c83a 	sub	r3,r3,r2
 4025c00:	00bf0034 	movhi	r2,64512
 4025c04:	10bfffc4 	addi	r2,r2,-1
 4025c08:	2088703a 	and	r4,r4,r2
 4025c0c:	202091ba 	slli	r16,r4,6
 4025c10:	8809883a 	mov	r4,r17
 4025c14:	8020d27a 	srli	r16,r16,9
 4025c18:	003fda06 	br	4025b84 <__flash_rwdata_start+0xfffef918>
 4025c1c:	0009883a 	mov	r4,zero
 4025c20:	0007883a 	mov	r3,zero
 4025c24:	0021883a 	mov	r16,zero
 4025c28:	003fd606 	br	4025b84 <__flash_rwdata_start+0xfffef918>
 4025c2c:	0121c83a 	sub	r16,zero,r4
 4025c30:	003fc806 	br	4025b54 <__flash_rwdata_start+0xfffef8e8>
 4025c34:	01002e44 	movi	r4,185
 4025c38:	20c9c83a 	sub	r4,r4,r3
 4025c3c:	01400144 	movi	r5,5
 4025c40:	8108983a 	sll	r4,r16,r4
 4025c44:	288bc83a 	sub	r5,r5,r2
 4025c48:	8160d83a 	srl	r16,r16,r5
 4025c4c:	2008c03a 	cmpne	r4,r4,zero
 4025c50:	8120b03a 	or	r16,r16,r4
 4025c54:	003fdd06 	br	4025bcc <__flash_rwdata_start+0xfffef960>

04025c58 <__floatunsisf>:
 4025c58:	defffe04 	addi	sp,sp,-8
 4025c5c:	dfc00115 	stw	ra,4(sp)
 4025c60:	dc000015 	stw	r16,0(sp)
 4025c64:	20002c26 	beq	r4,zero,4025d18 <__floatunsisf+0xc0>
 4025c68:	2021883a 	mov	r16,r4
 4025c6c:	4026ee40 	call	4026ee4 <__clzsi2>
 4025c70:	00c02784 	movi	r3,158
 4025c74:	1887c83a 	sub	r3,r3,r2
 4025c78:	01002584 	movi	r4,150
 4025c7c:	20c00f16 	blt	r4,r3,4025cbc <__floatunsisf+0x64>
 4025c80:	20c9c83a 	sub	r4,r4,r3
 4025c84:	8108983a 	sll	r4,r16,r4
 4025c88:	00802034 	movhi	r2,128
 4025c8c:	10bfffc4 	addi	r2,r2,-1
 4025c90:	2088703a 	and	r4,r4,r2
 4025c94:	18803fcc 	andi	r2,r3,255
 4025c98:	100695fa 	slli	r3,r2,23
 4025c9c:	00802034 	movhi	r2,128
 4025ca0:	10bfffc4 	addi	r2,r2,-1
 4025ca4:	2084703a 	and	r2,r4,r2
 4025ca8:	10c4b03a 	or	r2,r2,r3
 4025cac:	dfc00117 	ldw	ra,4(sp)
 4025cb0:	dc000017 	ldw	r16,0(sp)
 4025cb4:	dec00204 	addi	sp,sp,8
 4025cb8:	f800283a 	ret
 4025cbc:	01002644 	movi	r4,153
 4025cc0:	20c01816 	blt	r4,r3,4025d24 <__floatunsisf+0xcc>
 4025cc4:	20c9c83a 	sub	r4,r4,r3
 4025cc8:	8108983a 	sll	r4,r16,r4
 4025ccc:	017f0034 	movhi	r5,64512
 4025cd0:	297fffc4 	addi	r5,r5,-1
 4025cd4:	218001cc 	andi	r6,r4,7
 4025cd8:	214a703a 	and	r5,r4,r5
 4025cdc:	30000426 	beq	r6,zero,4025cf0 <__floatunsisf+0x98>
 4025ce0:	210003cc 	andi	r4,r4,15
 4025ce4:	01800104 	movi	r6,4
 4025ce8:	21800126 	beq	r4,r6,4025cf0 <__floatunsisf+0x98>
 4025cec:	298b883a 	add	r5,r5,r6
 4025cf0:	2901002c 	andhi	r4,r5,1024
 4025cf4:	20000526 	beq	r4,zero,4025d0c <__floatunsisf+0xb4>
 4025cf8:	00c027c4 	movi	r3,159
 4025cfc:	1887c83a 	sub	r3,r3,r2
 4025d00:	00bf0034 	movhi	r2,64512
 4025d04:	10bfffc4 	addi	r2,r2,-1
 4025d08:	288a703a 	and	r5,r5,r2
 4025d0c:	280891ba 	slli	r4,r5,6
 4025d10:	2008d27a 	srli	r4,r4,9
 4025d14:	003fdf06 	br	4025c94 <__flash_rwdata_start+0xfffefa28>
 4025d18:	0007883a 	mov	r3,zero
 4025d1c:	0009883a 	mov	r4,zero
 4025d20:	003fdc06 	br	4025c94 <__flash_rwdata_start+0xfffefa28>
 4025d24:	01402e44 	movi	r5,185
 4025d28:	28cbc83a 	sub	r5,r5,r3
 4025d2c:	01000144 	movi	r4,5
 4025d30:	2089c83a 	sub	r4,r4,r2
 4025d34:	814a983a 	sll	r5,r16,r5
 4025d38:	8108d83a 	srl	r4,r16,r4
 4025d3c:	2820c03a 	cmpne	r16,r5,zero
 4025d40:	2408b03a 	or	r4,r4,r16
 4025d44:	003fe106 	br	4025ccc <__flash_rwdata_start+0xfffefa60>

04025d48 <__divdf3>:
 4025d48:	defff204 	addi	sp,sp,-56
 4025d4c:	dd400915 	stw	r21,36(sp)
 4025d50:	282ad53a 	srli	r21,r5,20
 4025d54:	dd000815 	stw	r20,32(sp)
 4025d58:	2828d7fa 	srli	r20,r5,31
 4025d5c:	dc000415 	stw	r16,16(sp)
 4025d60:	04000434 	movhi	r16,16
 4025d64:	df000c15 	stw	fp,48(sp)
 4025d68:	843fffc4 	addi	r16,r16,-1
 4025d6c:	dfc00d15 	stw	ra,52(sp)
 4025d70:	ddc00b15 	stw	r23,44(sp)
 4025d74:	dd800a15 	stw	r22,40(sp)
 4025d78:	dcc00715 	stw	r19,28(sp)
 4025d7c:	dc800615 	stw	r18,24(sp)
 4025d80:	dc400515 	stw	r17,20(sp)
 4025d84:	ad41ffcc 	andi	r21,r21,2047
 4025d88:	2c20703a 	and	r16,r5,r16
 4025d8c:	a7003fcc 	andi	fp,r20,255
 4025d90:	a8006126 	beq	r21,zero,4025f18 <__divdf3+0x1d0>
 4025d94:	0081ffc4 	movi	r2,2047
 4025d98:	2025883a 	mov	r18,r4
 4025d9c:	a8803726 	beq	r21,r2,4025e7c <__divdf3+0x134>
 4025da0:	80800434 	orhi	r2,r16,16
 4025da4:	100490fa 	slli	r2,r2,3
 4025da8:	2020d77a 	srli	r16,r4,29
 4025dac:	202490fa 	slli	r18,r4,3
 4025db0:	ad7f0044 	addi	r21,r21,-1023
 4025db4:	80a0b03a 	or	r16,r16,r2
 4025db8:	0027883a 	mov	r19,zero
 4025dbc:	0013883a 	mov	r9,zero
 4025dc0:	3804d53a 	srli	r2,r7,20
 4025dc4:	382cd7fa 	srli	r22,r7,31
 4025dc8:	04400434 	movhi	r17,16
 4025dcc:	8c7fffc4 	addi	r17,r17,-1
 4025dd0:	1081ffcc 	andi	r2,r2,2047
 4025dd4:	3011883a 	mov	r8,r6
 4025dd8:	3c62703a 	and	r17,r7,r17
 4025ddc:	b5c03fcc 	andi	r23,r22,255
 4025de0:	10006c26 	beq	r2,zero,4025f94 <__divdf3+0x24c>
 4025de4:	00c1ffc4 	movi	r3,2047
 4025de8:	10c06426 	beq	r2,r3,4025f7c <__divdf3+0x234>
 4025dec:	88c00434 	orhi	r3,r17,16
 4025df0:	180690fa 	slli	r3,r3,3
 4025df4:	3022d77a 	srli	r17,r6,29
 4025df8:	301090fa 	slli	r8,r6,3
 4025dfc:	10bf0044 	addi	r2,r2,-1023
 4025e00:	88e2b03a 	or	r17,r17,r3
 4025e04:	000f883a 	mov	r7,zero
 4025e08:	a58cf03a 	xor	r6,r20,r22
 4025e0c:	3cc8b03a 	or	r4,r7,r19
 4025e10:	a8abc83a 	sub	r21,r21,r2
 4025e14:	008003c4 	movi	r2,15
 4025e18:	3007883a 	mov	r3,r6
 4025e1c:	34c03fcc 	andi	r19,r6,255
 4025e20:	11009036 	bltu	r2,r4,4026064 <__divdf3+0x31c>
 4025e24:	200890ba 	slli	r4,r4,2
 4025e28:	008100b4 	movhi	r2,1026
 4025e2c:	10978f04 	addi	r2,r2,24124
 4025e30:	2089883a 	add	r4,r4,r2
 4025e34:	20800017 	ldw	r2,0(r4)
 4025e38:	1000683a 	jmp	r2
 4025e3c:	04026064 	muli	r16,zero,2433
 4025e40:	04025eb4 	movhi	r16,2426
 4025e44:	04026054 	movui	r16,2433
 4025e48:	04025ea8 	cmpgeui	r16,zero,2426
 4025e4c:	04026054 	movui	r16,2433
 4025e50:	04026028 	cmpgeui	r16,zero,2432
 4025e54:	04026054 	movui	r16,2433
 4025e58:	04025ea8 	cmpgeui	r16,zero,2426
 4025e5c:	04025eb4 	movhi	r16,2426
 4025e60:	04025eb4 	movhi	r16,2426
 4025e64:	04026028 	cmpgeui	r16,zero,2432
 4025e68:	04025ea8 	cmpgeui	r16,zero,2426
 4025e6c:	04025e98 	cmpnei	r16,zero,2426
 4025e70:	04025e98 	cmpnei	r16,zero,2426
 4025e74:	04025e98 	cmpnei	r16,zero,2426
 4025e78:	04026348 	cmpgei	r16,zero,2445
 4025e7c:	2404b03a 	or	r2,r4,r16
 4025e80:	1000661e 	bne	r2,zero,402601c <__divdf3+0x2d4>
 4025e84:	04c00204 	movi	r19,8
 4025e88:	0021883a 	mov	r16,zero
 4025e8c:	0025883a 	mov	r18,zero
 4025e90:	02400084 	movi	r9,2
 4025e94:	003fca06 	br	4025dc0 <__flash_rwdata_start+0xfffefb54>
 4025e98:	8023883a 	mov	r17,r16
 4025e9c:	9011883a 	mov	r8,r18
 4025ea0:	e02f883a 	mov	r23,fp
 4025ea4:	480f883a 	mov	r7,r9
 4025ea8:	00800084 	movi	r2,2
 4025eac:	3881311e 	bne	r7,r2,4026374 <__divdf3+0x62c>
 4025eb0:	b827883a 	mov	r19,r23
 4025eb4:	98c0004c 	andi	r3,r19,1
 4025eb8:	0081ffc4 	movi	r2,2047
 4025ebc:	000b883a 	mov	r5,zero
 4025ec0:	0025883a 	mov	r18,zero
 4025ec4:	1004953a 	slli	r2,r2,20
 4025ec8:	18c03fcc 	andi	r3,r3,255
 4025ecc:	04400434 	movhi	r17,16
 4025ed0:	8c7fffc4 	addi	r17,r17,-1
 4025ed4:	180697fa 	slli	r3,r3,31
 4025ed8:	2c4a703a 	and	r5,r5,r17
 4025edc:	288ab03a 	or	r5,r5,r2
 4025ee0:	28c6b03a 	or	r3,r5,r3
 4025ee4:	9005883a 	mov	r2,r18
 4025ee8:	dfc00d17 	ldw	ra,52(sp)
 4025eec:	df000c17 	ldw	fp,48(sp)
 4025ef0:	ddc00b17 	ldw	r23,44(sp)
 4025ef4:	dd800a17 	ldw	r22,40(sp)
 4025ef8:	dd400917 	ldw	r21,36(sp)
 4025efc:	dd000817 	ldw	r20,32(sp)
 4025f00:	dcc00717 	ldw	r19,28(sp)
 4025f04:	dc800617 	ldw	r18,24(sp)
 4025f08:	dc400517 	ldw	r17,20(sp)
 4025f0c:	dc000417 	ldw	r16,16(sp)
 4025f10:	dec00e04 	addi	sp,sp,56
 4025f14:	f800283a 	ret
 4025f18:	2404b03a 	or	r2,r4,r16
 4025f1c:	2027883a 	mov	r19,r4
 4025f20:	10003926 	beq	r2,zero,4026008 <__divdf3+0x2c0>
 4025f24:	80012e26 	beq	r16,zero,40263e0 <__divdf3+0x698>
 4025f28:	8009883a 	mov	r4,r16
 4025f2c:	d9800315 	stw	r6,12(sp)
 4025f30:	d9c00215 	stw	r7,8(sp)
 4025f34:	4026ee40 	call	4026ee4 <__clzsi2>
 4025f38:	d9800317 	ldw	r6,12(sp)
 4025f3c:	d9c00217 	ldw	r7,8(sp)
 4025f40:	113ffd44 	addi	r4,r2,-11
 4025f44:	00c00704 	movi	r3,28
 4025f48:	19012116 	blt	r3,r4,40263d0 <__divdf3+0x688>
 4025f4c:	00c00744 	movi	r3,29
 4025f50:	147ffe04 	addi	r17,r2,-8
 4025f54:	1907c83a 	sub	r3,r3,r4
 4025f58:	8460983a 	sll	r16,r16,r17
 4025f5c:	98c6d83a 	srl	r3,r19,r3
 4025f60:	9c64983a 	sll	r18,r19,r17
 4025f64:	1c20b03a 	or	r16,r3,r16
 4025f68:	1080fcc4 	addi	r2,r2,1011
 4025f6c:	00abc83a 	sub	r21,zero,r2
 4025f70:	0027883a 	mov	r19,zero
 4025f74:	0013883a 	mov	r9,zero
 4025f78:	003f9106 	br	4025dc0 <__flash_rwdata_start+0xfffefb54>
 4025f7c:	3446b03a 	or	r3,r6,r17
 4025f80:	18001f1e 	bne	r3,zero,4026000 <__divdf3+0x2b8>
 4025f84:	0023883a 	mov	r17,zero
 4025f88:	0011883a 	mov	r8,zero
 4025f8c:	01c00084 	movi	r7,2
 4025f90:	003f9d06 	br	4025e08 <__flash_rwdata_start+0xfffefb9c>
 4025f94:	3446b03a 	or	r3,r6,r17
 4025f98:	18001526 	beq	r3,zero,4025ff0 <__divdf3+0x2a8>
 4025f9c:	88011b26 	beq	r17,zero,402640c <__divdf3+0x6c4>
 4025fa0:	8809883a 	mov	r4,r17
 4025fa4:	d9800315 	stw	r6,12(sp)
 4025fa8:	da400115 	stw	r9,4(sp)
 4025fac:	4026ee40 	call	4026ee4 <__clzsi2>
 4025fb0:	d9800317 	ldw	r6,12(sp)
 4025fb4:	da400117 	ldw	r9,4(sp)
 4025fb8:	113ffd44 	addi	r4,r2,-11
 4025fbc:	00c00704 	movi	r3,28
 4025fc0:	19010e16 	blt	r3,r4,40263fc <__divdf3+0x6b4>
 4025fc4:	00c00744 	movi	r3,29
 4025fc8:	123ffe04 	addi	r8,r2,-8
 4025fcc:	1907c83a 	sub	r3,r3,r4
 4025fd0:	8a22983a 	sll	r17,r17,r8
 4025fd4:	30c6d83a 	srl	r3,r6,r3
 4025fd8:	3210983a 	sll	r8,r6,r8
 4025fdc:	1c62b03a 	or	r17,r3,r17
 4025fe0:	1080fcc4 	addi	r2,r2,1011
 4025fe4:	0085c83a 	sub	r2,zero,r2
 4025fe8:	000f883a 	mov	r7,zero
 4025fec:	003f8606 	br	4025e08 <__flash_rwdata_start+0xfffefb9c>
 4025ff0:	0023883a 	mov	r17,zero
 4025ff4:	0011883a 	mov	r8,zero
 4025ff8:	01c00044 	movi	r7,1
 4025ffc:	003f8206 	br	4025e08 <__flash_rwdata_start+0xfffefb9c>
 4026000:	01c000c4 	movi	r7,3
 4026004:	003f8006 	br	4025e08 <__flash_rwdata_start+0xfffefb9c>
 4026008:	04c00104 	movi	r19,4
 402600c:	0021883a 	mov	r16,zero
 4026010:	0025883a 	mov	r18,zero
 4026014:	02400044 	movi	r9,1
 4026018:	003f6906 	br	4025dc0 <__flash_rwdata_start+0xfffefb54>
 402601c:	04c00304 	movi	r19,12
 4026020:	024000c4 	movi	r9,3
 4026024:	003f6606 	br	4025dc0 <__flash_rwdata_start+0xfffefb54>
 4026028:	01400434 	movhi	r5,16
 402602c:	0007883a 	mov	r3,zero
 4026030:	297fffc4 	addi	r5,r5,-1
 4026034:	04bfffc4 	movi	r18,-1
 4026038:	0081ffc4 	movi	r2,2047
 402603c:	003fa106 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 4026040:	00c00044 	movi	r3,1
 4026044:	1887c83a 	sub	r3,r3,r2
 4026048:	01000e04 	movi	r4,56
 402604c:	20c1210e 	bge	r4,r3,40264d4 <__divdf3+0x78c>
 4026050:	98c0004c 	andi	r3,r19,1
 4026054:	0005883a 	mov	r2,zero
 4026058:	000b883a 	mov	r5,zero
 402605c:	0025883a 	mov	r18,zero
 4026060:	003f9806 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 4026064:	8c00fd36 	bltu	r17,r16,402645c <__divdf3+0x714>
 4026068:	8440fb26 	beq	r16,r17,4026458 <__divdf3+0x710>
 402606c:	8007883a 	mov	r3,r16
 4026070:	ad7fffc4 	addi	r21,r21,-1
 4026074:	0021883a 	mov	r16,zero
 4026078:	4004d63a 	srli	r2,r8,24
 402607c:	8822923a 	slli	r17,r17,8
 4026080:	1809883a 	mov	r4,r3
 4026084:	402c923a 	slli	r22,r8,8
 4026088:	88b8b03a 	or	fp,r17,r2
 402608c:	e028d43a 	srli	r20,fp,16
 4026090:	d8c00015 	stw	r3,0(sp)
 4026094:	e5ffffcc 	andi	r23,fp,65535
 4026098:	a00b883a 	mov	r5,r20
 402609c:	40246ec0 	call	40246ec <__udivsi3>
 40260a0:	d8c00017 	ldw	r3,0(sp)
 40260a4:	a00b883a 	mov	r5,r20
 40260a8:	d8800315 	stw	r2,12(sp)
 40260ac:	1809883a 	mov	r4,r3
 40260b0:	40247500 	call	4024750 <__umodsi3>
 40260b4:	d9800317 	ldw	r6,12(sp)
 40260b8:	1006943a 	slli	r3,r2,16
 40260bc:	9004d43a 	srli	r2,r18,16
 40260c0:	b9a3383a 	mul	r17,r23,r6
 40260c4:	10c4b03a 	or	r2,r2,r3
 40260c8:	1440062e 	bgeu	r2,r17,40260e4 <__divdf3+0x39c>
 40260cc:	1705883a 	add	r2,r2,fp
 40260d0:	30ffffc4 	addi	r3,r6,-1
 40260d4:	1700ee36 	bltu	r2,fp,4026490 <__divdf3+0x748>
 40260d8:	1440ed2e 	bgeu	r2,r17,4026490 <__divdf3+0x748>
 40260dc:	31bfff84 	addi	r6,r6,-2
 40260e0:	1705883a 	add	r2,r2,fp
 40260e4:	1463c83a 	sub	r17,r2,r17
 40260e8:	a00b883a 	mov	r5,r20
 40260ec:	8809883a 	mov	r4,r17
 40260f0:	d9800315 	stw	r6,12(sp)
 40260f4:	40246ec0 	call	40246ec <__udivsi3>
 40260f8:	a00b883a 	mov	r5,r20
 40260fc:	8809883a 	mov	r4,r17
 4026100:	d8800215 	stw	r2,8(sp)
 4026104:	40247500 	call	4024750 <__umodsi3>
 4026108:	d9c00217 	ldw	r7,8(sp)
 402610c:	1004943a 	slli	r2,r2,16
 4026110:	94bfffcc 	andi	r18,r18,65535
 4026114:	b9d1383a 	mul	r8,r23,r7
 4026118:	90a4b03a 	or	r18,r18,r2
 402611c:	d9800317 	ldw	r6,12(sp)
 4026120:	9200062e 	bgeu	r18,r8,402613c <__divdf3+0x3f4>
 4026124:	9725883a 	add	r18,r18,fp
 4026128:	38bfffc4 	addi	r2,r7,-1
 402612c:	9700d636 	bltu	r18,fp,4026488 <__divdf3+0x740>
 4026130:	9200d52e 	bgeu	r18,r8,4026488 <__divdf3+0x740>
 4026134:	39ffff84 	addi	r7,r7,-2
 4026138:	9725883a 	add	r18,r18,fp
 402613c:	3004943a 	slli	r2,r6,16
 4026140:	b012d43a 	srli	r9,r22,16
 4026144:	b1bfffcc 	andi	r6,r22,65535
 4026148:	11e2b03a 	or	r17,r2,r7
 402614c:	8806d43a 	srli	r3,r17,16
 4026150:	893fffcc 	andi	r4,r17,65535
 4026154:	218b383a 	mul	r5,r4,r6
 4026158:	30c5383a 	mul	r2,r6,r3
 402615c:	2249383a 	mul	r4,r4,r9
 4026160:	280ed43a 	srli	r7,r5,16
 4026164:	9225c83a 	sub	r18,r18,r8
 4026168:	2089883a 	add	r4,r4,r2
 402616c:	3909883a 	add	r4,r7,r4
 4026170:	1a47383a 	mul	r3,r3,r9
 4026174:	2080022e 	bgeu	r4,r2,4026180 <__divdf3+0x438>
 4026178:	00800074 	movhi	r2,1
 402617c:	1887883a 	add	r3,r3,r2
 4026180:	2004d43a 	srli	r2,r4,16
 4026184:	2008943a 	slli	r4,r4,16
 4026188:	297fffcc 	andi	r5,r5,65535
 402618c:	10c7883a 	add	r3,r2,r3
 4026190:	2149883a 	add	r4,r4,r5
 4026194:	90c0a536 	bltu	r18,r3,402642c <__divdf3+0x6e4>
 4026198:	90c0bf26 	beq	r18,r3,4026498 <__divdf3+0x750>
 402619c:	90c7c83a 	sub	r3,r18,r3
 40261a0:	810fc83a 	sub	r7,r16,r4
 40261a4:	81e5803a 	cmpltu	r18,r16,r7
 40261a8:	1ca5c83a 	sub	r18,r3,r18
 40261ac:	e480c126 	beq	fp,r18,40264b4 <__divdf3+0x76c>
 40261b0:	a00b883a 	mov	r5,r20
 40261b4:	9009883a 	mov	r4,r18
 40261b8:	d9800315 	stw	r6,12(sp)
 40261bc:	d9c00215 	stw	r7,8(sp)
 40261c0:	da400115 	stw	r9,4(sp)
 40261c4:	40246ec0 	call	40246ec <__udivsi3>
 40261c8:	a00b883a 	mov	r5,r20
 40261cc:	9009883a 	mov	r4,r18
 40261d0:	d8800015 	stw	r2,0(sp)
 40261d4:	40247500 	call	4024750 <__umodsi3>
 40261d8:	d9c00217 	ldw	r7,8(sp)
 40261dc:	da000017 	ldw	r8,0(sp)
 40261e0:	1006943a 	slli	r3,r2,16
 40261e4:	3804d43a 	srli	r2,r7,16
 40261e8:	ba21383a 	mul	r16,r23,r8
 40261ec:	d9800317 	ldw	r6,12(sp)
 40261f0:	10c4b03a 	or	r2,r2,r3
 40261f4:	da400117 	ldw	r9,4(sp)
 40261f8:	1400062e 	bgeu	r2,r16,4026214 <__divdf3+0x4cc>
 40261fc:	1705883a 	add	r2,r2,fp
 4026200:	40ffffc4 	addi	r3,r8,-1
 4026204:	1700ad36 	bltu	r2,fp,40264bc <__divdf3+0x774>
 4026208:	1400ac2e 	bgeu	r2,r16,40264bc <__divdf3+0x774>
 402620c:	423fff84 	addi	r8,r8,-2
 4026210:	1705883a 	add	r2,r2,fp
 4026214:	1421c83a 	sub	r16,r2,r16
 4026218:	a00b883a 	mov	r5,r20
 402621c:	8009883a 	mov	r4,r16
 4026220:	d9800315 	stw	r6,12(sp)
 4026224:	d9c00215 	stw	r7,8(sp)
 4026228:	da000015 	stw	r8,0(sp)
 402622c:	da400115 	stw	r9,4(sp)
 4026230:	40246ec0 	call	40246ec <__udivsi3>
 4026234:	8009883a 	mov	r4,r16
 4026238:	a00b883a 	mov	r5,r20
 402623c:	1025883a 	mov	r18,r2
 4026240:	40247500 	call	4024750 <__umodsi3>
 4026244:	d9c00217 	ldw	r7,8(sp)
 4026248:	1004943a 	slli	r2,r2,16
 402624c:	bcaf383a 	mul	r23,r23,r18
 4026250:	393fffcc 	andi	r4,r7,65535
 4026254:	2088b03a 	or	r4,r4,r2
 4026258:	d9800317 	ldw	r6,12(sp)
 402625c:	da000017 	ldw	r8,0(sp)
 4026260:	da400117 	ldw	r9,4(sp)
 4026264:	25c0062e 	bgeu	r4,r23,4026280 <__divdf3+0x538>
 4026268:	2709883a 	add	r4,r4,fp
 402626c:	90bfffc4 	addi	r2,r18,-1
 4026270:	27009436 	bltu	r4,fp,40264c4 <__divdf3+0x77c>
 4026274:	25c0932e 	bgeu	r4,r23,40264c4 <__divdf3+0x77c>
 4026278:	94bfff84 	addi	r18,r18,-2
 402627c:	2709883a 	add	r4,r4,fp
 4026280:	4004943a 	slli	r2,r8,16
 4026284:	25efc83a 	sub	r23,r4,r23
 4026288:	1490b03a 	or	r8,r2,r18
 402628c:	4008d43a 	srli	r4,r8,16
 4026290:	40ffffcc 	andi	r3,r8,65535
 4026294:	30c5383a 	mul	r2,r6,r3
 4026298:	1a47383a 	mul	r3,r3,r9
 402629c:	310d383a 	mul	r6,r6,r4
 40262a0:	100ad43a 	srli	r5,r2,16
 40262a4:	4913383a 	mul	r9,r9,r4
 40262a8:	1987883a 	add	r3,r3,r6
 40262ac:	28c7883a 	add	r3,r5,r3
 40262b0:	1980022e 	bgeu	r3,r6,40262bc <__divdf3+0x574>
 40262b4:	01000074 	movhi	r4,1
 40262b8:	4913883a 	add	r9,r9,r4
 40262bc:	1808d43a 	srli	r4,r3,16
 40262c0:	1806943a 	slli	r3,r3,16
 40262c4:	10bfffcc 	andi	r2,r2,65535
 40262c8:	2253883a 	add	r9,r4,r9
 40262cc:	1887883a 	add	r3,r3,r2
 40262d0:	ba403836 	bltu	r23,r9,40263b4 <__divdf3+0x66c>
 40262d4:	ba403626 	beq	r23,r9,40263b0 <__divdf3+0x668>
 40262d8:	42000054 	ori	r8,r8,1
 40262dc:	a880ffc4 	addi	r2,r21,1023
 40262e0:	00bf570e 	bge	zero,r2,4026040 <__flash_rwdata_start+0xfffefdd4>
 40262e4:	40c001cc 	andi	r3,r8,7
 40262e8:	18000726 	beq	r3,zero,4026308 <__divdf3+0x5c0>
 40262ec:	40c003cc 	andi	r3,r8,15
 40262f0:	01000104 	movi	r4,4
 40262f4:	19000426 	beq	r3,r4,4026308 <__divdf3+0x5c0>
 40262f8:	4107883a 	add	r3,r8,r4
 40262fc:	1a11803a 	cmpltu	r8,r3,r8
 4026300:	8a23883a 	add	r17,r17,r8
 4026304:	1811883a 	mov	r8,r3
 4026308:	88c0402c 	andhi	r3,r17,256
 402630c:	18000426 	beq	r3,zero,4026320 <__divdf3+0x5d8>
 4026310:	00ffc034 	movhi	r3,65280
 4026314:	18ffffc4 	addi	r3,r3,-1
 4026318:	a8810004 	addi	r2,r21,1024
 402631c:	88e2703a 	and	r17,r17,r3
 4026320:	00c1ff84 	movi	r3,2046
 4026324:	18bee316 	blt	r3,r2,4025eb4 <__flash_rwdata_start+0xfffefc48>
 4026328:	8824977a 	slli	r18,r17,29
 402632c:	4010d0fa 	srli	r8,r8,3
 4026330:	8822927a 	slli	r17,r17,9
 4026334:	1081ffcc 	andi	r2,r2,2047
 4026338:	9224b03a 	or	r18,r18,r8
 402633c:	880ad33a 	srli	r5,r17,12
 4026340:	98c0004c 	andi	r3,r19,1
 4026344:	003edf06 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 4026348:	8080022c 	andhi	r2,r16,8
 402634c:	10001226 	beq	r2,zero,4026398 <__divdf3+0x650>
 4026350:	8880022c 	andhi	r2,r17,8
 4026354:	1000101e 	bne	r2,zero,4026398 <__divdf3+0x650>
 4026358:	00800434 	movhi	r2,16
 402635c:	89400234 	orhi	r5,r17,8
 4026360:	10bfffc4 	addi	r2,r2,-1
 4026364:	b007883a 	mov	r3,r22
 4026368:	288a703a 	and	r5,r5,r2
 402636c:	4025883a 	mov	r18,r8
 4026370:	003f3106 	br	4026038 <__flash_rwdata_start+0xfffefdcc>
 4026374:	008000c4 	movi	r2,3
 4026378:	3880a626 	beq	r7,r2,4026614 <__divdf3+0x8cc>
 402637c:	00800044 	movi	r2,1
 4026380:	3880521e 	bne	r7,r2,40264cc <__divdf3+0x784>
 4026384:	b807883a 	mov	r3,r23
 4026388:	0005883a 	mov	r2,zero
 402638c:	000b883a 	mov	r5,zero
 4026390:	0025883a 	mov	r18,zero
 4026394:	003ecb06 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 4026398:	00800434 	movhi	r2,16
 402639c:	81400234 	orhi	r5,r16,8
 40263a0:	10bfffc4 	addi	r2,r2,-1
 40263a4:	a007883a 	mov	r3,r20
 40263a8:	288a703a 	and	r5,r5,r2
 40263ac:	003f2206 	br	4026038 <__flash_rwdata_start+0xfffefdcc>
 40263b0:	183fca26 	beq	r3,zero,40262dc <__flash_rwdata_start+0xffff0070>
 40263b4:	e5ef883a 	add	r23,fp,r23
 40263b8:	40bfffc4 	addi	r2,r8,-1
 40263bc:	bf00392e 	bgeu	r23,fp,40264a4 <__divdf3+0x75c>
 40263c0:	1011883a 	mov	r8,r2
 40263c4:	ba7fc41e 	bne	r23,r9,40262d8 <__flash_rwdata_start+0xffff006c>
 40263c8:	b0ffc31e 	bne	r22,r3,40262d8 <__flash_rwdata_start+0xffff006c>
 40263cc:	003fc306 	br	40262dc <__flash_rwdata_start+0xffff0070>
 40263d0:	143ff604 	addi	r16,r2,-40
 40263d4:	9c20983a 	sll	r16,r19,r16
 40263d8:	0025883a 	mov	r18,zero
 40263dc:	003ee206 	br	4025f68 <__flash_rwdata_start+0xfffefcfc>
 40263e0:	d9800315 	stw	r6,12(sp)
 40263e4:	d9c00215 	stw	r7,8(sp)
 40263e8:	4026ee40 	call	4026ee4 <__clzsi2>
 40263ec:	10800804 	addi	r2,r2,32
 40263f0:	d9c00217 	ldw	r7,8(sp)
 40263f4:	d9800317 	ldw	r6,12(sp)
 40263f8:	003ed106 	br	4025f40 <__flash_rwdata_start+0xfffefcd4>
 40263fc:	147ff604 	addi	r17,r2,-40
 4026400:	3462983a 	sll	r17,r6,r17
 4026404:	0011883a 	mov	r8,zero
 4026408:	003ef506 	br	4025fe0 <__flash_rwdata_start+0xfffefd74>
 402640c:	3009883a 	mov	r4,r6
 4026410:	d9800315 	stw	r6,12(sp)
 4026414:	da400115 	stw	r9,4(sp)
 4026418:	4026ee40 	call	4026ee4 <__clzsi2>
 402641c:	10800804 	addi	r2,r2,32
 4026420:	da400117 	ldw	r9,4(sp)
 4026424:	d9800317 	ldw	r6,12(sp)
 4026428:	003ee306 	br	4025fb8 <__flash_rwdata_start+0xfffefd4c>
 402642c:	85a1883a 	add	r16,r16,r22
 4026430:	8585803a 	cmpltu	r2,r16,r22
 4026434:	1705883a 	add	r2,r2,fp
 4026438:	14a5883a 	add	r18,r2,r18
 402643c:	88bfffc4 	addi	r2,r17,-1
 4026440:	e4800c2e 	bgeu	fp,r18,4026474 <__divdf3+0x72c>
 4026444:	90c03e36 	bltu	r18,r3,4026540 <__divdf3+0x7f8>
 4026448:	1c806926 	beq	r3,r18,40265f0 <__divdf3+0x8a8>
 402644c:	90c7c83a 	sub	r3,r18,r3
 4026450:	1023883a 	mov	r17,r2
 4026454:	003f5206 	br	40261a0 <__flash_rwdata_start+0xfffeff34>
 4026458:	923f0436 	bltu	r18,r8,402606c <__flash_rwdata_start+0xfffefe00>
 402645c:	800897fa 	slli	r4,r16,31
 4026460:	9004d07a 	srli	r2,r18,1
 4026464:	8006d07a 	srli	r3,r16,1
 4026468:	902097fa 	slli	r16,r18,31
 402646c:	20a4b03a 	or	r18,r4,r2
 4026470:	003f0106 	br	4026078 <__flash_rwdata_start+0xfffefe0c>
 4026474:	e4bff51e 	bne	fp,r18,402644c <__flash_rwdata_start+0xffff01e0>
 4026478:	85bff22e 	bgeu	r16,r22,4026444 <__flash_rwdata_start+0xffff01d8>
 402647c:	e0c7c83a 	sub	r3,fp,r3
 4026480:	1023883a 	mov	r17,r2
 4026484:	003f4606 	br	40261a0 <__flash_rwdata_start+0xfffeff34>
 4026488:	100f883a 	mov	r7,r2
 402648c:	003f2b06 	br	402613c <__flash_rwdata_start+0xfffefed0>
 4026490:	180d883a 	mov	r6,r3
 4026494:	003f1306 	br	40260e4 <__flash_rwdata_start+0xfffefe78>
 4026498:	813fe436 	bltu	r16,r4,402642c <__flash_rwdata_start+0xffff01c0>
 402649c:	0007883a 	mov	r3,zero
 40264a0:	003f3f06 	br	40261a0 <__flash_rwdata_start+0xfffeff34>
 40264a4:	ba402c36 	bltu	r23,r9,4026558 <__divdf3+0x810>
 40264a8:	4dc05426 	beq	r9,r23,40265fc <__divdf3+0x8b4>
 40264ac:	1011883a 	mov	r8,r2
 40264b0:	003f8906 	br	40262d8 <__flash_rwdata_start+0xffff006c>
 40264b4:	023fffc4 	movi	r8,-1
 40264b8:	003f8806 	br	40262dc <__flash_rwdata_start+0xffff0070>
 40264bc:	1811883a 	mov	r8,r3
 40264c0:	003f5406 	br	4026214 <__flash_rwdata_start+0xfffeffa8>
 40264c4:	1025883a 	mov	r18,r2
 40264c8:	003f6d06 	br	4026280 <__flash_rwdata_start+0xffff0014>
 40264cc:	b827883a 	mov	r19,r23
 40264d0:	003f8206 	br	40262dc <__flash_rwdata_start+0xffff0070>
 40264d4:	010007c4 	movi	r4,31
 40264d8:	20c02616 	blt	r4,r3,4026574 <__divdf3+0x82c>
 40264dc:	00800804 	movi	r2,32
 40264e0:	10c5c83a 	sub	r2,r2,r3
 40264e4:	888a983a 	sll	r5,r17,r2
 40264e8:	40c8d83a 	srl	r4,r8,r3
 40264ec:	4084983a 	sll	r2,r8,r2
 40264f0:	88e2d83a 	srl	r17,r17,r3
 40264f4:	2906b03a 	or	r3,r5,r4
 40264f8:	1004c03a 	cmpne	r2,r2,zero
 40264fc:	1886b03a 	or	r3,r3,r2
 4026500:	188001cc 	andi	r2,r3,7
 4026504:	10000726 	beq	r2,zero,4026524 <__divdf3+0x7dc>
 4026508:	188003cc 	andi	r2,r3,15
 402650c:	01000104 	movi	r4,4
 4026510:	11000426 	beq	r2,r4,4026524 <__divdf3+0x7dc>
 4026514:	1805883a 	mov	r2,r3
 4026518:	10c00104 	addi	r3,r2,4
 402651c:	1885803a 	cmpltu	r2,r3,r2
 4026520:	88a3883a 	add	r17,r17,r2
 4026524:	8880202c 	andhi	r2,r17,128
 4026528:	10002726 	beq	r2,zero,40265c8 <__divdf3+0x880>
 402652c:	98c0004c 	andi	r3,r19,1
 4026530:	00800044 	movi	r2,1
 4026534:	000b883a 	mov	r5,zero
 4026538:	0025883a 	mov	r18,zero
 402653c:	003e6106 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 4026540:	85a1883a 	add	r16,r16,r22
 4026544:	8585803a 	cmpltu	r2,r16,r22
 4026548:	1705883a 	add	r2,r2,fp
 402654c:	14a5883a 	add	r18,r2,r18
 4026550:	8c7fff84 	addi	r17,r17,-2
 4026554:	003f1106 	br	402619c <__flash_rwdata_start+0xfffeff30>
 4026558:	b589883a 	add	r4,r22,r22
 402655c:	25ad803a 	cmpltu	r22,r4,r22
 4026560:	b739883a 	add	fp,r22,fp
 4026564:	40bfff84 	addi	r2,r8,-2
 4026568:	bf2f883a 	add	r23,r23,fp
 402656c:	202d883a 	mov	r22,r4
 4026570:	003f9306 	br	40263c0 <__flash_rwdata_start+0xffff0154>
 4026574:	013ff844 	movi	r4,-31
 4026578:	2085c83a 	sub	r2,r4,r2
 402657c:	8888d83a 	srl	r4,r17,r2
 4026580:	00800804 	movi	r2,32
 4026584:	18802126 	beq	r3,r2,402660c <__divdf3+0x8c4>
 4026588:	00801004 	movi	r2,64
 402658c:	10c5c83a 	sub	r2,r2,r3
 4026590:	8884983a 	sll	r2,r17,r2
 4026594:	1204b03a 	or	r2,r2,r8
 4026598:	1004c03a 	cmpne	r2,r2,zero
 402659c:	2084b03a 	or	r2,r4,r2
 40265a0:	144001cc 	andi	r17,r2,7
 40265a4:	88000d1e 	bne	r17,zero,40265dc <__divdf3+0x894>
 40265a8:	000b883a 	mov	r5,zero
 40265ac:	1024d0fa 	srli	r18,r2,3
 40265b0:	98c0004c 	andi	r3,r19,1
 40265b4:	0005883a 	mov	r2,zero
 40265b8:	9464b03a 	or	r18,r18,r17
 40265bc:	003e4106 	br	4025ec4 <__flash_rwdata_start+0xfffefc58>
 40265c0:	1007883a 	mov	r3,r2
 40265c4:	0023883a 	mov	r17,zero
 40265c8:	880a927a 	slli	r5,r17,9
 40265cc:	1805883a 	mov	r2,r3
 40265d0:	8822977a 	slli	r17,r17,29
 40265d4:	280ad33a 	srli	r5,r5,12
 40265d8:	003ff406 	br	40265ac <__flash_rwdata_start+0xffff0340>
 40265dc:	10c003cc 	andi	r3,r2,15
 40265e0:	01000104 	movi	r4,4
 40265e4:	193ff626 	beq	r3,r4,40265c0 <__flash_rwdata_start+0xffff0354>
 40265e8:	0023883a 	mov	r17,zero
 40265ec:	003fca06 	br	4026518 <__flash_rwdata_start+0xffff02ac>
 40265f0:	813fd336 	bltu	r16,r4,4026540 <__flash_rwdata_start+0xffff02d4>
 40265f4:	1023883a 	mov	r17,r2
 40265f8:	003fa806 	br	402649c <__flash_rwdata_start+0xffff0230>
 40265fc:	b0ffd636 	bltu	r22,r3,4026558 <__flash_rwdata_start+0xffff02ec>
 4026600:	1011883a 	mov	r8,r2
 4026604:	b0ff341e 	bne	r22,r3,40262d8 <__flash_rwdata_start+0xffff006c>
 4026608:	003f3406 	br	40262dc <__flash_rwdata_start+0xffff0070>
 402660c:	0005883a 	mov	r2,zero
 4026610:	003fe006 	br	4026594 <__flash_rwdata_start+0xffff0328>
 4026614:	00800434 	movhi	r2,16
 4026618:	89400234 	orhi	r5,r17,8
 402661c:	10bfffc4 	addi	r2,r2,-1
 4026620:	b807883a 	mov	r3,r23
 4026624:	288a703a 	and	r5,r5,r2
 4026628:	4025883a 	mov	r18,r8
 402662c:	003e8206 	br	4026038 <__flash_rwdata_start+0xfffefdcc>

04026630 <__floatsidf>:
 4026630:	defffd04 	addi	sp,sp,-12
 4026634:	dfc00215 	stw	ra,8(sp)
 4026638:	dc400115 	stw	r17,4(sp)
 402663c:	dc000015 	stw	r16,0(sp)
 4026640:	20002b26 	beq	r4,zero,40266f0 <__floatsidf+0xc0>
 4026644:	2023883a 	mov	r17,r4
 4026648:	2020d7fa 	srli	r16,r4,31
 402664c:	20002d16 	blt	r4,zero,4026704 <__floatsidf+0xd4>
 4026650:	8809883a 	mov	r4,r17
 4026654:	4026ee40 	call	4026ee4 <__clzsi2>
 4026658:	01410784 	movi	r5,1054
 402665c:	288bc83a 	sub	r5,r5,r2
 4026660:	01010cc4 	movi	r4,1075
 4026664:	2149c83a 	sub	r4,r4,r5
 4026668:	00c007c4 	movi	r3,31
 402666c:	1900160e 	bge	r3,r4,40266c8 <__floatsidf+0x98>
 4026670:	00c104c4 	movi	r3,1043
 4026674:	1947c83a 	sub	r3,r3,r5
 4026678:	88c6983a 	sll	r3,r17,r3
 402667c:	00800434 	movhi	r2,16
 4026680:	10bfffc4 	addi	r2,r2,-1
 4026684:	1886703a 	and	r3,r3,r2
 4026688:	2941ffcc 	andi	r5,r5,2047
 402668c:	800d883a 	mov	r6,r16
 4026690:	0005883a 	mov	r2,zero
 4026694:	280a953a 	slli	r5,r5,20
 4026698:	31803fcc 	andi	r6,r6,255
 402669c:	01000434 	movhi	r4,16
 40266a0:	300c97fa 	slli	r6,r6,31
 40266a4:	213fffc4 	addi	r4,r4,-1
 40266a8:	1906703a 	and	r3,r3,r4
 40266ac:	1946b03a 	or	r3,r3,r5
 40266b0:	1986b03a 	or	r3,r3,r6
 40266b4:	dfc00217 	ldw	ra,8(sp)
 40266b8:	dc400117 	ldw	r17,4(sp)
 40266bc:	dc000017 	ldw	r16,0(sp)
 40266c0:	dec00304 	addi	sp,sp,12
 40266c4:	f800283a 	ret
 40266c8:	00c002c4 	movi	r3,11
 40266cc:	1887c83a 	sub	r3,r3,r2
 40266d0:	88c6d83a 	srl	r3,r17,r3
 40266d4:	8904983a 	sll	r2,r17,r4
 40266d8:	01000434 	movhi	r4,16
 40266dc:	213fffc4 	addi	r4,r4,-1
 40266e0:	2941ffcc 	andi	r5,r5,2047
 40266e4:	1906703a 	and	r3,r3,r4
 40266e8:	800d883a 	mov	r6,r16
 40266ec:	003fe906 	br	4026694 <__flash_rwdata_start+0xffff0428>
 40266f0:	000d883a 	mov	r6,zero
 40266f4:	000b883a 	mov	r5,zero
 40266f8:	0007883a 	mov	r3,zero
 40266fc:	0005883a 	mov	r2,zero
 4026700:	003fe406 	br	4026694 <__flash_rwdata_start+0xffff0428>
 4026704:	0123c83a 	sub	r17,zero,r4
 4026708:	003fd106 	br	4026650 <__flash_rwdata_start+0xffff03e4>

0402670c <__extendsfdf2>:
 402670c:	200ad5fa 	srli	r5,r4,23
 4026710:	defffd04 	addi	sp,sp,-12
 4026714:	dc400115 	stw	r17,4(sp)
 4026718:	29403fcc 	andi	r5,r5,255
 402671c:	29800044 	addi	r6,r5,1
 4026720:	04402034 	movhi	r17,128
 4026724:	dc000015 	stw	r16,0(sp)
 4026728:	8c7fffc4 	addi	r17,r17,-1
 402672c:	dfc00215 	stw	ra,8(sp)
 4026730:	31803fcc 	andi	r6,r6,255
 4026734:	00800044 	movi	r2,1
 4026738:	8922703a 	and	r17,r17,r4
 402673c:	2020d7fa 	srli	r16,r4,31
 4026740:	1180110e 	bge	r2,r6,4026788 <__extendsfdf2+0x7c>
 4026744:	880cd0fa 	srli	r6,r17,3
 4026748:	8822977a 	slli	r17,r17,29
 402674c:	2940e004 	addi	r5,r5,896
 4026750:	2941ffcc 	andi	r5,r5,2047
 4026754:	2804953a 	slli	r2,r5,20
 4026758:	01400434 	movhi	r5,16
 402675c:	800697fa 	slli	r3,r16,31
 4026760:	297fffc4 	addi	r5,r5,-1
 4026764:	314a703a 	and	r5,r6,r5
 4026768:	288ab03a 	or	r5,r5,r2
 402676c:	28c6b03a 	or	r3,r5,r3
 4026770:	8805883a 	mov	r2,r17
 4026774:	dfc00217 	ldw	ra,8(sp)
 4026778:	dc400117 	ldw	r17,4(sp)
 402677c:	dc000017 	ldw	r16,0(sp)
 4026780:	dec00304 	addi	sp,sp,12
 4026784:	f800283a 	ret
 4026788:	2800111e 	bne	r5,zero,40267d0 <__extendsfdf2+0xc4>
 402678c:	88001c26 	beq	r17,zero,4026800 <__extendsfdf2+0xf4>
 4026790:	8809883a 	mov	r4,r17
 4026794:	4026ee40 	call	4026ee4 <__clzsi2>
 4026798:	00c00284 	movi	r3,10
 402679c:	18801b16 	blt	r3,r2,402680c <__extendsfdf2+0x100>
 40267a0:	018002c4 	movi	r6,11
 40267a4:	308dc83a 	sub	r6,r6,r2
 40267a8:	11000544 	addi	r4,r2,21
 40267ac:	8986d83a 	srl	r3,r17,r6
 40267b0:	8922983a 	sll	r17,r17,r4
 40267b4:	0180e244 	movi	r6,905
 40267b8:	01400434 	movhi	r5,16
 40267bc:	3085c83a 	sub	r2,r6,r2
 40267c0:	297fffc4 	addi	r5,r5,-1
 40267c4:	194c703a 	and	r6,r3,r5
 40267c8:	1141ffcc 	andi	r5,r2,2047
 40267cc:	003fe006 	br	4026750 <__flash_rwdata_start+0xffff04e4>
 40267d0:	88000826 	beq	r17,zero,40267f4 <__extendsfdf2+0xe8>
 40267d4:	880cd0fa 	srli	r6,r17,3
 40267d8:	00800434 	movhi	r2,16
 40267dc:	10bfffc4 	addi	r2,r2,-1
 40267e0:	31800234 	orhi	r6,r6,8
 40267e4:	8822977a 	slli	r17,r17,29
 40267e8:	308c703a 	and	r6,r6,r2
 40267ec:	0141ffc4 	movi	r5,2047
 40267f0:	003fd706 	br	4026750 <__flash_rwdata_start+0xffff04e4>
 40267f4:	0141ffc4 	movi	r5,2047
 40267f8:	000d883a 	mov	r6,zero
 40267fc:	003fd406 	br	4026750 <__flash_rwdata_start+0xffff04e4>
 4026800:	000b883a 	mov	r5,zero
 4026804:	000d883a 	mov	r6,zero
 4026808:	003fd106 	br	4026750 <__flash_rwdata_start+0xffff04e4>
 402680c:	11bffd44 	addi	r6,r2,-11
 4026810:	8986983a 	sll	r3,r17,r6
 4026814:	0023883a 	mov	r17,zero
 4026818:	003fe606 	br	40267b4 <__flash_rwdata_start+0xffff0548>

0402681c <__truncdfsf2>:
 402681c:	2810d53a 	srli	r8,r5,20
 4026820:	01c00434 	movhi	r7,16
 4026824:	39ffffc4 	addi	r7,r7,-1
 4026828:	29ce703a 	and	r7,r5,r7
 402682c:	4201ffcc 	andi	r8,r8,2047
 4026830:	380e90fa 	slli	r7,r7,3
 4026834:	200cd77a 	srli	r6,r4,29
 4026838:	42400044 	addi	r9,r8,1
 402683c:	4a41ffcc 	andi	r9,r9,2047
 4026840:	00c00044 	movi	r3,1
 4026844:	280ad7fa 	srli	r5,r5,31
 4026848:	31ceb03a 	or	r7,r6,r7
 402684c:	200490fa 	slli	r2,r4,3
 4026850:	1a40230e 	bge	r3,r9,40268e0 <__truncdfsf2+0xc4>
 4026854:	40ff2004 	addi	r3,r8,-896
 4026858:	01803f84 	movi	r6,254
 402685c:	30c01516 	blt	r6,r3,40268b4 <__truncdfsf2+0x98>
 4026860:	00c0380e 	bge	zero,r3,4026944 <__truncdfsf2+0x128>
 4026864:	200c91ba 	slli	r6,r4,6
 4026868:	380e90fa 	slli	r7,r7,3
 402686c:	1004d77a 	srli	r2,r2,29
 4026870:	300cc03a 	cmpne	r6,r6,zero
 4026874:	31ccb03a 	or	r6,r6,r7
 4026878:	308cb03a 	or	r6,r6,r2
 402687c:	308001cc 	andi	r2,r6,7
 4026880:	10000426 	beq	r2,zero,4026894 <__truncdfsf2+0x78>
 4026884:	308003cc 	andi	r2,r6,15
 4026888:	01000104 	movi	r4,4
 402688c:	11000126 	beq	r2,r4,4026894 <__truncdfsf2+0x78>
 4026890:	31800104 	addi	r6,r6,4
 4026894:	3081002c 	andhi	r2,r6,1024
 4026898:	10001626 	beq	r2,zero,40268f4 <__truncdfsf2+0xd8>
 402689c:	18c00044 	addi	r3,r3,1
 40268a0:	00803fc4 	movi	r2,255
 40268a4:	18800326 	beq	r3,r2,40268b4 <__truncdfsf2+0x98>
 40268a8:	300c91ba 	slli	r6,r6,6
 40268ac:	300cd27a 	srli	r6,r6,9
 40268b0:	00000206 	br	40268bc <__truncdfsf2+0xa0>
 40268b4:	00ffffc4 	movi	r3,-1
 40268b8:	000d883a 	mov	r6,zero
 40268bc:	18c03fcc 	andi	r3,r3,255
 40268c0:	180895fa 	slli	r4,r3,23
 40268c4:	00c02034 	movhi	r3,128
 40268c8:	280a97fa 	slli	r5,r5,31
 40268cc:	18ffffc4 	addi	r3,r3,-1
 40268d0:	30c6703a 	and	r3,r6,r3
 40268d4:	1906b03a 	or	r3,r3,r4
 40268d8:	1944b03a 	or	r2,r3,r5
 40268dc:	f800283a 	ret
 40268e0:	40000b1e 	bne	r8,zero,4026910 <__truncdfsf2+0xf4>
 40268e4:	388cb03a 	or	r6,r7,r2
 40268e8:	0007883a 	mov	r3,zero
 40268ec:	30000426 	beq	r6,zero,4026900 <__truncdfsf2+0xe4>
 40268f0:	01800144 	movi	r6,5
 40268f4:	00803fc4 	movi	r2,255
 40268f8:	300cd0fa 	srli	r6,r6,3
 40268fc:	18800a26 	beq	r3,r2,4026928 <__truncdfsf2+0x10c>
 4026900:	00802034 	movhi	r2,128
 4026904:	10bfffc4 	addi	r2,r2,-1
 4026908:	308c703a 	and	r6,r6,r2
 402690c:	003feb06 	br	40268bc <__flash_rwdata_start+0xffff0650>
 4026910:	3888b03a 	or	r4,r7,r2
 4026914:	203fe726 	beq	r4,zero,40268b4 <__flash_rwdata_start+0xffff0648>
 4026918:	380c90fa 	slli	r6,r7,3
 402691c:	00c03fc4 	movi	r3,255
 4026920:	31808034 	orhi	r6,r6,512
 4026924:	003fd506 	br	402687c <__flash_rwdata_start+0xffff0610>
 4026928:	303fe226 	beq	r6,zero,40268b4 <__flash_rwdata_start+0xffff0648>
 402692c:	00802034 	movhi	r2,128
 4026930:	31801034 	orhi	r6,r6,64
 4026934:	10bfffc4 	addi	r2,r2,-1
 4026938:	00ffffc4 	movi	r3,-1
 402693c:	308c703a 	and	r6,r6,r2
 4026940:	003fde06 	br	40268bc <__flash_rwdata_start+0xffff0650>
 4026944:	013ffa44 	movi	r4,-23
 4026948:	19000e16 	blt	r3,r4,4026984 <__truncdfsf2+0x168>
 402694c:	01000784 	movi	r4,30
 4026950:	20c9c83a 	sub	r4,r4,r3
 4026954:	018007c4 	movi	r6,31
 4026958:	39c02034 	orhi	r7,r7,128
 402695c:	31000b16 	blt	r6,r4,402698c <__truncdfsf2+0x170>
 4026960:	423f2084 	addi	r8,r8,-894
 4026964:	120c983a 	sll	r6,r2,r8
 4026968:	3a0e983a 	sll	r7,r7,r8
 402696c:	1104d83a 	srl	r2,r2,r4
 4026970:	300cc03a 	cmpne	r6,r6,zero
 4026974:	31ceb03a 	or	r7,r6,r7
 4026978:	388cb03a 	or	r6,r7,r2
 402697c:	0007883a 	mov	r3,zero
 4026980:	003fbe06 	br	402687c <__flash_rwdata_start+0xffff0610>
 4026984:	0007883a 	mov	r3,zero
 4026988:	003fd906 	br	40268f0 <__flash_rwdata_start+0xffff0684>
 402698c:	01bfff84 	movi	r6,-2
 4026990:	30cdc83a 	sub	r6,r6,r3
 4026994:	00c00804 	movi	r3,32
 4026998:	398cd83a 	srl	r6,r7,r6
 402699c:	20c00726 	beq	r4,r3,40269bc <__truncdfsf2+0x1a0>
 40269a0:	423f2884 	addi	r8,r8,-862
 40269a4:	3a0e983a 	sll	r7,r7,r8
 40269a8:	3884b03a 	or	r2,r7,r2
 40269ac:	1004c03a 	cmpne	r2,r2,zero
 40269b0:	118cb03a 	or	r6,r2,r6
 40269b4:	0007883a 	mov	r3,zero
 40269b8:	003fb006 	br	402687c <__flash_rwdata_start+0xffff0610>
 40269bc:	000f883a 	mov	r7,zero
 40269c0:	003ff906 	br	40269a8 <__flash_rwdata_start+0xffff073c>

040269c4 <_Unwind_ForcedUnwind_Phase2>:
 40269c4:	defff404 	addi	sp,sp,-48
 40269c8:	dd800915 	stw	r22,36(sp)
 40269cc:	05800034 	movhi	r22,0
 40269d0:	ddc00a15 	stw	r23,40(sp)
 40269d4:	dd400815 	stw	r21,32(sp)
 40269d8:	dd000715 	stw	r20,28(sp)
 40269dc:	dcc00615 	stw	r19,24(sp)
 40269e0:	dc400415 	stw	r17,16(sp)
 40269e4:	dc000315 	stw	r16,12(sp)
 40269e8:	dfc00b15 	stw	ra,44(sp)
 40269ec:	dc800515 	stw	r18,20(sp)
 40269f0:	2021883a 	mov	r16,r4
 40269f4:	2823883a 	mov	r17,r5
 40269f8:	24c00317 	ldw	r19,12(r4)
 40269fc:	25000417 	ldw	r20,16(r4)
 4026a00:	28c00017 	ldw	r3,0(r5)
 4026a04:	b5887604 	addi	r22,r22,8664
 4026a08:	054001c4 	movi	r21,7
 4026a0c:	05c00204 	movi	r23,8
 4026a10:	00001606 	br	4026a6c <_Unwind_ForcedUnwind_Phase2+0xa8>
 4026a14:	81800017 	ldw	r6,0(r16)
 4026a18:	81c00117 	ldw	r7,4(r16)
 4026a1c:	1c800617 	ldw	r18,24(r3)
 4026a20:	dd000215 	stw	r20,8(sp)
 4026a24:	dc400115 	stw	r17,4(sp)
 4026a28:	dc000015 	stw	r16,0(sp)
 4026a2c:	983ee83a 	callr	r19
 4026a30:	01400284 	movi	r5,10
 4026a34:	01000044 	movi	r4,1
 4026a38:	1000241e 	bne	r2,zero,4026acc <_Unwind_ForcedUnwind_Phase2+0x108>
 4026a3c:	90000726 	beq	r18,zero,4026a5c <_Unwind_ForcedUnwind_Phase2+0x98>
 4026a40:	81800017 	ldw	r6,0(r16)
 4026a44:	81c00117 	ldw	r7,4(r16)
 4026a48:	dc400115 	stw	r17,4(sp)
 4026a4c:	dc000015 	stw	r16,0(sp)
 4026a50:	903ee83a 	callr	r18
 4026a54:	15401f26 	beq	r2,r21,4026ad4 <_Unwind_ForcedUnwind_Phase2+0x110>
 4026a58:	15c01c1e 	bne	r2,r23,4026acc <_Unwind_ForcedUnwind_Phase2+0x108>
 4026a5c:	88800017 	ldw	r2,0(r17)
 4026a60:	10c00017 	ldw	r3,0(r2)
 4026a64:	b0c00015 	stw	r3,0(r22)
 4026a68:	88c00015 	stw	r3,0(r17)
 4026a6c:	01400284 	movi	r5,10
 4026a70:	01000044 	movi	r4,1
 4026a74:	183fe71e 	bne	r3,zero,4026a14 <__flash_rwdata_start+0xffff07a8>
 4026a78:	81800017 	ldw	r6,0(r16)
 4026a7c:	81c00117 	ldw	r7,4(r16)
 4026a80:	01400684 	movi	r5,26
 4026a84:	dd000215 	stw	r20,8(sp)
 4026a88:	dc400115 	stw	r17,4(sp)
 4026a8c:	dc000015 	stw	r16,0(sp)
 4026a90:	01000044 	movi	r4,1
 4026a94:	983ee83a 	callr	r19
 4026a98:	10000c1e 	bne	r2,zero,4026acc <_Unwind_ForcedUnwind_Phase2+0x108>
 4026a9c:	00800144 	movi	r2,5
 4026aa0:	dfc00b17 	ldw	ra,44(sp)
 4026aa4:	ddc00a17 	ldw	r23,40(sp)
 4026aa8:	dd800917 	ldw	r22,36(sp)
 4026aac:	dd400817 	ldw	r21,32(sp)
 4026ab0:	dd000717 	ldw	r20,28(sp)
 4026ab4:	dcc00617 	ldw	r19,24(sp)
 4026ab8:	dc800517 	ldw	r18,20(sp)
 4026abc:	dc400417 	ldw	r17,16(sp)
 4026ac0:	dc000317 	ldw	r16,12(sp)
 4026ac4:	dec00c04 	addi	sp,sp,48
 4026ac8:	f800283a 	ret
 4026acc:	00800084 	movi	r2,2
 4026ad0:	003ff306 	br	4026aa0 <__flash_rwdata_start+0xffff0834>
 4026ad4:	a805883a 	mov	r2,r21
 4026ad8:	003ff106 	br	4026aa0 <__flash_rwdata_start+0xffff0834>

04026adc <_Unwind_RaiseException_Phase2>:
 4026adc:	28c00017 	ldw	r3,0(r5)
 4026ae0:	defff804 	addi	sp,sp,-32
 4026ae4:	dcc00515 	stw	r19,20(sp)
 4026ae8:	dc800415 	stw	r18,16(sp)
 4026aec:	dc400315 	stw	r17,12(sp)
 4026af0:	dc000215 	stw	r16,8(sp)
 4026af4:	dfc00715 	stw	ra,28(sp)
 4026af8:	dd000615 	stw	r20,24(sp)
 4026afc:	2823883a 	mov	r17,r5
 4026b00:	2021883a 	mov	r16,r4
 4026b04:	048001c4 	movi	r18,7
 4026b08:	04c00204 	movi	r19,8
 4026b0c:	18001326 	beq	r3,zero,4026b5c <_Unwind_RaiseException_Phase2+0x80>
 4026b10:	81000417 	ldw	r4,16(r16)
 4026b14:	1a000617 	ldw	r8,24(r3)
 4026b18:	19001926 	beq	r3,r4,4026b80 <_Unwind_RaiseException_Phase2+0xa4>
 4026b1c:	40000c26 	beq	r8,zero,4026b50 <_Unwind_RaiseException_Phase2+0x74>
 4026b20:	01400084 	movi	r5,2
 4026b24:	0029883a 	mov	r20,zero
 4026b28:	81800017 	ldw	r6,0(r16)
 4026b2c:	81c00117 	ldw	r7,4(r16)
 4026b30:	01000044 	movi	r4,1
 4026b34:	dc400115 	stw	r17,4(sp)
 4026b38:	dc000015 	stw	r16,0(sp)
 4026b3c:	403ee83a 	callr	r8
 4026b40:	14801326 	beq	r2,r18,4026b90 <_Unwind_RaiseException_Phase2+0xb4>
 4026b44:	14c0051e 	bne	r2,r19,4026b5c <_Unwind_RaiseException_Phase2+0x80>
 4026b48:	a000131e 	bne	r20,zero,4026b98 <_Unwind_RaiseException_Phase2+0xbc>
 4026b4c:	88c00017 	ldw	r3,0(r17)
 4026b50:	18c00017 	ldw	r3,0(r3)
 4026b54:	88c00015 	stw	r3,0(r17)
 4026b58:	183fed1e 	bne	r3,zero,4026b10 <__flash_rwdata_start+0xffff08a4>
 4026b5c:	00800084 	movi	r2,2
 4026b60:	dfc00717 	ldw	ra,28(sp)
 4026b64:	dd000617 	ldw	r20,24(sp)
 4026b68:	dcc00517 	ldw	r19,20(sp)
 4026b6c:	dc800417 	ldw	r18,16(sp)
 4026b70:	dc400317 	ldw	r17,12(sp)
 4026b74:	dc000217 	ldw	r16,8(sp)
 4026b78:	dec00804 	addi	sp,sp,32
 4026b7c:	f800283a 	ret
 4026b80:	40000526 	beq	r8,zero,4026b98 <_Unwind_RaiseException_Phase2+0xbc>
 4026b84:	01400184 	movi	r5,6
 4026b88:	05000104 	movi	r20,4
 4026b8c:	003fe606 	br	4026b28 <__flash_rwdata_start+0xffff08bc>
 4026b90:	9005883a 	mov	r2,r18
 4026b94:	003ff206 	br	4026b60 <__flash_rwdata_start+0xffff08f4>
 4026b98:	4026f480 	call	4026f48 <abort>

04026b9c <uw_install_context.isra.1>:
 4026b9c:	20c00017 	ldw	r3,0(r4)
 4026ba0:	deffff04 	addi	sp,sp,-4
 4026ba4:	01400034 	movhi	r5,0
 4026ba8:	19000917 	ldw	r4,36(r3)
 4026bac:	df000015 	stw	fp,0(sp)
 4026bb0:	18800804 	addi	r2,r3,32
 4026bb4:	d839883a 	mov	fp,sp
 4026bb8:	29487604 	addi	r5,r5,8664
 4026bbc:	28c00015 	stw	r3,0(r5)
 4026bc0:	17000017 	ldw	fp,0(r2)
 4026bc4:	1ec00a17 	ldw	sp,40(r3)
 4026bc8:	2000683a 	jmp	r4

04026bcc <_Unwind_SjLj_Register>:
 4026bcc:	00800034 	movhi	r2,0
 4026bd0:	10887604 	addi	r2,r2,8664
 4026bd4:	10c00017 	ldw	r3,0(r2)
 4026bd8:	11000015 	stw	r4,0(r2)
 4026bdc:	20c00015 	stw	r3,0(r4)
 4026be0:	f800283a 	ret

04026be4 <_Unwind_SjLj_Unregister>:
 4026be4:	20c00017 	ldw	r3,0(r4)
 4026be8:	00800034 	movhi	r2,0
 4026bec:	10887604 	addi	r2,r2,8664
 4026bf0:	10c00015 	stw	r3,0(r2)
 4026bf4:	f800283a 	ret

04026bf8 <_Unwind_GetGR>:
 4026bf8:	20800017 	ldw	r2,0(r4)
 4026bfc:	29400084 	addi	r5,r5,2
 4026c00:	294b883a 	add	r5,r5,r5
 4026c04:	294b883a 	add	r5,r5,r5
 4026c08:	114b883a 	add	r5,r2,r5
 4026c0c:	28800017 	ldw	r2,0(r5)
 4026c10:	f800283a 	ret

04026c14 <_Unwind_GetCFA>:
 4026c14:	20800017 	ldw	r2,0(r4)
 4026c18:	10000226 	beq	r2,zero,4026c24 <_Unwind_GetCFA+0x10>
 4026c1c:	10800a17 	ldw	r2,40(r2)
 4026c20:	f800283a 	ret
 4026c24:	0005883a 	mov	r2,zero
 4026c28:	f800283a 	ret

04026c2c <_Unwind_SetGR>:
 4026c2c:	20800017 	ldw	r2,0(r4)
 4026c30:	29400084 	addi	r5,r5,2
 4026c34:	294b883a 	add	r5,r5,r5
 4026c38:	294b883a 	add	r5,r5,r5
 4026c3c:	114b883a 	add	r5,r2,r5
 4026c40:	29800015 	stw	r6,0(r5)
 4026c44:	f800283a 	ret

04026c48 <_Unwind_GetIP>:
 4026c48:	20800017 	ldw	r2,0(r4)
 4026c4c:	10800117 	ldw	r2,4(r2)
 4026c50:	10800044 	addi	r2,r2,1
 4026c54:	f800283a 	ret

04026c58 <_Unwind_GetIPInfo>:
 4026c58:	20800017 	ldw	r2,0(r4)
 4026c5c:	28000015 	stw	zero,0(r5)
 4026c60:	10000326 	beq	r2,zero,4026c70 <_Unwind_GetIPInfo+0x18>
 4026c64:	10800117 	ldw	r2,4(r2)
 4026c68:	10800044 	addi	r2,r2,1
 4026c6c:	f800283a 	ret
 4026c70:	0005883a 	mov	r2,zero
 4026c74:	f800283a 	ret

04026c78 <_Unwind_SetIP>:
 4026c78:	20800017 	ldw	r2,0(r4)
 4026c7c:	297fffc4 	addi	r5,r5,-1
 4026c80:	11400115 	stw	r5,4(r2)
 4026c84:	f800283a 	ret

04026c88 <_Unwind_GetLanguageSpecificData>:
 4026c88:	20800017 	ldw	r2,0(r4)
 4026c8c:	10800717 	ldw	r2,28(r2)
 4026c90:	f800283a 	ret

04026c94 <_Unwind_GetRegionStart>:
 4026c94:	0005883a 	mov	r2,zero
 4026c98:	f800283a 	ret

04026c9c <_Unwind_FindEnclosingFunction>:
 4026c9c:	0005883a 	mov	r2,zero
 4026ca0:	f800283a 	ret

04026ca4 <_Unwind_GetDataRelBase>:
 4026ca4:	0005883a 	mov	r2,zero
 4026ca8:	f800283a 	ret

04026cac <_Unwind_GetTextRelBase>:
 4026cac:	0005883a 	mov	r2,zero
 4026cb0:	f800283a 	ret

04026cb4 <_Unwind_SjLj_RaiseException>:
 4026cb4:	00800034 	movhi	r2,0
 4026cb8:	defff804 	addi	sp,sp,-32
 4026cbc:	10887604 	addi	r2,r2,8664
 4026cc0:	dc800515 	stw	r18,20(sp)
 4026cc4:	14800017 	ldw	r18,0(r2)
 4026cc8:	dfc00715 	stw	ra,28(sp)
 4026ccc:	dcc00615 	stw	r19,24(sp)
 4026cd0:	dc400415 	stw	r17,16(sp)
 4026cd4:	dc000315 	stw	r16,12(sp)
 4026cd8:	dc800215 	stw	r18,8(sp)
 4026cdc:	90001426 	beq	r18,zero,4026d30 <_Unwind_SjLj_RaiseException+0x7c>
 4026ce0:	2021883a 	mov	r16,r4
 4026ce4:	9005883a 	mov	r2,r18
 4026ce8:	04400184 	movi	r17,6
 4026cec:	04c00204 	movi	r19,8
 4026cf0:	10800617 	ldw	r2,24(r2)
 4026cf4:	10000a26 	beq	r2,zero,4026d20 <_Unwind_SjLj_RaiseException+0x6c>
 4026cf8:	81800017 	ldw	r6,0(r16)
 4026cfc:	81c00117 	ldw	r7,4(r16)
 4026d00:	01400044 	movi	r5,1
 4026d04:	d8c00204 	addi	r3,sp,8
 4026d08:	d8c00115 	stw	r3,4(sp)
 4026d0c:	dc000015 	stw	r16,0(sp)
 4026d10:	2809883a 	mov	r4,r5
 4026d14:	103ee83a 	callr	r2
 4026d18:	14400d26 	beq	r2,r17,4026d50 <_Unwind_SjLj_RaiseException+0x9c>
 4026d1c:	14c0171e 	bne	r2,r19,4026d7c <_Unwind_SjLj_RaiseException+0xc8>
 4026d20:	d8800217 	ldw	r2,8(sp)
 4026d24:	10800017 	ldw	r2,0(r2)
 4026d28:	d8800215 	stw	r2,8(sp)
 4026d2c:	103ff01e 	bne	r2,zero,4026cf0 <__flash_rwdata_start+0xffff0a84>
 4026d30:	00800144 	movi	r2,5
 4026d34:	dfc00717 	ldw	ra,28(sp)
 4026d38:	dcc00617 	ldw	r19,24(sp)
 4026d3c:	dc800517 	ldw	r18,20(sp)
 4026d40:	dc400417 	ldw	r17,16(sp)
 4026d44:	dc000317 	ldw	r16,12(sp)
 4026d48:	dec00804 	addi	sp,sp,32
 4026d4c:	f800283a 	ret
 4026d50:	d8800217 	ldw	r2,8(sp)
 4026d54:	80000315 	stw	zero,12(r16)
 4026d58:	d9400204 	addi	r5,sp,8
 4026d5c:	80800415 	stw	r2,16(r16)
 4026d60:	8009883a 	mov	r4,r16
 4026d64:	dc800215 	stw	r18,8(sp)
 4026d68:	4026adc0 	call	4026adc <_Unwind_RaiseException_Phase2>
 4026d6c:	00c001c4 	movi	r3,7
 4026d70:	10fff01e 	bne	r2,r3,4026d34 <__flash_rwdata_start+0xffff0ac8>
 4026d74:	d9000204 	addi	r4,sp,8
 4026d78:	4026b9c0 	call	4026b9c <uw_install_context.isra.1>
 4026d7c:	008000c4 	movi	r2,3
 4026d80:	003fec06 	br	4026d34 <__flash_rwdata_start+0xffff0ac8>

04026d84 <_Unwind_SjLj_ForcedUnwind>:
 4026d84:	00c00034 	movhi	r3,0
 4026d88:	18c87604 	addi	r3,r3,8664
 4026d8c:	defffe04 	addi	sp,sp,-8
 4026d90:	18c00017 	ldw	r3,0(r3)
 4026d94:	dfc00115 	stw	ra,4(sp)
 4026d98:	21400315 	stw	r5,12(r4)
 4026d9c:	21800415 	stw	r6,16(r4)
 4026da0:	d80b883a 	mov	r5,sp
 4026da4:	d8c00015 	stw	r3,0(sp)
 4026da8:	40269c40 	call	40269c4 <_Unwind_ForcedUnwind_Phase2>
 4026dac:	00c001c4 	movi	r3,7
 4026db0:	10c00326 	beq	r2,r3,4026dc0 <_Unwind_SjLj_ForcedUnwind+0x3c>
 4026db4:	dfc00117 	ldw	ra,4(sp)
 4026db8:	dec00204 	addi	sp,sp,8
 4026dbc:	f800283a 	ret
 4026dc0:	d809883a 	mov	r4,sp
 4026dc4:	4026b9c0 	call	4026b9c <uw_install_context.isra.1>

04026dc8 <_Unwind_SjLj_Resume>:
 4026dc8:	00c00034 	movhi	r3,0
 4026dcc:	18c87604 	addi	r3,r3,8664
 4026dd0:	18c00017 	ldw	r3,0(r3)
 4026dd4:	20800317 	ldw	r2,12(r4)
 4026dd8:	defffe04 	addi	sp,sp,-8
 4026ddc:	dfc00115 	stw	ra,4(sp)
 4026de0:	d8c00015 	stw	r3,0(sp)
 4026de4:	d80b883a 	mov	r5,sp
 4026de8:	1000041e 	bne	r2,zero,4026dfc <_Unwind_SjLj_Resume+0x34>
 4026dec:	4026adc0 	call	4026adc <_Unwind_RaiseException_Phase2>
 4026df0:	00c001c4 	movi	r3,7
 4026df4:	10c00326 	beq	r2,r3,4026e04 <_Unwind_SjLj_Resume+0x3c>
 4026df8:	4026f480 	call	4026f48 <abort>
 4026dfc:	40269c40 	call	40269c4 <_Unwind_ForcedUnwind_Phase2>
 4026e00:	003ffb06 	br	4026df0 <__flash_rwdata_start+0xffff0b84>
 4026e04:	d809883a 	mov	r4,sp
 4026e08:	4026b9c0 	call	4026b9c <uw_install_context.isra.1>

04026e0c <_Unwind_SjLj_Resume_or_Rethrow>:
 4026e0c:	20800317 	ldw	r2,12(r4)
 4026e10:	defffe04 	addi	sp,sp,-8
 4026e14:	dfc00115 	stw	ra,4(sp)
 4026e18:	1000041e 	bne	r2,zero,4026e2c <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 4026e1c:	4026cb40 	call	4026cb4 <_Unwind_SjLj_RaiseException>
 4026e20:	dfc00117 	ldw	ra,4(sp)
 4026e24:	dec00204 	addi	sp,sp,8
 4026e28:	f800283a 	ret
 4026e2c:	00800034 	movhi	r2,0
 4026e30:	10887604 	addi	r2,r2,8664
 4026e34:	10800017 	ldw	r2,0(r2)
 4026e38:	d80b883a 	mov	r5,sp
 4026e3c:	d8800015 	stw	r2,0(sp)
 4026e40:	40269c40 	call	40269c4 <_Unwind_ForcedUnwind_Phase2>
 4026e44:	00c001c4 	movi	r3,7
 4026e48:	10c00126 	beq	r2,r3,4026e50 <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 4026e4c:	4026f480 	call	4026f48 <abort>
 4026e50:	d809883a 	mov	r4,sp
 4026e54:	4026b9c0 	call	4026b9c <uw_install_context.isra.1>

04026e58 <_Unwind_DeleteException>:
 4026e58:	20800217 	ldw	r2,8(r4)
 4026e5c:	10000326 	beq	r2,zero,4026e6c <_Unwind_DeleteException+0x14>
 4026e60:	200b883a 	mov	r5,r4
 4026e64:	01000044 	movi	r4,1
 4026e68:	1000683a 	jmp	r2
 4026e6c:	f800283a 	ret

04026e70 <_Unwind_Backtrace>:
 4026e70:	00800034 	movhi	r2,0
 4026e74:	10887604 	addi	r2,r2,8664
 4026e78:	10800017 	ldw	r2,0(r2)
 4026e7c:	defffc04 	addi	sp,sp,-16
 4026e80:	dc400215 	stw	r17,8(sp)
 4026e84:	dc000115 	stw	r16,4(sp)
 4026e88:	dfc00315 	stw	ra,12(sp)
 4026e8c:	2023883a 	mov	r17,r4
 4026e90:	2821883a 	mov	r16,r5
 4026e94:	d8800015 	stw	r2,0(sp)
 4026e98:	00000506 	br	4026eb0 <_Unwind_Backtrace+0x40>
 4026e9c:	883ee83a 	callr	r17
 4026ea0:	10000e1e 	bne	r2,zero,4026edc <_Unwind_Backtrace+0x6c>
 4026ea4:	d8800017 	ldw	r2,0(sp)
 4026ea8:	10800017 	ldw	r2,0(r2)
 4026eac:	d8800015 	stw	r2,0(sp)
 4026eb0:	800b883a 	mov	r5,r16
 4026eb4:	d809883a 	mov	r4,sp
 4026eb8:	103ff81e 	bne	r2,zero,4026e9c <__flash_rwdata_start+0xffff0c30>
 4026ebc:	883ee83a 	callr	r17
 4026ec0:	1000061e 	bne	r2,zero,4026edc <_Unwind_Backtrace+0x6c>
 4026ec4:	00800144 	movi	r2,5
 4026ec8:	dfc00317 	ldw	ra,12(sp)
 4026ecc:	dc400217 	ldw	r17,8(sp)
 4026ed0:	dc000117 	ldw	r16,4(sp)
 4026ed4:	dec00404 	addi	sp,sp,16
 4026ed8:	f800283a 	ret
 4026edc:	008000c4 	movi	r2,3
 4026ee0:	003ff906 	br	4026ec8 <__flash_rwdata_start+0xffff0c5c>

04026ee4 <__clzsi2>:
 4026ee4:	00bfffd4 	movui	r2,65535
 4026ee8:	11000536 	bltu	r2,r4,4026f00 <__clzsi2+0x1c>
 4026eec:	00803fc4 	movi	r2,255
 4026ef0:	11000f36 	bltu	r2,r4,4026f30 <__clzsi2+0x4c>
 4026ef4:	00800804 	movi	r2,32
 4026ef8:	0007883a 	mov	r3,zero
 4026efc:	00000506 	br	4026f14 <__clzsi2+0x30>
 4026f00:	00804034 	movhi	r2,256
 4026f04:	10bfffc4 	addi	r2,r2,-1
 4026f08:	11000c2e 	bgeu	r2,r4,4026f3c <__clzsi2+0x58>
 4026f0c:	00800204 	movi	r2,8
 4026f10:	00c00604 	movi	r3,24
 4026f14:	20c8d83a 	srl	r4,r4,r3
 4026f18:	00c00034 	movhi	r3,0
 4026f1c:	18c0e7c4 	addi	r3,r3,927
 4026f20:	1909883a 	add	r4,r3,r4
 4026f24:	20c00003 	ldbu	r3,0(r4)
 4026f28:	10c5c83a 	sub	r2,r2,r3
 4026f2c:	f800283a 	ret
 4026f30:	00800604 	movi	r2,24
 4026f34:	00c00204 	movi	r3,8
 4026f38:	003ff606 	br	4026f14 <__flash_rwdata_start+0xffff0ca8>
 4026f3c:	00800404 	movi	r2,16
 4026f40:	1007883a 	mov	r3,r2
 4026f44:	003ff306 	br	4026f14 <__flash_rwdata_start+0xffff0ca8>

04026f48 <abort>:
 4026f48:	deffff04 	addi	sp,sp,-4
 4026f4c:	01000184 	movi	r4,6
 4026f50:	dfc00015 	stw	ra,0(sp)
 4026f54:	4027d400 	call	4027d40 <raise>
 4026f58:	01000044 	movi	r4,1
 4026f5c:	403336c0 	call	403336c <_exit>

04026f60 <malloc>:
 4026f60:	00800034 	movhi	r2,0
 4026f64:	10886404 	addi	r2,r2,8592
 4026f68:	200b883a 	mov	r5,r4
 4026f6c:	11000017 	ldw	r4,0(r2)
 4026f70:	4026f881 	jmpi	4026f88 <_malloc_r>

04026f74 <free>:
 4026f74:	00800034 	movhi	r2,0
 4026f78:	10886404 	addi	r2,r2,8592
 4026f7c:	200b883a 	mov	r5,r4
 4026f80:	11000017 	ldw	r4,0(r2)
 4026f84:	402c37c1 	jmpi	402c37c <_free_r>

04026f88 <_malloc_r>:
 4026f88:	defff504 	addi	sp,sp,-44
 4026f8c:	dc800315 	stw	r18,12(sp)
 4026f90:	dfc00a15 	stw	ra,40(sp)
 4026f94:	df000915 	stw	fp,36(sp)
 4026f98:	ddc00815 	stw	r23,32(sp)
 4026f9c:	dd800715 	stw	r22,28(sp)
 4026fa0:	dd400615 	stw	r21,24(sp)
 4026fa4:	dd000515 	stw	r20,20(sp)
 4026fa8:	dcc00415 	stw	r19,16(sp)
 4026fac:	dc400215 	stw	r17,8(sp)
 4026fb0:	dc000115 	stw	r16,4(sp)
 4026fb4:	288002c4 	addi	r2,r5,11
 4026fb8:	00c00584 	movi	r3,22
 4026fbc:	2025883a 	mov	r18,r4
 4026fc0:	18807f2e 	bgeu	r3,r2,40271c0 <_malloc_r+0x238>
 4026fc4:	047ffe04 	movi	r17,-8
 4026fc8:	1462703a 	and	r17,r2,r17
 4026fcc:	8800a316 	blt	r17,zero,402725c <_malloc_r+0x2d4>
 4026fd0:	8940a236 	bltu	r17,r5,402725c <_malloc_r+0x2d4>
 4026fd4:	40339700 	call	4033970 <__malloc_lock>
 4026fd8:	00807dc4 	movi	r2,503
 4026fdc:	1441e92e 	bgeu	r2,r17,4027784 <_malloc_r+0x7fc>
 4026fe0:	8804d27a 	srli	r2,r17,9
 4026fe4:	1000a126 	beq	r2,zero,402726c <_malloc_r+0x2e4>
 4026fe8:	00c00104 	movi	r3,4
 4026fec:	18811e36 	bltu	r3,r2,4027468 <_malloc_r+0x4e0>
 4026ff0:	8804d1ba 	srli	r2,r17,6
 4026ff4:	12000e44 	addi	r8,r2,57
 4026ff8:	11c00e04 	addi	r7,r2,56
 4026ffc:	4209883a 	add	r4,r8,r8
 4027000:	04c00034 	movhi	r19,0
 4027004:	2109883a 	add	r4,r4,r4
 4027008:	9cc1a604 	addi	r19,r19,1688
 402700c:	2109883a 	add	r4,r4,r4
 4027010:	9909883a 	add	r4,r19,r4
 4027014:	24000117 	ldw	r16,4(r4)
 4027018:	213ffe04 	addi	r4,r4,-8
 402701c:	24009726 	beq	r4,r16,402727c <_malloc_r+0x2f4>
 4027020:	80800117 	ldw	r2,4(r16)
 4027024:	01bfff04 	movi	r6,-4
 4027028:	014003c4 	movi	r5,15
 402702c:	1184703a 	and	r2,r2,r6
 4027030:	1447c83a 	sub	r3,r2,r17
 4027034:	28c00716 	blt	r5,r3,4027054 <_malloc_r+0xcc>
 4027038:	1800920e 	bge	r3,zero,4027284 <_malloc_r+0x2fc>
 402703c:	84000317 	ldw	r16,12(r16)
 4027040:	24008e26 	beq	r4,r16,402727c <_malloc_r+0x2f4>
 4027044:	80800117 	ldw	r2,4(r16)
 4027048:	1184703a 	and	r2,r2,r6
 402704c:	1447c83a 	sub	r3,r2,r17
 4027050:	28fff90e 	bge	r5,r3,4027038 <__flash_rwdata_start+0xffff0dcc>
 4027054:	3809883a 	mov	r4,r7
 4027058:	01800034 	movhi	r6,0
 402705c:	9c000417 	ldw	r16,16(r19)
 4027060:	3181a604 	addi	r6,r6,1688
 4027064:	32000204 	addi	r8,r6,8
 4027068:	82013426 	beq	r16,r8,402753c <_malloc_r+0x5b4>
 402706c:	80c00117 	ldw	r3,4(r16)
 4027070:	00bfff04 	movi	r2,-4
 4027074:	188e703a 	and	r7,r3,r2
 4027078:	3c45c83a 	sub	r2,r7,r17
 402707c:	00c003c4 	movi	r3,15
 4027080:	18811f16 	blt	r3,r2,4027500 <_malloc_r+0x578>
 4027084:	32000515 	stw	r8,20(r6)
 4027088:	32000415 	stw	r8,16(r6)
 402708c:	10007f0e 	bge	r2,zero,402728c <_malloc_r+0x304>
 4027090:	00807fc4 	movi	r2,511
 4027094:	11c0fd36 	bltu	r2,r7,402748c <_malloc_r+0x504>
 4027098:	3806d0fa 	srli	r3,r7,3
 402709c:	01c00044 	movi	r7,1
 40270a0:	30800117 	ldw	r2,4(r6)
 40270a4:	19400044 	addi	r5,r3,1
 40270a8:	294b883a 	add	r5,r5,r5
 40270ac:	1807d0ba 	srai	r3,r3,2
 40270b0:	294b883a 	add	r5,r5,r5
 40270b4:	294b883a 	add	r5,r5,r5
 40270b8:	298b883a 	add	r5,r5,r6
 40270bc:	38c6983a 	sll	r3,r7,r3
 40270c0:	29c00017 	ldw	r7,0(r5)
 40270c4:	2a7ffe04 	addi	r9,r5,-8
 40270c8:	1886b03a 	or	r3,r3,r2
 40270cc:	82400315 	stw	r9,12(r16)
 40270d0:	81c00215 	stw	r7,8(r16)
 40270d4:	30c00115 	stw	r3,4(r6)
 40270d8:	2c000015 	stw	r16,0(r5)
 40270dc:	3c000315 	stw	r16,12(r7)
 40270e0:	2005d0ba 	srai	r2,r4,2
 40270e4:	01400044 	movi	r5,1
 40270e8:	288a983a 	sll	r5,r5,r2
 40270ec:	19406f36 	bltu	r3,r5,40272ac <_malloc_r+0x324>
 40270f0:	28c4703a 	and	r2,r5,r3
 40270f4:	10000a1e 	bne	r2,zero,4027120 <_malloc_r+0x198>
 40270f8:	00bfff04 	movi	r2,-4
 40270fc:	294b883a 	add	r5,r5,r5
 4027100:	2088703a 	and	r4,r4,r2
 4027104:	28c4703a 	and	r2,r5,r3
 4027108:	21000104 	addi	r4,r4,4
 402710c:	1000041e 	bne	r2,zero,4027120 <_malloc_r+0x198>
 4027110:	294b883a 	add	r5,r5,r5
 4027114:	28c4703a 	and	r2,r5,r3
 4027118:	21000104 	addi	r4,r4,4
 402711c:	103ffc26 	beq	r2,zero,4027110 <__flash_rwdata_start+0xffff0ea4>
 4027120:	02bfff04 	movi	r10,-4
 4027124:	024003c4 	movi	r9,15
 4027128:	21800044 	addi	r6,r4,1
 402712c:	318d883a 	add	r6,r6,r6
 4027130:	318d883a 	add	r6,r6,r6
 4027134:	318d883a 	add	r6,r6,r6
 4027138:	998d883a 	add	r6,r19,r6
 402713c:	333ffe04 	addi	r12,r6,-8
 4027140:	2017883a 	mov	r11,r4
 4027144:	31800104 	addi	r6,r6,4
 4027148:	34000017 	ldw	r16,0(r6)
 402714c:	31fffd04 	addi	r7,r6,-12
 4027150:	81c0041e 	bne	r16,r7,4027164 <_malloc_r+0x1dc>
 4027154:	0000fb06 	br	4027544 <_malloc_r+0x5bc>
 4027158:	1801030e 	bge	r3,zero,4027568 <_malloc_r+0x5e0>
 402715c:	84000317 	ldw	r16,12(r16)
 4027160:	81c0f826 	beq	r16,r7,4027544 <_malloc_r+0x5bc>
 4027164:	80800117 	ldw	r2,4(r16)
 4027168:	1284703a 	and	r2,r2,r10
 402716c:	1447c83a 	sub	r3,r2,r17
 4027170:	48fff90e 	bge	r9,r3,4027158 <__flash_rwdata_start+0xffff0eec>
 4027174:	80800317 	ldw	r2,12(r16)
 4027178:	81000217 	ldw	r4,8(r16)
 402717c:	89400054 	ori	r5,r17,1
 4027180:	81400115 	stw	r5,4(r16)
 4027184:	20800315 	stw	r2,12(r4)
 4027188:	11000215 	stw	r4,8(r2)
 402718c:	8463883a 	add	r17,r16,r17
 4027190:	9c400515 	stw	r17,20(r19)
 4027194:	9c400415 	stw	r17,16(r19)
 4027198:	18800054 	ori	r2,r3,1
 402719c:	88800115 	stw	r2,4(r17)
 40271a0:	8a000315 	stw	r8,12(r17)
 40271a4:	8a000215 	stw	r8,8(r17)
 40271a8:	88e3883a 	add	r17,r17,r3
 40271ac:	88c00015 	stw	r3,0(r17)
 40271b0:	9009883a 	mov	r4,r18
 40271b4:	40339940 	call	4033994 <__malloc_unlock>
 40271b8:	80800204 	addi	r2,r16,8
 40271bc:	00001b06 	br	402722c <_malloc_r+0x2a4>
 40271c0:	04400404 	movi	r17,16
 40271c4:	89402536 	bltu	r17,r5,402725c <_malloc_r+0x2d4>
 40271c8:	40339700 	call	4033970 <__malloc_lock>
 40271cc:	00800184 	movi	r2,6
 40271d0:	01000084 	movi	r4,2
 40271d4:	04c00034 	movhi	r19,0
 40271d8:	1085883a 	add	r2,r2,r2
 40271dc:	9cc1a604 	addi	r19,r19,1688
 40271e0:	1085883a 	add	r2,r2,r2
 40271e4:	9885883a 	add	r2,r19,r2
 40271e8:	14000117 	ldw	r16,4(r2)
 40271ec:	10fffe04 	addi	r3,r2,-8
 40271f0:	80c0d926 	beq	r16,r3,4027558 <_malloc_r+0x5d0>
 40271f4:	80c00117 	ldw	r3,4(r16)
 40271f8:	81000317 	ldw	r4,12(r16)
 40271fc:	00bfff04 	movi	r2,-4
 4027200:	1884703a 	and	r2,r3,r2
 4027204:	81400217 	ldw	r5,8(r16)
 4027208:	8085883a 	add	r2,r16,r2
 402720c:	10c00117 	ldw	r3,4(r2)
 4027210:	29000315 	stw	r4,12(r5)
 4027214:	21400215 	stw	r5,8(r4)
 4027218:	18c00054 	ori	r3,r3,1
 402721c:	10c00115 	stw	r3,4(r2)
 4027220:	9009883a 	mov	r4,r18
 4027224:	40339940 	call	4033994 <__malloc_unlock>
 4027228:	80800204 	addi	r2,r16,8
 402722c:	dfc00a17 	ldw	ra,40(sp)
 4027230:	df000917 	ldw	fp,36(sp)
 4027234:	ddc00817 	ldw	r23,32(sp)
 4027238:	dd800717 	ldw	r22,28(sp)
 402723c:	dd400617 	ldw	r21,24(sp)
 4027240:	dd000517 	ldw	r20,20(sp)
 4027244:	dcc00417 	ldw	r19,16(sp)
 4027248:	dc800317 	ldw	r18,12(sp)
 402724c:	dc400217 	ldw	r17,8(sp)
 4027250:	dc000117 	ldw	r16,4(sp)
 4027254:	dec00b04 	addi	sp,sp,44
 4027258:	f800283a 	ret
 402725c:	00800304 	movi	r2,12
 4027260:	90800015 	stw	r2,0(r18)
 4027264:	0005883a 	mov	r2,zero
 4027268:	003ff006 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 402726c:	01002004 	movi	r4,128
 4027270:	02001004 	movi	r8,64
 4027274:	01c00fc4 	movi	r7,63
 4027278:	003f6106 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 402727c:	4009883a 	mov	r4,r8
 4027280:	003f7506 	br	4027058 <__flash_rwdata_start+0xffff0dec>
 4027284:	81000317 	ldw	r4,12(r16)
 4027288:	003fde06 	br	4027204 <__flash_rwdata_start+0xffff0f98>
 402728c:	81c5883a 	add	r2,r16,r7
 4027290:	11400117 	ldw	r5,4(r2)
 4027294:	9009883a 	mov	r4,r18
 4027298:	29400054 	ori	r5,r5,1
 402729c:	11400115 	stw	r5,4(r2)
 40272a0:	40339940 	call	4033994 <__malloc_unlock>
 40272a4:	80800204 	addi	r2,r16,8
 40272a8:	003fe006 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 40272ac:	9c000217 	ldw	r16,8(r19)
 40272b0:	00bfff04 	movi	r2,-4
 40272b4:	85800117 	ldw	r22,4(r16)
 40272b8:	b0ac703a 	and	r22,r22,r2
 40272bc:	b4400336 	bltu	r22,r17,40272cc <_malloc_r+0x344>
 40272c0:	b445c83a 	sub	r2,r22,r17
 40272c4:	00c003c4 	movi	r3,15
 40272c8:	18805d16 	blt	r3,r2,4027440 <_malloc_r+0x4b8>
 40272cc:	05c00034 	movhi	r23,0
 40272d0:	00800034 	movhi	r2,0
 40272d4:	10887904 	addi	r2,r2,8676
 40272d8:	bdc86104 	addi	r23,r23,8580
 40272dc:	15400017 	ldw	r21,0(r2)
 40272e0:	b8c00017 	ldw	r3,0(r23)
 40272e4:	00bfffc4 	movi	r2,-1
 40272e8:	858d883a 	add	r6,r16,r22
 40272ec:	8d6b883a 	add	r21,r17,r21
 40272f0:	1880ea26 	beq	r3,r2,402769c <_malloc_r+0x714>
 40272f4:	ad4403c4 	addi	r21,r21,4111
 40272f8:	00bc0004 	movi	r2,-4096
 40272fc:	a8aa703a 	and	r21,r21,r2
 4027300:	a80b883a 	mov	r5,r21
 4027304:	9009883a 	mov	r4,r18
 4027308:	d9800015 	stw	r6,0(sp)
 402730c:	4027a980 	call	4027a98 <_sbrk_r>
 4027310:	1029883a 	mov	r20,r2
 4027314:	00bfffc4 	movi	r2,-1
 4027318:	d9800017 	ldw	r6,0(sp)
 402731c:	a080e826 	beq	r20,r2,40276c0 <_malloc_r+0x738>
 4027320:	a180a636 	bltu	r20,r6,40275bc <_malloc_r+0x634>
 4027324:	07000174 	movhi	fp,5
 4027328:	e7348904 	addi	fp,fp,-11740
 402732c:	e0800017 	ldw	r2,0(fp)
 4027330:	a887883a 	add	r3,r21,r2
 4027334:	e0c00015 	stw	r3,0(fp)
 4027338:	3500e626 	beq	r6,r20,40276d4 <_malloc_r+0x74c>
 402733c:	b9000017 	ldw	r4,0(r23)
 4027340:	00bfffc4 	movi	r2,-1
 4027344:	2080ee26 	beq	r4,r2,4027700 <_malloc_r+0x778>
 4027348:	a185c83a 	sub	r2,r20,r6
 402734c:	10c5883a 	add	r2,r2,r3
 4027350:	e0800015 	stw	r2,0(fp)
 4027354:	a0c001cc 	andi	r3,r20,7
 4027358:	1800bc26 	beq	r3,zero,402764c <_malloc_r+0x6c4>
 402735c:	a0e9c83a 	sub	r20,r20,r3
 4027360:	00840204 	movi	r2,4104
 4027364:	a5000204 	addi	r20,r20,8
 4027368:	10c7c83a 	sub	r3,r2,r3
 402736c:	a545883a 	add	r2,r20,r21
 4027370:	1083ffcc 	andi	r2,r2,4095
 4027374:	18abc83a 	sub	r21,r3,r2
 4027378:	a80b883a 	mov	r5,r21
 402737c:	9009883a 	mov	r4,r18
 4027380:	4027a980 	call	4027a98 <_sbrk_r>
 4027384:	00ffffc4 	movi	r3,-1
 4027388:	10c0e126 	beq	r2,r3,4027710 <_malloc_r+0x788>
 402738c:	1505c83a 	sub	r2,r2,r20
 4027390:	1545883a 	add	r2,r2,r21
 4027394:	10800054 	ori	r2,r2,1
 4027398:	e0c00017 	ldw	r3,0(fp)
 402739c:	9d000215 	stw	r20,8(r19)
 40273a0:	a0800115 	stw	r2,4(r20)
 40273a4:	a8c7883a 	add	r3,r21,r3
 40273a8:	e0c00015 	stw	r3,0(fp)
 40273ac:	84c00e26 	beq	r16,r19,40273e8 <_malloc_r+0x460>
 40273b0:	018003c4 	movi	r6,15
 40273b4:	3580a72e 	bgeu	r6,r22,4027654 <_malloc_r+0x6cc>
 40273b8:	81400117 	ldw	r5,4(r16)
 40273bc:	013ffe04 	movi	r4,-8
 40273c0:	b0bffd04 	addi	r2,r22,-12
 40273c4:	1104703a 	and	r2,r2,r4
 40273c8:	2900004c 	andi	r4,r5,1
 40273cc:	2088b03a 	or	r4,r4,r2
 40273d0:	81000115 	stw	r4,4(r16)
 40273d4:	01400144 	movi	r5,5
 40273d8:	8089883a 	add	r4,r16,r2
 40273dc:	21400115 	stw	r5,4(r4)
 40273e0:	21400215 	stw	r5,8(r4)
 40273e4:	3080cd36 	bltu	r6,r2,402771c <_malloc_r+0x794>
 40273e8:	00800034 	movhi	r2,0
 40273ec:	10887804 	addi	r2,r2,8672
 40273f0:	11000017 	ldw	r4,0(r2)
 40273f4:	20c0012e 	bgeu	r4,r3,40273fc <_malloc_r+0x474>
 40273f8:	10c00015 	stw	r3,0(r2)
 40273fc:	00800034 	movhi	r2,0
 4027400:	10887704 	addi	r2,r2,8668
 4027404:	11000017 	ldw	r4,0(r2)
 4027408:	9c000217 	ldw	r16,8(r19)
 402740c:	20c0012e 	bgeu	r4,r3,4027414 <_malloc_r+0x48c>
 4027410:	10c00015 	stw	r3,0(r2)
 4027414:	80c00117 	ldw	r3,4(r16)
 4027418:	00bfff04 	movi	r2,-4
 402741c:	1886703a 	and	r3,r3,r2
 4027420:	1c45c83a 	sub	r2,r3,r17
 4027424:	1c400236 	bltu	r3,r17,4027430 <_malloc_r+0x4a8>
 4027428:	00c003c4 	movi	r3,15
 402742c:	18800416 	blt	r3,r2,4027440 <_malloc_r+0x4b8>
 4027430:	9009883a 	mov	r4,r18
 4027434:	40339940 	call	4033994 <__malloc_unlock>
 4027438:	0005883a 	mov	r2,zero
 402743c:	003f7b06 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 4027440:	88c00054 	ori	r3,r17,1
 4027444:	80c00115 	stw	r3,4(r16)
 4027448:	8463883a 	add	r17,r16,r17
 402744c:	10800054 	ori	r2,r2,1
 4027450:	9c400215 	stw	r17,8(r19)
 4027454:	88800115 	stw	r2,4(r17)
 4027458:	9009883a 	mov	r4,r18
 402745c:	40339940 	call	4033994 <__malloc_unlock>
 4027460:	80800204 	addi	r2,r16,8
 4027464:	003f7106 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 4027468:	00c00504 	movi	r3,20
 402746c:	18804a2e 	bgeu	r3,r2,4027598 <_malloc_r+0x610>
 4027470:	00c01504 	movi	r3,84
 4027474:	18806e36 	bltu	r3,r2,4027630 <_malloc_r+0x6a8>
 4027478:	8804d33a 	srli	r2,r17,12
 402747c:	12001bc4 	addi	r8,r2,111
 4027480:	11c01b84 	addi	r7,r2,110
 4027484:	4209883a 	add	r4,r8,r8
 4027488:	003edd06 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 402748c:	3804d27a 	srli	r2,r7,9
 4027490:	00c00104 	movi	r3,4
 4027494:	1880442e 	bgeu	r3,r2,40275a8 <_malloc_r+0x620>
 4027498:	00c00504 	movi	r3,20
 402749c:	18808136 	bltu	r3,r2,40276a4 <_malloc_r+0x71c>
 40274a0:	11401704 	addi	r5,r2,92
 40274a4:	10c016c4 	addi	r3,r2,91
 40274a8:	294b883a 	add	r5,r5,r5
 40274ac:	294b883a 	add	r5,r5,r5
 40274b0:	294b883a 	add	r5,r5,r5
 40274b4:	994b883a 	add	r5,r19,r5
 40274b8:	28800017 	ldw	r2,0(r5)
 40274bc:	01800034 	movhi	r6,0
 40274c0:	297ffe04 	addi	r5,r5,-8
 40274c4:	3181a604 	addi	r6,r6,1688
 40274c8:	28806526 	beq	r5,r2,4027660 <_malloc_r+0x6d8>
 40274cc:	01bfff04 	movi	r6,-4
 40274d0:	10c00117 	ldw	r3,4(r2)
 40274d4:	1986703a 	and	r3,r3,r6
 40274d8:	38c0022e 	bgeu	r7,r3,40274e4 <_malloc_r+0x55c>
 40274dc:	10800217 	ldw	r2,8(r2)
 40274e0:	28bffb1e 	bne	r5,r2,40274d0 <__flash_rwdata_start+0xffff1264>
 40274e4:	11400317 	ldw	r5,12(r2)
 40274e8:	98c00117 	ldw	r3,4(r19)
 40274ec:	81400315 	stw	r5,12(r16)
 40274f0:	80800215 	stw	r2,8(r16)
 40274f4:	2c000215 	stw	r16,8(r5)
 40274f8:	14000315 	stw	r16,12(r2)
 40274fc:	003ef806 	br	40270e0 <__flash_rwdata_start+0xffff0e74>
 4027500:	88c00054 	ori	r3,r17,1
 4027504:	80c00115 	stw	r3,4(r16)
 4027508:	8463883a 	add	r17,r16,r17
 402750c:	34400515 	stw	r17,20(r6)
 4027510:	34400415 	stw	r17,16(r6)
 4027514:	10c00054 	ori	r3,r2,1
 4027518:	8a000315 	stw	r8,12(r17)
 402751c:	8a000215 	stw	r8,8(r17)
 4027520:	88c00115 	stw	r3,4(r17)
 4027524:	88a3883a 	add	r17,r17,r2
 4027528:	88800015 	stw	r2,0(r17)
 402752c:	9009883a 	mov	r4,r18
 4027530:	40339940 	call	4033994 <__malloc_unlock>
 4027534:	80800204 	addi	r2,r16,8
 4027538:	003f3c06 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 402753c:	30c00117 	ldw	r3,4(r6)
 4027540:	003ee706 	br	40270e0 <__flash_rwdata_start+0xffff0e74>
 4027544:	5ac00044 	addi	r11,r11,1
 4027548:	588000cc 	andi	r2,r11,3
 402754c:	31800204 	addi	r6,r6,8
 4027550:	103efd1e 	bne	r2,zero,4027148 <__flash_rwdata_start+0xffff0edc>
 4027554:	00002406 	br	40275e8 <_malloc_r+0x660>
 4027558:	14000317 	ldw	r16,12(r2)
 402755c:	143f251e 	bne	r2,r16,40271f4 <__flash_rwdata_start+0xffff0f88>
 4027560:	21000084 	addi	r4,r4,2
 4027564:	003ebc06 	br	4027058 <__flash_rwdata_start+0xffff0dec>
 4027568:	8085883a 	add	r2,r16,r2
 402756c:	10c00117 	ldw	r3,4(r2)
 4027570:	81000317 	ldw	r4,12(r16)
 4027574:	81400217 	ldw	r5,8(r16)
 4027578:	18c00054 	ori	r3,r3,1
 402757c:	10c00115 	stw	r3,4(r2)
 4027580:	29000315 	stw	r4,12(r5)
 4027584:	21400215 	stw	r5,8(r4)
 4027588:	9009883a 	mov	r4,r18
 402758c:	40339940 	call	4033994 <__malloc_unlock>
 4027590:	80800204 	addi	r2,r16,8
 4027594:	003f2506 	br	402722c <__flash_rwdata_start+0xffff0fc0>
 4027598:	12001704 	addi	r8,r2,92
 402759c:	11c016c4 	addi	r7,r2,91
 40275a0:	4209883a 	add	r4,r8,r8
 40275a4:	003e9606 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 40275a8:	3804d1ba 	srli	r2,r7,6
 40275ac:	11400e44 	addi	r5,r2,57
 40275b0:	10c00e04 	addi	r3,r2,56
 40275b4:	294b883a 	add	r5,r5,r5
 40275b8:	003fbc06 	br	40274ac <__flash_rwdata_start+0xffff1240>
 40275bc:	84ff5926 	beq	r16,r19,4027324 <__flash_rwdata_start+0xffff10b8>
 40275c0:	00800034 	movhi	r2,0
 40275c4:	1081a604 	addi	r2,r2,1688
 40275c8:	14000217 	ldw	r16,8(r2)
 40275cc:	00bfff04 	movi	r2,-4
 40275d0:	80c00117 	ldw	r3,4(r16)
 40275d4:	1886703a 	and	r3,r3,r2
 40275d8:	003f9106 	br	4027420 <__flash_rwdata_start+0xffff11b4>
 40275dc:	60800217 	ldw	r2,8(r12)
 40275e0:	213fffc4 	addi	r4,r4,-1
 40275e4:	1300651e 	bne	r2,r12,402777c <_malloc_r+0x7f4>
 40275e8:	208000cc 	andi	r2,r4,3
 40275ec:	633ffe04 	addi	r12,r12,-8
 40275f0:	103ffa1e 	bne	r2,zero,40275dc <__flash_rwdata_start+0xffff1370>
 40275f4:	98800117 	ldw	r2,4(r19)
 40275f8:	0146303a 	nor	r3,zero,r5
 40275fc:	1884703a 	and	r2,r3,r2
 4027600:	98800115 	stw	r2,4(r19)
 4027604:	294b883a 	add	r5,r5,r5
 4027608:	117f2836 	bltu	r2,r5,40272ac <__flash_rwdata_start+0xffff1040>
 402760c:	283f2726 	beq	r5,zero,40272ac <__flash_rwdata_start+0xffff1040>
 4027610:	2886703a 	and	r3,r5,r2
 4027614:	5809883a 	mov	r4,r11
 4027618:	183ec31e 	bne	r3,zero,4027128 <__flash_rwdata_start+0xffff0ebc>
 402761c:	294b883a 	add	r5,r5,r5
 4027620:	2886703a 	and	r3,r5,r2
 4027624:	21000104 	addi	r4,r4,4
 4027628:	183ffc26 	beq	r3,zero,402761c <__flash_rwdata_start+0xffff13b0>
 402762c:	003ebe06 	br	4027128 <__flash_rwdata_start+0xffff0ebc>
 4027630:	00c05504 	movi	r3,340
 4027634:	18801236 	bltu	r3,r2,4027680 <_malloc_r+0x6f8>
 4027638:	8804d3fa 	srli	r2,r17,15
 402763c:	12001e04 	addi	r8,r2,120
 4027640:	11c01dc4 	addi	r7,r2,119
 4027644:	4209883a 	add	r4,r8,r8
 4027648:	003e6d06 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 402764c:	00c40004 	movi	r3,4096
 4027650:	003f4606 	br	402736c <__flash_rwdata_start+0xffff1100>
 4027654:	00800044 	movi	r2,1
 4027658:	a0800115 	stw	r2,4(r20)
 402765c:	003f7406 	br	4027430 <__flash_rwdata_start+0xffff11c4>
 4027660:	1805d0ba 	srai	r2,r3,2
 4027664:	01c00044 	movi	r7,1
 4027668:	30c00117 	ldw	r3,4(r6)
 402766c:	388e983a 	sll	r7,r7,r2
 4027670:	2805883a 	mov	r2,r5
 4027674:	38c6b03a 	or	r3,r7,r3
 4027678:	30c00115 	stw	r3,4(r6)
 402767c:	003f9b06 	br	40274ec <__flash_rwdata_start+0xffff1280>
 4027680:	00c15504 	movi	r3,1364
 4027684:	18801a36 	bltu	r3,r2,40276f0 <_malloc_r+0x768>
 4027688:	8804d4ba 	srli	r2,r17,18
 402768c:	12001f44 	addi	r8,r2,125
 4027690:	11c01f04 	addi	r7,r2,124
 4027694:	4209883a 	add	r4,r8,r8
 4027698:	003e5906 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 402769c:	ad400404 	addi	r21,r21,16
 40276a0:	003f1706 	br	4027300 <__flash_rwdata_start+0xffff1094>
 40276a4:	00c01504 	movi	r3,84
 40276a8:	18802336 	bltu	r3,r2,4027738 <_malloc_r+0x7b0>
 40276ac:	3804d33a 	srli	r2,r7,12
 40276b0:	11401bc4 	addi	r5,r2,111
 40276b4:	10c01b84 	addi	r3,r2,110
 40276b8:	294b883a 	add	r5,r5,r5
 40276bc:	003f7b06 	br	40274ac <__flash_rwdata_start+0xffff1240>
 40276c0:	9c000217 	ldw	r16,8(r19)
 40276c4:	00bfff04 	movi	r2,-4
 40276c8:	80c00117 	ldw	r3,4(r16)
 40276cc:	1886703a 	and	r3,r3,r2
 40276d0:	003f5306 	br	4027420 <__flash_rwdata_start+0xffff11b4>
 40276d4:	3083ffcc 	andi	r2,r6,4095
 40276d8:	103f181e 	bne	r2,zero,402733c <__flash_rwdata_start+0xffff10d0>
 40276dc:	99000217 	ldw	r4,8(r19)
 40276e0:	b545883a 	add	r2,r22,r21
 40276e4:	10800054 	ori	r2,r2,1
 40276e8:	20800115 	stw	r2,4(r4)
 40276ec:	003f3e06 	br	40273e8 <__flash_rwdata_start+0xffff117c>
 40276f0:	01003f84 	movi	r4,254
 40276f4:	02001fc4 	movi	r8,127
 40276f8:	01c01f84 	movi	r7,126
 40276fc:	003e4006 	br	4027000 <__flash_rwdata_start+0xffff0d94>
 4027700:	00800034 	movhi	r2,0
 4027704:	10886104 	addi	r2,r2,8580
 4027708:	15000015 	stw	r20,0(r2)
 402770c:	003f1106 	br	4027354 <__flash_rwdata_start+0xffff10e8>
 4027710:	00800044 	movi	r2,1
 4027714:	002b883a 	mov	r21,zero
 4027718:	003f1f06 	br	4027398 <__flash_rwdata_start+0xffff112c>
 402771c:	81400204 	addi	r5,r16,8
 4027720:	9009883a 	mov	r4,r18
 4027724:	402c37c0 	call	402c37c <_free_r>
 4027728:	00800174 	movhi	r2,5
 402772c:	10b48904 	addi	r2,r2,-11740
 4027730:	10c00017 	ldw	r3,0(r2)
 4027734:	003f2c06 	br	40273e8 <__flash_rwdata_start+0xffff117c>
 4027738:	00c05504 	movi	r3,340
 402773c:	18800536 	bltu	r3,r2,4027754 <_malloc_r+0x7cc>
 4027740:	3804d3fa 	srli	r2,r7,15
 4027744:	11401e04 	addi	r5,r2,120
 4027748:	10c01dc4 	addi	r3,r2,119
 402774c:	294b883a 	add	r5,r5,r5
 4027750:	003f5606 	br	40274ac <__flash_rwdata_start+0xffff1240>
 4027754:	00c15504 	movi	r3,1364
 4027758:	18800536 	bltu	r3,r2,4027770 <_malloc_r+0x7e8>
 402775c:	3804d4ba 	srli	r2,r7,18
 4027760:	11401f44 	addi	r5,r2,125
 4027764:	10c01f04 	addi	r3,r2,124
 4027768:	294b883a 	add	r5,r5,r5
 402776c:	003f4f06 	br	40274ac <__flash_rwdata_start+0xffff1240>
 4027770:	01403f84 	movi	r5,254
 4027774:	00c01f84 	movi	r3,126
 4027778:	003f4c06 	br	40274ac <__flash_rwdata_start+0xffff1240>
 402777c:	98800117 	ldw	r2,4(r19)
 4027780:	003fa006 	br	4027604 <__flash_rwdata_start+0xffff1398>
 4027784:	8808d0fa 	srli	r4,r17,3
 4027788:	20800044 	addi	r2,r4,1
 402778c:	1085883a 	add	r2,r2,r2
 4027790:	003e9006 	br	40271d4 <__flash_rwdata_start+0xffff0f68>

04027794 <memset>:
 4027794:	20c000cc 	andi	r3,r4,3
 4027798:	2005883a 	mov	r2,r4
 402779c:	18004426 	beq	r3,zero,40278b0 <memset+0x11c>
 40277a0:	31ffffc4 	addi	r7,r6,-1
 40277a4:	30004026 	beq	r6,zero,40278a8 <memset+0x114>
 40277a8:	2813883a 	mov	r9,r5
 40277ac:	200d883a 	mov	r6,r4
 40277b0:	2007883a 	mov	r3,r4
 40277b4:	00000406 	br	40277c8 <memset+0x34>
 40277b8:	3a3fffc4 	addi	r8,r7,-1
 40277bc:	31800044 	addi	r6,r6,1
 40277c0:	38003926 	beq	r7,zero,40278a8 <memset+0x114>
 40277c4:	400f883a 	mov	r7,r8
 40277c8:	18c00044 	addi	r3,r3,1
 40277cc:	32400005 	stb	r9,0(r6)
 40277d0:	1a0000cc 	andi	r8,r3,3
 40277d4:	403ff81e 	bne	r8,zero,40277b8 <__flash_rwdata_start+0xffff154c>
 40277d8:	010000c4 	movi	r4,3
 40277dc:	21c02d2e 	bgeu	r4,r7,4027894 <memset+0x100>
 40277e0:	29003fcc 	andi	r4,r5,255
 40277e4:	200c923a 	slli	r6,r4,8
 40277e8:	3108b03a 	or	r4,r6,r4
 40277ec:	200c943a 	slli	r6,r4,16
 40277f0:	218cb03a 	or	r6,r4,r6
 40277f4:	010003c4 	movi	r4,15
 40277f8:	21c0182e 	bgeu	r4,r7,402785c <memset+0xc8>
 40277fc:	3b3ffc04 	addi	r12,r7,-16
 4027800:	6018d13a 	srli	r12,r12,4
 4027804:	1a000104 	addi	r8,r3,4
 4027808:	1ac00204 	addi	r11,r3,8
 402780c:	6008913a 	slli	r4,r12,4
 4027810:	1a800304 	addi	r10,r3,12
 4027814:	1813883a 	mov	r9,r3
 4027818:	21000504 	addi	r4,r4,20
 402781c:	1909883a 	add	r4,r3,r4
 4027820:	49800015 	stw	r6,0(r9)
 4027824:	41800015 	stw	r6,0(r8)
 4027828:	59800015 	stw	r6,0(r11)
 402782c:	51800015 	stw	r6,0(r10)
 4027830:	42000404 	addi	r8,r8,16
 4027834:	4a400404 	addi	r9,r9,16
 4027838:	5ac00404 	addi	r11,r11,16
 402783c:	52800404 	addi	r10,r10,16
 4027840:	413ff71e 	bne	r8,r4,4027820 <__flash_rwdata_start+0xffff15b4>
 4027844:	63000044 	addi	r12,r12,1
 4027848:	6018913a 	slli	r12,r12,4
 402784c:	39c003cc 	andi	r7,r7,15
 4027850:	010000c4 	movi	r4,3
 4027854:	1b07883a 	add	r3,r3,r12
 4027858:	21c00e2e 	bgeu	r4,r7,4027894 <memset+0x100>
 402785c:	1813883a 	mov	r9,r3
 4027860:	3811883a 	mov	r8,r7
 4027864:	010000c4 	movi	r4,3
 4027868:	49800015 	stw	r6,0(r9)
 402786c:	423fff04 	addi	r8,r8,-4
 4027870:	4a400104 	addi	r9,r9,4
 4027874:	223ffc36 	bltu	r4,r8,4027868 <__flash_rwdata_start+0xffff15fc>
 4027878:	393fff04 	addi	r4,r7,-4
 402787c:	2008d0ba 	srli	r4,r4,2
 4027880:	39c000cc 	andi	r7,r7,3
 4027884:	21000044 	addi	r4,r4,1
 4027888:	2109883a 	add	r4,r4,r4
 402788c:	2109883a 	add	r4,r4,r4
 4027890:	1907883a 	add	r3,r3,r4
 4027894:	38000526 	beq	r7,zero,40278ac <memset+0x118>
 4027898:	19cf883a 	add	r7,r3,r7
 402789c:	19400005 	stb	r5,0(r3)
 40278a0:	18c00044 	addi	r3,r3,1
 40278a4:	38fffd1e 	bne	r7,r3,402789c <__flash_rwdata_start+0xffff1630>
 40278a8:	f800283a 	ret
 40278ac:	f800283a 	ret
 40278b0:	2007883a 	mov	r3,r4
 40278b4:	300f883a 	mov	r7,r6
 40278b8:	003fc706 	br	40277d8 <__flash_rwdata_start+0xffff156c>

040278bc <_printf_r>:
 40278bc:	defffd04 	addi	sp,sp,-12
 40278c0:	2805883a 	mov	r2,r5
 40278c4:	dfc00015 	stw	ra,0(sp)
 40278c8:	d9800115 	stw	r6,4(sp)
 40278cc:	d9c00215 	stw	r7,8(sp)
 40278d0:	21400217 	ldw	r5,8(r4)
 40278d4:	d9c00104 	addi	r7,sp,4
 40278d8:	100d883a 	mov	r6,r2
 40278dc:	4027f640 	call	4027f64 <___vfprintf_internal_r>
 40278e0:	dfc00017 	ldw	ra,0(sp)
 40278e4:	dec00304 	addi	sp,sp,12
 40278e8:	f800283a 	ret

040278ec <printf>:
 40278ec:	defffc04 	addi	sp,sp,-16
 40278f0:	dfc00015 	stw	ra,0(sp)
 40278f4:	d9400115 	stw	r5,4(sp)
 40278f8:	d9800215 	stw	r6,8(sp)
 40278fc:	d9c00315 	stw	r7,12(sp)
 4027900:	00800034 	movhi	r2,0
 4027904:	10886404 	addi	r2,r2,8592
 4027908:	10800017 	ldw	r2,0(r2)
 402790c:	200b883a 	mov	r5,r4
 4027910:	d9800104 	addi	r6,sp,4
 4027914:	11000217 	ldw	r4,8(r2)
 4027918:	402a15c0 	call	402a15c <__vfprintf_internal>
 402791c:	dfc00017 	ldw	ra,0(sp)
 4027920:	dec00404 	addi	sp,sp,16
 4027924:	f800283a 	ret

04027928 <_putchar_r>:
 4027928:	21800217 	ldw	r6,8(r4)
 402792c:	402e2ec1 	jmpi	402e2ec <_putc_r>

04027930 <putchar>:
 4027930:	00800034 	movhi	r2,0
 4027934:	10886404 	addi	r2,r2,8592
 4027938:	200b883a 	mov	r5,r4
 402793c:	11000017 	ldw	r4,0(r2)
 4027940:	21800217 	ldw	r6,8(r4)
 4027944:	402e2ec1 	jmpi	402e2ec <_putc_r>

04027948 <_puts_r>:
 4027948:	defff604 	addi	sp,sp,-40
 402794c:	dc000715 	stw	r16,28(sp)
 4027950:	2021883a 	mov	r16,r4
 4027954:	2809883a 	mov	r4,r5
 4027958:	dc400815 	stw	r17,32(sp)
 402795c:	dfc00915 	stw	ra,36(sp)
 4027960:	2823883a 	mov	r17,r5
 4027964:	4027ecc0 	call	4027ecc <strlen>
 4027968:	10c00044 	addi	r3,r2,1
 402796c:	d8800115 	stw	r2,4(sp)
 4027970:	00800034 	movhi	r2,0
 4027974:	10812804 	addi	r2,r2,1184
 4027978:	d8800215 	stw	r2,8(sp)
 402797c:	00800044 	movi	r2,1
 4027980:	d8800315 	stw	r2,12(sp)
 4027984:	00800084 	movi	r2,2
 4027988:	dc400015 	stw	r17,0(sp)
 402798c:	d8c00615 	stw	r3,24(sp)
 4027990:	dec00415 	stw	sp,16(sp)
 4027994:	d8800515 	stw	r2,20(sp)
 4027998:	80000226 	beq	r16,zero,40279a4 <_puts_r+0x5c>
 402799c:	80800e17 	ldw	r2,56(r16)
 40279a0:	10001426 	beq	r2,zero,40279f4 <_puts_r+0xac>
 40279a4:	81400217 	ldw	r5,8(r16)
 40279a8:	2880030b 	ldhu	r2,12(r5)
 40279ac:	10c8000c 	andi	r3,r2,8192
 40279b0:	1800061e 	bne	r3,zero,40279cc <_puts_r+0x84>
 40279b4:	29001917 	ldw	r4,100(r5)
 40279b8:	00f7ffc4 	movi	r3,-8193
 40279bc:	10880014 	ori	r2,r2,8192
 40279c0:	20c6703a 	and	r3,r4,r3
 40279c4:	2880030d 	sth	r2,12(r5)
 40279c8:	28c01915 	stw	r3,100(r5)
 40279cc:	d9800404 	addi	r6,sp,16
 40279d0:	8009883a 	mov	r4,r16
 40279d4:	402c68c0 	call	402c68c <__sfvwrite_r>
 40279d8:	1000091e 	bne	r2,zero,4027a00 <_puts_r+0xb8>
 40279dc:	00800284 	movi	r2,10
 40279e0:	dfc00917 	ldw	ra,36(sp)
 40279e4:	dc400817 	ldw	r17,32(sp)
 40279e8:	dc000717 	ldw	r16,28(sp)
 40279ec:	dec00a04 	addi	sp,sp,40
 40279f0:	f800283a 	ret
 40279f4:	8009883a 	mov	r4,r16
 40279f8:	402c2080 	call	402c208 <__sinit>
 40279fc:	003fe906 	br	40279a4 <__flash_rwdata_start+0xffff1738>
 4027a00:	00bfffc4 	movi	r2,-1
 4027a04:	003ff606 	br	40279e0 <__flash_rwdata_start+0xffff1774>

04027a08 <puts>:
 4027a08:	00800034 	movhi	r2,0
 4027a0c:	10886404 	addi	r2,r2,8592
 4027a10:	200b883a 	mov	r5,r4
 4027a14:	11000017 	ldw	r4,0(r2)
 4027a18:	40279481 	jmpi	4027948 <_puts_r>

04027a1c <srand>:
 4027a1c:	00800034 	movhi	r2,0
 4027a20:	10886404 	addi	r2,r2,8592
 4027a24:	10800017 	ldw	r2,0(r2)
 4027a28:	11002915 	stw	r4,164(r2)
 4027a2c:	10002a15 	stw	zero,168(r2)
 4027a30:	f800283a 	ret

04027a34 <rand>:
 4027a34:	00800034 	movhi	r2,0
 4027a38:	defffe04 	addi	sp,sp,-8
 4027a3c:	10886404 	addi	r2,r2,8592
 4027a40:	dc000015 	stw	r16,0(sp)
 4027a44:	14000017 	ldw	r16,0(r2)
 4027a48:	dfc00115 	stw	ra,4(sp)
 4027a4c:	01932574 	movhi	r6,19605
 4027a50:	81002917 	ldw	r4,164(r16)
 4027a54:	81402a17 	ldw	r5,168(r16)
 4027a58:	01d614b4 	movhi	r7,22610
 4027a5c:	319fcb44 	addi	r6,r6,32557
 4027a60:	39fd0b44 	addi	r7,r7,-3027
 4027a64:	4030ae40 	call	4030ae4 <__muldi3>
 4027a68:	11000044 	addi	r4,r2,1
 4027a6c:	2085803a 	cmpltu	r2,r4,r2
 4027a70:	10c7883a 	add	r3,r2,r3
 4027a74:	00a00034 	movhi	r2,32768
 4027a78:	10bfffc4 	addi	r2,r2,-1
 4027a7c:	1884703a 	and	r2,r3,r2
 4027a80:	81002915 	stw	r4,164(r16)
 4027a84:	80c02a15 	stw	r3,168(r16)
 4027a88:	dfc00117 	ldw	ra,4(sp)
 4027a8c:	dc000017 	ldw	r16,0(sp)
 4027a90:	dec00204 	addi	sp,sp,8
 4027a94:	f800283a 	ret

04027a98 <_sbrk_r>:
 4027a98:	defffd04 	addi	sp,sp,-12
 4027a9c:	dc000015 	stw	r16,0(sp)
 4027aa0:	04000034 	movhi	r16,0
 4027aa4:	dc400115 	stw	r17,4(sp)
 4027aa8:	84087a04 	addi	r16,r16,8680
 4027aac:	2023883a 	mov	r17,r4
 4027ab0:	2809883a 	mov	r4,r5
 4027ab4:	dfc00215 	stw	ra,8(sp)
 4027ab8:	80000015 	stw	zero,0(r16)
 4027abc:	4033b540 	call	4033b54 <sbrk>
 4027ac0:	00ffffc4 	movi	r3,-1
 4027ac4:	10c00526 	beq	r2,r3,4027adc <_sbrk_r+0x44>
 4027ac8:	dfc00217 	ldw	ra,8(sp)
 4027acc:	dc400117 	ldw	r17,4(sp)
 4027ad0:	dc000017 	ldw	r16,0(sp)
 4027ad4:	dec00304 	addi	sp,sp,12
 4027ad8:	f800283a 	ret
 4027adc:	80c00017 	ldw	r3,0(r16)
 4027ae0:	183ff926 	beq	r3,zero,4027ac8 <__flash_rwdata_start+0xffff185c>
 4027ae4:	88c00015 	stw	r3,0(r17)
 4027ae8:	003ff706 	br	4027ac8 <__flash_rwdata_start+0xffff185c>

04027aec <_init_signal_r>:
 4027aec:	2080b717 	ldw	r2,732(r4)
 4027af0:	10000226 	beq	r2,zero,4027afc <_init_signal_r+0x10>
 4027af4:	0005883a 	mov	r2,zero
 4027af8:	f800283a 	ret
 4027afc:	defffe04 	addi	sp,sp,-8
 4027b00:	01402004 	movi	r5,128
 4027b04:	dc000015 	stw	r16,0(sp)
 4027b08:	dfc00115 	stw	ra,4(sp)
 4027b0c:	2021883a 	mov	r16,r4
 4027b10:	4026f880 	call	4026f88 <_malloc_r>
 4027b14:	8080b715 	stw	r2,732(r16)
 4027b18:	10000d26 	beq	r2,zero,4027b50 <_init_signal_r+0x64>
 4027b1c:	0007883a 	mov	r3,zero
 4027b20:	01002004 	movi	r4,128
 4027b24:	00000106 	br	4027b2c <_init_signal_r+0x40>
 4027b28:	8080b717 	ldw	r2,732(r16)
 4027b2c:	10c5883a 	add	r2,r2,r3
 4027b30:	10000015 	stw	zero,0(r2)
 4027b34:	18c00104 	addi	r3,r3,4
 4027b38:	193ffb1e 	bne	r3,r4,4027b28 <__flash_rwdata_start+0xffff18bc>
 4027b3c:	0005883a 	mov	r2,zero
 4027b40:	dfc00117 	ldw	ra,4(sp)
 4027b44:	dc000017 	ldw	r16,0(sp)
 4027b48:	dec00204 	addi	sp,sp,8
 4027b4c:	f800283a 	ret
 4027b50:	00bfffc4 	movi	r2,-1
 4027b54:	003ffa06 	br	4027b40 <__flash_rwdata_start+0xffff18d4>

04027b58 <_signal_r>:
 4027b58:	00c007c4 	movi	r3,31
 4027b5c:	19401536 	bltu	r3,r5,4027bb4 <_signal_r+0x5c>
 4027b60:	2080b717 	ldw	r2,732(r4)
 4027b64:	defffc04 	addi	sp,sp,-16
 4027b68:	dc800215 	stw	r18,8(sp)
 4027b6c:	dc400115 	stw	r17,4(sp)
 4027b70:	dc000015 	stw	r16,0(sp)
 4027b74:	dfc00315 	stw	ra,12(sp)
 4027b78:	3023883a 	mov	r17,r6
 4027b7c:	2021883a 	mov	r16,r4
 4027b80:	2825883a 	mov	r18,r5
 4027b84:	10000f26 	beq	r2,zero,4027bc4 <_signal_r+0x6c>
 4027b88:	948b883a 	add	r5,r18,r18
 4027b8c:	294b883a 	add	r5,r5,r5
 4027b90:	114b883a 	add	r5,r2,r5
 4027b94:	28800017 	ldw	r2,0(r5)
 4027b98:	2c400015 	stw	r17,0(r5)
 4027b9c:	dfc00317 	ldw	ra,12(sp)
 4027ba0:	dc800217 	ldw	r18,8(sp)
 4027ba4:	dc400117 	ldw	r17,4(sp)
 4027ba8:	dc000017 	ldw	r16,0(sp)
 4027bac:	dec00404 	addi	sp,sp,16
 4027bb0:	f800283a 	ret
 4027bb4:	00c00584 	movi	r3,22
 4027bb8:	20c00015 	stw	r3,0(r4)
 4027bbc:	00bfffc4 	movi	r2,-1
 4027bc0:	f800283a 	ret
 4027bc4:	4027aec0 	call	4027aec <_init_signal_r>
 4027bc8:	1000021e 	bne	r2,zero,4027bd4 <_signal_r+0x7c>
 4027bcc:	8080b717 	ldw	r2,732(r16)
 4027bd0:	003fed06 	br	4027b88 <__flash_rwdata_start+0xffff191c>
 4027bd4:	00bfffc4 	movi	r2,-1
 4027bd8:	003ff006 	br	4027b9c <__flash_rwdata_start+0xffff1930>

04027bdc <_raise_r>:
 4027bdc:	008007c4 	movi	r2,31
 4027be0:	11402936 	bltu	r2,r5,4027c88 <_raise_r+0xac>
 4027be4:	20c0b717 	ldw	r3,732(r4)
 4027be8:	defffd04 	addi	sp,sp,-12
 4027bec:	dc400115 	stw	r17,4(sp)
 4027bf0:	dc000015 	stw	r16,0(sp)
 4027bf4:	dfc00215 	stw	ra,8(sp)
 4027bf8:	2021883a 	mov	r16,r4
 4027bfc:	2823883a 	mov	r17,r5
 4027c00:	18001726 	beq	r3,zero,4027c60 <_raise_r+0x84>
 4027c04:	2945883a 	add	r2,r5,r5
 4027c08:	1085883a 	add	r2,r2,r2
 4027c0c:	1887883a 	add	r3,r3,r2
 4027c10:	19800017 	ldw	r6,0(r3)
 4027c14:	30001226 	beq	r6,zero,4027c60 <_raise_r+0x84>
 4027c18:	00800044 	movi	r2,1
 4027c1c:	30800e26 	beq	r6,r2,4027c58 <_raise_r+0x7c>
 4027c20:	013fffc4 	movi	r4,-1
 4027c24:	31000926 	beq	r6,r4,4027c4c <_raise_r+0x70>
 4027c28:	18000015 	stw	zero,0(r3)
 4027c2c:	2809883a 	mov	r4,r5
 4027c30:	303ee83a 	callr	r6
 4027c34:	0005883a 	mov	r2,zero
 4027c38:	dfc00217 	ldw	ra,8(sp)
 4027c3c:	dc400117 	ldw	r17,4(sp)
 4027c40:	dc000017 	ldw	r16,0(sp)
 4027c44:	dec00304 	addi	sp,sp,12
 4027c48:	f800283a 	ret
 4027c4c:	00c00584 	movi	r3,22
 4027c50:	80c00015 	stw	r3,0(r16)
 4027c54:	003ff806 	br	4027c38 <__flash_rwdata_start+0xffff19cc>
 4027c58:	0005883a 	mov	r2,zero
 4027c5c:	003ff606 	br	4027c38 <__flash_rwdata_start+0xffff19cc>
 4027c60:	8009883a 	mov	r4,r16
 4027c64:	4027dec0 	call	4027dec <_getpid_r>
 4027c68:	880d883a 	mov	r6,r17
 4027c6c:	100b883a 	mov	r5,r2
 4027c70:	8009883a 	mov	r4,r16
 4027c74:	dfc00217 	ldw	ra,8(sp)
 4027c78:	dc400117 	ldw	r17,4(sp)
 4027c7c:	dc000017 	ldw	r16,0(sp)
 4027c80:	dec00304 	addi	sp,sp,12
 4027c84:	4027d901 	jmpi	4027d90 <_kill_r>
 4027c88:	00800584 	movi	r2,22
 4027c8c:	20800015 	stw	r2,0(r4)
 4027c90:	00bfffc4 	movi	r2,-1
 4027c94:	f800283a 	ret

04027c98 <__sigtramp_r>:
 4027c98:	008007c4 	movi	r2,31
 4027c9c:	11402436 	bltu	r2,r5,4027d30 <__sigtramp_r+0x98>
 4027ca0:	20c0b717 	ldw	r3,732(r4)
 4027ca4:	defffd04 	addi	sp,sp,-12
 4027ca8:	dc400115 	stw	r17,4(sp)
 4027cac:	dc000015 	stw	r16,0(sp)
 4027cb0:	dfc00215 	stw	ra,8(sp)
 4027cb4:	2021883a 	mov	r16,r4
 4027cb8:	2823883a 	mov	r17,r5
 4027cbc:	18001826 	beq	r3,zero,4027d20 <__sigtramp_r+0x88>
 4027cc0:	8c45883a 	add	r2,r17,r17
 4027cc4:	1085883a 	add	r2,r2,r2
 4027cc8:	1885883a 	add	r2,r3,r2
 4027ccc:	10c00017 	ldw	r3,0(r2)
 4027cd0:	18001126 	beq	r3,zero,4027d18 <__sigtramp_r+0x80>
 4027cd4:	013fffc4 	movi	r4,-1
 4027cd8:	19000d26 	beq	r3,r4,4027d10 <__sigtramp_r+0x78>
 4027cdc:	01000044 	movi	r4,1
 4027ce0:	19000926 	beq	r3,r4,4027d08 <__sigtramp_r+0x70>
 4027ce4:	10000015 	stw	zero,0(r2)
 4027ce8:	8809883a 	mov	r4,r17
 4027cec:	183ee83a 	callr	r3
 4027cf0:	0005883a 	mov	r2,zero
 4027cf4:	dfc00217 	ldw	ra,8(sp)
 4027cf8:	dc400117 	ldw	r17,4(sp)
 4027cfc:	dc000017 	ldw	r16,0(sp)
 4027d00:	dec00304 	addi	sp,sp,12
 4027d04:	f800283a 	ret
 4027d08:	008000c4 	movi	r2,3
 4027d0c:	003ff906 	br	4027cf4 <__flash_rwdata_start+0xffff1a88>
 4027d10:	00800084 	movi	r2,2
 4027d14:	003ff706 	br	4027cf4 <__flash_rwdata_start+0xffff1a88>
 4027d18:	00800044 	movi	r2,1
 4027d1c:	003ff506 	br	4027cf4 <__flash_rwdata_start+0xffff1a88>
 4027d20:	4027aec0 	call	4027aec <_init_signal_r>
 4027d24:	1000041e 	bne	r2,zero,4027d38 <__sigtramp_r+0xa0>
 4027d28:	80c0b717 	ldw	r3,732(r16)
 4027d2c:	003fe406 	br	4027cc0 <__flash_rwdata_start+0xffff1a54>
 4027d30:	00bfffc4 	movi	r2,-1
 4027d34:	f800283a 	ret
 4027d38:	00bfffc4 	movi	r2,-1
 4027d3c:	003fed06 	br	4027cf4 <__flash_rwdata_start+0xffff1a88>

04027d40 <raise>:
 4027d40:	00800034 	movhi	r2,0
 4027d44:	10886404 	addi	r2,r2,8592
 4027d48:	200b883a 	mov	r5,r4
 4027d4c:	11000017 	ldw	r4,0(r2)
 4027d50:	4027bdc1 	jmpi	4027bdc <_raise_r>

04027d54 <signal>:
 4027d54:	00800034 	movhi	r2,0
 4027d58:	10886404 	addi	r2,r2,8592
 4027d5c:	280d883a 	mov	r6,r5
 4027d60:	200b883a 	mov	r5,r4
 4027d64:	11000017 	ldw	r4,0(r2)
 4027d68:	4027b581 	jmpi	4027b58 <_signal_r>

04027d6c <_init_signal>:
 4027d6c:	00800034 	movhi	r2,0
 4027d70:	10886404 	addi	r2,r2,8592
 4027d74:	11000017 	ldw	r4,0(r2)
 4027d78:	4027aec1 	jmpi	4027aec <_init_signal_r>

04027d7c <__sigtramp>:
 4027d7c:	00800034 	movhi	r2,0
 4027d80:	10886404 	addi	r2,r2,8592
 4027d84:	200b883a 	mov	r5,r4
 4027d88:	11000017 	ldw	r4,0(r2)
 4027d8c:	4027c981 	jmpi	4027c98 <__sigtramp_r>

04027d90 <_kill_r>:
 4027d90:	defffd04 	addi	sp,sp,-12
 4027d94:	2805883a 	mov	r2,r5
 4027d98:	dc000015 	stw	r16,0(sp)
 4027d9c:	04000034 	movhi	r16,0
 4027da0:	dc400115 	stw	r17,4(sp)
 4027da4:	84087a04 	addi	r16,r16,8680
 4027da8:	2023883a 	mov	r17,r4
 4027dac:	300b883a 	mov	r5,r6
 4027db0:	1009883a 	mov	r4,r2
 4027db4:	dfc00215 	stw	ra,8(sp)
 4027db8:	80000015 	stw	zero,0(r16)
 4027dbc:	40335c80 	call	40335c8 <kill>
 4027dc0:	00ffffc4 	movi	r3,-1
 4027dc4:	10c00526 	beq	r2,r3,4027ddc <_kill_r+0x4c>
 4027dc8:	dfc00217 	ldw	ra,8(sp)
 4027dcc:	dc400117 	ldw	r17,4(sp)
 4027dd0:	dc000017 	ldw	r16,0(sp)
 4027dd4:	dec00304 	addi	sp,sp,12
 4027dd8:	f800283a 	ret
 4027ddc:	80c00017 	ldw	r3,0(r16)
 4027de0:	183ff926 	beq	r3,zero,4027dc8 <__flash_rwdata_start+0xffff1b5c>
 4027de4:	88c00015 	stw	r3,0(r17)
 4027de8:	003ff706 	br	4027dc8 <__flash_rwdata_start+0xffff1b5c>

04027dec <_getpid_r>:
 4027dec:	403348c1 	jmpi	403348c <getpid>

04027df0 <strcmp>:
 4027df0:	2144b03a 	or	r2,r4,r5
 4027df4:	108000cc 	andi	r2,r2,3
 4027df8:	1000171e 	bne	r2,zero,4027e58 <strcmp+0x68>
 4027dfc:	20800017 	ldw	r2,0(r4)
 4027e00:	28c00017 	ldw	r3,0(r5)
 4027e04:	10c0141e 	bne	r2,r3,4027e58 <strcmp+0x68>
 4027e08:	027fbff4 	movhi	r9,65279
 4027e0c:	4a7fbfc4 	addi	r9,r9,-257
 4027e10:	0086303a 	nor	r3,zero,r2
 4027e14:	02202074 	movhi	r8,32897
 4027e18:	1245883a 	add	r2,r2,r9
 4027e1c:	42202004 	addi	r8,r8,-32640
 4027e20:	10c4703a 	and	r2,r2,r3
 4027e24:	1204703a 	and	r2,r2,r8
 4027e28:	10000226 	beq	r2,zero,4027e34 <strcmp+0x44>
 4027e2c:	00002306 	br	4027ebc <strcmp+0xcc>
 4027e30:	1000221e 	bne	r2,zero,4027ebc <strcmp+0xcc>
 4027e34:	21000104 	addi	r4,r4,4
 4027e38:	20c00017 	ldw	r3,0(r4)
 4027e3c:	29400104 	addi	r5,r5,4
 4027e40:	29800017 	ldw	r6,0(r5)
 4027e44:	1a4f883a 	add	r7,r3,r9
 4027e48:	00c4303a 	nor	r2,zero,r3
 4027e4c:	3884703a 	and	r2,r7,r2
 4027e50:	1204703a 	and	r2,r2,r8
 4027e54:	19bff626 	beq	r3,r6,4027e30 <__flash_rwdata_start+0xffff1bc4>
 4027e58:	20800003 	ldbu	r2,0(r4)
 4027e5c:	10c03fcc 	andi	r3,r2,255
 4027e60:	18c0201c 	xori	r3,r3,128
 4027e64:	18ffe004 	addi	r3,r3,-128
 4027e68:	18000c26 	beq	r3,zero,4027e9c <strcmp+0xac>
 4027e6c:	29800007 	ldb	r6,0(r5)
 4027e70:	19800326 	beq	r3,r6,4027e80 <strcmp+0x90>
 4027e74:	00001306 	br	4027ec4 <strcmp+0xd4>
 4027e78:	29800007 	ldb	r6,0(r5)
 4027e7c:	11800b1e 	bne	r2,r6,4027eac <strcmp+0xbc>
 4027e80:	21000044 	addi	r4,r4,1
 4027e84:	20c00003 	ldbu	r3,0(r4)
 4027e88:	29400044 	addi	r5,r5,1
 4027e8c:	18803fcc 	andi	r2,r3,255
 4027e90:	1080201c 	xori	r2,r2,128
 4027e94:	10bfe004 	addi	r2,r2,-128
 4027e98:	103ff71e 	bne	r2,zero,4027e78 <__flash_rwdata_start+0xffff1c0c>
 4027e9c:	0007883a 	mov	r3,zero
 4027ea0:	28800003 	ldbu	r2,0(r5)
 4027ea4:	1885c83a 	sub	r2,r3,r2
 4027ea8:	f800283a 	ret
 4027eac:	28800003 	ldbu	r2,0(r5)
 4027eb0:	18c03fcc 	andi	r3,r3,255
 4027eb4:	1885c83a 	sub	r2,r3,r2
 4027eb8:	f800283a 	ret
 4027ebc:	0005883a 	mov	r2,zero
 4027ec0:	f800283a 	ret
 4027ec4:	10c03fcc 	andi	r3,r2,255
 4027ec8:	003ff506 	br	4027ea0 <__flash_rwdata_start+0xffff1c34>

04027ecc <strlen>:
 4027ecc:	208000cc 	andi	r2,r4,3
 4027ed0:	10002026 	beq	r2,zero,4027f54 <strlen+0x88>
 4027ed4:	20800007 	ldb	r2,0(r4)
 4027ed8:	10002026 	beq	r2,zero,4027f5c <strlen+0x90>
 4027edc:	2005883a 	mov	r2,r4
 4027ee0:	00000206 	br	4027eec <strlen+0x20>
 4027ee4:	10c00007 	ldb	r3,0(r2)
 4027ee8:	18001826 	beq	r3,zero,4027f4c <strlen+0x80>
 4027eec:	10800044 	addi	r2,r2,1
 4027ef0:	10c000cc 	andi	r3,r2,3
 4027ef4:	183ffb1e 	bne	r3,zero,4027ee4 <__flash_rwdata_start+0xffff1c78>
 4027ef8:	10c00017 	ldw	r3,0(r2)
 4027efc:	01ffbff4 	movhi	r7,65279
 4027f00:	39ffbfc4 	addi	r7,r7,-257
 4027f04:	00ca303a 	nor	r5,zero,r3
 4027f08:	01a02074 	movhi	r6,32897
 4027f0c:	19c7883a 	add	r3,r3,r7
 4027f10:	31a02004 	addi	r6,r6,-32640
 4027f14:	1946703a 	and	r3,r3,r5
 4027f18:	1986703a 	and	r3,r3,r6
 4027f1c:	1800091e 	bne	r3,zero,4027f44 <strlen+0x78>
 4027f20:	10800104 	addi	r2,r2,4
 4027f24:	10c00017 	ldw	r3,0(r2)
 4027f28:	19cb883a 	add	r5,r3,r7
 4027f2c:	00c6303a 	nor	r3,zero,r3
 4027f30:	28c6703a 	and	r3,r5,r3
 4027f34:	1986703a 	and	r3,r3,r6
 4027f38:	183ff926 	beq	r3,zero,4027f20 <__flash_rwdata_start+0xffff1cb4>
 4027f3c:	00000106 	br	4027f44 <strlen+0x78>
 4027f40:	10800044 	addi	r2,r2,1
 4027f44:	10c00007 	ldb	r3,0(r2)
 4027f48:	183ffd1e 	bne	r3,zero,4027f40 <__flash_rwdata_start+0xffff1cd4>
 4027f4c:	1105c83a 	sub	r2,r2,r4
 4027f50:	f800283a 	ret
 4027f54:	2005883a 	mov	r2,r4
 4027f58:	003fe706 	br	4027ef8 <__flash_rwdata_start+0xffff1c8c>
 4027f5c:	0005883a 	mov	r2,zero
 4027f60:	f800283a 	ret

04027f64 <___vfprintf_internal_r>:
 4027f64:	deffb804 	addi	sp,sp,-288
 4027f68:	dfc04715 	stw	ra,284(sp)
 4027f6c:	ddc04515 	stw	r23,276(sp)
 4027f70:	dd404315 	stw	r21,268(sp)
 4027f74:	d9002c15 	stw	r4,176(sp)
 4027f78:	282f883a 	mov	r23,r5
 4027f7c:	302b883a 	mov	r21,r6
 4027f80:	d9c02d15 	stw	r7,180(sp)
 4027f84:	df004615 	stw	fp,280(sp)
 4027f88:	dd804415 	stw	r22,272(sp)
 4027f8c:	dd004215 	stw	r20,264(sp)
 4027f90:	dcc04115 	stw	r19,260(sp)
 4027f94:	dc804015 	stw	r18,256(sp)
 4027f98:	dc403f15 	stw	r17,252(sp)
 4027f9c:	dc003e15 	stw	r16,248(sp)
 4027fa0:	402cd7c0 	call	402cd7c <_localeconv_r>
 4027fa4:	10800017 	ldw	r2,0(r2)
 4027fa8:	1009883a 	mov	r4,r2
 4027fac:	d8803415 	stw	r2,208(sp)
 4027fb0:	4027ecc0 	call	4027ecc <strlen>
 4027fb4:	d8803715 	stw	r2,220(sp)
 4027fb8:	d8802c17 	ldw	r2,176(sp)
 4027fbc:	10000226 	beq	r2,zero,4027fc8 <___vfprintf_internal_r+0x64>
 4027fc0:	10800e17 	ldw	r2,56(r2)
 4027fc4:	1000f926 	beq	r2,zero,40283ac <___vfprintf_internal_r+0x448>
 4027fc8:	b880030b 	ldhu	r2,12(r23)
 4027fcc:	10c8000c 	andi	r3,r2,8192
 4027fd0:	1800061e 	bne	r3,zero,4027fec <___vfprintf_internal_r+0x88>
 4027fd4:	b9001917 	ldw	r4,100(r23)
 4027fd8:	00f7ffc4 	movi	r3,-8193
 4027fdc:	10880014 	ori	r2,r2,8192
 4027fe0:	20c6703a 	and	r3,r4,r3
 4027fe4:	b880030d 	sth	r2,12(r23)
 4027fe8:	b8c01915 	stw	r3,100(r23)
 4027fec:	10c0020c 	andi	r3,r2,8
 4027ff0:	1800c126 	beq	r3,zero,40282f8 <___vfprintf_internal_r+0x394>
 4027ff4:	b8c00417 	ldw	r3,16(r23)
 4027ff8:	1800bf26 	beq	r3,zero,40282f8 <___vfprintf_internal_r+0x394>
 4027ffc:	1080068c 	andi	r2,r2,26
 4028000:	00c00284 	movi	r3,10
 4028004:	10c0c426 	beq	r2,r3,4028318 <___vfprintf_internal_r+0x3b4>
 4028008:	d8c00404 	addi	r3,sp,16
 402800c:	05000034 	movhi	r20,0
 4028010:	d9001e04 	addi	r4,sp,120
 4028014:	a5013984 	addi	r20,r20,1254
 4028018:	d8c01e15 	stw	r3,120(sp)
 402801c:	d8002015 	stw	zero,128(sp)
 4028020:	d8001f15 	stw	zero,124(sp)
 4028024:	d8003315 	stw	zero,204(sp)
 4028028:	d8003615 	stw	zero,216(sp)
 402802c:	d8003815 	stw	zero,224(sp)
 4028030:	1811883a 	mov	r8,r3
 4028034:	d8003915 	stw	zero,228(sp)
 4028038:	d8003a15 	stw	zero,232(sp)
 402803c:	d8002f15 	stw	zero,188(sp)
 4028040:	d9002815 	stw	r4,160(sp)
 4028044:	a8800007 	ldb	r2,0(r21)
 4028048:	10027b26 	beq	r2,zero,4028a38 <___vfprintf_internal_r+0xad4>
 402804c:	00c00944 	movi	r3,37
 4028050:	a821883a 	mov	r16,r21
 4028054:	10c0021e 	bne	r2,r3,4028060 <___vfprintf_internal_r+0xfc>
 4028058:	00001406 	br	40280ac <___vfprintf_internal_r+0x148>
 402805c:	10c00326 	beq	r2,r3,402806c <___vfprintf_internal_r+0x108>
 4028060:	84000044 	addi	r16,r16,1
 4028064:	80800007 	ldb	r2,0(r16)
 4028068:	103ffc1e 	bne	r2,zero,402805c <__flash_rwdata_start+0xffff1df0>
 402806c:	8563c83a 	sub	r17,r16,r21
 4028070:	88000e26 	beq	r17,zero,40280ac <___vfprintf_internal_r+0x148>
 4028074:	d8c02017 	ldw	r3,128(sp)
 4028078:	d8801f17 	ldw	r2,124(sp)
 402807c:	45400015 	stw	r21,0(r8)
 4028080:	1c47883a 	add	r3,r3,r17
 4028084:	10800044 	addi	r2,r2,1
 4028088:	d8c02015 	stw	r3,128(sp)
 402808c:	44400115 	stw	r17,4(r8)
 4028090:	d8801f15 	stw	r2,124(sp)
 4028094:	00c001c4 	movi	r3,7
 4028098:	1880a716 	blt	r3,r2,4028338 <___vfprintf_internal_r+0x3d4>
 402809c:	42000204 	addi	r8,r8,8
 40280a0:	d9402f17 	ldw	r5,188(sp)
 40280a4:	2c4b883a 	add	r5,r5,r17
 40280a8:	d9402f15 	stw	r5,188(sp)
 40280ac:	80800007 	ldb	r2,0(r16)
 40280b0:	1000a826 	beq	r2,zero,4028354 <___vfprintf_internal_r+0x3f0>
 40280b4:	84400047 	ldb	r17,1(r16)
 40280b8:	00bfffc4 	movi	r2,-1
 40280bc:	85400044 	addi	r21,r16,1
 40280c0:	d8002785 	stb	zero,158(sp)
 40280c4:	0007883a 	mov	r3,zero
 40280c8:	000f883a 	mov	r7,zero
 40280cc:	d8802915 	stw	r2,164(sp)
 40280d0:	d8003115 	stw	zero,196(sp)
 40280d4:	0025883a 	mov	r18,zero
 40280d8:	01401604 	movi	r5,88
 40280dc:	01800244 	movi	r6,9
 40280e0:	02800a84 	movi	r10,42
 40280e4:	02401b04 	movi	r9,108
 40280e8:	ad400044 	addi	r21,r21,1
 40280ec:	88bff804 	addi	r2,r17,-32
 40280f0:	28830436 	bltu	r5,r2,4028d04 <___vfprintf_internal_r+0xda0>
 40280f4:	100490ba 	slli	r2,r2,2
 40280f8:	010100f4 	movhi	r4,1027
 40280fc:	21204304 	addi	r4,r4,-32500
 4028100:	1105883a 	add	r2,r2,r4
 4028104:	10800017 	ldw	r2,0(r2)
 4028108:	1000683a 	jmp	r2
 402810c:	04028c24 	muli	r16,zero,2608
 4028110:	04028d04 	movi	r16,2612
 4028114:	04028d04 	movi	r16,2612
 4028118:	04028c44 	movi	r16,2609
 402811c:	04028d04 	movi	r16,2612
 4028120:	04028d04 	movi	r16,2612
 4028124:	04028d04 	movi	r16,2612
 4028128:	04028d04 	movi	r16,2612
 402812c:	04028d04 	movi	r16,2612
 4028130:	04028d04 	movi	r16,2612
 4028134:	040283b8 	rdprs	r16,zero,2574
 4028138:	04028b60 	cmpeqi	r16,zero,2605
 402813c:	04028d04 	movi	r16,2612
 4028140:	04028280 	call	402828 <__alt_heap_start+0x3b54dc>
 4028144:	040283e0 	cmpeqi	r16,zero,2575
 4028148:	04028d04 	movi	r16,2612
 402814c:	04028420 	cmpeqi	r16,zero,2576
 4028150:	0402842c 	andhi	r16,zero,2576
 4028154:	0402842c 	andhi	r16,zero,2576
 4028158:	0402842c 	andhi	r16,zero,2576
 402815c:	0402842c 	andhi	r16,zero,2576
 4028160:	0402842c 	andhi	r16,zero,2576
 4028164:	0402842c 	andhi	r16,zero,2576
 4028168:	0402842c 	andhi	r16,zero,2576
 402816c:	0402842c 	andhi	r16,zero,2576
 4028170:	0402842c 	andhi	r16,zero,2576
 4028174:	04028d04 	movi	r16,2612
 4028178:	04028d04 	movi	r16,2612
 402817c:	04028d04 	movi	r16,2612
 4028180:	04028d04 	movi	r16,2612
 4028184:	04028d04 	movi	r16,2612
 4028188:	04028d04 	movi	r16,2612
 402818c:	04028d04 	movi	r16,2612
 4028190:	04028d04 	movi	r16,2612
 4028194:	04028d04 	movi	r16,2612
 4028198:	04028d04 	movi	r16,2612
 402819c:	04028460 	cmpeqi	r16,zero,2577
 40281a0:	0402851c 	xori	r16,zero,2580
 40281a4:	04028d04 	movi	r16,2612
 40281a8:	0402851c 	xori	r16,zero,2580
 40281ac:	04028d04 	movi	r16,2612
 40281b0:	04028d04 	movi	r16,2612
 40281b4:	04028d04 	movi	r16,2612
 40281b8:	04028d04 	movi	r16,2612
 40281bc:	040285bc 	xorhi	r16,zero,2582
 40281c0:	04028d04 	movi	r16,2612
 40281c4:	04028d04 	movi	r16,2612
 40281c8:	040285c8 	cmpgei	r16,zero,2583
 40281cc:	04028d04 	movi	r16,2612
 40281d0:	04028d04 	movi	r16,2612
 40281d4:	04028d04 	movi	r16,2612
 40281d8:	04028d04 	movi	r16,2612
 40281dc:	04028d04 	movi	r16,2612
 40281e0:	04028a40 	call	4028a4 <__alt_heap_start+0x3b5558>
 40281e4:	04028d04 	movi	r16,2612
 40281e8:	04028d04 	movi	r16,2612
 40281ec:	04028aa0 	cmpeqi	r16,zero,2602
 40281f0:	04028d04 	movi	r16,2612
 40281f4:	04028d04 	movi	r16,2612
 40281f8:	04028d04 	movi	r16,2612
 40281fc:	04028d04 	movi	r16,2612
 4028200:	04028d04 	movi	r16,2612
 4028204:	04028d04 	movi	r16,2612
 4028208:	04028d04 	movi	r16,2612
 402820c:	04028d04 	movi	r16,2612
 4028210:	04028d04 	movi	r16,2612
 4028214:	04028d04 	movi	r16,2612
 4028218:	04028cb0 	cmpltui	r16,zero,2610
 402821c:	04028c50 	cmplti	r16,zero,2609
 4028220:	0402851c 	xori	r16,zero,2580
 4028224:	0402851c 	xori	r16,zero,2580
 4028228:	0402851c 	xori	r16,zero,2580
 402822c:	04028c60 	cmpeqi	r16,zero,2609
 4028230:	04028c50 	cmplti	r16,zero,2609
 4028234:	04028d04 	movi	r16,2612
 4028238:	04028d04 	movi	r16,2612
 402823c:	04028c6c 	andhi	r16,zero,2609
 4028240:	04028d04 	movi	r16,2612
 4028244:	04028c7c 	xorhi	r16,zero,2609
 4028248:	04028b50 	cmplti	r16,zero,2605
 402824c:	0402828c 	andi	r16,zero,2570
 4028250:	04028b70 	cmpltui	r16,zero,2605
 4028254:	04028d04 	movi	r16,2612
 4028258:	04028b7c 	xorhi	r16,zero,2605
 402825c:	04028d04 	movi	r16,2612
 4028260:	04028bd8 	cmpnei	r16,zero,2607
 4028264:	04028d04 	movi	r16,2612
 4028268:	04028d04 	movi	r16,2612
 402826c:	04028be8 	cmpgeui	r16,zero,2607
 4028270:	d9003117 	ldw	r4,196(sp)
 4028274:	d8802d15 	stw	r2,180(sp)
 4028278:	0109c83a 	sub	r4,zero,r4
 402827c:	d9003115 	stw	r4,196(sp)
 4028280:	94800114 	ori	r18,r18,4
 4028284:	ac400007 	ldb	r17,0(r21)
 4028288:	003f9706 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 402828c:	00800c04 	movi	r2,48
 4028290:	d9002d17 	ldw	r4,180(sp)
 4028294:	d9402917 	ldw	r5,164(sp)
 4028298:	d8802705 	stb	r2,156(sp)
 402829c:	00801e04 	movi	r2,120
 40282a0:	d8802745 	stb	r2,157(sp)
 40282a4:	d8002785 	stb	zero,158(sp)
 40282a8:	20c00104 	addi	r3,r4,4
 40282ac:	24c00017 	ldw	r19,0(r4)
 40282b0:	002d883a 	mov	r22,zero
 40282b4:	90800094 	ori	r2,r18,2
 40282b8:	28029a16 	blt	r5,zero,4028d24 <___vfprintf_internal_r+0xdc0>
 40282bc:	00bfdfc4 	movi	r2,-129
 40282c0:	90a4703a 	and	r18,r18,r2
 40282c4:	d8c02d15 	stw	r3,180(sp)
 40282c8:	94800094 	ori	r18,r18,2
 40282cc:	9802871e 	bne	r19,zero,4028cec <___vfprintf_internal_r+0xd88>
 40282d0:	00800034 	movhi	r2,0
 40282d4:	10813204 	addi	r2,r2,1224
 40282d8:	d8803915 	stw	r2,228(sp)
 40282dc:	04401e04 	movi	r17,120
 40282e0:	d8802917 	ldw	r2,164(sp)
 40282e4:	0039883a 	mov	fp,zero
 40282e8:	1001e926 	beq	r2,zero,4028a90 <___vfprintf_internal_r+0xb2c>
 40282ec:	0027883a 	mov	r19,zero
 40282f0:	002d883a 	mov	r22,zero
 40282f4:	00020506 	br	4028b0c <___vfprintf_internal_r+0xba8>
 40282f8:	d9002c17 	ldw	r4,176(sp)
 40282fc:	b80b883a 	mov	r5,r23
 4028300:	402a2340 	call	402a234 <__swsetup_r>
 4028304:	1005ac1e 	bne	r2,zero,40299b8 <___vfprintf_internal_r+0x1a54>
 4028308:	b880030b 	ldhu	r2,12(r23)
 402830c:	00c00284 	movi	r3,10
 4028310:	1080068c 	andi	r2,r2,26
 4028314:	10ff3c1e 	bne	r2,r3,4028008 <__flash_rwdata_start+0xffff1d9c>
 4028318:	b880038f 	ldh	r2,14(r23)
 402831c:	103f3a16 	blt	r2,zero,4028008 <__flash_rwdata_start+0xffff1d9c>
 4028320:	d9c02d17 	ldw	r7,180(sp)
 4028324:	d9002c17 	ldw	r4,176(sp)
 4028328:	a80d883a 	mov	r6,r21
 402832c:	b80b883a 	mov	r5,r23
 4028330:	402a1780 	call	402a178 <__sbprintf>
 4028334:	00001106 	br	402837c <___vfprintf_internal_r+0x418>
 4028338:	d9002c17 	ldw	r4,176(sp)
 402833c:	d9801e04 	addi	r6,sp,120
 4028340:	b80b883a 	mov	r5,r23
 4028344:	402ec640 	call	402ec64 <__sprint_r>
 4028348:	1000081e 	bne	r2,zero,402836c <___vfprintf_internal_r+0x408>
 402834c:	da000404 	addi	r8,sp,16
 4028350:	003f5306 	br	40280a0 <__flash_rwdata_start+0xffff1e34>
 4028354:	d8802017 	ldw	r2,128(sp)
 4028358:	10000426 	beq	r2,zero,402836c <___vfprintf_internal_r+0x408>
 402835c:	d9002c17 	ldw	r4,176(sp)
 4028360:	d9801e04 	addi	r6,sp,120
 4028364:	b80b883a 	mov	r5,r23
 4028368:	402ec640 	call	402ec64 <__sprint_r>
 402836c:	b880030b 	ldhu	r2,12(r23)
 4028370:	1080100c 	andi	r2,r2,64
 4028374:	1005901e 	bne	r2,zero,40299b8 <___vfprintf_internal_r+0x1a54>
 4028378:	d8802f17 	ldw	r2,188(sp)
 402837c:	dfc04717 	ldw	ra,284(sp)
 4028380:	df004617 	ldw	fp,280(sp)
 4028384:	ddc04517 	ldw	r23,276(sp)
 4028388:	dd804417 	ldw	r22,272(sp)
 402838c:	dd404317 	ldw	r21,268(sp)
 4028390:	dd004217 	ldw	r20,264(sp)
 4028394:	dcc04117 	ldw	r19,260(sp)
 4028398:	dc804017 	ldw	r18,256(sp)
 402839c:	dc403f17 	ldw	r17,252(sp)
 40283a0:	dc003e17 	ldw	r16,248(sp)
 40283a4:	dec04804 	addi	sp,sp,288
 40283a8:	f800283a 	ret
 40283ac:	d9002c17 	ldw	r4,176(sp)
 40283b0:	402c2080 	call	402c208 <__sinit>
 40283b4:	003f0406 	br	4027fc8 <__flash_rwdata_start+0xffff1d5c>
 40283b8:	d8802d17 	ldw	r2,180(sp)
 40283bc:	d9002d17 	ldw	r4,180(sp)
 40283c0:	10800017 	ldw	r2,0(r2)
 40283c4:	d8803115 	stw	r2,196(sp)
 40283c8:	20800104 	addi	r2,r4,4
 40283cc:	d9003117 	ldw	r4,196(sp)
 40283d0:	203fa716 	blt	r4,zero,4028270 <__flash_rwdata_start+0xffff2004>
 40283d4:	d8802d15 	stw	r2,180(sp)
 40283d8:	ac400007 	ldb	r17,0(r21)
 40283dc:	003f4206 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 40283e0:	ac400007 	ldb	r17,0(r21)
 40283e4:	aac00044 	addi	r11,r21,1
 40283e8:	8a872826 	beq	r17,r10,402a08c <___vfprintf_internal_r+0x2128>
 40283ec:	88bff404 	addi	r2,r17,-48
 40283f0:	0009883a 	mov	r4,zero
 40283f4:	30867d36 	bltu	r6,r2,4029dec <___vfprintf_internal_r+0x1e88>
 40283f8:	5c400007 	ldb	r17,0(r11)
 40283fc:	210002a4 	muli	r4,r4,10
 4028400:	5d400044 	addi	r21,r11,1
 4028404:	a817883a 	mov	r11,r21
 4028408:	2089883a 	add	r4,r4,r2
 402840c:	88bff404 	addi	r2,r17,-48
 4028410:	30bff92e 	bgeu	r6,r2,40283f8 <__flash_rwdata_start+0xffff218c>
 4028414:	2005c916 	blt	r4,zero,4029b3c <___vfprintf_internal_r+0x1bd8>
 4028418:	d9002915 	stw	r4,164(sp)
 402841c:	003f3306 	br	40280ec <__flash_rwdata_start+0xffff1e80>
 4028420:	94802014 	ori	r18,r18,128
 4028424:	ac400007 	ldb	r17,0(r21)
 4028428:	003f2f06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 402842c:	a809883a 	mov	r4,r21
 4028430:	d8003115 	stw	zero,196(sp)
 4028434:	88bff404 	addi	r2,r17,-48
 4028438:	0017883a 	mov	r11,zero
 402843c:	24400007 	ldb	r17,0(r4)
 4028440:	5ac002a4 	muli	r11,r11,10
 4028444:	ad400044 	addi	r21,r21,1
 4028448:	a809883a 	mov	r4,r21
 402844c:	12d7883a 	add	r11,r2,r11
 4028450:	88bff404 	addi	r2,r17,-48
 4028454:	30bff92e 	bgeu	r6,r2,402843c <__flash_rwdata_start+0xffff21d0>
 4028458:	dac03115 	stw	r11,196(sp)
 402845c:	003f2306 	br	40280ec <__flash_rwdata_start+0xffff1e80>
 4028460:	18c03fcc 	andi	r3,r3,255
 4028464:	18072b1e 	bne	r3,zero,402a114 <___vfprintf_internal_r+0x21b0>
 4028468:	94800414 	ori	r18,r18,16
 402846c:	9080080c 	andi	r2,r18,32
 4028470:	10037b26 	beq	r2,zero,4029260 <___vfprintf_internal_r+0x12fc>
 4028474:	d9402d17 	ldw	r5,180(sp)
 4028478:	28800117 	ldw	r2,4(r5)
 402847c:	2cc00017 	ldw	r19,0(r5)
 4028480:	29400204 	addi	r5,r5,8
 4028484:	d9402d15 	stw	r5,180(sp)
 4028488:	102d883a 	mov	r22,r2
 402848c:	10044b16 	blt	r2,zero,40295bc <___vfprintf_internal_r+0x1658>
 4028490:	d9402917 	ldw	r5,164(sp)
 4028494:	df002783 	ldbu	fp,158(sp)
 4028498:	2803bc16 	blt	r5,zero,402938c <___vfprintf_internal_r+0x1428>
 402849c:	00ffdfc4 	movi	r3,-129
 40284a0:	9d84b03a 	or	r2,r19,r22
 40284a4:	90e4703a 	and	r18,r18,r3
 40284a8:	10017726 	beq	r2,zero,4028a88 <___vfprintf_internal_r+0xb24>
 40284ac:	b0038326 	beq	r22,zero,40292bc <___vfprintf_internal_r+0x1358>
 40284b0:	dc402a15 	stw	r17,168(sp)
 40284b4:	dc001e04 	addi	r16,sp,120
 40284b8:	b023883a 	mov	r17,r22
 40284bc:	402d883a 	mov	r22,r8
 40284c0:	9809883a 	mov	r4,r19
 40284c4:	880b883a 	mov	r5,r17
 40284c8:	01800284 	movi	r6,10
 40284cc:	000f883a 	mov	r7,zero
 40284d0:	40310bc0 	call	40310bc <__umoddi3>
 40284d4:	10800c04 	addi	r2,r2,48
 40284d8:	843fffc4 	addi	r16,r16,-1
 40284dc:	9809883a 	mov	r4,r19
 40284e0:	880b883a 	mov	r5,r17
 40284e4:	80800005 	stb	r2,0(r16)
 40284e8:	01800284 	movi	r6,10
 40284ec:	000f883a 	mov	r7,zero
 40284f0:	4030b440 	call	4030b44 <__udivdi3>
 40284f4:	1027883a 	mov	r19,r2
 40284f8:	10c4b03a 	or	r2,r2,r3
 40284fc:	1823883a 	mov	r17,r3
 4028500:	103fef1e 	bne	r2,zero,40284c0 <__flash_rwdata_start+0xffff2254>
 4028504:	d8c02817 	ldw	r3,160(sp)
 4028508:	dc402a17 	ldw	r17,168(sp)
 402850c:	b011883a 	mov	r8,r22
 4028510:	1c07c83a 	sub	r3,r3,r16
 4028514:	d8c02e15 	stw	r3,184(sp)
 4028518:	00005906 	br	4028680 <___vfprintf_internal_r+0x71c>
 402851c:	18c03fcc 	andi	r3,r3,255
 4028520:	1806fa1e 	bne	r3,zero,402a10c <___vfprintf_internal_r+0x21a8>
 4028524:	9080020c 	andi	r2,r18,8
 4028528:	10048a26 	beq	r2,zero,4029754 <___vfprintf_internal_r+0x17f0>
 402852c:	d8c02d17 	ldw	r3,180(sp)
 4028530:	d9002d17 	ldw	r4,180(sp)
 4028534:	d9402d17 	ldw	r5,180(sp)
 4028538:	18c00017 	ldw	r3,0(r3)
 402853c:	21000117 	ldw	r4,4(r4)
 4028540:	29400204 	addi	r5,r5,8
 4028544:	d8c03615 	stw	r3,216(sp)
 4028548:	d9003815 	stw	r4,224(sp)
 402854c:	d9402d15 	stw	r5,180(sp)
 4028550:	d9003617 	ldw	r4,216(sp)
 4028554:	d9403817 	ldw	r5,224(sp)
 4028558:	da003d15 	stw	r8,244(sp)
 402855c:	04000044 	movi	r16,1
 4028560:	402e9b80 	call	402e9b8 <__fpclassifyd>
 4028564:	da003d17 	ldw	r8,244(sp)
 4028568:	14041f1e 	bne	r2,r16,40295e8 <___vfprintf_internal_r+0x1684>
 402856c:	d9003617 	ldw	r4,216(sp)
 4028570:	d9403817 	ldw	r5,224(sp)
 4028574:	000d883a 	mov	r6,zero
 4028578:	000f883a 	mov	r7,zero
 402857c:	40320040 	call	4032004 <__ledf2>
 4028580:	da003d17 	ldw	r8,244(sp)
 4028584:	1005be16 	blt	r2,zero,4029c80 <___vfprintf_internal_r+0x1d1c>
 4028588:	df002783 	ldbu	fp,158(sp)
 402858c:	008011c4 	movi	r2,71
 4028590:	1445330e 	bge	r2,r17,4029a60 <___vfprintf_internal_r+0x1afc>
 4028594:	04000034 	movhi	r16,0
 4028598:	84012a04 	addi	r16,r16,1192
 402859c:	00c000c4 	movi	r3,3
 40285a0:	00bfdfc4 	movi	r2,-129
 40285a4:	d8c02a15 	stw	r3,168(sp)
 40285a8:	90a4703a 	and	r18,r18,r2
 40285ac:	d8c02e15 	stw	r3,184(sp)
 40285b0:	d8002915 	stw	zero,164(sp)
 40285b4:	d8003215 	stw	zero,200(sp)
 40285b8:	00003706 	br	4028698 <___vfprintf_internal_r+0x734>
 40285bc:	94800214 	ori	r18,r18,8
 40285c0:	ac400007 	ldb	r17,0(r21)
 40285c4:	003ec806 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 40285c8:	18c03fcc 	andi	r3,r3,255
 40285cc:	1806db1e 	bne	r3,zero,402a13c <___vfprintf_internal_r+0x21d8>
 40285d0:	94800414 	ori	r18,r18,16
 40285d4:	9080080c 	andi	r2,r18,32
 40285d8:	1002d826 	beq	r2,zero,402913c <___vfprintf_internal_r+0x11d8>
 40285dc:	d9402d17 	ldw	r5,180(sp)
 40285e0:	d8c02917 	ldw	r3,164(sp)
 40285e4:	d8002785 	stb	zero,158(sp)
 40285e8:	28800204 	addi	r2,r5,8
 40285ec:	2cc00017 	ldw	r19,0(r5)
 40285f0:	2d800117 	ldw	r22,4(r5)
 40285f4:	18048f16 	blt	r3,zero,4029834 <___vfprintf_internal_r+0x18d0>
 40285f8:	013fdfc4 	movi	r4,-129
 40285fc:	9d86b03a 	or	r3,r19,r22
 4028600:	d8802d15 	stw	r2,180(sp)
 4028604:	9124703a 	and	r18,r18,r4
 4028608:	1802d91e 	bne	r3,zero,4029170 <___vfprintf_internal_r+0x120c>
 402860c:	d8c02917 	ldw	r3,164(sp)
 4028610:	0039883a 	mov	fp,zero
 4028614:	1805c326 	beq	r3,zero,4029d24 <___vfprintf_internal_r+0x1dc0>
 4028618:	0027883a 	mov	r19,zero
 402861c:	002d883a 	mov	r22,zero
 4028620:	dc001e04 	addi	r16,sp,120
 4028624:	9806d0fa 	srli	r3,r19,3
 4028628:	b008977a 	slli	r4,r22,29
 402862c:	b02cd0fa 	srli	r22,r22,3
 4028630:	9cc001cc 	andi	r19,r19,7
 4028634:	98800c04 	addi	r2,r19,48
 4028638:	843fffc4 	addi	r16,r16,-1
 402863c:	20e6b03a 	or	r19,r4,r3
 4028640:	80800005 	stb	r2,0(r16)
 4028644:	9d86b03a 	or	r3,r19,r22
 4028648:	183ff61e 	bne	r3,zero,4028624 <__flash_rwdata_start+0xffff23b8>
 402864c:	90c0004c 	andi	r3,r18,1
 4028650:	18013b26 	beq	r3,zero,4028b40 <___vfprintf_internal_r+0xbdc>
 4028654:	10803fcc 	andi	r2,r2,255
 4028658:	1080201c 	xori	r2,r2,128
 402865c:	10bfe004 	addi	r2,r2,-128
 4028660:	00c00c04 	movi	r3,48
 4028664:	10c13626 	beq	r2,r3,4028b40 <___vfprintf_internal_r+0xbdc>
 4028668:	80ffffc5 	stb	r3,-1(r16)
 402866c:	d8c02817 	ldw	r3,160(sp)
 4028670:	80bfffc4 	addi	r2,r16,-1
 4028674:	1021883a 	mov	r16,r2
 4028678:	1887c83a 	sub	r3,r3,r2
 402867c:	d8c02e15 	stw	r3,184(sp)
 4028680:	d8802e17 	ldw	r2,184(sp)
 4028684:	d9002917 	ldw	r4,164(sp)
 4028688:	1100010e 	bge	r2,r4,4028690 <___vfprintf_internal_r+0x72c>
 402868c:	2005883a 	mov	r2,r4
 4028690:	d8802a15 	stw	r2,168(sp)
 4028694:	d8003215 	stw	zero,200(sp)
 4028698:	e7003fcc 	andi	fp,fp,255
 402869c:	e700201c 	xori	fp,fp,128
 40286a0:	e73fe004 	addi	fp,fp,-128
 40286a4:	e0000326 	beq	fp,zero,40286b4 <___vfprintf_internal_r+0x750>
 40286a8:	d8c02a17 	ldw	r3,168(sp)
 40286ac:	18c00044 	addi	r3,r3,1
 40286b0:	d8c02a15 	stw	r3,168(sp)
 40286b4:	90c0008c 	andi	r3,r18,2
 40286b8:	d8c02b15 	stw	r3,172(sp)
 40286bc:	18000326 	beq	r3,zero,40286cc <___vfprintf_internal_r+0x768>
 40286c0:	d8c02a17 	ldw	r3,168(sp)
 40286c4:	18c00084 	addi	r3,r3,2
 40286c8:	d8c02a15 	stw	r3,168(sp)
 40286cc:	90c0210c 	andi	r3,r18,132
 40286d0:	d8c03015 	stw	r3,192(sp)
 40286d4:	1801a31e 	bne	r3,zero,4028d64 <___vfprintf_internal_r+0xe00>
 40286d8:	d9003117 	ldw	r4,196(sp)
 40286dc:	d8c02a17 	ldw	r3,168(sp)
 40286e0:	20e7c83a 	sub	r19,r4,r3
 40286e4:	04c19f0e 	bge	zero,r19,4028d64 <___vfprintf_internal_r+0xe00>
 40286e8:	02400404 	movi	r9,16
 40286ec:	d8c02017 	ldw	r3,128(sp)
 40286f0:	d8801f17 	ldw	r2,124(sp)
 40286f4:	4cc50d0e 	bge	r9,r19,4029b2c <___vfprintf_internal_r+0x1bc8>
 40286f8:	01400034 	movhi	r5,0
 40286fc:	29413d84 	addi	r5,r5,1270
 4028700:	dc403b15 	stw	r17,236(sp)
 4028704:	d9403515 	stw	r5,212(sp)
 4028708:	9823883a 	mov	r17,r19
 402870c:	482d883a 	mov	r22,r9
 4028710:	9027883a 	mov	r19,r18
 4028714:	070001c4 	movi	fp,7
 4028718:	8025883a 	mov	r18,r16
 402871c:	dc002c17 	ldw	r16,176(sp)
 4028720:	00000306 	br	4028730 <___vfprintf_internal_r+0x7cc>
 4028724:	8c7ffc04 	addi	r17,r17,-16
 4028728:	42000204 	addi	r8,r8,8
 402872c:	b440130e 	bge	r22,r17,402877c <___vfprintf_internal_r+0x818>
 4028730:	01000034 	movhi	r4,0
 4028734:	18c00404 	addi	r3,r3,16
 4028738:	10800044 	addi	r2,r2,1
 402873c:	21013d84 	addi	r4,r4,1270
 4028740:	41000015 	stw	r4,0(r8)
 4028744:	45800115 	stw	r22,4(r8)
 4028748:	d8c02015 	stw	r3,128(sp)
 402874c:	d8801f15 	stw	r2,124(sp)
 4028750:	e0bff40e 	bge	fp,r2,4028724 <__flash_rwdata_start+0xffff24b8>
 4028754:	d9801e04 	addi	r6,sp,120
 4028758:	b80b883a 	mov	r5,r23
 402875c:	8009883a 	mov	r4,r16
 4028760:	402ec640 	call	402ec64 <__sprint_r>
 4028764:	103f011e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4028768:	8c7ffc04 	addi	r17,r17,-16
 402876c:	d8c02017 	ldw	r3,128(sp)
 4028770:	d8801f17 	ldw	r2,124(sp)
 4028774:	da000404 	addi	r8,sp,16
 4028778:	b47fed16 	blt	r22,r17,4028730 <__flash_rwdata_start+0xffff24c4>
 402877c:	9021883a 	mov	r16,r18
 4028780:	9825883a 	mov	r18,r19
 4028784:	8827883a 	mov	r19,r17
 4028788:	dc403b17 	ldw	r17,236(sp)
 402878c:	d9403517 	ldw	r5,212(sp)
 4028790:	98c7883a 	add	r3,r19,r3
 4028794:	10800044 	addi	r2,r2,1
 4028798:	41400015 	stw	r5,0(r8)
 402879c:	44c00115 	stw	r19,4(r8)
 40287a0:	d8c02015 	stw	r3,128(sp)
 40287a4:	d8801f15 	stw	r2,124(sp)
 40287a8:	010001c4 	movi	r4,7
 40287ac:	2082a316 	blt	r4,r2,402923c <___vfprintf_internal_r+0x12d8>
 40287b0:	df002787 	ldb	fp,158(sp)
 40287b4:	42000204 	addi	r8,r8,8
 40287b8:	e0000c26 	beq	fp,zero,40287ec <___vfprintf_internal_r+0x888>
 40287bc:	d8801f17 	ldw	r2,124(sp)
 40287c0:	d9002784 	addi	r4,sp,158
 40287c4:	18c00044 	addi	r3,r3,1
 40287c8:	10800044 	addi	r2,r2,1
 40287cc:	41000015 	stw	r4,0(r8)
 40287d0:	01000044 	movi	r4,1
 40287d4:	41000115 	stw	r4,4(r8)
 40287d8:	d8c02015 	stw	r3,128(sp)
 40287dc:	d8801f15 	stw	r2,124(sp)
 40287e0:	010001c4 	movi	r4,7
 40287e4:	20823c16 	blt	r4,r2,40290d8 <___vfprintf_internal_r+0x1174>
 40287e8:	42000204 	addi	r8,r8,8
 40287ec:	d8802b17 	ldw	r2,172(sp)
 40287f0:	10000c26 	beq	r2,zero,4028824 <___vfprintf_internal_r+0x8c0>
 40287f4:	d8801f17 	ldw	r2,124(sp)
 40287f8:	d9002704 	addi	r4,sp,156
 40287fc:	18c00084 	addi	r3,r3,2
 4028800:	10800044 	addi	r2,r2,1
 4028804:	41000015 	stw	r4,0(r8)
 4028808:	01000084 	movi	r4,2
 402880c:	41000115 	stw	r4,4(r8)
 4028810:	d8c02015 	stw	r3,128(sp)
 4028814:	d8801f15 	stw	r2,124(sp)
 4028818:	010001c4 	movi	r4,7
 402881c:	20823616 	blt	r4,r2,40290f8 <___vfprintf_internal_r+0x1194>
 4028820:	42000204 	addi	r8,r8,8
 4028824:	d9003017 	ldw	r4,192(sp)
 4028828:	00802004 	movi	r2,128
 402882c:	20819926 	beq	r4,r2,4028e94 <___vfprintf_internal_r+0xf30>
 4028830:	d9402917 	ldw	r5,164(sp)
 4028834:	d8802e17 	ldw	r2,184(sp)
 4028838:	28adc83a 	sub	r22,r5,r2
 402883c:	0580310e 	bge	zero,r22,4028904 <___vfprintf_internal_r+0x9a0>
 4028840:	07000404 	movi	fp,16
 4028844:	d8801f17 	ldw	r2,124(sp)
 4028848:	e584140e 	bge	fp,r22,402989c <___vfprintf_internal_r+0x1938>
 402884c:	01400034 	movhi	r5,0
 4028850:	29413984 	addi	r5,r5,1254
 4028854:	dc402915 	stw	r17,164(sp)
 4028858:	d9402b15 	stw	r5,172(sp)
 402885c:	b023883a 	mov	r17,r22
 4028860:	04c001c4 	movi	r19,7
 4028864:	a82d883a 	mov	r22,r21
 4028868:	902b883a 	mov	r21,r18
 402886c:	8025883a 	mov	r18,r16
 4028870:	dc002c17 	ldw	r16,176(sp)
 4028874:	00000306 	br	4028884 <___vfprintf_internal_r+0x920>
 4028878:	8c7ffc04 	addi	r17,r17,-16
 402887c:	42000204 	addi	r8,r8,8
 4028880:	e440110e 	bge	fp,r17,40288c8 <___vfprintf_internal_r+0x964>
 4028884:	18c00404 	addi	r3,r3,16
 4028888:	10800044 	addi	r2,r2,1
 402888c:	45000015 	stw	r20,0(r8)
 4028890:	47000115 	stw	fp,4(r8)
 4028894:	d8c02015 	stw	r3,128(sp)
 4028898:	d8801f15 	stw	r2,124(sp)
 402889c:	98bff60e 	bge	r19,r2,4028878 <__flash_rwdata_start+0xffff260c>
 40288a0:	d9801e04 	addi	r6,sp,120
 40288a4:	b80b883a 	mov	r5,r23
 40288a8:	8009883a 	mov	r4,r16
 40288ac:	402ec640 	call	402ec64 <__sprint_r>
 40288b0:	103eae1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40288b4:	8c7ffc04 	addi	r17,r17,-16
 40288b8:	d8c02017 	ldw	r3,128(sp)
 40288bc:	d8801f17 	ldw	r2,124(sp)
 40288c0:	da000404 	addi	r8,sp,16
 40288c4:	e47fef16 	blt	fp,r17,4028884 <__flash_rwdata_start+0xffff2618>
 40288c8:	9021883a 	mov	r16,r18
 40288cc:	a825883a 	mov	r18,r21
 40288d0:	b02b883a 	mov	r21,r22
 40288d4:	882d883a 	mov	r22,r17
 40288d8:	dc402917 	ldw	r17,164(sp)
 40288dc:	d9002b17 	ldw	r4,172(sp)
 40288e0:	1d87883a 	add	r3,r3,r22
 40288e4:	10800044 	addi	r2,r2,1
 40288e8:	41000015 	stw	r4,0(r8)
 40288ec:	45800115 	stw	r22,4(r8)
 40288f0:	d8c02015 	stw	r3,128(sp)
 40288f4:	d8801f15 	stw	r2,124(sp)
 40288f8:	010001c4 	movi	r4,7
 40288fc:	2081ee16 	blt	r4,r2,40290b8 <___vfprintf_internal_r+0x1154>
 4028900:	42000204 	addi	r8,r8,8
 4028904:	9080400c 	andi	r2,r18,256
 4028908:	1001181e 	bne	r2,zero,4028d6c <___vfprintf_internal_r+0xe08>
 402890c:	d9402e17 	ldw	r5,184(sp)
 4028910:	d8801f17 	ldw	r2,124(sp)
 4028914:	44000015 	stw	r16,0(r8)
 4028918:	1947883a 	add	r3,r3,r5
 402891c:	10800044 	addi	r2,r2,1
 4028920:	41400115 	stw	r5,4(r8)
 4028924:	d8c02015 	stw	r3,128(sp)
 4028928:	d8801f15 	stw	r2,124(sp)
 402892c:	010001c4 	movi	r4,7
 4028930:	2081d316 	blt	r4,r2,4029080 <___vfprintf_internal_r+0x111c>
 4028934:	42000204 	addi	r8,r8,8
 4028938:	9480010c 	andi	r18,r18,4
 402893c:	90003226 	beq	r18,zero,4028a08 <___vfprintf_internal_r+0xaa4>
 4028940:	d9403117 	ldw	r5,196(sp)
 4028944:	d8802a17 	ldw	r2,168(sp)
 4028948:	28a1c83a 	sub	r16,r5,r2
 402894c:	04002e0e 	bge	zero,r16,4028a08 <___vfprintf_internal_r+0xaa4>
 4028950:	04400404 	movi	r17,16
 4028954:	d8801f17 	ldw	r2,124(sp)
 4028958:	8c04a20e 	bge	r17,r16,4029be4 <___vfprintf_internal_r+0x1c80>
 402895c:	01400034 	movhi	r5,0
 4028960:	29413d84 	addi	r5,r5,1270
 4028964:	d9403515 	stw	r5,212(sp)
 4028968:	048001c4 	movi	r18,7
 402896c:	dcc02c17 	ldw	r19,176(sp)
 4028970:	00000306 	br	4028980 <___vfprintf_internal_r+0xa1c>
 4028974:	843ffc04 	addi	r16,r16,-16
 4028978:	42000204 	addi	r8,r8,8
 402897c:	8c00130e 	bge	r17,r16,40289cc <___vfprintf_internal_r+0xa68>
 4028980:	01000034 	movhi	r4,0
 4028984:	18c00404 	addi	r3,r3,16
 4028988:	10800044 	addi	r2,r2,1
 402898c:	21013d84 	addi	r4,r4,1270
 4028990:	41000015 	stw	r4,0(r8)
 4028994:	44400115 	stw	r17,4(r8)
 4028998:	d8c02015 	stw	r3,128(sp)
 402899c:	d8801f15 	stw	r2,124(sp)
 40289a0:	90bff40e 	bge	r18,r2,4028974 <__flash_rwdata_start+0xffff2708>
 40289a4:	d9801e04 	addi	r6,sp,120
 40289a8:	b80b883a 	mov	r5,r23
 40289ac:	9809883a 	mov	r4,r19
 40289b0:	402ec640 	call	402ec64 <__sprint_r>
 40289b4:	103e6d1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40289b8:	843ffc04 	addi	r16,r16,-16
 40289bc:	d8c02017 	ldw	r3,128(sp)
 40289c0:	d8801f17 	ldw	r2,124(sp)
 40289c4:	da000404 	addi	r8,sp,16
 40289c8:	8c3fed16 	blt	r17,r16,4028980 <__flash_rwdata_start+0xffff2714>
 40289cc:	d9403517 	ldw	r5,212(sp)
 40289d0:	1c07883a 	add	r3,r3,r16
 40289d4:	10800044 	addi	r2,r2,1
 40289d8:	41400015 	stw	r5,0(r8)
 40289dc:	44000115 	stw	r16,4(r8)
 40289e0:	d8c02015 	stw	r3,128(sp)
 40289e4:	d8801f15 	stw	r2,124(sp)
 40289e8:	010001c4 	movi	r4,7
 40289ec:	2080060e 	bge	r4,r2,4028a08 <___vfprintf_internal_r+0xaa4>
 40289f0:	d9002c17 	ldw	r4,176(sp)
 40289f4:	d9801e04 	addi	r6,sp,120
 40289f8:	b80b883a 	mov	r5,r23
 40289fc:	402ec640 	call	402ec64 <__sprint_r>
 4028a00:	103e5a1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4028a04:	d8c02017 	ldw	r3,128(sp)
 4028a08:	d8803117 	ldw	r2,196(sp)
 4028a0c:	d9002a17 	ldw	r4,168(sp)
 4028a10:	1100010e 	bge	r2,r4,4028a18 <___vfprintf_internal_r+0xab4>
 4028a14:	2005883a 	mov	r2,r4
 4028a18:	d9402f17 	ldw	r5,188(sp)
 4028a1c:	288b883a 	add	r5,r5,r2
 4028a20:	d9402f15 	stw	r5,188(sp)
 4028a24:	18019e1e 	bne	r3,zero,40290a0 <___vfprintf_internal_r+0x113c>
 4028a28:	a8800007 	ldb	r2,0(r21)
 4028a2c:	d8001f15 	stw	zero,124(sp)
 4028a30:	da000404 	addi	r8,sp,16
 4028a34:	103d851e 	bne	r2,zero,402804c <__flash_rwdata_start+0xffff1de0>
 4028a38:	a821883a 	mov	r16,r21
 4028a3c:	003d9b06 	br	40280ac <__flash_rwdata_start+0xffff1e40>
 4028a40:	18c03fcc 	andi	r3,r3,255
 4028a44:	1805c11e 	bne	r3,zero,402a14c <___vfprintf_internal_r+0x21e8>
 4028a48:	94800414 	ori	r18,r18,16
 4028a4c:	9080080c 	andi	r2,r18,32
 4028a50:	10020c26 	beq	r2,zero,4029284 <___vfprintf_internal_r+0x1320>
 4028a54:	d8802d17 	ldw	r2,180(sp)
 4028a58:	d9002917 	ldw	r4,164(sp)
 4028a5c:	d8002785 	stb	zero,158(sp)
 4028a60:	10c00204 	addi	r3,r2,8
 4028a64:	14c00017 	ldw	r19,0(r2)
 4028a68:	15800117 	ldw	r22,4(r2)
 4028a6c:	20040f16 	blt	r4,zero,4029aac <___vfprintf_internal_r+0x1b48>
 4028a70:	013fdfc4 	movi	r4,-129
 4028a74:	9d84b03a 	or	r2,r19,r22
 4028a78:	d8c02d15 	stw	r3,180(sp)
 4028a7c:	9124703a 	and	r18,r18,r4
 4028a80:	0039883a 	mov	fp,zero
 4028a84:	103e891e 	bne	r2,zero,40284ac <__flash_rwdata_start+0xffff2240>
 4028a88:	d9002917 	ldw	r4,164(sp)
 4028a8c:	2002c11e 	bne	r4,zero,4029594 <___vfprintf_internal_r+0x1630>
 4028a90:	d8002915 	stw	zero,164(sp)
 4028a94:	d8002e15 	stw	zero,184(sp)
 4028a98:	dc001e04 	addi	r16,sp,120
 4028a9c:	003ef806 	br	4028680 <__flash_rwdata_start+0xffff2414>
 4028aa0:	18c03fcc 	andi	r3,r3,255
 4028aa4:	18059d1e 	bne	r3,zero,402a11c <___vfprintf_internal_r+0x21b8>
 4028aa8:	01400034 	movhi	r5,0
 4028aac:	29412d04 	addi	r5,r5,1204
 4028ab0:	d9403915 	stw	r5,228(sp)
 4028ab4:	9080080c 	andi	r2,r18,32
 4028ab8:	10005226 	beq	r2,zero,4028c04 <___vfprintf_internal_r+0xca0>
 4028abc:	d8802d17 	ldw	r2,180(sp)
 4028ac0:	14c00017 	ldw	r19,0(r2)
 4028ac4:	15800117 	ldw	r22,4(r2)
 4028ac8:	10800204 	addi	r2,r2,8
 4028acc:	d8802d15 	stw	r2,180(sp)
 4028ad0:	9080004c 	andi	r2,r18,1
 4028ad4:	10019026 	beq	r2,zero,4029118 <___vfprintf_internal_r+0x11b4>
 4028ad8:	9d84b03a 	or	r2,r19,r22
 4028adc:	10036926 	beq	r2,zero,4029884 <___vfprintf_internal_r+0x1920>
 4028ae0:	d8c02917 	ldw	r3,164(sp)
 4028ae4:	00800c04 	movi	r2,48
 4028ae8:	d8802705 	stb	r2,156(sp)
 4028aec:	dc402745 	stb	r17,157(sp)
 4028af0:	d8002785 	stb	zero,158(sp)
 4028af4:	90800094 	ori	r2,r18,2
 4028af8:	18045d16 	blt	r3,zero,4029c70 <___vfprintf_internal_r+0x1d0c>
 4028afc:	00bfdfc4 	movi	r2,-129
 4028b00:	90a4703a 	and	r18,r18,r2
 4028b04:	94800094 	ori	r18,r18,2
 4028b08:	0039883a 	mov	fp,zero
 4028b0c:	d9003917 	ldw	r4,228(sp)
 4028b10:	dc001e04 	addi	r16,sp,120
 4028b14:	988003cc 	andi	r2,r19,15
 4028b18:	b006973a 	slli	r3,r22,28
 4028b1c:	2085883a 	add	r2,r4,r2
 4028b20:	9826d13a 	srli	r19,r19,4
 4028b24:	10800003 	ldbu	r2,0(r2)
 4028b28:	b02cd13a 	srli	r22,r22,4
 4028b2c:	843fffc4 	addi	r16,r16,-1
 4028b30:	1ce6b03a 	or	r19,r3,r19
 4028b34:	80800005 	stb	r2,0(r16)
 4028b38:	9d84b03a 	or	r2,r19,r22
 4028b3c:	103ff51e 	bne	r2,zero,4028b14 <__flash_rwdata_start+0xffff28a8>
 4028b40:	d8c02817 	ldw	r3,160(sp)
 4028b44:	1c07c83a 	sub	r3,r3,r16
 4028b48:	d8c02e15 	stw	r3,184(sp)
 4028b4c:	003ecc06 	br	4028680 <__flash_rwdata_start+0xffff2414>
 4028b50:	18c03fcc 	andi	r3,r3,255
 4028b54:	183e9f26 	beq	r3,zero,40285d4 <__flash_rwdata_start+0xffff2368>
 4028b58:	d9c02785 	stb	r7,158(sp)
 4028b5c:	003e9d06 	br	40285d4 <__flash_rwdata_start+0xffff2368>
 4028b60:	00c00044 	movi	r3,1
 4028b64:	01c00ac4 	movi	r7,43
 4028b68:	ac400007 	ldb	r17,0(r21)
 4028b6c:	003d5e06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028b70:	94800814 	ori	r18,r18,32
 4028b74:	ac400007 	ldb	r17,0(r21)
 4028b78:	003d5b06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028b7c:	d8c02d17 	ldw	r3,180(sp)
 4028b80:	d8002785 	stb	zero,158(sp)
 4028b84:	1c000017 	ldw	r16,0(r3)
 4028b88:	1cc00104 	addi	r19,r3,4
 4028b8c:	80041926 	beq	r16,zero,4029bf4 <___vfprintf_internal_r+0x1c90>
 4028b90:	d9002917 	ldw	r4,164(sp)
 4028b94:	2003d016 	blt	r4,zero,4029ad8 <___vfprintf_internal_r+0x1b74>
 4028b98:	200d883a 	mov	r6,r4
 4028b9c:	000b883a 	mov	r5,zero
 4028ba0:	8009883a 	mov	r4,r16
 4028ba4:	da003d15 	stw	r8,244(sp)
 4028ba8:	402cf680 	call	402cf68 <memchr>
 4028bac:	da003d17 	ldw	r8,244(sp)
 4028bb0:	10045426 	beq	r2,zero,4029d04 <___vfprintf_internal_r+0x1da0>
 4028bb4:	1405c83a 	sub	r2,r2,r16
 4028bb8:	d8802e15 	stw	r2,184(sp)
 4028bbc:	1003cc16 	blt	r2,zero,4029af0 <___vfprintf_internal_r+0x1b8c>
 4028bc0:	df002783 	ldbu	fp,158(sp)
 4028bc4:	d8802a15 	stw	r2,168(sp)
 4028bc8:	dcc02d15 	stw	r19,180(sp)
 4028bcc:	d8002915 	stw	zero,164(sp)
 4028bd0:	d8003215 	stw	zero,200(sp)
 4028bd4:	003eb006 	br	4028698 <__flash_rwdata_start+0xffff242c>
 4028bd8:	18c03fcc 	andi	r3,r3,255
 4028bdc:	183f9b26 	beq	r3,zero,4028a4c <__flash_rwdata_start+0xffff27e0>
 4028be0:	d9c02785 	stb	r7,158(sp)
 4028be4:	003f9906 	br	4028a4c <__flash_rwdata_start+0xffff27e0>
 4028be8:	18c03fcc 	andi	r3,r3,255
 4028bec:	1805551e 	bne	r3,zero,402a144 <___vfprintf_internal_r+0x21e0>
 4028bf0:	01400034 	movhi	r5,0
 4028bf4:	29413204 	addi	r5,r5,1224
 4028bf8:	d9403915 	stw	r5,228(sp)
 4028bfc:	9080080c 	andi	r2,r18,32
 4028c00:	103fae1e 	bne	r2,zero,4028abc <__flash_rwdata_start+0xffff2850>
 4028c04:	9080040c 	andi	r2,r18,16
 4028c08:	1002de26 	beq	r2,zero,4029784 <___vfprintf_internal_r+0x1820>
 4028c0c:	d8c02d17 	ldw	r3,180(sp)
 4028c10:	002d883a 	mov	r22,zero
 4028c14:	1cc00017 	ldw	r19,0(r3)
 4028c18:	18c00104 	addi	r3,r3,4
 4028c1c:	d8c02d15 	stw	r3,180(sp)
 4028c20:	003fab06 	br	4028ad0 <__flash_rwdata_start+0xffff2864>
 4028c24:	38803fcc 	andi	r2,r7,255
 4028c28:	1080201c 	xori	r2,r2,128
 4028c2c:	10bfe004 	addi	r2,r2,-128
 4028c30:	1002d21e 	bne	r2,zero,402977c <___vfprintf_internal_r+0x1818>
 4028c34:	00c00044 	movi	r3,1
 4028c38:	01c00804 	movi	r7,32
 4028c3c:	ac400007 	ldb	r17,0(r21)
 4028c40:	003d2906 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028c44:	94800054 	ori	r18,r18,1
 4028c48:	ac400007 	ldb	r17,0(r21)
 4028c4c:	003d2606 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028c50:	18c03fcc 	andi	r3,r3,255
 4028c54:	183e0526 	beq	r3,zero,402846c <__flash_rwdata_start+0xffff2200>
 4028c58:	d9c02785 	stb	r7,158(sp)
 4028c5c:	003e0306 	br	402846c <__flash_rwdata_start+0xffff2200>
 4028c60:	94801014 	ori	r18,r18,64
 4028c64:	ac400007 	ldb	r17,0(r21)
 4028c68:	003d1f06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028c6c:	ac400007 	ldb	r17,0(r21)
 4028c70:	8a438726 	beq	r17,r9,4029a90 <___vfprintf_internal_r+0x1b2c>
 4028c74:	94800414 	ori	r18,r18,16
 4028c78:	003d1b06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4028c7c:	18c03fcc 	andi	r3,r3,255
 4028c80:	1805341e 	bne	r3,zero,402a154 <___vfprintf_internal_r+0x21f0>
 4028c84:	9080080c 	andi	r2,r18,32
 4028c88:	1002cd26 	beq	r2,zero,40297c0 <___vfprintf_internal_r+0x185c>
 4028c8c:	d9402d17 	ldw	r5,180(sp)
 4028c90:	d9002f17 	ldw	r4,188(sp)
 4028c94:	28800017 	ldw	r2,0(r5)
 4028c98:	2007d7fa 	srai	r3,r4,31
 4028c9c:	29400104 	addi	r5,r5,4
 4028ca0:	d9402d15 	stw	r5,180(sp)
 4028ca4:	11000015 	stw	r4,0(r2)
 4028ca8:	10c00115 	stw	r3,4(r2)
 4028cac:	003ce506 	br	4028044 <__flash_rwdata_start+0xffff1dd8>
 4028cb0:	d8c02d17 	ldw	r3,180(sp)
 4028cb4:	d9002d17 	ldw	r4,180(sp)
 4028cb8:	d8002785 	stb	zero,158(sp)
 4028cbc:	18800017 	ldw	r2,0(r3)
 4028cc0:	21000104 	addi	r4,r4,4
 4028cc4:	00c00044 	movi	r3,1
 4028cc8:	d8c02a15 	stw	r3,168(sp)
 4028ccc:	d8801405 	stb	r2,80(sp)
 4028cd0:	d9002d15 	stw	r4,180(sp)
 4028cd4:	d8c02e15 	stw	r3,184(sp)
 4028cd8:	d8002915 	stw	zero,164(sp)
 4028cdc:	d8003215 	stw	zero,200(sp)
 4028ce0:	dc001404 	addi	r16,sp,80
 4028ce4:	0039883a 	mov	fp,zero
 4028ce8:	003e7206 	br	40286b4 <__flash_rwdata_start+0xffff2448>
 4028cec:	01000034 	movhi	r4,0
 4028cf0:	21013204 	addi	r4,r4,1224
 4028cf4:	0039883a 	mov	fp,zero
 4028cf8:	d9003915 	stw	r4,228(sp)
 4028cfc:	04401e04 	movi	r17,120
 4028d00:	003f8206 	br	4028b0c <__flash_rwdata_start+0xffff28a0>
 4028d04:	18c03fcc 	andi	r3,r3,255
 4028d08:	1805061e 	bne	r3,zero,402a124 <___vfprintf_internal_r+0x21c0>
 4028d0c:	883d9126 	beq	r17,zero,4028354 <__flash_rwdata_start+0xffff20e8>
 4028d10:	00c00044 	movi	r3,1
 4028d14:	d8c02a15 	stw	r3,168(sp)
 4028d18:	dc401405 	stb	r17,80(sp)
 4028d1c:	d8002785 	stb	zero,158(sp)
 4028d20:	003fec06 	br	4028cd4 <__flash_rwdata_start+0xffff2a68>
 4028d24:	01400034 	movhi	r5,0
 4028d28:	29413204 	addi	r5,r5,1224
 4028d2c:	d9403915 	stw	r5,228(sp)
 4028d30:	d8c02d15 	stw	r3,180(sp)
 4028d34:	1025883a 	mov	r18,r2
 4028d38:	04401e04 	movi	r17,120
 4028d3c:	9d84b03a 	or	r2,r19,r22
 4028d40:	1000fc1e 	bne	r2,zero,4029134 <___vfprintf_internal_r+0x11d0>
 4028d44:	0039883a 	mov	fp,zero
 4028d48:	00800084 	movi	r2,2
 4028d4c:	10803fcc 	andi	r2,r2,255
 4028d50:	00c00044 	movi	r3,1
 4028d54:	10c20f26 	beq	r2,r3,4029594 <___vfprintf_internal_r+0x1630>
 4028d58:	00c00084 	movi	r3,2
 4028d5c:	10fd6326 	beq	r2,r3,40282ec <__flash_rwdata_start+0xffff2080>
 4028d60:	003e2d06 	br	4028618 <__flash_rwdata_start+0xffff23ac>
 4028d64:	d8c02017 	ldw	r3,128(sp)
 4028d68:	003e9306 	br	40287b8 <__flash_rwdata_start+0xffff254c>
 4028d6c:	00801944 	movi	r2,101
 4028d70:	14407e0e 	bge	r2,r17,4028f6c <___vfprintf_internal_r+0x1008>
 4028d74:	d9003617 	ldw	r4,216(sp)
 4028d78:	d9403817 	ldw	r5,224(sp)
 4028d7c:	000d883a 	mov	r6,zero
 4028d80:	000f883a 	mov	r7,zero
 4028d84:	d8c03c15 	stw	r3,240(sp)
 4028d88:	da003d15 	stw	r8,244(sp)
 4028d8c:	4031ea00 	call	4031ea0 <__eqdf2>
 4028d90:	d8c03c17 	ldw	r3,240(sp)
 4028d94:	da003d17 	ldw	r8,244(sp)
 4028d98:	1000f71e 	bne	r2,zero,4029178 <___vfprintf_internal_r+0x1214>
 4028d9c:	d8801f17 	ldw	r2,124(sp)
 4028da0:	01000034 	movhi	r4,0
 4028da4:	21013904 	addi	r4,r4,1252
 4028da8:	18c00044 	addi	r3,r3,1
 4028dac:	10800044 	addi	r2,r2,1
 4028db0:	41000015 	stw	r4,0(r8)
 4028db4:	01000044 	movi	r4,1
 4028db8:	41000115 	stw	r4,4(r8)
 4028dbc:	d8c02015 	stw	r3,128(sp)
 4028dc0:	d8801f15 	stw	r2,124(sp)
 4028dc4:	010001c4 	movi	r4,7
 4028dc8:	2082b816 	blt	r4,r2,40298ac <___vfprintf_internal_r+0x1948>
 4028dcc:	42000204 	addi	r8,r8,8
 4028dd0:	d8802617 	ldw	r2,152(sp)
 4028dd4:	d9403317 	ldw	r5,204(sp)
 4028dd8:	11400216 	blt	r2,r5,4028de4 <___vfprintf_internal_r+0xe80>
 4028ddc:	9080004c 	andi	r2,r18,1
 4028de0:	103ed526 	beq	r2,zero,4028938 <__flash_rwdata_start+0xffff26cc>
 4028de4:	d8803717 	ldw	r2,220(sp)
 4028de8:	d9003417 	ldw	r4,208(sp)
 4028dec:	d9403717 	ldw	r5,220(sp)
 4028df0:	1887883a 	add	r3,r3,r2
 4028df4:	d8801f17 	ldw	r2,124(sp)
 4028df8:	41000015 	stw	r4,0(r8)
 4028dfc:	41400115 	stw	r5,4(r8)
 4028e00:	10800044 	addi	r2,r2,1
 4028e04:	d8c02015 	stw	r3,128(sp)
 4028e08:	d8801f15 	stw	r2,124(sp)
 4028e0c:	010001c4 	movi	r4,7
 4028e10:	20832916 	blt	r4,r2,4029ab8 <___vfprintf_internal_r+0x1b54>
 4028e14:	42000204 	addi	r8,r8,8
 4028e18:	d8803317 	ldw	r2,204(sp)
 4028e1c:	143fffc4 	addi	r16,r2,-1
 4028e20:	043ec50e 	bge	zero,r16,4028938 <__flash_rwdata_start+0xffff26cc>
 4028e24:	04400404 	movi	r17,16
 4028e28:	d8801f17 	ldw	r2,124(sp)
 4028e2c:	8c00880e 	bge	r17,r16,4029050 <___vfprintf_internal_r+0x10ec>
 4028e30:	01400034 	movhi	r5,0
 4028e34:	29413984 	addi	r5,r5,1254
 4028e38:	d9402b15 	stw	r5,172(sp)
 4028e3c:	058001c4 	movi	r22,7
 4028e40:	dcc02c17 	ldw	r19,176(sp)
 4028e44:	00000306 	br	4028e54 <___vfprintf_internal_r+0xef0>
 4028e48:	42000204 	addi	r8,r8,8
 4028e4c:	843ffc04 	addi	r16,r16,-16
 4028e50:	8c00820e 	bge	r17,r16,402905c <___vfprintf_internal_r+0x10f8>
 4028e54:	18c00404 	addi	r3,r3,16
 4028e58:	10800044 	addi	r2,r2,1
 4028e5c:	45000015 	stw	r20,0(r8)
 4028e60:	44400115 	stw	r17,4(r8)
 4028e64:	d8c02015 	stw	r3,128(sp)
 4028e68:	d8801f15 	stw	r2,124(sp)
 4028e6c:	b0bff60e 	bge	r22,r2,4028e48 <__flash_rwdata_start+0xffff2bdc>
 4028e70:	d9801e04 	addi	r6,sp,120
 4028e74:	b80b883a 	mov	r5,r23
 4028e78:	9809883a 	mov	r4,r19
 4028e7c:	402ec640 	call	402ec64 <__sprint_r>
 4028e80:	103d3a1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4028e84:	d8c02017 	ldw	r3,128(sp)
 4028e88:	d8801f17 	ldw	r2,124(sp)
 4028e8c:	da000404 	addi	r8,sp,16
 4028e90:	003fee06 	br	4028e4c <__flash_rwdata_start+0xffff2be0>
 4028e94:	d9403117 	ldw	r5,196(sp)
 4028e98:	d8802a17 	ldw	r2,168(sp)
 4028e9c:	28adc83a 	sub	r22,r5,r2
 4028ea0:	05be630e 	bge	zero,r22,4028830 <__flash_rwdata_start+0xffff25c4>
 4028ea4:	07000404 	movi	fp,16
 4028ea8:	d8801f17 	ldw	r2,124(sp)
 4028eac:	e5838f0e 	bge	fp,r22,4029cec <___vfprintf_internal_r+0x1d88>
 4028eb0:	01400034 	movhi	r5,0
 4028eb4:	29413984 	addi	r5,r5,1254
 4028eb8:	dc403015 	stw	r17,192(sp)
 4028ebc:	d9402b15 	stw	r5,172(sp)
 4028ec0:	b023883a 	mov	r17,r22
 4028ec4:	04c001c4 	movi	r19,7
 4028ec8:	a82d883a 	mov	r22,r21
 4028ecc:	902b883a 	mov	r21,r18
 4028ed0:	8025883a 	mov	r18,r16
 4028ed4:	dc002c17 	ldw	r16,176(sp)
 4028ed8:	00000306 	br	4028ee8 <___vfprintf_internal_r+0xf84>
 4028edc:	8c7ffc04 	addi	r17,r17,-16
 4028ee0:	42000204 	addi	r8,r8,8
 4028ee4:	e440110e 	bge	fp,r17,4028f2c <___vfprintf_internal_r+0xfc8>
 4028ee8:	18c00404 	addi	r3,r3,16
 4028eec:	10800044 	addi	r2,r2,1
 4028ef0:	45000015 	stw	r20,0(r8)
 4028ef4:	47000115 	stw	fp,4(r8)
 4028ef8:	d8c02015 	stw	r3,128(sp)
 4028efc:	d8801f15 	stw	r2,124(sp)
 4028f00:	98bff60e 	bge	r19,r2,4028edc <__flash_rwdata_start+0xffff2c70>
 4028f04:	d9801e04 	addi	r6,sp,120
 4028f08:	b80b883a 	mov	r5,r23
 4028f0c:	8009883a 	mov	r4,r16
 4028f10:	402ec640 	call	402ec64 <__sprint_r>
 4028f14:	103d151e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4028f18:	8c7ffc04 	addi	r17,r17,-16
 4028f1c:	d8c02017 	ldw	r3,128(sp)
 4028f20:	d8801f17 	ldw	r2,124(sp)
 4028f24:	da000404 	addi	r8,sp,16
 4028f28:	e47fef16 	blt	fp,r17,4028ee8 <__flash_rwdata_start+0xffff2c7c>
 4028f2c:	9021883a 	mov	r16,r18
 4028f30:	a825883a 	mov	r18,r21
 4028f34:	b02b883a 	mov	r21,r22
 4028f38:	882d883a 	mov	r22,r17
 4028f3c:	dc403017 	ldw	r17,192(sp)
 4028f40:	d9002b17 	ldw	r4,172(sp)
 4028f44:	1d87883a 	add	r3,r3,r22
 4028f48:	10800044 	addi	r2,r2,1
 4028f4c:	41000015 	stw	r4,0(r8)
 4028f50:	45800115 	stw	r22,4(r8)
 4028f54:	d8c02015 	stw	r3,128(sp)
 4028f58:	d8801f15 	stw	r2,124(sp)
 4028f5c:	010001c4 	movi	r4,7
 4028f60:	20818e16 	blt	r4,r2,402959c <___vfprintf_internal_r+0x1638>
 4028f64:	42000204 	addi	r8,r8,8
 4028f68:	003e3106 	br	4028830 <__flash_rwdata_start+0xffff25c4>
 4028f6c:	d9403317 	ldw	r5,204(sp)
 4028f70:	00800044 	movi	r2,1
 4028f74:	18c00044 	addi	r3,r3,1
 4028f78:	1141530e 	bge	r2,r5,40294c8 <___vfprintf_internal_r+0x1564>
 4028f7c:	dc401f17 	ldw	r17,124(sp)
 4028f80:	00800044 	movi	r2,1
 4028f84:	40800115 	stw	r2,4(r8)
 4028f88:	8c400044 	addi	r17,r17,1
 4028f8c:	44000015 	stw	r16,0(r8)
 4028f90:	d8c02015 	stw	r3,128(sp)
 4028f94:	dc401f15 	stw	r17,124(sp)
 4028f98:	008001c4 	movi	r2,7
 4028f9c:	14416b16 	blt	r2,r17,402954c <___vfprintf_internal_r+0x15e8>
 4028fa0:	42000204 	addi	r8,r8,8
 4028fa4:	d8803717 	ldw	r2,220(sp)
 4028fa8:	d9003417 	ldw	r4,208(sp)
 4028fac:	8c400044 	addi	r17,r17,1
 4028fb0:	10c7883a 	add	r3,r2,r3
 4028fb4:	40800115 	stw	r2,4(r8)
 4028fb8:	41000015 	stw	r4,0(r8)
 4028fbc:	d8c02015 	stw	r3,128(sp)
 4028fc0:	dc401f15 	stw	r17,124(sp)
 4028fc4:	008001c4 	movi	r2,7
 4028fc8:	14416916 	blt	r2,r17,4029570 <___vfprintf_internal_r+0x160c>
 4028fcc:	45800204 	addi	r22,r8,8
 4028fd0:	d9003617 	ldw	r4,216(sp)
 4028fd4:	d9403817 	ldw	r5,224(sp)
 4028fd8:	000d883a 	mov	r6,zero
 4028fdc:	000f883a 	mov	r7,zero
 4028fe0:	d8c03c15 	stw	r3,240(sp)
 4028fe4:	4031ea00 	call	4031ea0 <__eqdf2>
 4028fe8:	d8c03c17 	ldw	r3,240(sp)
 4028fec:	1000bc26 	beq	r2,zero,40292e0 <___vfprintf_internal_r+0x137c>
 4028ff0:	d9403317 	ldw	r5,204(sp)
 4028ff4:	84000044 	addi	r16,r16,1
 4028ff8:	8c400044 	addi	r17,r17,1
 4028ffc:	28bfffc4 	addi	r2,r5,-1
 4029000:	1887883a 	add	r3,r3,r2
 4029004:	b0800115 	stw	r2,4(r22)
 4029008:	b4000015 	stw	r16,0(r22)
 402900c:	d8c02015 	stw	r3,128(sp)
 4029010:	dc401f15 	stw	r17,124(sp)
 4029014:	008001c4 	movi	r2,7
 4029018:	14414316 	blt	r2,r17,4029528 <___vfprintf_internal_r+0x15c4>
 402901c:	b5800204 	addi	r22,r22,8
 4029020:	d9003a17 	ldw	r4,232(sp)
 4029024:	df0022c4 	addi	fp,sp,139
 4029028:	8c400044 	addi	r17,r17,1
 402902c:	20c7883a 	add	r3,r4,r3
 4029030:	b7000015 	stw	fp,0(r22)
 4029034:	b1000115 	stw	r4,4(r22)
 4029038:	d8c02015 	stw	r3,128(sp)
 402903c:	dc401f15 	stw	r17,124(sp)
 4029040:	008001c4 	movi	r2,7
 4029044:	14400e16 	blt	r2,r17,4029080 <___vfprintf_internal_r+0x111c>
 4029048:	b2000204 	addi	r8,r22,8
 402904c:	003e3a06 	br	4028938 <__flash_rwdata_start+0xffff26cc>
 4029050:	01000034 	movhi	r4,0
 4029054:	21013984 	addi	r4,r4,1254
 4029058:	d9002b15 	stw	r4,172(sp)
 402905c:	d9002b17 	ldw	r4,172(sp)
 4029060:	1c07883a 	add	r3,r3,r16
 4029064:	44000115 	stw	r16,4(r8)
 4029068:	41000015 	stw	r4,0(r8)
 402906c:	10800044 	addi	r2,r2,1
 4029070:	d8c02015 	stw	r3,128(sp)
 4029074:	d8801f15 	stw	r2,124(sp)
 4029078:	010001c4 	movi	r4,7
 402907c:	20be2d0e 	bge	r4,r2,4028934 <__flash_rwdata_start+0xffff26c8>
 4029080:	d9002c17 	ldw	r4,176(sp)
 4029084:	d9801e04 	addi	r6,sp,120
 4029088:	b80b883a 	mov	r5,r23
 402908c:	402ec640 	call	402ec64 <__sprint_r>
 4029090:	103cb61e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029094:	d8c02017 	ldw	r3,128(sp)
 4029098:	da000404 	addi	r8,sp,16
 402909c:	003e2606 	br	4028938 <__flash_rwdata_start+0xffff26cc>
 40290a0:	d9002c17 	ldw	r4,176(sp)
 40290a4:	d9801e04 	addi	r6,sp,120
 40290a8:	b80b883a 	mov	r5,r23
 40290ac:	402ec640 	call	402ec64 <__sprint_r>
 40290b0:	103e5d26 	beq	r2,zero,4028a28 <__flash_rwdata_start+0xffff27bc>
 40290b4:	003cad06 	br	402836c <__flash_rwdata_start+0xffff2100>
 40290b8:	d9002c17 	ldw	r4,176(sp)
 40290bc:	d9801e04 	addi	r6,sp,120
 40290c0:	b80b883a 	mov	r5,r23
 40290c4:	402ec640 	call	402ec64 <__sprint_r>
 40290c8:	103ca81e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40290cc:	d8c02017 	ldw	r3,128(sp)
 40290d0:	da000404 	addi	r8,sp,16
 40290d4:	003e0b06 	br	4028904 <__flash_rwdata_start+0xffff2698>
 40290d8:	d9002c17 	ldw	r4,176(sp)
 40290dc:	d9801e04 	addi	r6,sp,120
 40290e0:	b80b883a 	mov	r5,r23
 40290e4:	402ec640 	call	402ec64 <__sprint_r>
 40290e8:	103ca01e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40290ec:	d8c02017 	ldw	r3,128(sp)
 40290f0:	da000404 	addi	r8,sp,16
 40290f4:	003dbd06 	br	40287ec <__flash_rwdata_start+0xffff2580>
 40290f8:	d9002c17 	ldw	r4,176(sp)
 40290fc:	d9801e04 	addi	r6,sp,120
 4029100:	b80b883a 	mov	r5,r23
 4029104:	402ec640 	call	402ec64 <__sprint_r>
 4029108:	103c981e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 402910c:	d8c02017 	ldw	r3,128(sp)
 4029110:	da000404 	addi	r8,sp,16
 4029114:	003dc306 	br	4028824 <__flash_rwdata_start+0xffff25b8>
 4029118:	d8802917 	ldw	r2,164(sp)
 402911c:	d8002785 	stb	zero,158(sp)
 4029120:	103f0616 	blt	r2,zero,4028d3c <__flash_rwdata_start+0xffff2ad0>
 4029124:	00ffdfc4 	movi	r3,-129
 4029128:	9d84b03a 	or	r2,r19,r22
 402912c:	90e4703a 	and	r18,r18,r3
 4029130:	103c6b26 	beq	r2,zero,40282e0 <__flash_rwdata_start+0xffff2074>
 4029134:	0039883a 	mov	fp,zero
 4029138:	003e7406 	br	4028b0c <__flash_rwdata_start+0xffff28a0>
 402913c:	9080040c 	andi	r2,r18,16
 4029140:	1001b326 	beq	r2,zero,4029810 <___vfprintf_internal_r+0x18ac>
 4029144:	d9002d17 	ldw	r4,180(sp)
 4029148:	d9402917 	ldw	r5,164(sp)
 402914c:	d8002785 	stb	zero,158(sp)
 4029150:	20800104 	addi	r2,r4,4
 4029154:	24c00017 	ldw	r19,0(r4)
 4029158:	002d883a 	mov	r22,zero
 402915c:	2801b516 	blt	r5,zero,4029834 <___vfprintf_internal_r+0x18d0>
 4029160:	00ffdfc4 	movi	r3,-129
 4029164:	d8802d15 	stw	r2,180(sp)
 4029168:	90e4703a 	and	r18,r18,r3
 402916c:	983d2726 	beq	r19,zero,402860c <__flash_rwdata_start+0xffff23a0>
 4029170:	0039883a 	mov	fp,zero
 4029174:	003d2a06 	br	4028620 <__flash_rwdata_start+0xffff23b4>
 4029178:	dc402617 	ldw	r17,152(sp)
 402917c:	0441d30e 	bge	zero,r17,40298cc <___vfprintf_internal_r+0x1968>
 4029180:	dc403217 	ldw	r17,200(sp)
 4029184:	d8803317 	ldw	r2,204(sp)
 4029188:	1440010e 	bge	r2,r17,4029190 <___vfprintf_internal_r+0x122c>
 402918c:	1023883a 	mov	r17,r2
 4029190:	04400a0e 	bge	zero,r17,40291bc <___vfprintf_internal_r+0x1258>
 4029194:	d8801f17 	ldw	r2,124(sp)
 4029198:	1c47883a 	add	r3,r3,r17
 402919c:	44000015 	stw	r16,0(r8)
 40291a0:	10800044 	addi	r2,r2,1
 40291a4:	44400115 	stw	r17,4(r8)
 40291a8:	d8c02015 	stw	r3,128(sp)
 40291ac:	d8801f15 	stw	r2,124(sp)
 40291b0:	010001c4 	movi	r4,7
 40291b4:	20826516 	blt	r4,r2,4029b4c <___vfprintf_internal_r+0x1be8>
 40291b8:	42000204 	addi	r8,r8,8
 40291bc:	88026116 	blt	r17,zero,4029b44 <___vfprintf_internal_r+0x1be0>
 40291c0:	d9003217 	ldw	r4,200(sp)
 40291c4:	2463c83a 	sub	r17,r4,r17
 40291c8:	04407b0e 	bge	zero,r17,40293b8 <___vfprintf_internal_r+0x1454>
 40291cc:	05800404 	movi	r22,16
 40291d0:	d8801f17 	ldw	r2,124(sp)
 40291d4:	b4419d0e 	bge	r22,r17,402984c <___vfprintf_internal_r+0x18e8>
 40291d8:	01000034 	movhi	r4,0
 40291dc:	21013984 	addi	r4,r4,1254
 40291e0:	d9002b15 	stw	r4,172(sp)
 40291e4:	070001c4 	movi	fp,7
 40291e8:	dcc02c17 	ldw	r19,176(sp)
 40291ec:	00000306 	br	40291fc <___vfprintf_internal_r+0x1298>
 40291f0:	42000204 	addi	r8,r8,8
 40291f4:	8c7ffc04 	addi	r17,r17,-16
 40291f8:	b441970e 	bge	r22,r17,4029858 <___vfprintf_internal_r+0x18f4>
 40291fc:	18c00404 	addi	r3,r3,16
 4029200:	10800044 	addi	r2,r2,1
 4029204:	45000015 	stw	r20,0(r8)
 4029208:	45800115 	stw	r22,4(r8)
 402920c:	d8c02015 	stw	r3,128(sp)
 4029210:	d8801f15 	stw	r2,124(sp)
 4029214:	e0bff60e 	bge	fp,r2,40291f0 <__flash_rwdata_start+0xffff2f84>
 4029218:	d9801e04 	addi	r6,sp,120
 402921c:	b80b883a 	mov	r5,r23
 4029220:	9809883a 	mov	r4,r19
 4029224:	402ec640 	call	402ec64 <__sprint_r>
 4029228:	103c501e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 402922c:	d8c02017 	ldw	r3,128(sp)
 4029230:	d8801f17 	ldw	r2,124(sp)
 4029234:	da000404 	addi	r8,sp,16
 4029238:	003fee06 	br	40291f4 <__flash_rwdata_start+0xffff2f88>
 402923c:	d9002c17 	ldw	r4,176(sp)
 4029240:	d9801e04 	addi	r6,sp,120
 4029244:	b80b883a 	mov	r5,r23
 4029248:	402ec640 	call	402ec64 <__sprint_r>
 402924c:	103c471e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029250:	d8c02017 	ldw	r3,128(sp)
 4029254:	df002787 	ldb	fp,158(sp)
 4029258:	da000404 	addi	r8,sp,16
 402925c:	003d5606 	br	40287b8 <__flash_rwdata_start+0xffff254c>
 4029260:	9080040c 	andi	r2,r18,16
 4029264:	10016126 	beq	r2,zero,40297ec <___vfprintf_internal_r+0x1888>
 4029268:	d8802d17 	ldw	r2,180(sp)
 402926c:	14c00017 	ldw	r19,0(r2)
 4029270:	10800104 	addi	r2,r2,4
 4029274:	d8802d15 	stw	r2,180(sp)
 4029278:	982dd7fa 	srai	r22,r19,31
 402927c:	b005883a 	mov	r2,r22
 4029280:	003c8206 	br	402848c <__flash_rwdata_start+0xffff2220>
 4029284:	9080040c 	andi	r2,r18,16
 4029288:	10003526 	beq	r2,zero,4029360 <___vfprintf_internal_r+0x13fc>
 402928c:	d9402d17 	ldw	r5,180(sp)
 4029290:	d8c02917 	ldw	r3,164(sp)
 4029294:	d8002785 	stb	zero,158(sp)
 4029298:	28800104 	addi	r2,r5,4
 402929c:	2cc00017 	ldw	r19,0(r5)
 40292a0:	002d883a 	mov	r22,zero
 40292a4:	18003716 	blt	r3,zero,4029384 <___vfprintf_internal_r+0x1420>
 40292a8:	00ffdfc4 	movi	r3,-129
 40292ac:	d8802d15 	stw	r2,180(sp)
 40292b0:	90e4703a 	and	r18,r18,r3
 40292b4:	0039883a 	mov	fp,zero
 40292b8:	983df326 	beq	r19,zero,4028a88 <__flash_rwdata_start+0xffff281c>
 40292bc:	00800244 	movi	r2,9
 40292c0:	14fc7b36 	bltu	r2,r19,40284b0 <__flash_rwdata_start+0xffff2244>
 40292c4:	d8c02817 	ldw	r3,160(sp)
 40292c8:	dc001dc4 	addi	r16,sp,119
 40292cc:	9cc00c04 	addi	r19,r19,48
 40292d0:	1c07c83a 	sub	r3,r3,r16
 40292d4:	dcc01dc5 	stb	r19,119(sp)
 40292d8:	d8c02e15 	stw	r3,184(sp)
 40292dc:	003ce806 	br	4028680 <__flash_rwdata_start+0xffff2414>
 40292e0:	d8803317 	ldw	r2,204(sp)
 40292e4:	143fffc4 	addi	r16,r2,-1
 40292e8:	043f4d0e 	bge	zero,r16,4029020 <__flash_rwdata_start+0xffff2db4>
 40292ec:	07000404 	movi	fp,16
 40292f0:	e400810e 	bge	fp,r16,40294f8 <___vfprintf_internal_r+0x1594>
 40292f4:	01400034 	movhi	r5,0
 40292f8:	29413984 	addi	r5,r5,1254
 40292fc:	d9402b15 	stw	r5,172(sp)
 4029300:	01c001c4 	movi	r7,7
 4029304:	dcc02c17 	ldw	r19,176(sp)
 4029308:	00000306 	br	4029318 <___vfprintf_internal_r+0x13b4>
 402930c:	b5800204 	addi	r22,r22,8
 4029310:	843ffc04 	addi	r16,r16,-16
 4029314:	e4007b0e 	bge	fp,r16,4029504 <___vfprintf_internal_r+0x15a0>
 4029318:	18c00404 	addi	r3,r3,16
 402931c:	8c400044 	addi	r17,r17,1
 4029320:	b5000015 	stw	r20,0(r22)
 4029324:	b7000115 	stw	fp,4(r22)
 4029328:	d8c02015 	stw	r3,128(sp)
 402932c:	dc401f15 	stw	r17,124(sp)
 4029330:	3c7ff60e 	bge	r7,r17,402930c <__flash_rwdata_start+0xffff30a0>
 4029334:	d9801e04 	addi	r6,sp,120
 4029338:	b80b883a 	mov	r5,r23
 402933c:	9809883a 	mov	r4,r19
 4029340:	d9c03c15 	stw	r7,240(sp)
 4029344:	402ec640 	call	402ec64 <__sprint_r>
 4029348:	d9c03c17 	ldw	r7,240(sp)
 402934c:	103c071e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029350:	d8c02017 	ldw	r3,128(sp)
 4029354:	dc401f17 	ldw	r17,124(sp)
 4029358:	dd800404 	addi	r22,sp,16
 402935c:	003fec06 	br	4029310 <__flash_rwdata_start+0xffff30a4>
 4029360:	9080100c 	andi	r2,r18,64
 4029364:	d8002785 	stb	zero,158(sp)
 4029368:	10010e26 	beq	r2,zero,40297a4 <___vfprintf_internal_r+0x1840>
 402936c:	d9002d17 	ldw	r4,180(sp)
 4029370:	d9402917 	ldw	r5,164(sp)
 4029374:	002d883a 	mov	r22,zero
 4029378:	20800104 	addi	r2,r4,4
 402937c:	24c0000b 	ldhu	r19,0(r4)
 4029380:	283fc90e 	bge	r5,zero,40292a8 <__flash_rwdata_start+0xffff303c>
 4029384:	d8802d15 	stw	r2,180(sp)
 4029388:	0039883a 	mov	fp,zero
 402938c:	9d84b03a 	or	r2,r19,r22
 4029390:	103c461e 	bne	r2,zero,40284ac <__flash_rwdata_start+0xffff2240>
 4029394:	00800044 	movi	r2,1
 4029398:	003e6c06 	br	4028d4c <__flash_rwdata_start+0xffff2ae0>
 402939c:	d9002c17 	ldw	r4,176(sp)
 40293a0:	d9801e04 	addi	r6,sp,120
 40293a4:	b80b883a 	mov	r5,r23
 40293a8:	402ec640 	call	402ec64 <__sprint_r>
 40293ac:	103bef1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40293b0:	d8c02017 	ldw	r3,128(sp)
 40293b4:	da000404 	addi	r8,sp,16
 40293b8:	d9003217 	ldw	r4,200(sp)
 40293bc:	d8802617 	ldw	r2,152(sp)
 40293c0:	d9403317 	ldw	r5,204(sp)
 40293c4:	8123883a 	add	r17,r16,r4
 40293c8:	11400216 	blt	r2,r5,40293d4 <___vfprintf_internal_r+0x1470>
 40293cc:	9100004c 	andi	r4,r18,1
 40293d0:	20000d26 	beq	r4,zero,4029408 <___vfprintf_internal_r+0x14a4>
 40293d4:	d9003717 	ldw	r4,220(sp)
 40293d8:	d9403417 	ldw	r5,208(sp)
 40293dc:	1907883a 	add	r3,r3,r4
 40293e0:	d9001f17 	ldw	r4,124(sp)
 40293e4:	41400015 	stw	r5,0(r8)
 40293e8:	d9403717 	ldw	r5,220(sp)
 40293ec:	21000044 	addi	r4,r4,1
 40293f0:	d8c02015 	stw	r3,128(sp)
 40293f4:	41400115 	stw	r5,4(r8)
 40293f8:	d9001f15 	stw	r4,124(sp)
 40293fc:	014001c4 	movi	r5,7
 4029400:	2901e816 	blt	r5,r4,4029ba4 <___vfprintf_internal_r+0x1c40>
 4029404:	42000204 	addi	r8,r8,8
 4029408:	d9003317 	ldw	r4,204(sp)
 402940c:	8121883a 	add	r16,r16,r4
 4029410:	2085c83a 	sub	r2,r4,r2
 4029414:	8461c83a 	sub	r16,r16,r17
 4029418:	1400010e 	bge	r2,r16,4029420 <___vfprintf_internal_r+0x14bc>
 402941c:	1021883a 	mov	r16,r2
 4029420:	04000a0e 	bge	zero,r16,402944c <___vfprintf_internal_r+0x14e8>
 4029424:	d9001f17 	ldw	r4,124(sp)
 4029428:	1c07883a 	add	r3,r3,r16
 402942c:	44400015 	stw	r17,0(r8)
 4029430:	21000044 	addi	r4,r4,1
 4029434:	44000115 	stw	r16,4(r8)
 4029438:	d8c02015 	stw	r3,128(sp)
 402943c:	d9001f15 	stw	r4,124(sp)
 4029440:	014001c4 	movi	r5,7
 4029444:	2901fb16 	blt	r5,r4,4029c34 <___vfprintf_internal_r+0x1cd0>
 4029448:	42000204 	addi	r8,r8,8
 402944c:	8001f716 	blt	r16,zero,4029c2c <___vfprintf_internal_r+0x1cc8>
 4029450:	1421c83a 	sub	r16,r2,r16
 4029454:	043d380e 	bge	zero,r16,4028938 <__flash_rwdata_start+0xffff26cc>
 4029458:	04400404 	movi	r17,16
 402945c:	d8801f17 	ldw	r2,124(sp)
 4029460:	8c3efb0e 	bge	r17,r16,4029050 <__flash_rwdata_start+0xffff2de4>
 4029464:	01400034 	movhi	r5,0
 4029468:	29413984 	addi	r5,r5,1254
 402946c:	d9402b15 	stw	r5,172(sp)
 4029470:	058001c4 	movi	r22,7
 4029474:	dcc02c17 	ldw	r19,176(sp)
 4029478:	00000306 	br	4029488 <___vfprintf_internal_r+0x1524>
 402947c:	42000204 	addi	r8,r8,8
 4029480:	843ffc04 	addi	r16,r16,-16
 4029484:	8c3ef50e 	bge	r17,r16,402905c <__flash_rwdata_start+0xffff2df0>
 4029488:	18c00404 	addi	r3,r3,16
 402948c:	10800044 	addi	r2,r2,1
 4029490:	45000015 	stw	r20,0(r8)
 4029494:	44400115 	stw	r17,4(r8)
 4029498:	d8c02015 	stw	r3,128(sp)
 402949c:	d8801f15 	stw	r2,124(sp)
 40294a0:	b0bff60e 	bge	r22,r2,402947c <__flash_rwdata_start+0xffff3210>
 40294a4:	d9801e04 	addi	r6,sp,120
 40294a8:	b80b883a 	mov	r5,r23
 40294ac:	9809883a 	mov	r4,r19
 40294b0:	402ec640 	call	402ec64 <__sprint_r>
 40294b4:	103bad1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40294b8:	d8c02017 	ldw	r3,128(sp)
 40294bc:	d8801f17 	ldw	r2,124(sp)
 40294c0:	da000404 	addi	r8,sp,16
 40294c4:	003fee06 	br	4029480 <__flash_rwdata_start+0xffff3214>
 40294c8:	9088703a 	and	r4,r18,r2
 40294cc:	203eab1e 	bne	r4,zero,4028f7c <__flash_rwdata_start+0xffff2d10>
 40294d0:	dc401f17 	ldw	r17,124(sp)
 40294d4:	40800115 	stw	r2,4(r8)
 40294d8:	44000015 	stw	r16,0(r8)
 40294dc:	8c400044 	addi	r17,r17,1
 40294e0:	d8c02015 	stw	r3,128(sp)
 40294e4:	dc401f15 	stw	r17,124(sp)
 40294e8:	008001c4 	movi	r2,7
 40294ec:	14400e16 	blt	r2,r17,4029528 <___vfprintf_internal_r+0x15c4>
 40294f0:	45800204 	addi	r22,r8,8
 40294f4:	003eca06 	br	4029020 <__flash_rwdata_start+0xffff2db4>
 40294f8:	01000034 	movhi	r4,0
 40294fc:	21013984 	addi	r4,r4,1254
 4029500:	d9002b15 	stw	r4,172(sp)
 4029504:	d8802b17 	ldw	r2,172(sp)
 4029508:	1c07883a 	add	r3,r3,r16
 402950c:	8c400044 	addi	r17,r17,1
 4029510:	b0800015 	stw	r2,0(r22)
 4029514:	b4000115 	stw	r16,4(r22)
 4029518:	d8c02015 	stw	r3,128(sp)
 402951c:	dc401f15 	stw	r17,124(sp)
 4029520:	008001c4 	movi	r2,7
 4029524:	147ebd0e 	bge	r2,r17,402901c <__flash_rwdata_start+0xffff2db0>
 4029528:	d9002c17 	ldw	r4,176(sp)
 402952c:	d9801e04 	addi	r6,sp,120
 4029530:	b80b883a 	mov	r5,r23
 4029534:	402ec640 	call	402ec64 <__sprint_r>
 4029538:	103b8c1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 402953c:	d8c02017 	ldw	r3,128(sp)
 4029540:	dc401f17 	ldw	r17,124(sp)
 4029544:	dd800404 	addi	r22,sp,16
 4029548:	003eb506 	br	4029020 <__flash_rwdata_start+0xffff2db4>
 402954c:	d9002c17 	ldw	r4,176(sp)
 4029550:	d9801e04 	addi	r6,sp,120
 4029554:	b80b883a 	mov	r5,r23
 4029558:	402ec640 	call	402ec64 <__sprint_r>
 402955c:	103b831e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029560:	d8c02017 	ldw	r3,128(sp)
 4029564:	dc401f17 	ldw	r17,124(sp)
 4029568:	da000404 	addi	r8,sp,16
 402956c:	003e8d06 	br	4028fa4 <__flash_rwdata_start+0xffff2d38>
 4029570:	d9002c17 	ldw	r4,176(sp)
 4029574:	d9801e04 	addi	r6,sp,120
 4029578:	b80b883a 	mov	r5,r23
 402957c:	402ec640 	call	402ec64 <__sprint_r>
 4029580:	103b7a1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029584:	d8c02017 	ldw	r3,128(sp)
 4029588:	dc401f17 	ldw	r17,124(sp)
 402958c:	dd800404 	addi	r22,sp,16
 4029590:	003e8f06 	br	4028fd0 <__flash_rwdata_start+0xffff2d64>
 4029594:	0027883a 	mov	r19,zero
 4029598:	003f4a06 	br	40292c4 <__flash_rwdata_start+0xffff3058>
 402959c:	d9002c17 	ldw	r4,176(sp)
 40295a0:	d9801e04 	addi	r6,sp,120
 40295a4:	b80b883a 	mov	r5,r23
 40295a8:	402ec640 	call	402ec64 <__sprint_r>
 40295ac:	103b6f1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40295b0:	d8c02017 	ldw	r3,128(sp)
 40295b4:	da000404 	addi	r8,sp,16
 40295b8:	003c9d06 	br	4028830 <__flash_rwdata_start+0xffff25c4>
 40295bc:	04e7c83a 	sub	r19,zero,r19
 40295c0:	9804c03a 	cmpne	r2,r19,zero
 40295c4:	05adc83a 	sub	r22,zero,r22
 40295c8:	b0adc83a 	sub	r22,r22,r2
 40295cc:	d8802917 	ldw	r2,164(sp)
 40295d0:	07000b44 	movi	fp,45
 40295d4:	df002785 	stb	fp,158(sp)
 40295d8:	10017b16 	blt	r2,zero,4029bc8 <___vfprintf_internal_r+0x1c64>
 40295dc:	00bfdfc4 	movi	r2,-129
 40295e0:	90a4703a 	and	r18,r18,r2
 40295e4:	003bb106 	br	40284ac <__flash_rwdata_start+0xffff2240>
 40295e8:	d9003617 	ldw	r4,216(sp)
 40295ec:	d9403817 	ldw	r5,224(sp)
 40295f0:	da003d15 	stw	r8,244(sp)
 40295f4:	402e9b80 	call	402e9b8 <__fpclassifyd>
 40295f8:	da003d17 	ldw	r8,244(sp)
 40295fc:	1000f026 	beq	r2,zero,40299c0 <___vfprintf_internal_r+0x1a5c>
 4029600:	d9002917 	ldw	r4,164(sp)
 4029604:	05bff7c4 	movi	r22,-33
 4029608:	00bfffc4 	movi	r2,-1
 402960c:	8dac703a 	and	r22,r17,r22
 4029610:	20820026 	beq	r4,r2,4029e14 <___vfprintf_internal_r+0x1eb0>
 4029614:	008011c4 	movi	r2,71
 4029618:	b081f726 	beq	r22,r2,4029df8 <___vfprintf_internal_r+0x1e94>
 402961c:	d9003817 	ldw	r4,224(sp)
 4029620:	90c04014 	ori	r3,r18,256
 4029624:	d8c02b15 	stw	r3,172(sp)
 4029628:	20021516 	blt	r4,zero,4029e80 <___vfprintf_internal_r+0x1f1c>
 402962c:	dcc03817 	ldw	r19,224(sp)
 4029630:	d8002a05 	stb	zero,168(sp)
 4029634:	00801984 	movi	r2,102
 4029638:	8881f926 	beq	r17,r2,4029e20 <___vfprintf_internal_r+0x1ebc>
 402963c:	00801184 	movi	r2,70
 4029640:	88821c26 	beq	r17,r2,4029eb4 <___vfprintf_internal_r+0x1f50>
 4029644:	00801144 	movi	r2,69
 4029648:	b081ef26 	beq	r22,r2,4029e08 <___vfprintf_internal_r+0x1ea4>
 402964c:	d8c02917 	ldw	r3,164(sp)
 4029650:	d8802104 	addi	r2,sp,132
 4029654:	d8800315 	stw	r2,12(sp)
 4029658:	d9403617 	ldw	r5,216(sp)
 402965c:	d8802504 	addi	r2,sp,148
 4029660:	d9002c17 	ldw	r4,176(sp)
 4029664:	d8800215 	stw	r2,8(sp)
 4029668:	d8802604 	addi	r2,sp,152
 402966c:	d8c00015 	stw	r3,0(sp)
 4029670:	d8800115 	stw	r2,4(sp)
 4029674:	01c00084 	movi	r7,2
 4029678:	980d883a 	mov	r6,r19
 402967c:	d8c03c15 	stw	r3,240(sp)
 4029680:	da003d15 	stw	r8,244(sp)
 4029684:	402a5880 	call	402a588 <_dtoa_r>
 4029688:	1021883a 	mov	r16,r2
 402968c:	008019c4 	movi	r2,103
 4029690:	d8c03c17 	ldw	r3,240(sp)
 4029694:	da003d17 	ldw	r8,244(sp)
 4029698:	88817126 	beq	r17,r2,4029c60 <___vfprintf_internal_r+0x1cfc>
 402969c:	008011c4 	movi	r2,71
 40296a0:	88829226 	beq	r17,r2,402a0ec <___vfprintf_internal_r+0x2188>
 40296a4:	80f9883a 	add	fp,r16,r3
 40296a8:	d9003617 	ldw	r4,216(sp)
 40296ac:	000d883a 	mov	r6,zero
 40296b0:	000f883a 	mov	r7,zero
 40296b4:	980b883a 	mov	r5,r19
 40296b8:	da003d15 	stw	r8,244(sp)
 40296bc:	4031ea00 	call	4031ea0 <__eqdf2>
 40296c0:	da003d17 	ldw	r8,244(sp)
 40296c4:	10018d26 	beq	r2,zero,4029cfc <___vfprintf_internal_r+0x1d98>
 40296c8:	d8802117 	ldw	r2,132(sp)
 40296cc:	1700062e 	bgeu	r2,fp,40296e8 <___vfprintf_internal_r+0x1784>
 40296d0:	01000c04 	movi	r4,48
 40296d4:	10c00044 	addi	r3,r2,1
 40296d8:	d8c02115 	stw	r3,132(sp)
 40296dc:	11000005 	stb	r4,0(r2)
 40296e0:	d8802117 	ldw	r2,132(sp)
 40296e4:	173ffb36 	bltu	r2,fp,40296d4 <__flash_rwdata_start+0xffff3468>
 40296e8:	1405c83a 	sub	r2,r2,r16
 40296ec:	d8803315 	stw	r2,204(sp)
 40296f0:	008011c4 	movi	r2,71
 40296f4:	b0817626 	beq	r22,r2,4029cd0 <___vfprintf_internal_r+0x1d6c>
 40296f8:	00801944 	movi	r2,101
 40296fc:	1442810e 	bge	r2,r17,402a104 <___vfprintf_internal_r+0x21a0>
 4029700:	d8c02617 	ldw	r3,152(sp)
 4029704:	00801984 	movi	r2,102
 4029708:	d8c03215 	stw	r3,200(sp)
 402970c:	8881fe26 	beq	r17,r2,4029f08 <___vfprintf_internal_r+0x1fa4>
 4029710:	d8c03217 	ldw	r3,200(sp)
 4029714:	d9003317 	ldw	r4,204(sp)
 4029718:	1901dd16 	blt	r3,r4,4029e90 <___vfprintf_internal_r+0x1f2c>
 402971c:	9480004c 	andi	r18,r18,1
 4029720:	90022b1e 	bne	r18,zero,4029fd0 <___vfprintf_internal_r+0x206c>
 4029724:	1805883a 	mov	r2,r3
 4029728:	18028016 	blt	r3,zero,402a12c <___vfprintf_internal_r+0x21c8>
 402972c:	d8c03217 	ldw	r3,200(sp)
 4029730:	044019c4 	movi	r17,103
 4029734:	d8c02e15 	stw	r3,184(sp)
 4029738:	df002a07 	ldb	fp,168(sp)
 402973c:	e001531e 	bne	fp,zero,4029c8c <___vfprintf_internal_r+0x1d28>
 4029740:	df002783 	ldbu	fp,158(sp)
 4029744:	d8802a15 	stw	r2,168(sp)
 4029748:	dc802b17 	ldw	r18,172(sp)
 402974c:	d8002915 	stw	zero,164(sp)
 4029750:	003bd106 	br	4028698 <__flash_rwdata_start+0xffff242c>
 4029754:	d8802d17 	ldw	r2,180(sp)
 4029758:	d8c02d17 	ldw	r3,180(sp)
 402975c:	d9002d17 	ldw	r4,180(sp)
 4029760:	10800017 	ldw	r2,0(r2)
 4029764:	18c00117 	ldw	r3,4(r3)
 4029768:	21000204 	addi	r4,r4,8
 402976c:	d8803615 	stw	r2,216(sp)
 4029770:	d8c03815 	stw	r3,224(sp)
 4029774:	d9002d15 	stw	r4,180(sp)
 4029778:	003b7506 	br	4028550 <__flash_rwdata_start+0xffff22e4>
 402977c:	ac400007 	ldb	r17,0(r21)
 4029780:	003a5906 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4029784:	9080100c 	andi	r2,r18,64
 4029788:	1000a826 	beq	r2,zero,4029a2c <___vfprintf_internal_r+0x1ac8>
 402978c:	d9002d17 	ldw	r4,180(sp)
 4029790:	002d883a 	mov	r22,zero
 4029794:	24c0000b 	ldhu	r19,0(r4)
 4029798:	21000104 	addi	r4,r4,4
 402979c:	d9002d15 	stw	r4,180(sp)
 40297a0:	003ccb06 	br	4028ad0 <__flash_rwdata_start+0xffff2864>
 40297a4:	d8c02d17 	ldw	r3,180(sp)
 40297a8:	d9002917 	ldw	r4,164(sp)
 40297ac:	002d883a 	mov	r22,zero
 40297b0:	18800104 	addi	r2,r3,4
 40297b4:	1cc00017 	ldw	r19,0(r3)
 40297b8:	203ebb0e 	bge	r4,zero,40292a8 <__flash_rwdata_start+0xffff303c>
 40297bc:	003ef106 	br	4029384 <__flash_rwdata_start+0xffff3118>
 40297c0:	9080040c 	andi	r2,r18,16
 40297c4:	1000921e 	bne	r2,zero,4029a10 <___vfprintf_internal_r+0x1aac>
 40297c8:	9480100c 	andi	r18,r18,64
 40297cc:	90013926 	beq	r18,zero,4029cb4 <___vfprintf_internal_r+0x1d50>
 40297d0:	d9002d17 	ldw	r4,180(sp)
 40297d4:	d9402f17 	ldw	r5,188(sp)
 40297d8:	20800017 	ldw	r2,0(r4)
 40297dc:	21000104 	addi	r4,r4,4
 40297e0:	d9002d15 	stw	r4,180(sp)
 40297e4:	1140000d 	sth	r5,0(r2)
 40297e8:	003a1606 	br	4028044 <__flash_rwdata_start+0xffff1dd8>
 40297ec:	9080100c 	andi	r2,r18,64
 40297f0:	10008026 	beq	r2,zero,40299f4 <___vfprintf_internal_r+0x1a90>
 40297f4:	d8c02d17 	ldw	r3,180(sp)
 40297f8:	1cc0000f 	ldh	r19,0(r3)
 40297fc:	18c00104 	addi	r3,r3,4
 4029800:	d8c02d15 	stw	r3,180(sp)
 4029804:	982dd7fa 	srai	r22,r19,31
 4029808:	b005883a 	mov	r2,r22
 402980c:	003b1f06 	br	402848c <__flash_rwdata_start+0xffff2220>
 4029810:	9080100c 	andi	r2,r18,64
 4029814:	d8002785 	stb	zero,158(sp)
 4029818:	10008a1e 	bne	r2,zero,4029a44 <___vfprintf_internal_r+0x1ae0>
 402981c:	d9402d17 	ldw	r5,180(sp)
 4029820:	d8c02917 	ldw	r3,164(sp)
 4029824:	002d883a 	mov	r22,zero
 4029828:	28800104 	addi	r2,r5,4
 402982c:	2cc00017 	ldw	r19,0(r5)
 4029830:	183e4b0e 	bge	r3,zero,4029160 <__flash_rwdata_start+0xffff2ef4>
 4029834:	9d86b03a 	or	r3,r19,r22
 4029838:	d8802d15 	stw	r2,180(sp)
 402983c:	183e4c1e 	bne	r3,zero,4029170 <__flash_rwdata_start+0xffff2f04>
 4029840:	0039883a 	mov	fp,zero
 4029844:	0005883a 	mov	r2,zero
 4029848:	003d4006 	br	4028d4c <__flash_rwdata_start+0xffff2ae0>
 402984c:	01400034 	movhi	r5,0
 4029850:	29413984 	addi	r5,r5,1254
 4029854:	d9402b15 	stw	r5,172(sp)
 4029858:	d9402b17 	ldw	r5,172(sp)
 402985c:	1c47883a 	add	r3,r3,r17
 4029860:	10800044 	addi	r2,r2,1
 4029864:	41400015 	stw	r5,0(r8)
 4029868:	44400115 	stw	r17,4(r8)
 402986c:	d8c02015 	stw	r3,128(sp)
 4029870:	d8801f15 	stw	r2,124(sp)
 4029874:	010001c4 	movi	r4,7
 4029878:	20bec816 	blt	r4,r2,402939c <__flash_rwdata_start+0xffff3130>
 402987c:	42000204 	addi	r8,r8,8
 4029880:	003ecd06 	br	40293b8 <__flash_rwdata_start+0xffff314c>
 4029884:	d9002917 	ldw	r4,164(sp)
 4029888:	d8002785 	stb	zero,158(sp)
 402988c:	203d2d16 	blt	r4,zero,4028d44 <__flash_rwdata_start+0xffff2ad8>
 4029890:	00bfdfc4 	movi	r2,-129
 4029894:	90a4703a 	and	r18,r18,r2
 4029898:	003a9106 	br	40282e0 <__flash_rwdata_start+0xffff2074>
 402989c:	01000034 	movhi	r4,0
 40298a0:	21013984 	addi	r4,r4,1254
 40298a4:	d9002b15 	stw	r4,172(sp)
 40298a8:	003c0c06 	br	40288dc <__flash_rwdata_start+0xffff2670>
 40298ac:	d9002c17 	ldw	r4,176(sp)
 40298b0:	d9801e04 	addi	r6,sp,120
 40298b4:	b80b883a 	mov	r5,r23
 40298b8:	402ec640 	call	402ec64 <__sprint_r>
 40298bc:	103aab1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40298c0:	d8c02017 	ldw	r3,128(sp)
 40298c4:	da000404 	addi	r8,sp,16
 40298c8:	003d4106 	br	4028dd0 <__flash_rwdata_start+0xffff2b64>
 40298cc:	d8801f17 	ldw	r2,124(sp)
 40298d0:	01400034 	movhi	r5,0
 40298d4:	01000044 	movi	r4,1
 40298d8:	18c00044 	addi	r3,r3,1
 40298dc:	10800044 	addi	r2,r2,1
 40298e0:	29413904 	addi	r5,r5,1252
 40298e4:	41000115 	stw	r4,4(r8)
 40298e8:	41400015 	stw	r5,0(r8)
 40298ec:	d8c02015 	stw	r3,128(sp)
 40298f0:	d8801f15 	stw	r2,124(sp)
 40298f4:	010001c4 	movi	r4,7
 40298f8:	20805c16 	blt	r4,r2,4029a6c <___vfprintf_internal_r+0x1b08>
 40298fc:	42000204 	addi	r8,r8,8
 4029900:	8800041e 	bne	r17,zero,4029914 <___vfprintf_internal_r+0x19b0>
 4029904:	d8803317 	ldw	r2,204(sp)
 4029908:	1000021e 	bne	r2,zero,4029914 <___vfprintf_internal_r+0x19b0>
 402990c:	9080004c 	andi	r2,r18,1
 4029910:	103c0926 	beq	r2,zero,4028938 <__flash_rwdata_start+0xffff26cc>
 4029914:	d9003717 	ldw	r4,220(sp)
 4029918:	d8801f17 	ldw	r2,124(sp)
 402991c:	d9403417 	ldw	r5,208(sp)
 4029920:	20c7883a 	add	r3,r4,r3
 4029924:	10800044 	addi	r2,r2,1
 4029928:	41000115 	stw	r4,4(r8)
 402992c:	41400015 	stw	r5,0(r8)
 4029930:	d8c02015 	stw	r3,128(sp)
 4029934:	d8801f15 	stw	r2,124(sp)
 4029938:	010001c4 	movi	r4,7
 402993c:	20812116 	blt	r4,r2,4029dc4 <___vfprintf_internal_r+0x1e60>
 4029940:	42000204 	addi	r8,r8,8
 4029944:	0463c83a 	sub	r17,zero,r17
 4029948:	0440730e 	bge	zero,r17,4029b18 <___vfprintf_internal_r+0x1bb4>
 402994c:	05800404 	movi	r22,16
 4029950:	b440860e 	bge	r22,r17,4029b6c <___vfprintf_internal_r+0x1c08>
 4029954:	01400034 	movhi	r5,0
 4029958:	29413984 	addi	r5,r5,1254
 402995c:	d9402b15 	stw	r5,172(sp)
 4029960:	070001c4 	movi	fp,7
 4029964:	dcc02c17 	ldw	r19,176(sp)
 4029968:	00000306 	br	4029978 <___vfprintf_internal_r+0x1a14>
 402996c:	42000204 	addi	r8,r8,8
 4029970:	8c7ffc04 	addi	r17,r17,-16
 4029974:	b440800e 	bge	r22,r17,4029b78 <___vfprintf_internal_r+0x1c14>
 4029978:	18c00404 	addi	r3,r3,16
 402997c:	10800044 	addi	r2,r2,1
 4029980:	45000015 	stw	r20,0(r8)
 4029984:	45800115 	stw	r22,4(r8)
 4029988:	d8c02015 	stw	r3,128(sp)
 402998c:	d8801f15 	stw	r2,124(sp)
 4029990:	e0bff60e 	bge	fp,r2,402996c <__flash_rwdata_start+0xffff3700>
 4029994:	d9801e04 	addi	r6,sp,120
 4029998:	b80b883a 	mov	r5,r23
 402999c:	9809883a 	mov	r4,r19
 40299a0:	402ec640 	call	402ec64 <__sprint_r>
 40299a4:	103a711e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 40299a8:	d8c02017 	ldw	r3,128(sp)
 40299ac:	d8801f17 	ldw	r2,124(sp)
 40299b0:	da000404 	addi	r8,sp,16
 40299b4:	003fee06 	br	4029970 <__flash_rwdata_start+0xffff3704>
 40299b8:	00bfffc4 	movi	r2,-1
 40299bc:	003a6f06 	br	402837c <__flash_rwdata_start+0xffff2110>
 40299c0:	008011c4 	movi	r2,71
 40299c4:	1440b816 	blt	r2,r17,4029ca8 <___vfprintf_internal_r+0x1d44>
 40299c8:	04000034 	movhi	r16,0
 40299cc:	84012b04 	addi	r16,r16,1196
 40299d0:	00c000c4 	movi	r3,3
 40299d4:	00bfdfc4 	movi	r2,-129
 40299d8:	d8c02a15 	stw	r3,168(sp)
 40299dc:	90a4703a 	and	r18,r18,r2
 40299e0:	df002783 	ldbu	fp,158(sp)
 40299e4:	d8c02e15 	stw	r3,184(sp)
 40299e8:	d8002915 	stw	zero,164(sp)
 40299ec:	d8003215 	stw	zero,200(sp)
 40299f0:	003b2906 	br	4028698 <__flash_rwdata_start+0xffff242c>
 40299f4:	d9002d17 	ldw	r4,180(sp)
 40299f8:	24c00017 	ldw	r19,0(r4)
 40299fc:	21000104 	addi	r4,r4,4
 4029a00:	d9002d15 	stw	r4,180(sp)
 4029a04:	982dd7fa 	srai	r22,r19,31
 4029a08:	b005883a 	mov	r2,r22
 4029a0c:	003a9f06 	br	402848c <__flash_rwdata_start+0xffff2220>
 4029a10:	d9402d17 	ldw	r5,180(sp)
 4029a14:	d8c02f17 	ldw	r3,188(sp)
 4029a18:	28800017 	ldw	r2,0(r5)
 4029a1c:	29400104 	addi	r5,r5,4
 4029a20:	d9402d15 	stw	r5,180(sp)
 4029a24:	10c00015 	stw	r3,0(r2)
 4029a28:	00398606 	br	4028044 <__flash_rwdata_start+0xffff1dd8>
 4029a2c:	d9402d17 	ldw	r5,180(sp)
 4029a30:	002d883a 	mov	r22,zero
 4029a34:	2cc00017 	ldw	r19,0(r5)
 4029a38:	29400104 	addi	r5,r5,4
 4029a3c:	d9402d15 	stw	r5,180(sp)
 4029a40:	003c2306 	br	4028ad0 <__flash_rwdata_start+0xffff2864>
 4029a44:	d8c02d17 	ldw	r3,180(sp)
 4029a48:	d9002917 	ldw	r4,164(sp)
 4029a4c:	002d883a 	mov	r22,zero
 4029a50:	18800104 	addi	r2,r3,4
 4029a54:	1cc0000b 	ldhu	r19,0(r3)
 4029a58:	203dc10e 	bge	r4,zero,4029160 <__flash_rwdata_start+0xffff2ef4>
 4029a5c:	003f7506 	br	4029834 <__flash_rwdata_start+0xffff35c8>
 4029a60:	04000034 	movhi	r16,0
 4029a64:	84012904 	addi	r16,r16,1188
 4029a68:	003acc06 	br	402859c <__flash_rwdata_start+0xffff2330>
 4029a6c:	d9002c17 	ldw	r4,176(sp)
 4029a70:	d9801e04 	addi	r6,sp,120
 4029a74:	b80b883a 	mov	r5,r23
 4029a78:	402ec640 	call	402ec64 <__sprint_r>
 4029a7c:	103a3b1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029a80:	dc402617 	ldw	r17,152(sp)
 4029a84:	d8c02017 	ldw	r3,128(sp)
 4029a88:	da000404 	addi	r8,sp,16
 4029a8c:	003f9c06 	br	4029900 <__flash_rwdata_start+0xffff3694>
 4029a90:	ac400043 	ldbu	r17,1(r21)
 4029a94:	94800814 	ori	r18,r18,32
 4029a98:	ad400044 	addi	r21,r21,1
 4029a9c:	8c403fcc 	andi	r17,r17,255
 4029aa0:	8c40201c 	xori	r17,r17,128
 4029aa4:	8c7fe004 	addi	r17,r17,-128
 4029aa8:	00398f06 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 4029aac:	d8c02d15 	stw	r3,180(sp)
 4029ab0:	0039883a 	mov	fp,zero
 4029ab4:	003e3506 	br	402938c <__flash_rwdata_start+0xffff3120>
 4029ab8:	d9002c17 	ldw	r4,176(sp)
 4029abc:	d9801e04 	addi	r6,sp,120
 4029ac0:	b80b883a 	mov	r5,r23
 4029ac4:	402ec640 	call	402ec64 <__sprint_r>
 4029ac8:	103a281e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029acc:	d8c02017 	ldw	r3,128(sp)
 4029ad0:	da000404 	addi	r8,sp,16
 4029ad4:	003cd006 	br	4028e18 <__flash_rwdata_start+0xffff2bac>
 4029ad8:	8009883a 	mov	r4,r16
 4029adc:	da003d15 	stw	r8,244(sp)
 4029ae0:	4027ecc0 	call	4027ecc <strlen>
 4029ae4:	d8802e15 	stw	r2,184(sp)
 4029ae8:	da003d17 	ldw	r8,244(sp)
 4029aec:	103c340e 	bge	r2,zero,4028bc0 <__flash_rwdata_start+0xffff2954>
 4029af0:	0005883a 	mov	r2,zero
 4029af4:	003c3206 	br	4028bc0 <__flash_rwdata_start+0xffff2954>
 4029af8:	d9002c17 	ldw	r4,176(sp)
 4029afc:	d9801e04 	addi	r6,sp,120
 4029b00:	b80b883a 	mov	r5,r23
 4029b04:	402ec640 	call	402ec64 <__sprint_r>
 4029b08:	103a181e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029b0c:	d8c02017 	ldw	r3,128(sp)
 4029b10:	d8801f17 	ldw	r2,124(sp)
 4029b14:	da000404 	addi	r8,sp,16
 4029b18:	d9403317 	ldw	r5,204(sp)
 4029b1c:	10800044 	addi	r2,r2,1
 4029b20:	44000015 	stw	r16,0(r8)
 4029b24:	28c7883a 	add	r3,r5,r3
 4029b28:	003b7d06 	br	4028920 <__flash_rwdata_start+0xffff26b4>
 4029b2c:	01000034 	movhi	r4,0
 4029b30:	21013d84 	addi	r4,r4,1270
 4029b34:	d9003515 	stw	r4,212(sp)
 4029b38:	003b1406 	br	402878c <__flash_rwdata_start+0xffff2520>
 4029b3c:	013fffc4 	movi	r4,-1
 4029b40:	003a3506 	br	4028418 <__flash_rwdata_start+0xffff21ac>
 4029b44:	0023883a 	mov	r17,zero
 4029b48:	003d9d06 	br	40291c0 <__flash_rwdata_start+0xffff2f54>
 4029b4c:	d9002c17 	ldw	r4,176(sp)
 4029b50:	d9801e04 	addi	r6,sp,120
 4029b54:	b80b883a 	mov	r5,r23
 4029b58:	402ec640 	call	402ec64 <__sprint_r>
 4029b5c:	103a031e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029b60:	d8c02017 	ldw	r3,128(sp)
 4029b64:	da000404 	addi	r8,sp,16
 4029b68:	003d9406 	br	40291bc <__flash_rwdata_start+0xffff2f50>
 4029b6c:	01000034 	movhi	r4,0
 4029b70:	21013984 	addi	r4,r4,1254
 4029b74:	d9002b15 	stw	r4,172(sp)
 4029b78:	d9002b17 	ldw	r4,172(sp)
 4029b7c:	1c47883a 	add	r3,r3,r17
 4029b80:	10800044 	addi	r2,r2,1
 4029b84:	41000015 	stw	r4,0(r8)
 4029b88:	44400115 	stw	r17,4(r8)
 4029b8c:	d8c02015 	stw	r3,128(sp)
 4029b90:	d8801f15 	stw	r2,124(sp)
 4029b94:	010001c4 	movi	r4,7
 4029b98:	20bfd716 	blt	r4,r2,4029af8 <__flash_rwdata_start+0xffff388c>
 4029b9c:	42000204 	addi	r8,r8,8
 4029ba0:	003fdd06 	br	4029b18 <__flash_rwdata_start+0xffff38ac>
 4029ba4:	d9002c17 	ldw	r4,176(sp)
 4029ba8:	d9801e04 	addi	r6,sp,120
 4029bac:	b80b883a 	mov	r5,r23
 4029bb0:	402ec640 	call	402ec64 <__sprint_r>
 4029bb4:	1039ed1e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029bb8:	d8802617 	ldw	r2,152(sp)
 4029bbc:	d8c02017 	ldw	r3,128(sp)
 4029bc0:	da000404 	addi	r8,sp,16
 4029bc4:	003e1006 	br	4029408 <__flash_rwdata_start+0xffff319c>
 4029bc8:	00800044 	movi	r2,1
 4029bcc:	10803fcc 	andi	r2,r2,255
 4029bd0:	00c00044 	movi	r3,1
 4029bd4:	10fa3526 	beq	r2,r3,40284ac <__flash_rwdata_start+0xffff2240>
 4029bd8:	00c00084 	movi	r3,2
 4029bdc:	10fbcb26 	beq	r2,r3,4028b0c <__flash_rwdata_start+0xffff28a0>
 4029be0:	003a8f06 	br	4028620 <__flash_rwdata_start+0xffff23b4>
 4029be4:	01000034 	movhi	r4,0
 4029be8:	21013d84 	addi	r4,r4,1270
 4029bec:	d9003515 	stw	r4,212(sp)
 4029bf0:	003b7606 	br	40289cc <__flash_rwdata_start+0xffff2760>
 4029bf4:	d8802917 	ldw	r2,164(sp)
 4029bf8:	00c00184 	movi	r3,6
 4029bfc:	1880012e 	bgeu	r3,r2,4029c04 <___vfprintf_internal_r+0x1ca0>
 4029c00:	1805883a 	mov	r2,r3
 4029c04:	d8802e15 	stw	r2,184(sp)
 4029c08:	1000ef16 	blt	r2,zero,4029fc8 <___vfprintf_internal_r+0x2064>
 4029c0c:	04000034 	movhi	r16,0
 4029c10:	d8802a15 	stw	r2,168(sp)
 4029c14:	dcc02d15 	stw	r19,180(sp)
 4029c18:	d8002915 	stw	zero,164(sp)
 4029c1c:	d8003215 	stw	zero,200(sp)
 4029c20:	84013704 	addi	r16,r16,1244
 4029c24:	0039883a 	mov	fp,zero
 4029c28:	003aa206 	br	40286b4 <__flash_rwdata_start+0xffff2448>
 4029c2c:	0021883a 	mov	r16,zero
 4029c30:	003e0706 	br	4029450 <__flash_rwdata_start+0xffff31e4>
 4029c34:	d9002c17 	ldw	r4,176(sp)
 4029c38:	d9801e04 	addi	r6,sp,120
 4029c3c:	b80b883a 	mov	r5,r23
 4029c40:	402ec640 	call	402ec64 <__sprint_r>
 4029c44:	1039c91e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029c48:	d8802617 	ldw	r2,152(sp)
 4029c4c:	d9403317 	ldw	r5,204(sp)
 4029c50:	d8c02017 	ldw	r3,128(sp)
 4029c54:	da000404 	addi	r8,sp,16
 4029c58:	2885c83a 	sub	r2,r5,r2
 4029c5c:	003dfb06 	br	402944c <__flash_rwdata_start+0xffff31e0>
 4029c60:	9080004c 	andi	r2,r18,1
 4029c64:	103e8f1e 	bne	r2,zero,40296a4 <__flash_rwdata_start+0xffff3438>
 4029c68:	d8802117 	ldw	r2,132(sp)
 4029c6c:	003e9e06 	br	40296e8 <__flash_rwdata_start+0xffff347c>
 4029c70:	1025883a 	mov	r18,r2
 4029c74:	0039883a 	mov	fp,zero
 4029c78:	00800084 	movi	r2,2
 4029c7c:	003fd306 	br	4029bcc <__flash_rwdata_start+0xffff3960>
 4029c80:	07000b44 	movi	fp,45
 4029c84:	df002785 	stb	fp,158(sp)
 4029c88:	003a4006 	br	402858c <__flash_rwdata_start+0xffff2320>
 4029c8c:	00c00b44 	movi	r3,45
 4029c90:	d8c02785 	stb	r3,158(sp)
 4029c94:	d8802a15 	stw	r2,168(sp)
 4029c98:	dc802b17 	ldw	r18,172(sp)
 4029c9c:	d8002915 	stw	zero,164(sp)
 4029ca0:	07000b44 	movi	fp,45
 4029ca4:	003a8006 	br	40286a8 <__flash_rwdata_start+0xffff243c>
 4029ca8:	04000034 	movhi	r16,0
 4029cac:	84012c04 	addi	r16,r16,1200
 4029cb0:	003f4706 	br	40299d0 <__flash_rwdata_start+0xffff3764>
 4029cb4:	d8c02d17 	ldw	r3,180(sp)
 4029cb8:	d9002f17 	ldw	r4,188(sp)
 4029cbc:	18800017 	ldw	r2,0(r3)
 4029cc0:	18c00104 	addi	r3,r3,4
 4029cc4:	d8c02d15 	stw	r3,180(sp)
 4029cc8:	11000015 	stw	r4,0(r2)
 4029ccc:	0038dd06 	br	4028044 <__flash_rwdata_start+0xffff1dd8>
 4029cd0:	dd802617 	ldw	r22,152(sp)
 4029cd4:	00bfff44 	movi	r2,-3
 4029cd8:	b0801c16 	blt	r22,r2,4029d4c <___vfprintf_internal_r+0x1de8>
 4029cdc:	d9402917 	ldw	r5,164(sp)
 4029ce0:	2d801a16 	blt	r5,r22,4029d4c <___vfprintf_internal_r+0x1de8>
 4029ce4:	dd803215 	stw	r22,200(sp)
 4029ce8:	003e8906 	br	4029710 <__flash_rwdata_start+0xffff34a4>
 4029cec:	01000034 	movhi	r4,0
 4029cf0:	21013984 	addi	r4,r4,1254
 4029cf4:	d9002b15 	stw	r4,172(sp)
 4029cf8:	003c9106 	br	4028f40 <__flash_rwdata_start+0xffff2cd4>
 4029cfc:	e005883a 	mov	r2,fp
 4029d00:	003e7906 	br	40296e8 <__flash_rwdata_start+0xffff347c>
 4029d04:	d9402917 	ldw	r5,164(sp)
 4029d08:	df002783 	ldbu	fp,158(sp)
 4029d0c:	dcc02d15 	stw	r19,180(sp)
 4029d10:	d9402a15 	stw	r5,168(sp)
 4029d14:	d9402e15 	stw	r5,184(sp)
 4029d18:	d8002915 	stw	zero,164(sp)
 4029d1c:	d8003215 	stw	zero,200(sp)
 4029d20:	003a5d06 	br	4028698 <__flash_rwdata_start+0xffff242c>
 4029d24:	9080004c 	andi	r2,r18,1
 4029d28:	0039883a 	mov	fp,zero
 4029d2c:	10000426 	beq	r2,zero,4029d40 <___vfprintf_internal_r+0x1ddc>
 4029d30:	00800c04 	movi	r2,48
 4029d34:	dc001dc4 	addi	r16,sp,119
 4029d38:	d8801dc5 	stb	r2,119(sp)
 4029d3c:	003b8006 	br	4028b40 <__flash_rwdata_start+0xffff28d4>
 4029d40:	d8002e15 	stw	zero,184(sp)
 4029d44:	dc001e04 	addi	r16,sp,120
 4029d48:	003a4d06 	br	4028680 <__flash_rwdata_start+0xffff2414>
 4029d4c:	8c7fff84 	addi	r17,r17,-2
 4029d50:	b5bfffc4 	addi	r22,r22,-1
 4029d54:	dd802615 	stw	r22,152(sp)
 4029d58:	dc4022c5 	stb	r17,139(sp)
 4029d5c:	b000bf16 	blt	r22,zero,402a05c <___vfprintf_internal_r+0x20f8>
 4029d60:	00800ac4 	movi	r2,43
 4029d64:	d8802305 	stb	r2,140(sp)
 4029d68:	00800244 	movi	r2,9
 4029d6c:	15807016 	blt	r2,r22,4029f30 <___vfprintf_internal_r+0x1fcc>
 4029d70:	00800c04 	movi	r2,48
 4029d74:	b5800c04 	addi	r22,r22,48
 4029d78:	d8802345 	stb	r2,141(sp)
 4029d7c:	dd802385 	stb	r22,142(sp)
 4029d80:	d88023c4 	addi	r2,sp,143
 4029d84:	df0022c4 	addi	fp,sp,139
 4029d88:	d8c03317 	ldw	r3,204(sp)
 4029d8c:	1739c83a 	sub	fp,r2,fp
 4029d90:	d9003317 	ldw	r4,204(sp)
 4029d94:	e0c7883a 	add	r3,fp,r3
 4029d98:	df003a15 	stw	fp,232(sp)
 4029d9c:	d8c02e15 	stw	r3,184(sp)
 4029da0:	00800044 	movi	r2,1
 4029da4:	1100b30e 	bge	r2,r4,402a074 <___vfprintf_internal_r+0x2110>
 4029da8:	d8c02e17 	ldw	r3,184(sp)
 4029dac:	18c00044 	addi	r3,r3,1
 4029db0:	d8c02e15 	stw	r3,184(sp)
 4029db4:	1805883a 	mov	r2,r3
 4029db8:	1800ac16 	blt	r3,zero,402a06c <___vfprintf_internal_r+0x2108>
 4029dbc:	d8003215 	stw	zero,200(sp)
 4029dc0:	003e5d06 	br	4029738 <__flash_rwdata_start+0xffff34cc>
 4029dc4:	d9002c17 	ldw	r4,176(sp)
 4029dc8:	d9801e04 	addi	r6,sp,120
 4029dcc:	b80b883a 	mov	r5,r23
 4029dd0:	402ec640 	call	402ec64 <__sprint_r>
 4029dd4:	1039651e 	bne	r2,zero,402836c <__flash_rwdata_start+0xffff2100>
 4029dd8:	dc402617 	ldw	r17,152(sp)
 4029ddc:	d8c02017 	ldw	r3,128(sp)
 4029de0:	d8801f17 	ldw	r2,124(sp)
 4029de4:	da000404 	addi	r8,sp,16
 4029de8:	003ed606 	br	4029944 <__flash_rwdata_start+0xffff36d8>
 4029dec:	582b883a 	mov	r21,r11
 4029df0:	d8002915 	stw	zero,164(sp)
 4029df4:	0038bd06 	br	40280ec <__flash_rwdata_start+0xffff1e80>
 4029df8:	d8802917 	ldw	r2,164(sp)
 4029dfc:	103e071e 	bne	r2,zero,402961c <__flash_rwdata_start+0xffff33b0>
 4029e00:	dc002915 	stw	r16,164(sp)
 4029e04:	003e0506 	br	402961c <__flash_rwdata_start+0xffff33b0>
 4029e08:	d9002917 	ldw	r4,164(sp)
 4029e0c:	20c00044 	addi	r3,r4,1
 4029e10:	003e0f06 	br	4029650 <__flash_rwdata_start+0xffff33e4>
 4029e14:	01400184 	movi	r5,6
 4029e18:	d9402915 	stw	r5,164(sp)
 4029e1c:	003dff06 	br	402961c <__flash_rwdata_start+0xffff33b0>
 4029e20:	d8802104 	addi	r2,sp,132
 4029e24:	d8800315 	stw	r2,12(sp)
 4029e28:	d8802504 	addi	r2,sp,148
 4029e2c:	d8800215 	stw	r2,8(sp)
 4029e30:	d8802604 	addi	r2,sp,152
 4029e34:	d8800115 	stw	r2,4(sp)
 4029e38:	d8802917 	ldw	r2,164(sp)
 4029e3c:	d9403617 	ldw	r5,216(sp)
 4029e40:	d9002c17 	ldw	r4,176(sp)
 4029e44:	d8800015 	stw	r2,0(sp)
 4029e48:	01c000c4 	movi	r7,3
 4029e4c:	980d883a 	mov	r6,r19
 4029e50:	da003d15 	stw	r8,244(sp)
 4029e54:	402a5880 	call	402a588 <_dtoa_r>
 4029e58:	d8c02917 	ldw	r3,164(sp)
 4029e5c:	da003d17 	ldw	r8,244(sp)
 4029e60:	1021883a 	mov	r16,r2
 4029e64:	10f9883a 	add	fp,r2,r3
 4029e68:	81000007 	ldb	r4,0(r16)
 4029e6c:	00800c04 	movi	r2,48
 4029e70:	20805e26 	beq	r4,r2,4029fec <___vfprintf_internal_r+0x2088>
 4029e74:	d8c02617 	ldw	r3,152(sp)
 4029e78:	e0f9883a 	add	fp,fp,r3
 4029e7c:	003e0a06 	br	40296a8 <__flash_rwdata_start+0xffff343c>
 4029e80:	00c00b44 	movi	r3,45
 4029e84:	24e0003c 	xorhi	r19,r4,32768
 4029e88:	d8c02a05 	stb	r3,168(sp)
 4029e8c:	003de906 	br	4029634 <__flash_rwdata_start+0xffff33c8>
 4029e90:	d8c03217 	ldw	r3,200(sp)
 4029e94:	00c07a0e 	bge	zero,r3,402a080 <___vfprintf_internal_r+0x211c>
 4029e98:	00800044 	movi	r2,1
 4029e9c:	d9003317 	ldw	r4,204(sp)
 4029ea0:	1105883a 	add	r2,r2,r4
 4029ea4:	d8802e15 	stw	r2,184(sp)
 4029ea8:	10004e16 	blt	r2,zero,4029fe4 <___vfprintf_internal_r+0x2080>
 4029eac:	044019c4 	movi	r17,103
 4029eb0:	003e2106 	br	4029738 <__flash_rwdata_start+0xffff34cc>
 4029eb4:	d9002917 	ldw	r4,164(sp)
 4029eb8:	d8802104 	addi	r2,sp,132
 4029ebc:	d8800315 	stw	r2,12(sp)
 4029ec0:	d9000015 	stw	r4,0(sp)
 4029ec4:	d8802504 	addi	r2,sp,148
 4029ec8:	d9403617 	ldw	r5,216(sp)
 4029ecc:	d9002c17 	ldw	r4,176(sp)
 4029ed0:	d8800215 	stw	r2,8(sp)
 4029ed4:	d8802604 	addi	r2,sp,152
 4029ed8:	d8800115 	stw	r2,4(sp)
 4029edc:	01c000c4 	movi	r7,3
 4029ee0:	980d883a 	mov	r6,r19
 4029ee4:	da003d15 	stw	r8,244(sp)
 4029ee8:	402a5880 	call	402a588 <_dtoa_r>
 4029eec:	d8c02917 	ldw	r3,164(sp)
 4029ef0:	da003d17 	ldw	r8,244(sp)
 4029ef4:	1021883a 	mov	r16,r2
 4029ef8:	00801184 	movi	r2,70
 4029efc:	80f9883a 	add	fp,r16,r3
 4029f00:	88bfd926 	beq	r17,r2,4029e68 <__flash_rwdata_start+0xffff3bfc>
 4029f04:	003de806 	br	40296a8 <__flash_rwdata_start+0xffff343c>
 4029f08:	d9002917 	ldw	r4,164(sp)
 4029f0c:	00c04d0e 	bge	zero,r3,402a044 <___vfprintf_internal_r+0x20e0>
 4029f10:	2000441e 	bne	r4,zero,402a024 <___vfprintf_internal_r+0x20c0>
 4029f14:	9480004c 	andi	r18,r18,1
 4029f18:	9000421e 	bne	r18,zero,402a024 <___vfprintf_internal_r+0x20c0>
 4029f1c:	1805883a 	mov	r2,r3
 4029f20:	18007016 	blt	r3,zero,402a0e4 <___vfprintf_internal_r+0x2180>
 4029f24:	d8c03217 	ldw	r3,200(sp)
 4029f28:	d8c02e15 	stw	r3,184(sp)
 4029f2c:	003e0206 	br	4029738 <__flash_rwdata_start+0xffff34cc>
 4029f30:	df0022c4 	addi	fp,sp,139
 4029f34:	dc002915 	stw	r16,164(sp)
 4029f38:	4027883a 	mov	r19,r8
 4029f3c:	e021883a 	mov	r16,fp
 4029f40:	b009883a 	mov	r4,r22
 4029f44:	01400284 	movi	r5,10
 4029f48:	40246780 	call	4024678 <__modsi3>
 4029f4c:	10800c04 	addi	r2,r2,48
 4029f50:	843fffc4 	addi	r16,r16,-1
 4029f54:	b009883a 	mov	r4,r22
 4029f58:	01400284 	movi	r5,10
 4029f5c:	80800005 	stb	r2,0(r16)
 4029f60:	40245f40 	call	40245f4 <__divsi3>
 4029f64:	102d883a 	mov	r22,r2
 4029f68:	00800244 	movi	r2,9
 4029f6c:	15bff416 	blt	r2,r22,4029f40 <__flash_rwdata_start+0xffff3cd4>
 4029f70:	9811883a 	mov	r8,r19
 4029f74:	b0800c04 	addi	r2,r22,48
 4029f78:	8027883a 	mov	r19,r16
 4029f7c:	997fffc4 	addi	r5,r19,-1
 4029f80:	98bfffc5 	stb	r2,-1(r19)
 4029f84:	dc002917 	ldw	r16,164(sp)
 4029f88:	2f006a2e 	bgeu	r5,fp,402a134 <___vfprintf_internal_r+0x21d0>
 4029f8c:	d9c02384 	addi	r7,sp,142
 4029f90:	3ccfc83a 	sub	r7,r7,r19
 4029f94:	d9002344 	addi	r4,sp,141
 4029f98:	e1cf883a 	add	r7,fp,r7
 4029f9c:	00000106 	br	4029fa4 <___vfprintf_internal_r+0x2040>
 4029fa0:	28800003 	ldbu	r2,0(r5)
 4029fa4:	20800005 	stb	r2,0(r4)
 4029fa8:	21000044 	addi	r4,r4,1
 4029fac:	29400044 	addi	r5,r5,1
 4029fb0:	393ffb1e 	bne	r7,r4,4029fa0 <__flash_rwdata_start+0xffff3d34>
 4029fb4:	d8802304 	addi	r2,sp,140
 4029fb8:	14c5c83a 	sub	r2,r2,r19
 4029fbc:	d8c02344 	addi	r3,sp,141
 4029fc0:	1885883a 	add	r2,r3,r2
 4029fc4:	003f7006 	br	4029d88 <__flash_rwdata_start+0xffff3b1c>
 4029fc8:	0005883a 	mov	r2,zero
 4029fcc:	003f0f06 	br	4029c0c <__flash_rwdata_start+0xffff39a0>
 4029fd0:	d8c03217 	ldw	r3,200(sp)
 4029fd4:	18c00044 	addi	r3,r3,1
 4029fd8:	d8c02e15 	stw	r3,184(sp)
 4029fdc:	1805883a 	mov	r2,r3
 4029fe0:	183fb20e 	bge	r3,zero,4029eac <__flash_rwdata_start+0xffff3c40>
 4029fe4:	0005883a 	mov	r2,zero
 4029fe8:	003fb006 	br	4029eac <__flash_rwdata_start+0xffff3c40>
 4029fec:	d9003617 	ldw	r4,216(sp)
 4029ff0:	000d883a 	mov	r6,zero
 4029ff4:	000f883a 	mov	r7,zero
 4029ff8:	980b883a 	mov	r5,r19
 4029ffc:	d8c03c15 	stw	r3,240(sp)
 402a000:	da003d15 	stw	r8,244(sp)
 402a004:	4031ea00 	call	4031ea0 <__eqdf2>
 402a008:	d8c03c17 	ldw	r3,240(sp)
 402a00c:	da003d17 	ldw	r8,244(sp)
 402a010:	103f9826 	beq	r2,zero,4029e74 <__flash_rwdata_start+0xffff3c08>
 402a014:	00800044 	movi	r2,1
 402a018:	10c7c83a 	sub	r3,r2,r3
 402a01c:	d8c02615 	stw	r3,152(sp)
 402a020:	003f9506 	br	4029e78 <__flash_rwdata_start+0xffff3c0c>
 402a024:	d9002917 	ldw	r4,164(sp)
 402a028:	d8c03217 	ldw	r3,200(sp)
 402a02c:	20800044 	addi	r2,r4,1
 402a030:	1885883a 	add	r2,r3,r2
 402a034:	d8802e15 	stw	r2,184(sp)
 402a038:	103dbf0e 	bge	r2,zero,4029738 <__flash_rwdata_start+0xffff34cc>
 402a03c:	0005883a 	mov	r2,zero
 402a040:	003dbd06 	br	4029738 <__flash_rwdata_start+0xffff34cc>
 402a044:	2000211e 	bne	r4,zero,402a0cc <___vfprintf_internal_r+0x2168>
 402a048:	9480004c 	andi	r18,r18,1
 402a04c:	90001f1e 	bne	r18,zero,402a0cc <___vfprintf_internal_r+0x2168>
 402a050:	00800044 	movi	r2,1
 402a054:	d8802e15 	stw	r2,184(sp)
 402a058:	003db706 	br	4029738 <__flash_rwdata_start+0xffff34cc>
 402a05c:	00800b44 	movi	r2,45
 402a060:	05adc83a 	sub	r22,zero,r22
 402a064:	d8802305 	stb	r2,140(sp)
 402a068:	003f3f06 	br	4029d68 <__flash_rwdata_start+0xffff3afc>
 402a06c:	0005883a 	mov	r2,zero
 402a070:	003f5206 	br	4029dbc <__flash_rwdata_start+0xffff3b50>
 402a074:	90a4703a 	and	r18,r18,r2
 402a078:	903f4e26 	beq	r18,zero,4029db4 <__flash_rwdata_start+0xffff3b48>
 402a07c:	003f4a06 	br	4029da8 <__flash_rwdata_start+0xffff3b3c>
 402a080:	00800084 	movi	r2,2
 402a084:	10c5c83a 	sub	r2,r2,r3
 402a088:	003f8406 	br	4029e9c <__flash_rwdata_start+0xffff3c30>
 402a08c:	d8802d17 	ldw	r2,180(sp)
 402a090:	d9002d17 	ldw	r4,180(sp)
 402a094:	ac400043 	ldbu	r17,1(r21)
 402a098:	10800017 	ldw	r2,0(r2)
 402a09c:	582b883a 	mov	r21,r11
 402a0a0:	d8802915 	stw	r2,164(sp)
 402a0a4:	20800104 	addi	r2,r4,4
 402a0a8:	d9002917 	ldw	r4,164(sp)
 402a0ac:	d8802d15 	stw	r2,180(sp)
 402a0b0:	203e7a0e 	bge	r4,zero,4029a9c <__flash_rwdata_start+0xffff3830>
 402a0b4:	8c403fcc 	andi	r17,r17,255
 402a0b8:	00bfffc4 	movi	r2,-1
 402a0bc:	8c40201c 	xori	r17,r17,128
 402a0c0:	d8802915 	stw	r2,164(sp)
 402a0c4:	8c7fe004 	addi	r17,r17,-128
 402a0c8:	00380706 	br	40280e8 <__flash_rwdata_start+0xffff1e7c>
 402a0cc:	d8c02917 	ldw	r3,164(sp)
 402a0d0:	18c00084 	addi	r3,r3,2
 402a0d4:	d8c02e15 	stw	r3,184(sp)
 402a0d8:	1805883a 	mov	r2,r3
 402a0dc:	183d960e 	bge	r3,zero,4029738 <__flash_rwdata_start+0xffff34cc>
 402a0e0:	003fd606 	br	402a03c <__flash_rwdata_start+0xffff3dd0>
 402a0e4:	0005883a 	mov	r2,zero
 402a0e8:	003f8e06 	br	4029f24 <__flash_rwdata_start+0xffff3cb8>
 402a0ec:	9080004c 	andi	r2,r18,1
 402a0f0:	103f811e 	bne	r2,zero,4029ef8 <__flash_rwdata_start+0xffff3c8c>
 402a0f4:	d8802117 	ldw	r2,132(sp)
 402a0f8:	1405c83a 	sub	r2,r2,r16
 402a0fc:	d8803315 	stw	r2,204(sp)
 402a100:	b47ef326 	beq	r22,r17,4029cd0 <__flash_rwdata_start+0xffff3a64>
 402a104:	dd802617 	ldw	r22,152(sp)
 402a108:	003f1106 	br	4029d50 <__flash_rwdata_start+0xffff3ae4>
 402a10c:	d9c02785 	stb	r7,158(sp)
 402a110:	00390406 	br	4028524 <__flash_rwdata_start+0xffff22b8>
 402a114:	d9c02785 	stb	r7,158(sp)
 402a118:	0038d306 	br	4028468 <__flash_rwdata_start+0xffff21fc>
 402a11c:	d9c02785 	stb	r7,158(sp)
 402a120:	003a6106 	br	4028aa8 <__flash_rwdata_start+0xffff283c>
 402a124:	d9c02785 	stb	r7,158(sp)
 402a128:	003af806 	br	4028d0c <__flash_rwdata_start+0xffff2aa0>
 402a12c:	0005883a 	mov	r2,zero
 402a130:	003d7e06 	br	402972c <__flash_rwdata_start+0xffff34c0>
 402a134:	d8802344 	addi	r2,sp,141
 402a138:	003f1306 	br	4029d88 <__flash_rwdata_start+0xffff3b1c>
 402a13c:	d9c02785 	stb	r7,158(sp)
 402a140:	00392306 	br	40285d0 <__flash_rwdata_start+0xffff2364>
 402a144:	d9c02785 	stb	r7,158(sp)
 402a148:	003aa906 	br	4028bf0 <__flash_rwdata_start+0xffff2984>
 402a14c:	d9c02785 	stb	r7,158(sp)
 402a150:	003a3d06 	br	4028a48 <__flash_rwdata_start+0xffff27dc>
 402a154:	d9c02785 	stb	r7,158(sp)
 402a158:	003aca06 	br	4028c84 <__flash_rwdata_start+0xffff2a18>

0402a15c <__vfprintf_internal>:
 402a15c:	00800034 	movhi	r2,0
 402a160:	10886404 	addi	r2,r2,8592
 402a164:	300f883a 	mov	r7,r6
 402a168:	280d883a 	mov	r6,r5
 402a16c:	200b883a 	mov	r5,r4
 402a170:	11000017 	ldw	r4,0(r2)
 402a174:	4027f641 	jmpi	4027f64 <___vfprintf_internal_r>

0402a178 <__sbprintf>:
 402a178:	2880030b 	ldhu	r2,12(r5)
 402a17c:	2ac01917 	ldw	r11,100(r5)
 402a180:	2a80038b 	ldhu	r10,14(r5)
 402a184:	2a400717 	ldw	r9,28(r5)
 402a188:	2a000917 	ldw	r8,36(r5)
 402a18c:	defee204 	addi	sp,sp,-1144
 402a190:	00c10004 	movi	r3,1024
 402a194:	dc011a15 	stw	r16,1128(sp)
 402a198:	10bfff4c 	andi	r2,r2,65533
 402a19c:	2821883a 	mov	r16,r5
 402a1a0:	d8cb883a 	add	r5,sp,r3
 402a1a4:	dc811c15 	stw	r18,1136(sp)
 402a1a8:	dc411b15 	stw	r17,1132(sp)
 402a1ac:	dfc11d15 	stw	ra,1140(sp)
 402a1b0:	2025883a 	mov	r18,r4
 402a1b4:	d881030d 	sth	r2,1036(sp)
 402a1b8:	dac11915 	stw	r11,1124(sp)
 402a1bc:	da81038d 	sth	r10,1038(sp)
 402a1c0:	da410715 	stw	r9,1052(sp)
 402a1c4:	da010915 	stw	r8,1060(sp)
 402a1c8:	dec10015 	stw	sp,1024(sp)
 402a1cc:	dec10415 	stw	sp,1040(sp)
 402a1d0:	d8c10215 	stw	r3,1032(sp)
 402a1d4:	d8c10515 	stw	r3,1044(sp)
 402a1d8:	d8010615 	stw	zero,1048(sp)
 402a1dc:	4027f640 	call	4027f64 <___vfprintf_internal_r>
 402a1e0:	1023883a 	mov	r17,r2
 402a1e4:	10000416 	blt	r2,zero,402a1f8 <__sbprintf+0x80>
 402a1e8:	d9410004 	addi	r5,sp,1024
 402a1ec:	9009883a 	mov	r4,r18
 402a1f0:	402be2c0 	call	402be2c <_fflush_r>
 402a1f4:	10000d1e 	bne	r2,zero,402a22c <__sbprintf+0xb4>
 402a1f8:	d881030b 	ldhu	r2,1036(sp)
 402a1fc:	1080100c 	andi	r2,r2,64
 402a200:	10000326 	beq	r2,zero,402a210 <__sbprintf+0x98>
 402a204:	8080030b 	ldhu	r2,12(r16)
 402a208:	10801014 	ori	r2,r2,64
 402a20c:	8080030d 	sth	r2,12(r16)
 402a210:	8805883a 	mov	r2,r17
 402a214:	dfc11d17 	ldw	ra,1140(sp)
 402a218:	dc811c17 	ldw	r18,1136(sp)
 402a21c:	dc411b17 	ldw	r17,1132(sp)
 402a220:	dc011a17 	ldw	r16,1128(sp)
 402a224:	dec11e04 	addi	sp,sp,1144
 402a228:	f800283a 	ret
 402a22c:	047fffc4 	movi	r17,-1
 402a230:	003ff106 	br	402a1f8 <__flash_rwdata_start+0xffff3f8c>

0402a234 <__swsetup_r>:
 402a234:	00800034 	movhi	r2,0
 402a238:	defffd04 	addi	sp,sp,-12
 402a23c:	10886404 	addi	r2,r2,8592
 402a240:	dc400115 	stw	r17,4(sp)
 402a244:	2023883a 	mov	r17,r4
 402a248:	11000017 	ldw	r4,0(r2)
 402a24c:	dc000015 	stw	r16,0(sp)
 402a250:	dfc00215 	stw	ra,8(sp)
 402a254:	2821883a 	mov	r16,r5
 402a258:	20000226 	beq	r4,zero,402a264 <__swsetup_r+0x30>
 402a25c:	20800e17 	ldw	r2,56(r4)
 402a260:	10003126 	beq	r2,zero,402a328 <__swsetup_r+0xf4>
 402a264:	8080030b 	ldhu	r2,12(r16)
 402a268:	10c0020c 	andi	r3,r2,8
 402a26c:	1009883a 	mov	r4,r2
 402a270:	18000f26 	beq	r3,zero,402a2b0 <__swsetup_r+0x7c>
 402a274:	80c00417 	ldw	r3,16(r16)
 402a278:	18001526 	beq	r3,zero,402a2d0 <__swsetup_r+0x9c>
 402a27c:	1100004c 	andi	r4,r2,1
 402a280:	20001c1e 	bne	r4,zero,402a2f4 <__swsetup_r+0xc0>
 402a284:	1080008c 	andi	r2,r2,2
 402a288:	1000291e 	bne	r2,zero,402a330 <__swsetup_r+0xfc>
 402a28c:	80800517 	ldw	r2,20(r16)
 402a290:	80800215 	stw	r2,8(r16)
 402a294:	18001c26 	beq	r3,zero,402a308 <__swsetup_r+0xd4>
 402a298:	0005883a 	mov	r2,zero
 402a29c:	dfc00217 	ldw	ra,8(sp)
 402a2a0:	dc400117 	ldw	r17,4(sp)
 402a2a4:	dc000017 	ldw	r16,0(sp)
 402a2a8:	dec00304 	addi	sp,sp,12
 402a2ac:	f800283a 	ret
 402a2b0:	2080040c 	andi	r2,r4,16
 402a2b4:	10002e26 	beq	r2,zero,402a370 <__swsetup_r+0x13c>
 402a2b8:	2080010c 	andi	r2,r4,4
 402a2bc:	10001e1e 	bne	r2,zero,402a338 <__swsetup_r+0x104>
 402a2c0:	80c00417 	ldw	r3,16(r16)
 402a2c4:	20800214 	ori	r2,r4,8
 402a2c8:	8080030d 	sth	r2,12(r16)
 402a2cc:	183feb1e 	bne	r3,zero,402a27c <__flash_rwdata_start+0xffff4010>
 402a2d0:	1100a00c 	andi	r4,r2,640
 402a2d4:	01408004 	movi	r5,512
 402a2d8:	217fe826 	beq	r4,r5,402a27c <__flash_rwdata_start+0xffff4010>
 402a2dc:	800b883a 	mov	r5,r16
 402a2e0:	8809883a 	mov	r4,r17
 402a2e4:	402cdac0 	call	402cdac <__smakebuf_r>
 402a2e8:	8080030b 	ldhu	r2,12(r16)
 402a2ec:	80c00417 	ldw	r3,16(r16)
 402a2f0:	003fe206 	br	402a27c <__flash_rwdata_start+0xffff4010>
 402a2f4:	80800517 	ldw	r2,20(r16)
 402a2f8:	80000215 	stw	zero,8(r16)
 402a2fc:	0085c83a 	sub	r2,zero,r2
 402a300:	80800615 	stw	r2,24(r16)
 402a304:	183fe41e 	bne	r3,zero,402a298 <__flash_rwdata_start+0xffff402c>
 402a308:	80c0030b 	ldhu	r3,12(r16)
 402a30c:	0005883a 	mov	r2,zero
 402a310:	1900200c 	andi	r4,r3,128
 402a314:	203fe126 	beq	r4,zero,402a29c <__flash_rwdata_start+0xffff4030>
 402a318:	18c01014 	ori	r3,r3,64
 402a31c:	80c0030d 	sth	r3,12(r16)
 402a320:	00bfffc4 	movi	r2,-1
 402a324:	003fdd06 	br	402a29c <__flash_rwdata_start+0xffff4030>
 402a328:	402c2080 	call	402c208 <__sinit>
 402a32c:	003fcd06 	br	402a264 <__flash_rwdata_start+0xffff3ff8>
 402a330:	0005883a 	mov	r2,zero
 402a334:	003fd606 	br	402a290 <__flash_rwdata_start+0xffff4024>
 402a338:	81400c17 	ldw	r5,48(r16)
 402a33c:	28000626 	beq	r5,zero,402a358 <__swsetup_r+0x124>
 402a340:	80801004 	addi	r2,r16,64
 402a344:	28800326 	beq	r5,r2,402a354 <__swsetup_r+0x120>
 402a348:	8809883a 	mov	r4,r17
 402a34c:	402c37c0 	call	402c37c <_free_r>
 402a350:	8100030b 	ldhu	r4,12(r16)
 402a354:	80000c15 	stw	zero,48(r16)
 402a358:	80c00417 	ldw	r3,16(r16)
 402a35c:	00bff6c4 	movi	r2,-37
 402a360:	1108703a 	and	r4,r2,r4
 402a364:	80000115 	stw	zero,4(r16)
 402a368:	80c00015 	stw	r3,0(r16)
 402a36c:	003fd506 	br	402a2c4 <__flash_rwdata_start+0xffff4058>
 402a370:	00800244 	movi	r2,9
 402a374:	88800015 	stw	r2,0(r17)
 402a378:	20801014 	ori	r2,r4,64
 402a37c:	8080030d 	sth	r2,12(r16)
 402a380:	00bfffc4 	movi	r2,-1
 402a384:	003fc506 	br	402a29c <__flash_rwdata_start+0xffff4030>

0402a388 <quorem>:
 402a388:	defff704 	addi	sp,sp,-36
 402a38c:	dc800215 	stw	r18,8(sp)
 402a390:	20800417 	ldw	r2,16(r4)
 402a394:	2c800417 	ldw	r18,16(r5)
 402a398:	dfc00815 	stw	ra,32(sp)
 402a39c:	ddc00715 	stw	r23,28(sp)
 402a3a0:	dd800615 	stw	r22,24(sp)
 402a3a4:	dd400515 	stw	r21,20(sp)
 402a3a8:	dd000415 	stw	r20,16(sp)
 402a3ac:	dcc00315 	stw	r19,12(sp)
 402a3b0:	dc400115 	stw	r17,4(sp)
 402a3b4:	dc000015 	stw	r16,0(sp)
 402a3b8:	14807116 	blt	r2,r18,402a580 <quorem+0x1f8>
 402a3bc:	94bfffc4 	addi	r18,r18,-1
 402a3c0:	94ad883a 	add	r22,r18,r18
 402a3c4:	b5ad883a 	add	r22,r22,r22
 402a3c8:	2c400504 	addi	r17,r5,20
 402a3cc:	8da9883a 	add	r20,r17,r22
 402a3d0:	25400504 	addi	r21,r4,20
 402a3d4:	282f883a 	mov	r23,r5
 402a3d8:	adad883a 	add	r22,r21,r22
 402a3dc:	a1400017 	ldw	r5,0(r20)
 402a3e0:	2021883a 	mov	r16,r4
 402a3e4:	b1000017 	ldw	r4,0(r22)
 402a3e8:	29400044 	addi	r5,r5,1
 402a3ec:	40246ec0 	call	40246ec <__udivsi3>
 402a3f0:	1027883a 	mov	r19,r2
 402a3f4:	10002c26 	beq	r2,zero,402a4a8 <quorem+0x120>
 402a3f8:	a813883a 	mov	r9,r21
 402a3fc:	880b883a 	mov	r5,r17
 402a400:	0009883a 	mov	r4,zero
 402a404:	000d883a 	mov	r6,zero
 402a408:	2a000017 	ldw	r8,0(r5)
 402a40c:	49c00017 	ldw	r7,0(r9)
 402a410:	29400104 	addi	r5,r5,4
 402a414:	40bfffcc 	andi	r2,r8,65535
 402a418:	14c5383a 	mul	r2,r2,r19
 402a41c:	4010d43a 	srli	r8,r8,16
 402a420:	38ffffcc 	andi	r3,r7,65535
 402a424:	1105883a 	add	r2,r2,r4
 402a428:	1008d43a 	srli	r4,r2,16
 402a42c:	44d1383a 	mul	r8,r8,r19
 402a430:	198d883a 	add	r6,r3,r6
 402a434:	10ffffcc 	andi	r3,r2,65535
 402a438:	30c7c83a 	sub	r3,r6,r3
 402a43c:	380ed43a 	srli	r7,r7,16
 402a440:	4105883a 	add	r2,r8,r4
 402a444:	180dd43a 	srai	r6,r3,16
 402a448:	113fffcc 	andi	r4,r2,65535
 402a44c:	390fc83a 	sub	r7,r7,r4
 402a450:	398d883a 	add	r6,r7,r6
 402a454:	300e943a 	slli	r7,r6,16
 402a458:	18ffffcc 	andi	r3,r3,65535
 402a45c:	1008d43a 	srli	r4,r2,16
 402a460:	38ceb03a 	or	r7,r7,r3
 402a464:	49c00015 	stw	r7,0(r9)
 402a468:	300dd43a 	srai	r6,r6,16
 402a46c:	4a400104 	addi	r9,r9,4
 402a470:	a17fe52e 	bgeu	r20,r5,402a408 <__flash_rwdata_start+0xffff419c>
 402a474:	b0800017 	ldw	r2,0(r22)
 402a478:	10000b1e 	bne	r2,zero,402a4a8 <quorem+0x120>
 402a47c:	b0bfff04 	addi	r2,r22,-4
 402a480:	a880082e 	bgeu	r21,r2,402a4a4 <quorem+0x11c>
 402a484:	b0ffff17 	ldw	r3,-4(r22)
 402a488:	18000326 	beq	r3,zero,402a498 <quorem+0x110>
 402a48c:	00000506 	br	402a4a4 <quorem+0x11c>
 402a490:	10c00017 	ldw	r3,0(r2)
 402a494:	1800031e 	bne	r3,zero,402a4a4 <quorem+0x11c>
 402a498:	10bfff04 	addi	r2,r2,-4
 402a49c:	94bfffc4 	addi	r18,r18,-1
 402a4a0:	a8bffb36 	bltu	r21,r2,402a490 <__flash_rwdata_start+0xffff4224>
 402a4a4:	84800415 	stw	r18,16(r16)
 402a4a8:	b80b883a 	mov	r5,r23
 402a4ac:	8009883a 	mov	r4,r16
 402a4b0:	402dbb80 	call	402dbb8 <__mcmp>
 402a4b4:	10002616 	blt	r2,zero,402a550 <quorem+0x1c8>
 402a4b8:	9cc00044 	addi	r19,r19,1
 402a4bc:	a805883a 	mov	r2,r21
 402a4c0:	000b883a 	mov	r5,zero
 402a4c4:	11000017 	ldw	r4,0(r2)
 402a4c8:	89800017 	ldw	r6,0(r17)
 402a4cc:	10800104 	addi	r2,r2,4
 402a4d0:	20ffffcc 	andi	r3,r4,65535
 402a4d4:	194b883a 	add	r5,r3,r5
 402a4d8:	30ffffcc 	andi	r3,r6,65535
 402a4dc:	28c7c83a 	sub	r3,r5,r3
 402a4e0:	300cd43a 	srli	r6,r6,16
 402a4e4:	2008d43a 	srli	r4,r4,16
 402a4e8:	180bd43a 	srai	r5,r3,16
 402a4ec:	18ffffcc 	andi	r3,r3,65535
 402a4f0:	2189c83a 	sub	r4,r4,r6
 402a4f4:	2149883a 	add	r4,r4,r5
 402a4f8:	200c943a 	slli	r6,r4,16
 402a4fc:	8c400104 	addi	r17,r17,4
 402a500:	200bd43a 	srai	r5,r4,16
 402a504:	30c6b03a 	or	r3,r6,r3
 402a508:	10ffff15 	stw	r3,-4(r2)
 402a50c:	a47fed2e 	bgeu	r20,r17,402a4c4 <__flash_rwdata_start+0xffff4258>
 402a510:	9485883a 	add	r2,r18,r18
 402a514:	1085883a 	add	r2,r2,r2
 402a518:	a887883a 	add	r3,r21,r2
 402a51c:	18800017 	ldw	r2,0(r3)
 402a520:	10000b1e 	bne	r2,zero,402a550 <quorem+0x1c8>
 402a524:	18bfff04 	addi	r2,r3,-4
 402a528:	a880082e 	bgeu	r21,r2,402a54c <quorem+0x1c4>
 402a52c:	18ffff17 	ldw	r3,-4(r3)
 402a530:	18000326 	beq	r3,zero,402a540 <quorem+0x1b8>
 402a534:	00000506 	br	402a54c <quorem+0x1c4>
 402a538:	10c00017 	ldw	r3,0(r2)
 402a53c:	1800031e 	bne	r3,zero,402a54c <quorem+0x1c4>
 402a540:	10bfff04 	addi	r2,r2,-4
 402a544:	94bfffc4 	addi	r18,r18,-1
 402a548:	a8bffb36 	bltu	r21,r2,402a538 <__flash_rwdata_start+0xffff42cc>
 402a54c:	84800415 	stw	r18,16(r16)
 402a550:	9805883a 	mov	r2,r19
 402a554:	dfc00817 	ldw	ra,32(sp)
 402a558:	ddc00717 	ldw	r23,28(sp)
 402a55c:	dd800617 	ldw	r22,24(sp)
 402a560:	dd400517 	ldw	r21,20(sp)
 402a564:	dd000417 	ldw	r20,16(sp)
 402a568:	dcc00317 	ldw	r19,12(sp)
 402a56c:	dc800217 	ldw	r18,8(sp)
 402a570:	dc400117 	ldw	r17,4(sp)
 402a574:	dc000017 	ldw	r16,0(sp)
 402a578:	dec00904 	addi	sp,sp,36
 402a57c:	f800283a 	ret
 402a580:	0005883a 	mov	r2,zero
 402a584:	003ff306 	br	402a554 <__flash_rwdata_start+0xffff42e8>

0402a588 <_dtoa_r>:
 402a588:	20801017 	ldw	r2,64(r4)
 402a58c:	deffde04 	addi	sp,sp,-136
 402a590:	df002015 	stw	fp,128(sp)
 402a594:	dcc01b15 	stw	r19,108(sp)
 402a598:	dc801a15 	stw	r18,104(sp)
 402a59c:	dc401915 	stw	r17,100(sp)
 402a5a0:	dc001815 	stw	r16,96(sp)
 402a5a4:	dfc02115 	stw	ra,132(sp)
 402a5a8:	ddc01f15 	stw	r23,124(sp)
 402a5ac:	dd801e15 	stw	r22,120(sp)
 402a5b0:	dd401d15 	stw	r21,116(sp)
 402a5b4:	dd001c15 	stw	r20,112(sp)
 402a5b8:	d9c00315 	stw	r7,12(sp)
 402a5bc:	2039883a 	mov	fp,r4
 402a5c0:	3023883a 	mov	r17,r6
 402a5c4:	2825883a 	mov	r18,r5
 402a5c8:	dc002417 	ldw	r16,144(sp)
 402a5cc:	3027883a 	mov	r19,r6
 402a5d0:	10000826 	beq	r2,zero,402a5f4 <_dtoa_r+0x6c>
 402a5d4:	21801117 	ldw	r6,68(r4)
 402a5d8:	00c00044 	movi	r3,1
 402a5dc:	100b883a 	mov	r5,r2
 402a5e0:	1986983a 	sll	r3,r3,r6
 402a5e4:	11800115 	stw	r6,4(r2)
 402a5e8:	10c00215 	stw	r3,8(r2)
 402a5ec:	402d3980 	call	402d398 <_Bfree>
 402a5f0:	e0001015 	stw	zero,64(fp)
 402a5f4:	88002e16 	blt	r17,zero,402a6b0 <_dtoa_r+0x128>
 402a5f8:	80000015 	stw	zero,0(r16)
 402a5fc:	889ffc2c 	andhi	r2,r17,32752
 402a600:	00dffc34 	movhi	r3,32752
 402a604:	10c01c26 	beq	r2,r3,402a678 <_dtoa_r+0xf0>
 402a608:	000d883a 	mov	r6,zero
 402a60c:	000f883a 	mov	r7,zero
 402a610:	9009883a 	mov	r4,r18
 402a614:	980b883a 	mov	r5,r19
 402a618:	4031ea00 	call	4031ea0 <__eqdf2>
 402a61c:	10002b1e 	bne	r2,zero,402a6cc <_dtoa_r+0x144>
 402a620:	d9c02317 	ldw	r7,140(sp)
 402a624:	00800044 	movi	r2,1
 402a628:	38800015 	stw	r2,0(r7)
 402a62c:	d8802517 	ldw	r2,148(sp)
 402a630:	10019e26 	beq	r2,zero,402acac <_dtoa_r+0x724>
 402a634:	d8c02517 	ldw	r3,148(sp)
 402a638:	00800034 	movhi	r2,0
 402a63c:	10813944 	addi	r2,r2,1253
 402a640:	18800015 	stw	r2,0(r3)
 402a644:	10bfffc4 	addi	r2,r2,-1
 402a648:	dfc02117 	ldw	ra,132(sp)
 402a64c:	df002017 	ldw	fp,128(sp)
 402a650:	ddc01f17 	ldw	r23,124(sp)
 402a654:	dd801e17 	ldw	r22,120(sp)
 402a658:	dd401d17 	ldw	r21,116(sp)
 402a65c:	dd001c17 	ldw	r20,112(sp)
 402a660:	dcc01b17 	ldw	r19,108(sp)
 402a664:	dc801a17 	ldw	r18,104(sp)
 402a668:	dc401917 	ldw	r17,100(sp)
 402a66c:	dc001817 	ldw	r16,96(sp)
 402a670:	dec02204 	addi	sp,sp,136
 402a674:	f800283a 	ret
 402a678:	d8c02317 	ldw	r3,140(sp)
 402a67c:	0089c3c4 	movi	r2,9999
 402a680:	18800015 	stw	r2,0(r3)
 402a684:	90017726 	beq	r18,zero,402ac64 <_dtoa_r+0x6dc>
 402a688:	00800034 	movhi	r2,0
 402a68c:	10814504 	addi	r2,r2,1300
 402a690:	d9002517 	ldw	r4,148(sp)
 402a694:	203fec26 	beq	r4,zero,402a648 <__flash_rwdata_start+0xffff43dc>
 402a698:	10c000c7 	ldb	r3,3(r2)
 402a69c:	1801781e 	bne	r3,zero,402ac80 <_dtoa_r+0x6f8>
 402a6a0:	10c000c4 	addi	r3,r2,3
 402a6a4:	d9802517 	ldw	r6,148(sp)
 402a6a8:	30c00015 	stw	r3,0(r6)
 402a6ac:	003fe606 	br	402a648 <__flash_rwdata_start+0xffff43dc>
 402a6b0:	04e00034 	movhi	r19,32768
 402a6b4:	9cffffc4 	addi	r19,r19,-1
 402a6b8:	00800044 	movi	r2,1
 402a6bc:	8ce6703a 	and	r19,r17,r19
 402a6c0:	80800015 	stw	r2,0(r16)
 402a6c4:	9823883a 	mov	r17,r19
 402a6c8:	003fcc06 	br	402a5fc <__flash_rwdata_start+0xffff4390>
 402a6cc:	d8800204 	addi	r2,sp,8
 402a6d0:	d8800015 	stw	r2,0(sp)
 402a6d4:	d9c00104 	addi	r7,sp,4
 402a6d8:	900b883a 	mov	r5,r18
 402a6dc:	980d883a 	mov	r6,r19
 402a6e0:	e009883a 	mov	r4,fp
 402a6e4:	8820d53a 	srli	r16,r17,20
 402a6e8:	402df840 	call	402df84 <__d2b>
 402a6ec:	d8800915 	stw	r2,36(sp)
 402a6f0:	8001651e 	bne	r16,zero,402ac88 <_dtoa_r+0x700>
 402a6f4:	dd800217 	ldw	r22,8(sp)
 402a6f8:	dc000117 	ldw	r16,4(sp)
 402a6fc:	00800804 	movi	r2,32
 402a700:	b421883a 	add	r16,r22,r16
 402a704:	80c10c84 	addi	r3,r16,1074
 402a708:	10c2d10e 	bge	r2,r3,402b250 <_dtoa_r+0xcc8>
 402a70c:	00801004 	movi	r2,64
 402a710:	81010484 	addi	r4,r16,1042
 402a714:	10c7c83a 	sub	r3,r2,r3
 402a718:	9108d83a 	srl	r4,r18,r4
 402a71c:	88e2983a 	sll	r17,r17,r3
 402a720:	2448b03a 	or	r4,r4,r17
 402a724:	403318c0 	call	403318c <__floatunsidf>
 402a728:	017f8434 	movhi	r5,65040
 402a72c:	01800044 	movi	r6,1
 402a730:	1009883a 	mov	r4,r2
 402a734:	194b883a 	add	r5,r3,r5
 402a738:	843fffc4 	addi	r16,r16,-1
 402a73c:	d9801115 	stw	r6,68(sp)
 402a740:	000d883a 	mov	r6,zero
 402a744:	01cffe34 	movhi	r7,16376
 402a748:	40328100 	call	4032810 <__subdf3>
 402a74c:	0198dbf4 	movhi	r6,25455
 402a750:	01cff4f4 	movhi	r7,16339
 402a754:	3190d844 	addi	r6,r6,17249
 402a758:	39e1e9c4 	addi	r7,r7,-30809
 402a75c:	1009883a 	mov	r4,r2
 402a760:	180b883a 	mov	r5,r3
 402a764:	40320f80 	call	40320f8 <__muldf3>
 402a768:	01a2d874 	movhi	r6,35681
 402a76c:	01cff1f4 	movhi	r7,16327
 402a770:	31b22cc4 	addi	r6,r6,-14157
 402a774:	39e28a04 	addi	r7,r7,-30168
 402a778:	180b883a 	mov	r5,r3
 402a77c:	1009883a 	mov	r4,r2
 402a780:	40315f40 	call	40315f4 <__adddf3>
 402a784:	8009883a 	mov	r4,r16
 402a788:	1029883a 	mov	r20,r2
 402a78c:	1823883a 	mov	r17,r3
 402a790:	40266300 	call	4026630 <__floatsidf>
 402a794:	019427f4 	movhi	r6,20639
 402a798:	01cff4f4 	movhi	r7,16339
 402a79c:	319e7ec4 	addi	r6,r6,31227
 402a7a0:	39d104c4 	addi	r7,r7,17427
 402a7a4:	1009883a 	mov	r4,r2
 402a7a8:	180b883a 	mov	r5,r3
 402a7ac:	40320f80 	call	40320f8 <__muldf3>
 402a7b0:	100d883a 	mov	r6,r2
 402a7b4:	180f883a 	mov	r7,r3
 402a7b8:	a009883a 	mov	r4,r20
 402a7bc:	880b883a 	mov	r5,r17
 402a7c0:	40315f40 	call	40315f4 <__adddf3>
 402a7c4:	1009883a 	mov	r4,r2
 402a7c8:	180b883a 	mov	r5,r3
 402a7cc:	1029883a 	mov	r20,r2
 402a7d0:	1823883a 	mov	r17,r3
 402a7d4:	403310c0 	call	403310c <__fixdfsi>
 402a7d8:	000d883a 	mov	r6,zero
 402a7dc:	000f883a 	mov	r7,zero
 402a7e0:	a009883a 	mov	r4,r20
 402a7e4:	880b883a 	mov	r5,r17
 402a7e8:	d8800515 	stw	r2,20(sp)
 402a7ec:	40320040 	call	4032004 <__ledf2>
 402a7f0:	10028716 	blt	r2,zero,402b210 <_dtoa_r+0xc88>
 402a7f4:	d8c00517 	ldw	r3,20(sp)
 402a7f8:	00800584 	movi	r2,22
 402a7fc:	10c27536 	bltu	r2,r3,402b1d4 <_dtoa_r+0xc4c>
 402a800:	180490fa 	slli	r2,r3,3
 402a804:	00c00034 	movhi	r3,0
 402a808:	18c16104 	addi	r3,r3,1412
 402a80c:	1885883a 	add	r2,r3,r2
 402a810:	11000017 	ldw	r4,0(r2)
 402a814:	11400117 	ldw	r5,4(r2)
 402a818:	900d883a 	mov	r6,r18
 402a81c:	980f883a 	mov	r7,r19
 402a820:	4031f280 	call	4031f28 <__gedf2>
 402a824:	00828d0e 	bge	zero,r2,402b25c <_dtoa_r+0xcd4>
 402a828:	d9000517 	ldw	r4,20(sp)
 402a82c:	d8000e15 	stw	zero,56(sp)
 402a830:	213fffc4 	addi	r4,r4,-1
 402a834:	d9000515 	stw	r4,20(sp)
 402a838:	b42dc83a 	sub	r22,r22,r16
 402a83c:	b5bfffc4 	addi	r22,r22,-1
 402a840:	b0026f16 	blt	r22,zero,402b200 <_dtoa_r+0xc78>
 402a844:	d8000815 	stw	zero,32(sp)
 402a848:	d9c00517 	ldw	r7,20(sp)
 402a84c:	38026416 	blt	r7,zero,402b1e0 <_dtoa_r+0xc58>
 402a850:	b1ed883a 	add	r22,r22,r7
 402a854:	d9c00d15 	stw	r7,52(sp)
 402a858:	d8000a15 	stw	zero,40(sp)
 402a85c:	d9800317 	ldw	r6,12(sp)
 402a860:	00800244 	movi	r2,9
 402a864:	11811436 	bltu	r2,r6,402acb8 <_dtoa_r+0x730>
 402a868:	00800144 	movi	r2,5
 402a86c:	1184e10e 	bge	r2,r6,402bbf4 <_dtoa_r+0x166c>
 402a870:	31bfff04 	addi	r6,r6,-4
 402a874:	d9800315 	stw	r6,12(sp)
 402a878:	0023883a 	mov	r17,zero
 402a87c:	d9800317 	ldw	r6,12(sp)
 402a880:	008000c4 	movi	r2,3
 402a884:	30836726 	beq	r6,r2,402b624 <_dtoa_r+0x109c>
 402a888:	1183410e 	bge	r2,r6,402b590 <_dtoa_r+0x1008>
 402a88c:	d9c00317 	ldw	r7,12(sp)
 402a890:	00800104 	movi	r2,4
 402a894:	38827c26 	beq	r7,r2,402b288 <_dtoa_r+0xd00>
 402a898:	00800144 	movi	r2,5
 402a89c:	3884c41e 	bne	r7,r2,402bbb0 <_dtoa_r+0x1628>
 402a8a0:	00800044 	movi	r2,1
 402a8a4:	d8800b15 	stw	r2,44(sp)
 402a8a8:	d8c00517 	ldw	r3,20(sp)
 402a8ac:	d9002217 	ldw	r4,136(sp)
 402a8b0:	1907883a 	add	r3,r3,r4
 402a8b4:	19800044 	addi	r6,r3,1
 402a8b8:	d8c00c15 	stw	r3,48(sp)
 402a8bc:	d9800615 	stw	r6,24(sp)
 402a8c0:	0183a40e 	bge	zero,r6,402b754 <_dtoa_r+0x11cc>
 402a8c4:	d9800617 	ldw	r6,24(sp)
 402a8c8:	3021883a 	mov	r16,r6
 402a8cc:	e0001115 	stw	zero,68(fp)
 402a8d0:	008005c4 	movi	r2,23
 402a8d4:	1184c92e 	bgeu	r2,r6,402bbfc <_dtoa_r+0x1674>
 402a8d8:	00c00044 	movi	r3,1
 402a8dc:	00800104 	movi	r2,4
 402a8e0:	1085883a 	add	r2,r2,r2
 402a8e4:	11000504 	addi	r4,r2,20
 402a8e8:	180b883a 	mov	r5,r3
 402a8ec:	18c00044 	addi	r3,r3,1
 402a8f0:	313ffb2e 	bgeu	r6,r4,402a8e0 <__flash_rwdata_start+0xffff4674>
 402a8f4:	e1401115 	stw	r5,68(fp)
 402a8f8:	e009883a 	mov	r4,fp
 402a8fc:	402d2f00 	call	402d2f0 <_Balloc>
 402a900:	d8800715 	stw	r2,28(sp)
 402a904:	e0801015 	stw	r2,64(fp)
 402a908:	00800384 	movi	r2,14
 402a90c:	1400f736 	bltu	r2,r16,402acec <_dtoa_r+0x764>
 402a910:	8800f626 	beq	r17,zero,402acec <_dtoa_r+0x764>
 402a914:	d9c00517 	ldw	r7,20(sp)
 402a918:	01c39a0e 	bge	zero,r7,402b784 <_dtoa_r+0x11fc>
 402a91c:	388003cc 	andi	r2,r7,15
 402a920:	100490fa 	slli	r2,r2,3
 402a924:	382bd13a 	srai	r21,r7,4
 402a928:	00c00034 	movhi	r3,0
 402a92c:	18c16104 	addi	r3,r3,1412
 402a930:	1885883a 	add	r2,r3,r2
 402a934:	a8c0040c 	andi	r3,r21,16
 402a938:	12400017 	ldw	r9,0(r2)
 402a93c:	12000117 	ldw	r8,4(r2)
 402a940:	18037926 	beq	r3,zero,402b728 <_dtoa_r+0x11a0>
 402a944:	00800034 	movhi	r2,0
 402a948:	10815704 	addi	r2,r2,1372
 402a94c:	11800817 	ldw	r6,32(r2)
 402a950:	11c00917 	ldw	r7,36(r2)
 402a954:	9009883a 	mov	r4,r18
 402a958:	980b883a 	mov	r5,r19
 402a95c:	da001715 	stw	r8,92(sp)
 402a960:	da401615 	stw	r9,88(sp)
 402a964:	4025d480 	call	4025d48 <__divdf3>
 402a968:	da001717 	ldw	r8,92(sp)
 402a96c:	da401617 	ldw	r9,88(sp)
 402a970:	ad4003cc 	andi	r21,r21,15
 402a974:	040000c4 	movi	r16,3
 402a978:	1023883a 	mov	r17,r2
 402a97c:	1829883a 	mov	r20,r3
 402a980:	a8001126 	beq	r21,zero,402a9c8 <_dtoa_r+0x440>
 402a984:	05c00034 	movhi	r23,0
 402a988:	bdc15704 	addi	r23,r23,1372
 402a98c:	4805883a 	mov	r2,r9
 402a990:	4007883a 	mov	r3,r8
 402a994:	a980004c 	andi	r6,r21,1
 402a998:	1009883a 	mov	r4,r2
 402a99c:	a82bd07a 	srai	r21,r21,1
 402a9a0:	180b883a 	mov	r5,r3
 402a9a4:	30000426 	beq	r6,zero,402a9b8 <_dtoa_r+0x430>
 402a9a8:	b9800017 	ldw	r6,0(r23)
 402a9ac:	b9c00117 	ldw	r7,4(r23)
 402a9b0:	84000044 	addi	r16,r16,1
 402a9b4:	40320f80 	call	40320f8 <__muldf3>
 402a9b8:	bdc00204 	addi	r23,r23,8
 402a9bc:	a83ff51e 	bne	r21,zero,402a994 <__flash_rwdata_start+0xffff4728>
 402a9c0:	1013883a 	mov	r9,r2
 402a9c4:	1811883a 	mov	r8,r3
 402a9c8:	480d883a 	mov	r6,r9
 402a9cc:	400f883a 	mov	r7,r8
 402a9d0:	8809883a 	mov	r4,r17
 402a9d4:	a00b883a 	mov	r5,r20
 402a9d8:	4025d480 	call	4025d48 <__divdf3>
 402a9dc:	d8800f15 	stw	r2,60(sp)
 402a9e0:	d8c01015 	stw	r3,64(sp)
 402a9e4:	d8c00e17 	ldw	r3,56(sp)
 402a9e8:	18000626 	beq	r3,zero,402aa04 <_dtoa_r+0x47c>
 402a9ec:	d9000f17 	ldw	r4,60(sp)
 402a9f0:	d9401017 	ldw	r5,64(sp)
 402a9f4:	000d883a 	mov	r6,zero
 402a9f8:	01cffc34 	movhi	r7,16368
 402a9fc:	40320040 	call	4032004 <__ledf2>
 402aa00:	10040b16 	blt	r2,zero,402ba30 <_dtoa_r+0x14a8>
 402aa04:	8009883a 	mov	r4,r16
 402aa08:	40266300 	call	4026630 <__floatsidf>
 402aa0c:	d9800f17 	ldw	r6,60(sp)
 402aa10:	d9c01017 	ldw	r7,64(sp)
 402aa14:	1009883a 	mov	r4,r2
 402aa18:	180b883a 	mov	r5,r3
 402aa1c:	40320f80 	call	40320f8 <__muldf3>
 402aa20:	000d883a 	mov	r6,zero
 402aa24:	01d00734 	movhi	r7,16412
 402aa28:	1009883a 	mov	r4,r2
 402aa2c:	180b883a 	mov	r5,r3
 402aa30:	40315f40 	call	40315f4 <__adddf3>
 402aa34:	1021883a 	mov	r16,r2
 402aa38:	d8800617 	ldw	r2,24(sp)
 402aa3c:	047f3034 	movhi	r17,64704
 402aa40:	1c63883a 	add	r17,r3,r17
 402aa44:	10031826 	beq	r2,zero,402b6a8 <_dtoa_r+0x1120>
 402aa48:	d8c00517 	ldw	r3,20(sp)
 402aa4c:	db000617 	ldw	r12,24(sp)
 402aa50:	d8c01315 	stw	r3,76(sp)
 402aa54:	d9000b17 	ldw	r4,44(sp)
 402aa58:	20038f26 	beq	r4,zero,402b898 <_dtoa_r+0x1310>
 402aa5c:	60bfffc4 	addi	r2,r12,-1
 402aa60:	100490fa 	slli	r2,r2,3
 402aa64:	00c00034 	movhi	r3,0
 402aa68:	18c16104 	addi	r3,r3,1412
 402aa6c:	1885883a 	add	r2,r3,r2
 402aa70:	11800017 	ldw	r6,0(r2)
 402aa74:	11c00117 	ldw	r7,4(r2)
 402aa78:	d8800717 	ldw	r2,28(sp)
 402aa7c:	0009883a 	mov	r4,zero
 402aa80:	014ff834 	movhi	r5,16352
 402aa84:	db001615 	stw	r12,88(sp)
 402aa88:	15c00044 	addi	r23,r2,1
 402aa8c:	4025d480 	call	4025d48 <__divdf3>
 402aa90:	800d883a 	mov	r6,r16
 402aa94:	880f883a 	mov	r7,r17
 402aa98:	1009883a 	mov	r4,r2
 402aa9c:	180b883a 	mov	r5,r3
 402aaa0:	40328100 	call	4032810 <__subdf3>
 402aaa4:	d9401017 	ldw	r5,64(sp)
 402aaa8:	d9000f17 	ldw	r4,60(sp)
 402aaac:	102b883a 	mov	r21,r2
 402aab0:	d8c01215 	stw	r3,72(sp)
 402aab4:	403310c0 	call	403310c <__fixdfsi>
 402aab8:	1009883a 	mov	r4,r2
 402aabc:	1029883a 	mov	r20,r2
 402aac0:	40266300 	call	4026630 <__floatsidf>
 402aac4:	d9000f17 	ldw	r4,60(sp)
 402aac8:	d9401017 	ldw	r5,64(sp)
 402aacc:	100d883a 	mov	r6,r2
 402aad0:	180f883a 	mov	r7,r3
 402aad4:	40328100 	call	4032810 <__subdf3>
 402aad8:	1823883a 	mov	r17,r3
 402aadc:	d8c00717 	ldw	r3,28(sp)
 402aae0:	d9401217 	ldw	r5,72(sp)
 402aae4:	a2000c04 	addi	r8,r20,48
 402aae8:	1021883a 	mov	r16,r2
 402aaec:	1a000005 	stb	r8,0(r3)
 402aaf0:	800d883a 	mov	r6,r16
 402aaf4:	880f883a 	mov	r7,r17
 402aaf8:	a809883a 	mov	r4,r21
 402aafc:	4029883a 	mov	r20,r8
 402ab00:	4031f280 	call	4031f28 <__gedf2>
 402ab04:	00841d16 	blt	zero,r2,402bb7c <_dtoa_r+0x15f4>
 402ab08:	800d883a 	mov	r6,r16
 402ab0c:	880f883a 	mov	r7,r17
 402ab10:	0009883a 	mov	r4,zero
 402ab14:	014ffc34 	movhi	r5,16368
 402ab18:	40328100 	call	4032810 <__subdf3>
 402ab1c:	d9401217 	ldw	r5,72(sp)
 402ab20:	100d883a 	mov	r6,r2
 402ab24:	180f883a 	mov	r7,r3
 402ab28:	a809883a 	mov	r4,r21
 402ab2c:	4031f280 	call	4031f28 <__gedf2>
 402ab30:	db001617 	ldw	r12,88(sp)
 402ab34:	00840e16 	blt	zero,r2,402bb70 <_dtoa_r+0x15e8>
 402ab38:	00800044 	movi	r2,1
 402ab3c:	13006b0e 	bge	r2,r12,402acec <_dtoa_r+0x764>
 402ab40:	d9000717 	ldw	r4,28(sp)
 402ab44:	dd800f15 	stw	r22,60(sp)
 402ab48:	dcc01015 	stw	r19,64(sp)
 402ab4c:	2319883a 	add	r12,r4,r12
 402ab50:	dcc01217 	ldw	r19,72(sp)
 402ab54:	602d883a 	mov	r22,r12
 402ab58:	dc801215 	stw	r18,72(sp)
 402ab5c:	b825883a 	mov	r18,r23
 402ab60:	00000906 	br	402ab88 <_dtoa_r+0x600>
 402ab64:	40328100 	call	4032810 <__subdf3>
 402ab68:	a80d883a 	mov	r6,r21
 402ab6c:	980f883a 	mov	r7,r19
 402ab70:	1009883a 	mov	r4,r2
 402ab74:	180b883a 	mov	r5,r3
 402ab78:	40320040 	call	4032004 <__ledf2>
 402ab7c:	1003e816 	blt	r2,zero,402bb20 <_dtoa_r+0x1598>
 402ab80:	b825883a 	mov	r18,r23
 402ab84:	bd83e926 	beq	r23,r22,402bb2c <_dtoa_r+0x15a4>
 402ab88:	a809883a 	mov	r4,r21
 402ab8c:	980b883a 	mov	r5,r19
 402ab90:	000d883a 	mov	r6,zero
 402ab94:	01d00934 	movhi	r7,16420
 402ab98:	40320f80 	call	40320f8 <__muldf3>
 402ab9c:	000d883a 	mov	r6,zero
 402aba0:	01d00934 	movhi	r7,16420
 402aba4:	8009883a 	mov	r4,r16
 402aba8:	880b883a 	mov	r5,r17
 402abac:	102b883a 	mov	r21,r2
 402abb0:	1827883a 	mov	r19,r3
 402abb4:	40320f80 	call	40320f8 <__muldf3>
 402abb8:	180b883a 	mov	r5,r3
 402abbc:	1009883a 	mov	r4,r2
 402abc0:	1821883a 	mov	r16,r3
 402abc4:	1023883a 	mov	r17,r2
 402abc8:	403310c0 	call	403310c <__fixdfsi>
 402abcc:	1009883a 	mov	r4,r2
 402abd0:	1029883a 	mov	r20,r2
 402abd4:	40266300 	call	4026630 <__floatsidf>
 402abd8:	8809883a 	mov	r4,r17
 402abdc:	800b883a 	mov	r5,r16
 402abe0:	100d883a 	mov	r6,r2
 402abe4:	180f883a 	mov	r7,r3
 402abe8:	40328100 	call	4032810 <__subdf3>
 402abec:	a5000c04 	addi	r20,r20,48
 402abf0:	a80d883a 	mov	r6,r21
 402abf4:	980f883a 	mov	r7,r19
 402abf8:	1009883a 	mov	r4,r2
 402abfc:	180b883a 	mov	r5,r3
 402ac00:	95000005 	stb	r20,0(r18)
 402ac04:	1021883a 	mov	r16,r2
 402ac08:	1823883a 	mov	r17,r3
 402ac0c:	40320040 	call	4032004 <__ledf2>
 402ac10:	bdc00044 	addi	r23,r23,1
 402ac14:	800d883a 	mov	r6,r16
 402ac18:	880f883a 	mov	r7,r17
 402ac1c:	0009883a 	mov	r4,zero
 402ac20:	014ffc34 	movhi	r5,16368
 402ac24:	103fcf0e 	bge	r2,zero,402ab64 <__flash_rwdata_start+0xffff48f8>
 402ac28:	d8c01317 	ldw	r3,76(sp)
 402ac2c:	d8c00515 	stw	r3,20(sp)
 402ac30:	d9400917 	ldw	r5,36(sp)
 402ac34:	e009883a 	mov	r4,fp
 402ac38:	402d3980 	call	402d398 <_Bfree>
 402ac3c:	d9000517 	ldw	r4,20(sp)
 402ac40:	d9802317 	ldw	r6,140(sp)
 402ac44:	d9c02517 	ldw	r7,148(sp)
 402ac48:	b8000005 	stb	zero,0(r23)
 402ac4c:	20800044 	addi	r2,r4,1
 402ac50:	30800015 	stw	r2,0(r6)
 402ac54:	3802aa26 	beq	r7,zero,402b700 <_dtoa_r+0x1178>
 402ac58:	3dc00015 	stw	r23,0(r7)
 402ac5c:	d8800717 	ldw	r2,28(sp)
 402ac60:	003e7906 	br	402a648 <__flash_rwdata_start+0xffff43dc>
 402ac64:	00800434 	movhi	r2,16
 402ac68:	10bfffc4 	addi	r2,r2,-1
 402ac6c:	88a2703a 	and	r17,r17,r2
 402ac70:	883e851e 	bne	r17,zero,402a688 <__flash_rwdata_start+0xffff441c>
 402ac74:	00800034 	movhi	r2,0
 402ac78:	10814204 	addi	r2,r2,1288
 402ac7c:	003e8406 	br	402a690 <__flash_rwdata_start+0xffff4424>
 402ac80:	10c00204 	addi	r3,r2,8
 402ac84:	003e8706 	br	402a6a4 <__flash_rwdata_start+0xffff4438>
 402ac88:	01400434 	movhi	r5,16
 402ac8c:	297fffc4 	addi	r5,r5,-1
 402ac90:	994a703a 	and	r5,r19,r5
 402ac94:	9009883a 	mov	r4,r18
 402ac98:	843f0044 	addi	r16,r16,-1023
 402ac9c:	294ffc34 	orhi	r5,r5,16368
 402aca0:	dd800217 	ldw	r22,8(sp)
 402aca4:	d8001115 	stw	zero,68(sp)
 402aca8:	003ea506 	br	402a740 <__flash_rwdata_start+0xffff44d4>
 402acac:	00800034 	movhi	r2,0
 402acb0:	10813904 	addi	r2,r2,1252
 402acb4:	003e6406 	br	402a648 <__flash_rwdata_start+0xffff43dc>
 402acb8:	e0001115 	stw	zero,68(fp)
 402acbc:	000b883a 	mov	r5,zero
 402acc0:	e009883a 	mov	r4,fp
 402acc4:	402d2f00 	call	402d2f0 <_Balloc>
 402acc8:	01bfffc4 	movi	r6,-1
 402accc:	01c00044 	movi	r7,1
 402acd0:	d8800715 	stw	r2,28(sp)
 402acd4:	d9800c15 	stw	r6,48(sp)
 402acd8:	e0801015 	stw	r2,64(fp)
 402acdc:	d8000315 	stw	zero,12(sp)
 402ace0:	d9c00b15 	stw	r7,44(sp)
 402ace4:	d9800615 	stw	r6,24(sp)
 402ace8:	d8002215 	stw	zero,136(sp)
 402acec:	d8800117 	ldw	r2,4(sp)
 402acf0:	10008916 	blt	r2,zero,402af18 <_dtoa_r+0x990>
 402acf4:	d9000517 	ldw	r4,20(sp)
 402acf8:	00c00384 	movi	r3,14
 402acfc:	19008616 	blt	r3,r4,402af18 <_dtoa_r+0x990>
 402ad00:	200490fa 	slli	r2,r4,3
 402ad04:	00c00034 	movhi	r3,0
 402ad08:	d9802217 	ldw	r6,136(sp)
 402ad0c:	18c16104 	addi	r3,r3,1412
 402ad10:	1885883a 	add	r2,r3,r2
 402ad14:	14000017 	ldw	r16,0(r2)
 402ad18:	14400117 	ldw	r17,4(r2)
 402ad1c:	30016316 	blt	r6,zero,402b2ac <_dtoa_r+0xd24>
 402ad20:	800d883a 	mov	r6,r16
 402ad24:	880f883a 	mov	r7,r17
 402ad28:	9009883a 	mov	r4,r18
 402ad2c:	980b883a 	mov	r5,r19
 402ad30:	4025d480 	call	4025d48 <__divdf3>
 402ad34:	180b883a 	mov	r5,r3
 402ad38:	1009883a 	mov	r4,r2
 402ad3c:	403310c0 	call	403310c <__fixdfsi>
 402ad40:	1009883a 	mov	r4,r2
 402ad44:	102b883a 	mov	r21,r2
 402ad48:	40266300 	call	4026630 <__floatsidf>
 402ad4c:	800d883a 	mov	r6,r16
 402ad50:	880f883a 	mov	r7,r17
 402ad54:	1009883a 	mov	r4,r2
 402ad58:	180b883a 	mov	r5,r3
 402ad5c:	40320f80 	call	40320f8 <__muldf3>
 402ad60:	100d883a 	mov	r6,r2
 402ad64:	180f883a 	mov	r7,r3
 402ad68:	9009883a 	mov	r4,r18
 402ad6c:	980b883a 	mov	r5,r19
 402ad70:	40328100 	call	4032810 <__subdf3>
 402ad74:	d9c00717 	ldw	r7,28(sp)
 402ad78:	1009883a 	mov	r4,r2
 402ad7c:	a8800c04 	addi	r2,r21,48
 402ad80:	38800005 	stb	r2,0(r7)
 402ad84:	3dc00044 	addi	r23,r7,1
 402ad88:	d9c00617 	ldw	r7,24(sp)
 402ad8c:	01800044 	movi	r6,1
 402ad90:	180b883a 	mov	r5,r3
 402ad94:	2005883a 	mov	r2,r4
 402ad98:	39803826 	beq	r7,r6,402ae7c <_dtoa_r+0x8f4>
 402ad9c:	000d883a 	mov	r6,zero
 402ada0:	01d00934 	movhi	r7,16420
 402ada4:	40320f80 	call	40320f8 <__muldf3>
 402ada8:	000d883a 	mov	r6,zero
 402adac:	000f883a 	mov	r7,zero
 402adb0:	1009883a 	mov	r4,r2
 402adb4:	180b883a 	mov	r5,r3
 402adb8:	1025883a 	mov	r18,r2
 402adbc:	1827883a 	mov	r19,r3
 402adc0:	4031ea00 	call	4031ea0 <__eqdf2>
 402adc4:	103f9a26 	beq	r2,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402adc8:	d9c00617 	ldw	r7,24(sp)
 402adcc:	d8c00717 	ldw	r3,28(sp)
 402add0:	b829883a 	mov	r20,r23
 402add4:	38bfffc4 	addi	r2,r7,-1
 402add8:	18ad883a 	add	r22,r3,r2
 402addc:	00000a06 	br	402ae08 <_dtoa_r+0x880>
 402ade0:	40320f80 	call	40320f8 <__muldf3>
 402ade4:	000d883a 	mov	r6,zero
 402ade8:	000f883a 	mov	r7,zero
 402adec:	1009883a 	mov	r4,r2
 402adf0:	180b883a 	mov	r5,r3
 402adf4:	1025883a 	mov	r18,r2
 402adf8:	1827883a 	mov	r19,r3
 402adfc:	b829883a 	mov	r20,r23
 402ae00:	4031ea00 	call	4031ea0 <__eqdf2>
 402ae04:	103f8a26 	beq	r2,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402ae08:	800d883a 	mov	r6,r16
 402ae0c:	880f883a 	mov	r7,r17
 402ae10:	9009883a 	mov	r4,r18
 402ae14:	980b883a 	mov	r5,r19
 402ae18:	4025d480 	call	4025d48 <__divdf3>
 402ae1c:	180b883a 	mov	r5,r3
 402ae20:	1009883a 	mov	r4,r2
 402ae24:	403310c0 	call	403310c <__fixdfsi>
 402ae28:	1009883a 	mov	r4,r2
 402ae2c:	102b883a 	mov	r21,r2
 402ae30:	40266300 	call	4026630 <__floatsidf>
 402ae34:	800d883a 	mov	r6,r16
 402ae38:	880f883a 	mov	r7,r17
 402ae3c:	1009883a 	mov	r4,r2
 402ae40:	180b883a 	mov	r5,r3
 402ae44:	40320f80 	call	40320f8 <__muldf3>
 402ae48:	100d883a 	mov	r6,r2
 402ae4c:	180f883a 	mov	r7,r3
 402ae50:	9009883a 	mov	r4,r18
 402ae54:	980b883a 	mov	r5,r19
 402ae58:	40328100 	call	4032810 <__subdf3>
 402ae5c:	aa000c04 	addi	r8,r21,48
 402ae60:	a2000005 	stb	r8,0(r20)
 402ae64:	000d883a 	mov	r6,zero
 402ae68:	01d00934 	movhi	r7,16420
 402ae6c:	1009883a 	mov	r4,r2
 402ae70:	180b883a 	mov	r5,r3
 402ae74:	a5c00044 	addi	r23,r20,1
 402ae78:	b53fd91e 	bne	r22,r20,402ade0 <__flash_rwdata_start+0xffff4b74>
 402ae7c:	100d883a 	mov	r6,r2
 402ae80:	180f883a 	mov	r7,r3
 402ae84:	1009883a 	mov	r4,r2
 402ae88:	180b883a 	mov	r5,r3
 402ae8c:	40315f40 	call	40315f4 <__adddf3>
 402ae90:	100d883a 	mov	r6,r2
 402ae94:	180f883a 	mov	r7,r3
 402ae98:	8009883a 	mov	r4,r16
 402ae9c:	880b883a 	mov	r5,r17
 402aea0:	1027883a 	mov	r19,r2
 402aea4:	1825883a 	mov	r18,r3
 402aea8:	40320040 	call	4032004 <__ledf2>
 402aeac:	10000816 	blt	r2,zero,402aed0 <_dtoa_r+0x948>
 402aeb0:	980d883a 	mov	r6,r19
 402aeb4:	900f883a 	mov	r7,r18
 402aeb8:	8009883a 	mov	r4,r16
 402aebc:	880b883a 	mov	r5,r17
 402aec0:	4031ea00 	call	4031ea0 <__eqdf2>
 402aec4:	103f5a1e 	bne	r2,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402aec8:	ad40004c 	andi	r21,r21,1
 402aecc:	a83f5826 	beq	r21,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402aed0:	bd3fffc3 	ldbu	r20,-1(r23)
 402aed4:	b8bfffc4 	addi	r2,r23,-1
 402aed8:	1007883a 	mov	r3,r2
 402aedc:	01400e44 	movi	r5,57
 402aee0:	d9800717 	ldw	r6,28(sp)
 402aee4:	00000506 	br	402aefc <_dtoa_r+0x974>
 402aee8:	18ffffc4 	addi	r3,r3,-1
 402aeec:	11824726 	beq	r2,r6,402b80c <_dtoa_r+0x1284>
 402aef0:	1d000003 	ldbu	r20,0(r3)
 402aef4:	102f883a 	mov	r23,r2
 402aef8:	10bfffc4 	addi	r2,r2,-1
 402aefc:	a1003fcc 	andi	r4,r20,255
 402af00:	2100201c 	xori	r4,r4,128
 402af04:	213fe004 	addi	r4,r4,-128
 402af08:	217ff726 	beq	r4,r5,402aee8 <__flash_rwdata_start+0xffff4c7c>
 402af0c:	a2000044 	addi	r8,r20,1
 402af10:	12000005 	stb	r8,0(r2)
 402af14:	003f4606 	br	402ac30 <__flash_rwdata_start+0xffff49c4>
 402af18:	d9000b17 	ldw	r4,44(sp)
 402af1c:	2000c826 	beq	r4,zero,402b240 <_dtoa_r+0xcb8>
 402af20:	d9800317 	ldw	r6,12(sp)
 402af24:	00c00044 	movi	r3,1
 402af28:	1980f90e 	bge	r3,r6,402b310 <_dtoa_r+0xd88>
 402af2c:	d8800617 	ldw	r2,24(sp)
 402af30:	d8c00a17 	ldw	r3,40(sp)
 402af34:	157fffc4 	addi	r21,r2,-1
 402af38:	1d41f316 	blt	r3,r21,402b708 <_dtoa_r+0x1180>
 402af3c:	1d6bc83a 	sub	r21,r3,r21
 402af40:	d9c00617 	ldw	r7,24(sp)
 402af44:	3802aa16 	blt	r7,zero,402b9f0 <_dtoa_r+0x1468>
 402af48:	dd000817 	ldw	r20,32(sp)
 402af4c:	d8800617 	ldw	r2,24(sp)
 402af50:	d8c00817 	ldw	r3,32(sp)
 402af54:	01400044 	movi	r5,1
 402af58:	e009883a 	mov	r4,fp
 402af5c:	1887883a 	add	r3,r3,r2
 402af60:	d8c00815 	stw	r3,32(sp)
 402af64:	b0ad883a 	add	r22,r22,r2
 402af68:	402d6fc0 	call	402d6fc <__i2b>
 402af6c:	1023883a 	mov	r17,r2
 402af70:	a0000826 	beq	r20,zero,402af94 <_dtoa_r+0xa0c>
 402af74:	0580070e 	bge	zero,r22,402af94 <_dtoa_r+0xa0c>
 402af78:	a005883a 	mov	r2,r20
 402af7c:	b500b916 	blt	r22,r20,402b264 <_dtoa_r+0xcdc>
 402af80:	d9000817 	ldw	r4,32(sp)
 402af84:	a0a9c83a 	sub	r20,r20,r2
 402af88:	b0adc83a 	sub	r22,r22,r2
 402af8c:	2089c83a 	sub	r4,r4,r2
 402af90:	d9000815 	stw	r4,32(sp)
 402af94:	d9800a17 	ldw	r6,40(sp)
 402af98:	0181810e 	bge	zero,r6,402b5a0 <_dtoa_r+0x1018>
 402af9c:	d9c00b17 	ldw	r7,44(sp)
 402afa0:	3800b326 	beq	r7,zero,402b270 <_dtoa_r+0xce8>
 402afa4:	a800b226 	beq	r21,zero,402b270 <_dtoa_r+0xce8>
 402afa8:	880b883a 	mov	r5,r17
 402afac:	a80d883a 	mov	r6,r21
 402afb0:	e009883a 	mov	r4,fp
 402afb4:	402d9300 	call	402d930 <__pow5mult>
 402afb8:	d9800917 	ldw	r6,36(sp)
 402afbc:	100b883a 	mov	r5,r2
 402afc0:	e009883a 	mov	r4,fp
 402afc4:	1023883a 	mov	r17,r2
 402afc8:	402d7380 	call	402d738 <__multiply>
 402afcc:	1021883a 	mov	r16,r2
 402afd0:	d8800a17 	ldw	r2,40(sp)
 402afd4:	d9400917 	ldw	r5,36(sp)
 402afd8:	e009883a 	mov	r4,fp
 402afdc:	1545c83a 	sub	r2,r2,r21
 402afe0:	d8800a15 	stw	r2,40(sp)
 402afe4:	402d3980 	call	402d398 <_Bfree>
 402afe8:	d8c00a17 	ldw	r3,40(sp)
 402afec:	18009f1e 	bne	r3,zero,402b26c <_dtoa_r+0xce4>
 402aff0:	05c00044 	movi	r23,1
 402aff4:	e009883a 	mov	r4,fp
 402aff8:	b80b883a 	mov	r5,r23
 402affc:	402d6fc0 	call	402d6fc <__i2b>
 402b000:	d9000d17 	ldw	r4,52(sp)
 402b004:	102b883a 	mov	r21,r2
 402b008:	2000ce26 	beq	r4,zero,402b344 <_dtoa_r+0xdbc>
 402b00c:	200d883a 	mov	r6,r4
 402b010:	100b883a 	mov	r5,r2
 402b014:	e009883a 	mov	r4,fp
 402b018:	402d9300 	call	402d930 <__pow5mult>
 402b01c:	d9800317 	ldw	r6,12(sp)
 402b020:	102b883a 	mov	r21,r2
 402b024:	b981810e 	bge	r23,r6,402b62c <_dtoa_r+0x10a4>
 402b028:	0027883a 	mov	r19,zero
 402b02c:	a8800417 	ldw	r2,16(r21)
 402b030:	05c00804 	movi	r23,32
 402b034:	10800104 	addi	r2,r2,4
 402b038:	1085883a 	add	r2,r2,r2
 402b03c:	1085883a 	add	r2,r2,r2
 402b040:	a885883a 	add	r2,r21,r2
 402b044:	11000017 	ldw	r4,0(r2)
 402b048:	402d5e40 	call	402d5e4 <__hi0bits>
 402b04c:	b885c83a 	sub	r2,r23,r2
 402b050:	1585883a 	add	r2,r2,r22
 402b054:	108007cc 	andi	r2,r2,31
 402b058:	1000b326 	beq	r2,zero,402b328 <_dtoa_r+0xda0>
 402b05c:	00c00804 	movi	r3,32
 402b060:	1887c83a 	sub	r3,r3,r2
 402b064:	01000104 	movi	r4,4
 402b068:	20c2cd0e 	bge	r4,r3,402bba0 <_dtoa_r+0x1618>
 402b06c:	00c00704 	movi	r3,28
 402b070:	1885c83a 	sub	r2,r3,r2
 402b074:	d8c00817 	ldw	r3,32(sp)
 402b078:	a0a9883a 	add	r20,r20,r2
 402b07c:	b0ad883a 	add	r22,r22,r2
 402b080:	1887883a 	add	r3,r3,r2
 402b084:	d8c00815 	stw	r3,32(sp)
 402b088:	d9800817 	ldw	r6,32(sp)
 402b08c:	0180040e 	bge	zero,r6,402b0a0 <_dtoa_r+0xb18>
 402b090:	800b883a 	mov	r5,r16
 402b094:	e009883a 	mov	r4,fp
 402b098:	402da700 	call	402da70 <__lshift>
 402b09c:	1021883a 	mov	r16,r2
 402b0a0:	0580050e 	bge	zero,r22,402b0b8 <_dtoa_r+0xb30>
 402b0a4:	a80b883a 	mov	r5,r21
 402b0a8:	b00d883a 	mov	r6,r22
 402b0ac:	e009883a 	mov	r4,fp
 402b0b0:	402da700 	call	402da70 <__lshift>
 402b0b4:	102b883a 	mov	r21,r2
 402b0b8:	d9c00e17 	ldw	r7,56(sp)
 402b0bc:	3801211e 	bne	r7,zero,402b544 <_dtoa_r+0xfbc>
 402b0c0:	d9800617 	ldw	r6,24(sp)
 402b0c4:	0181380e 	bge	zero,r6,402b5a8 <_dtoa_r+0x1020>
 402b0c8:	d8c00b17 	ldw	r3,44(sp)
 402b0cc:	1800ab1e 	bne	r3,zero,402b37c <_dtoa_r+0xdf4>
 402b0d0:	dc800717 	ldw	r18,28(sp)
 402b0d4:	dcc00617 	ldw	r19,24(sp)
 402b0d8:	9029883a 	mov	r20,r18
 402b0dc:	00000206 	br	402b0e8 <_dtoa_r+0xb60>
 402b0e0:	402d3c00 	call	402d3c0 <__multadd>
 402b0e4:	1021883a 	mov	r16,r2
 402b0e8:	a80b883a 	mov	r5,r21
 402b0ec:	8009883a 	mov	r4,r16
 402b0f0:	402a3880 	call	402a388 <quorem>
 402b0f4:	10800c04 	addi	r2,r2,48
 402b0f8:	90800005 	stb	r2,0(r18)
 402b0fc:	94800044 	addi	r18,r18,1
 402b100:	9507c83a 	sub	r3,r18,r20
 402b104:	000f883a 	mov	r7,zero
 402b108:	01800284 	movi	r6,10
 402b10c:	800b883a 	mov	r5,r16
 402b110:	e009883a 	mov	r4,fp
 402b114:	1cfff216 	blt	r3,r19,402b0e0 <__flash_rwdata_start+0xffff4e74>
 402b118:	1011883a 	mov	r8,r2
 402b11c:	d8800617 	ldw	r2,24(sp)
 402b120:	0082370e 	bge	zero,r2,402ba00 <_dtoa_r+0x1478>
 402b124:	d9000717 	ldw	r4,28(sp)
 402b128:	0025883a 	mov	r18,zero
 402b12c:	20af883a 	add	r23,r4,r2
 402b130:	01800044 	movi	r6,1
 402b134:	800b883a 	mov	r5,r16
 402b138:	e009883a 	mov	r4,fp
 402b13c:	da001715 	stw	r8,92(sp)
 402b140:	402da700 	call	402da70 <__lshift>
 402b144:	a80b883a 	mov	r5,r21
 402b148:	1009883a 	mov	r4,r2
 402b14c:	d8800915 	stw	r2,36(sp)
 402b150:	402dbb80 	call	402dbb8 <__mcmp>
 402b154:	da001717 	ldw	r8,92(sp)
 402b158:	0081800e 	bge	zero,r2,402b75c <_dtoa_r+0x11d4>
 402b15c:	b93fffc3 	ldbu	r4,-1(r23)
 402b160:	b8bfffc4 	addi	r2,r23,-1
 402b164:	1007883a 	mov	r3,r2
 402b168:	01800e44 	movi	r6,57
 402b16c:	d9c00717 	ldw	r7,28(sp)
 402b170:	00000506 	br	402b188 <_dtoa_r+0xc00>
 402b174:	18ffffc4 	addi	r3,r3,-1
 402b178:	11c12326 	beq	r2,r7,402b608 <_dtoa_r+0x1080>
 402b17c:	19000003 	ldbu	r4,0(r3)
 402b180:	102f883a 	mov	r23,r2
 402b184:	10bfffc4 	addi	r2,r2,-1
 402b188:	21403fcc 	andi	r5,r4,255
 402b18c:	2940201c 	xori	r5,r5,128
 402b190:	297fe004 	addi	r5,r5,-128
 402b194:	29bff726 	beq	r5,r6,402b174 <__flash_rwdata_start+0xffff4f08>
 402b198:	21000044 	addi	r4,r4,1
 402b19c:	11000005 	stb	r4,0(r2)
 402b1a0:	a80b883a 	mov	r5,r21
 402b1a4:	e009883a 	mov	r4,fp
 402b1a8:	402d3980 	call	402d398 <_Bfree>
 402b1ac:	883ea026 	beq	r17,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402b1b0:	90000426 	beq	r18,zero,402b1c4 <_dtoa_r+0xc3c>
 402b1b4:	94400326 	beq	r18,r17,402b1c4 <_dtoa_r+0xc3c>
 402b1b8:	900b883a 	mov	r5,r18
 402b1bc:	e009883a 	mov	r4,fp
 402b1c0:	402d3980 	call	402d398 <_Bfree>
 402b1c4:	880b883a 	mov	r5,r17
 402b1c8:	e009883a 	mov	r4,fp
 402b1cc:	402d3980 	call	402d398 <_Bfree>
 402b1d0:	003e9706 	br	402ac30 <__flash_rwdata_start+0xffff49c4>
 402b1d4:	01800044 	movi	r6,1
 402b1d8:	d9800e15 	stw	r6,56(sp)
 402b1dc:	003d9606 	br	402a838 <__flash_rwdata_start+0xffff45cc>
 402b1e0:	d8800817 	ldw	r2,32(sp)
 402b1e4:	d8c00517 	ldw	r3,20(sp)
 402b1e8:	d8000d15 	stw	zero,52(sp)
 402b1ec:	10c5c83a 	sub	r2,r2,r3
 402b1f0:	00c9c83a 	sub	r4,zero,r3
 402b1f4:	d8800815 	stw	r2,32(sp)
 402b1f8:	d9000a15 	stw	r4,40(sp)
 402b1fc:	003d9706 	br	402a85c <__flash_rwdata_start+0xffff45f0>
 402b200:	05adc83a 	sub	r22,zero,r22
 402b204:	dd800815 	stw	r22,32(sp)
 402b208:	002d883a 	mov	r22,zero
 402b20c:	003d8e06 	br	402a848 <__flash_rwdata_start+0xffff45dc>
 402b210:	d9000517 	ldw	r4,20(sp)
 402b214:	40266300 	call	4026630 <__floatsidf>
 402b218:	100d883a 	mov	r6,r2
 402b21c:	180f883a 	mov	r7,r3
 402b220:	a009883a 	mov	r4,r20
 402b224:	880b883a 	mov	r5,r17
 402b228:	4031ea00 	call	4031ea0 <__eqdf2>
 402b22c:	103d7126 	beq	r2,zero,402a7f4 <__flash_rwdata_start+0xffff4588>
 402b230:	d9c00517 	ldw	r7,20(sp)
 402b234:	39ffffc4 	addi	r7,r7,-1
 402b238:	d9c00515 	stw	r7,20(sp)
 402b23c:	003d6d06 	br	402a7f4 <__flash_rwdata_start+0xffff4588>
 402b240:	dd400a17 	ldw	r21,40(sp)
 402b244:	dd000817 	ldw	r20,32(sp)
 402b248:	0023883a 	mov	r17,zero
 402b24c:	003f4806 	br	402af70 <__flash_rwdata_start+0xffff4d04>
 402b250:	10e3c83a 	sub	r17,r2,r3
 402b254:	9448983a 	sll	r4,r18,r17
 402b258:	003d3206 	br	402a724 <__flash_rwdata_start+0xffff44b8>
 402b25c:	d8000e15 	stw	zero,56(sp)
 402b260:	003d7506 	br	402a838 <__flash_rwdata_start+0xffff45cc>
 402b264:	b005883a 	mov	r2,r22
 402b268:	003f4506 	br	402af80 <__flash_rwdata_start+0xffff4d14>
 402b26c:	dc000915 	stw	r16,36(sp)
 402b270:	d9800a17 	ldw	r6,40(sp)
 402b274:	d9400917 	ldw	r5,36(sp)
 402b278:	e009883a 	mov	r4,fp
 402b27c:	402d9300 	call	402d930 <__pow5mult>
 402b280:	1021883a 	mov	r16,r2
 402b284:	003f5a06 	br	402aff0 <__flash_rwdata_start+0xffff4d84>
 402b288:	01c00044 	movi	r7,1
 402b28c:	d9c00b15 	stw	r7,44(sp)
 402b290:	d8802217 	ldw	r2,136(sp)
 402b294:	0081280e 	bge	zero,r2,402b738 <_dtoa_r+0x11b0>
 402b298:	100d883a 	mov	r6,r2
 402b29c:	1021883a 	mov	r16,r2
 402b2a0:	d8800c15 	stw	r2,48(sp)
 402b2a4:	d8800615 	stw	r2,24(sp)
 402b2a8:	003d8806 	br	402a8cc <__flash_rwdata_start+0xffff4660>
 402b2ac:	d8800617 	ldw	r2,24(sp)
 402b2b0:	00be9b16 	blt	zero,r2,402ad20 <__flash_rwdata_start+0xffff4ab4>
 402b2b4:	10010f1e 	bne	r2,zero,402b6f4 <_dtoa_r+0x116c>
 402b2b8:	880b883a 	mov	r5,r17
 402b2bc:	000d883a 	mov	r6,zero
 402b2c0:	01d00534 	movhi	r7,16404
 402b2c4:	8009883a 	mov	r4,r16
 402b2c8:	40320f80 	call	40320f8 <__muldf3>
 402b2cc:	900d883a 	mov	r6,r18
 402b2d0:	980f883a 	mov	r7,r19
 402b2d4:	1009883a 	mov	r4,r2
 402b2d8:	180b883a 	mov	r5,r3
 402b2dc:	4031f280 	call	4031f28 <__gedf2>
 402b2e0:	002b883a 	mov	r21,zero
 402b2e4:	0023883a 	mov	r17,zero
 402b2e8:	1000bf16 	blt	r2,zero,402b5e8 <_dtoa_r+0x1060>
 402b2ec:	d9802217 	ldw	r6,136(sp)
 402b2f0:	ddc00717 	ldw	r23,28(sp)
 402b2f4:	018c303a 	nor	r6,zero,r6
 402b2f8:	d9800515 	stw	r6,20(sp)
 402b2fc:	a80b883a 	mov	r5,r21
 402b300:	e009883a 	mov	r4,fp
 402b304:	402d3980 	call	402d398 <_Bfree>
 402b308:	883e4926 	beq	r17,zero,402ac30 <__flash_rwdata_start+0xffff49c4>
 402b30c:	003fad06 	br	402b1c4 <__flash_rwdata_start+0xffff4f58>
 402b310:	d9c01117 	ldw	r7,68(sp)
 402b314:	3801bc26 	beq	r7,zero,402ba08 <_dtoa_r+0x1480>
 402b318:	10810cc4 	addi	r2,r2,1075
 402b31c:	dd400a17 	ldw	r21,40(sp)
 402b320:	dd000817 	ldw	r20,32(sp)
 402b324:	003f0a06 	br	402af50 <__flash_rwdata_start+0xffff4ce4>
 402b328:	00800704 	movi	r2,28
 402b32c:	d9000817 	ldw	r4,32(sp)
 402b330:	a0a9883a 	add	r20,r20,r2
 402b334:	b0ad883a 	add	r22,r22,r2
 402b338:	2089883a 	add	r4,r4,r2
 402b33c:	d9000815 	stw	r4,32(sp)
 402b340:	003f5106 	br	402b088 <__flash_rwdata_start+0xffff4e1c>
 402b344:	d8c00317 	ldw	r3,12(sp)
 402b348:	b8c1fc0e 	bge	r23,r3,402bb3c <_dtoa_r+0x15b4>
 402b34c:	0027883a 	mov	r19,zero
 402b350:	b805883a 	mov	r2,r23
 402b354:	003f3e06 	br	402b050 <__flash_rwdata_start+0xffff4de4>
 402b358:	880b883a 	mov	r5,r17
 402b35c:	e009883a 	mov	r4,fp
 402b360:	000f883a 	mov	r7,zero
 402b364:	01800284 	movi	r6,10
 402b368:	402d3c00 	call	402d3c0 <__multadd>
 402b36c:	d9000c17 	ldw	r4,48(sp)
 402b370:	1023883a 	mov	r17,r2
 402b374:	0102040e 	bge	zero,r4,402bb88 <_dtoa_r+0x1600>
 402b378:	d9000615 	stw	r4,24(sp)
 402b37c:	0500050e 	bge	zero,r20,402b394 <_dtoa_r+0xe0c>
 402b380:	880b883a 	mov	r5,r17
 402b384:	a00d883a 	mov	r6,r20
 402b388:	e009883a 	mov	r4,fp
 402b38c:	402da700 	call	402da70 <__lshift>
 402b390:	1023883a 	mov	r17,r2
 402b394:	9801241e 	bne	r19,zero,402b828 <_dtoa_r+0x12a0>
 402b398:	8829883a 	mov	r20,r17
 402b39c:	d9000617 	ldw	r4,24(sp)
 402b3a0:	dcc00717 	ldw	r19,28(sp)
 402b3a4:	9480004c 	andi	r18,r18,1
 402b3a8:	20bfffc4 	addi	r2,r4,-1
 402b3ac:	9885883a 	add	r2,r19,r2
 402b3b0:	d8800415 	stw	r2,16(sp)
 402b3b4:	dc800615 	stw	r18,24(sp)
 402b3b8:	a80b883a 	mov	r5,r21
 402b3bc:	8009883a 	mov	r4,r16
 402b3c0:	402a3880 	call	402a388 <quorem>
 402b3c4:	880b883a 	mov	r5,r17
 402b3c8:	8009883a 	mov	r4,r16
 402b3cc:	102f883a 	mov	r23,r2
 402b3d0:	402dbb80 	call	402dbb8 <__mcmp>
 402b3d4:	a80b883a 	mov	r5,r21
 402b3d8:	a00d883a 	mov	r6,r20
 402b3dc:	e009883a 	mov	r4,fp
 402b3e0:	102d883a 	mov	r22,r2
 402b3e4:	402dc180 	call	402dc18 <__mdiff>
 402b3e8:	1007883a 	mov	r3,r2
 402b3ec:	10800317 	ldw	r2,12(r2)
 402b3f0:	bc800c04 	addi	r18,r23,48
 402b3f4:	180b883a 	mov	r5,r3
 402b3f8:	10004e1e 	bne	r2,zero,402b534 <_dtoa_r+0xfac>
 402b3fc:	8009883a 	mov	r4,r16
 402b400:	d8c01615 	stw	r3,88(sp)
 402b404:	402dbb80 	call	402dbb8 <__mcmp>
 402b408:	d8c01617 	ldw	r3,88(sp)
 402b40c:	e009883a 	mov	r4,fp
 402b410:	d8801615 	stw	r2,88(sp)
 402b414:	180b883a 	mov	r5,r3
 402b418:	402d3980 	call	402d398 <_Bfree>
 402b41c:	d8801617 	ldw	r2,88(sp)
 402b420:	1000041e 	bne	r2,zero,402b434 <_dtoa_r+0xeac>
 402b424:	d9800317 	ldw	r6,12(sp)
 402b428:	3000021e 	bne	r6,zero,402b434 <_dtoa_r+0xeac>
 402b42c:	d8c00617 	ldw	r3,24(sp)
 402b430:	18003726 	beq	r3,zero,402b510 <_dtoa_r+0xf88>
 402b434:	b0002016 	blt	r22,zero,402b4b8 <_dtoa_r+0xf30>
 402b438:	b000041e 	bne	r22,zero,402b44c <_dtoa_r+0xec4>
 402b43c:	d9000317 	ldw	r4,12(sp)
 402b440:	2000021e 	bne	r4,zero,402b44c <_dtoa_r+0xec4>
 402b444:	d8c00617 	ldw	r3,24(sp)
 402b448:	18001b26 	beq	r3,zero,402b4b8 <_dtoa_r+0xf30>
 402b44c:	00810716 	blt	zero,r2,402b86c <_dtoa_r+0x12e4>
 402b450:	d8c00417 	ldw	r3,16(sp)
 402b454:	9d800044 	addi	r22,r19,1
 402b458:	9c800005 	stb	r18,0(r19)
 402b45c:	b02f883a 	mov	r23,r22
 402b460:	98c10626 	beq	r19,r3,402b87c <_dtoa_r+0x12f4>
 402b464:	800b883a 	mov	r5,r16
 402b468:	000f883a 	mov	r7,zero
 402b46c:	01800284 	movi	r6,10
 402b470:	e009883a 	mov	r4,fp
 402b474:	402d3c00 	call	402d3c0 <__multadd>
 402b478:	1021883a 	mov	r16,r2
 402b47c:	000f883a 	mov	r7,zero
 402b480:	01800284 	movi	r6,10
 402b484:	880b883a 	mov	r5,r17
 402b488:	e009883a 	mov	r4,fp
 402b48c:	8d002526 	beq	r17,r20,402b524 <_dtoa_r+0xf9c>
 402b490:	402d3c00 	call	402d3c0 <__multadd>
 402b494:	a00b883a 	mov	r5,r20
 402b498:	000f883a 	mov	r7,zero
 402b49c:	01800284 	movi	r6,10
 402b4a0:	e009883a 	mov	r4,fp
 402b4a4:	1023883a 	mov	r17,r2
 402b4a8:	402d3c00 	call	402d3c0 <__multadd>
 402b4ac:	1029883a 	mov	r20,r2
 402b4b0:	b027883a 	mov	r19,r22
 402b4b4:	003fc006 	br	402b3b8 <__flash_rwdata_start+0xffff514c>
 402b4b8:	9011883a 	mov	r8,r18
 402b4bc:	00800e0e 	bge	zero,r2,402b4f8 <_dtoa_r+0xf70>
 402b4c0:	800b883a 	mov	r5,r16
 402b4c4:	01800044 	movi	r6,1
 402b4c8:	e009883a 	mov	r4,fp
 402b4cc:	da001715 	stw	r8,92(sp)
 402b4d0:	402da700 	call	402da70 <__lshift>
 402b4d4:	a80b883a 	mov	r5,r21
 402b4d8:	1009883a 	mov	r4,r2
 402b4dc:	1021883a 	mov	r16,r2
 402b4e0:	402dbb80 	call	402dbb8 <__mcmp>
 402b4e4:	da001717 	ldw	r8,92(sp)
 402b4e8:	0081960e 	bge	zero,r2,402bb44 <_dtoa_r+0x15bc>
 402b4ec:	00800e44 	movi	r2,57
 402b4f0:	40817026 	beq	r8,r2,402bab4 <_dtoa_r+0x152c>
 402b4f4:	ba000c44 	addi	r8,r23,49
 402b4f8:	8825883a 	mov	r18,r17
 402b4fc:	9dc00044 	addi	r23,r19,1
 402b500:	9a000005 	stb	r8,0(r19)
 402b504:	a023883a 	mov	r17,r20
 402b508:	dc000915 	stw	r16,36(sp)
 402b50c:	003f2406 	br	402b1a0 <__flash_rwdata_start+0xffff4f34>
 402b510:	00800e44 	movi	r2,57
 402b514:	9011883a 	mov	r8,r18
 402b518:	90816626 	beq	r18,r2,402bab4 <_dtoa_r+0x152c>
 402b51c:	05bff516 	blt	zero,r22,402b4f4 <__flash_rwdata_start+0xffff5288>
 402b520:	003ff506 	br	402b4f8 <__flash_rwdata_start+0xffff528c>
 402b524:	402d3c00 	call	402d3c0 <__multadd>
 402b528:	1023883a 	mov	r17,r2
 402b52c:	1029883a 	mov	r20,r2
 402b530:	003fdf06 	br	402b4b0 <__flash_rwdata_start+0xffff5244>
 402b534:	e009883a 	mov	r4,fp
 402b538:	402d3980 	call	402d398 <_Bfree>
 402b53c:	00800044 	movi	r2,1
 402b540:	003fbc06 	br	402b434 <__flash_rwdata_start+0xffff51c8>
 402b544:	a80b883a 	mov	r5,r21
 402b548:	8009883a 	mov	r4,r16
 402b54c:	402dbb80 	call	402dbb8 <__mcmp>
 402b550:	103edb0e 	bge	r2,zero,402b0c0 <__flash_rwdata_start+0xffff4e54>
 402b554:	800b883a 	mov	r5,r16
 402b558:	000f883a 	mov	r7,zero
 402b55c:	01800284 	movi	r6,10
 402b560:	e009883a 	mov	r4,fp
 402b564:	402d3c00 	call	402d3c0 <__multadd>
 402b568:	1021883a 	mov	r16,r2
 402b56c:	d8800517 	ldw	r2,20(sp)
 402b570:	d8c00b17 	ldw	r3,44(sp)
 402b574:	10bfffc4 	addi	r2,r2,-1
 402b578:	d8800515 	stw	r2,20(sp)
 402b57c:	183f761e 	bne	r3,zero,402b358 <__flash_rwdata_start+0xffff50ec>
 402b580:	d9000c17 	ldw	r4,48(sp)
 402b584:	0101730e 	bge	zero,r4,402bb54 <_dtoa_r+0x15cc>
 402b588:	d9000615 	stw	r4,24(sp)
 402b58c:	003ed006 	br	402b0d0 <__flash_rwdata_start+0xffff4e64>
 402b590:	00800084 	movi	r2,2
 402b594:	3081861e 	bne	r6,r2,402bbb0 <_dtoa_r+0x1628>
 402b598:	d8000b15 	stw	zero,44(sp)
 402b59c:	003f3c06 	br	402b290 <__flash_rwdata_start+0xffff5024>
 402b5a0:	dc000917 	ldw	r16,36(sp)
 402b5a4:	003e9206 	br	402aff0 <__flash_rwdata_start+0xffff4d84>
 402b5a8:	d9c00317 	ldw	r7,12(sp)
 402b5ac:	00800084 	movi	r2,2
 402b5b0:	11fec50e 	bge	r2,r7,402b0c8 <__flash_rwdata_start+0xffff4e5c>
 402b5b4:	d9000617 	ldw	r4,24(sp)
 402b5b8:	20013c1e 	bne	r4,zero,402baac <_dtoa_r+0x1524>
 402b5bc:	a80b883a 	mov	r5,r21
 402b5c0:	000f883a 	mov	r7,zero
 402b5c4:	01800144 	movi	r6,5
 402b5c8:	e009883a 	mov	r4,fp
 402b5cc:	402d3c00 	call	402d3c0 <__multadd>
 402b5d0:	100b883a 	mov	r5,r2
 402b5d4:	8009883a 	mov	r4,r16
 402b5d8:	102b883a 	mov	r21,r2
 402b5dc:	402dbb80 	call	402dbb8 <__mcmp>
 402b5e0:	dc000915 	stw	r16,36(sp)
 402b5e4:	00bf410e 	bge	zero,r2,402b2ec <__flash_rwdata_start+0xffff5080>
 402b5e8:	d9c00717 	ldw	r7,28(sp)
 402b5ec:	00800c44 	movi	r2,49
 402b5f0:	38800005 	stb	r2,0(r7)
 402b5f4:	d8800517 	ldw	r2,20(sp)
 402b5f8:	3dc00044 	addi	r23,r7,1
 402b5fc:	10800044 	addi	r2,r2,1
 402b600:	d8800515 	stw	r2,20(sp)
 402b604:	003f3d06 	br	402b2fc <__flash_rwdata_start+0xffff5090>
 402b608:	d9800517 	ldw	r6,20(sp)
 402b60c:	d9c00717 	ldw	r7,28(sp)
 402b610:	00800c44 	movi	r2,49
 402b614:	31800044 	addi	r6,r6,1
 402b618:	d9800515 	stw	r6,20(sp)
 402b61c:	38800005 	stb	r2,0(r7)
 402b620:	003edf06 	br	402b1a0 <__flash_rwdata_start+0xffff4f34>
 402b624:	d8000b15 	stw	zero,44(sp)
 402b628:	003c9f06 	br	402a8a8 <__flash_rwdata_start+0xffff463c>
 402b62c:	903e7e1e 	bne	r18,zero,402b028 <__flash_rwdata_start+0xffff4dbc>
 402b630:	00800434 	movhi	r2,16
 402b634:	10bfffc4 	addi	r2,r2,-1
 402b638:	9884703a 	and	r2,r19,r2
 402b63c:	1000ea1e 	bne	r2,zero,402b9e8 <_dtoa_r+0x1460>
 402b640:	9cdffc2c 	andhi	r19,r19,32752
 402b644:	9800e826 	beq	r19,zero,402b9e8 <_dtoa_r+0x1460>
 402b648:	d9c00817 	ldw	r7,32(sp)
 402b64c:	b5800044 	addi	r22,r22,1
 402b650:	04c00044 	movi	r19,1
 402b654:	39c00044 	addi	r7,r7,1
 402b658:	d9c00815 	stw	r7,32(sp)
 402b65c:	d8800d17 	ldw	r2,52(sp)
 402b660:	103e721e 	bne	r2,zero,402b02c <__flash_rwdata_start+0xffff4dc0>
 402b664:	00800044 	movi	r2,1
 402b668:	003e7906 	br	402b050 <__flash_rwdata_start+0xffff4de4>
 402b66c:	8009883a 	mov	r4,r16
 402b670:	40266300 	call	4026630 <__floatsidf>
 402b674:	d9800f17 	ldw	r6,60(sp)
 402b678:	d9c01017 	ldw	r7,64(sp)
 402b67c:	1009883a 	mov	r4,r2
 402b680:	180b883a 	mov	r5,r3
 402b684:	40320f80 	call	40320f8 <__muldf3>
 402b688:	000d883a 	mov	r6,zero
 402b68c:	01d00734 	movhi	r7,16412
 402b690:	1009883a 	mov	r4,r2
 402b694:	180b883a 	mov	r5,r3
 402b698:	40315f40 	call	40315f4 <__adddf3>
 402b69c:	047f3034 	movhi	r17,64704
 402b6a0:	1021883a 	mov	r16,r2
 402b6a4:	1c63883a 	add	r17,r3,r17
 402b6a8:	d9000f17 	ldw	r4,60(sp)
 402b6ac:	d9401017 	ldw	r5,64(sp)
 402b6b0:	000d883a 	mov	r6,zero
 402b6b4:	01d00534 	movhi	r7,16404
 402b6b8:	40328100 	call	4032810 <__subdf3>
 402b6bc:	800d883a 	mov	r6,r16
 402b6c0:	880f883a 	mov	r7,r17
 402b6c4:	1009883a 	mov	r4,r2
 402b6c8:	180b883a 	mov	r5,r3
 402b6cc:	102b883a 	mov	r21,r2
 402b6d0:	1829883a 	mov	r20,r3
 402b6d4:	4031f280 	call	4031f28 <__gedf2>
 402b6d8:	00806c16 	blt	zero,r2,402b88c <_dtoa_r+0x1304>
 402b6dc:	89e0003c 	xorhi	r7,r17,32768
 402b6e0:	800d883a 	mov	r6,r16
 402b6e4:	a809883a 	mov	r4,r21
 402b6e8:	a00b883a 	mov	r5,r20
 402b6ec:	40320040 	call	4032004 <__ledf2>
 402b6f0:	103d7e0e 	bge	r2,zero,402acec <__flash_rwdata_start+0xffff4a80>
 402b6f4:	002b883a 	mov	r21,zero
 402b6f8:	0023883a 	mov	r17,zero
 402b6fc:	003efb06 	br	402b2ec <__flash_rwdata_start+0xffff5080>
 402b700:	d8800717 	ldw	r2,28(sp)
 402b704:	003bd006 	br	402a648 <__flash_rwdata_start+0xffff43dc>
 402b708:	d9000a17 	ldw	r4,40(sp)
 402b70c:	d9800d17 	ldw	r6,52(sp)
 402b710:	dd400a15 	stw	r21,40(sp)
 402b714:	a905c83a 	sub	r2,r21,r4
 402b718:	308d883a 	add	r6,r6,r2
 402b71c:	d9800d15 	stw	r6,52(sp)
 402b720:	002b883a 	mov	r21,zero
 402b724:	003e0606 	br	402af40 <__flash_rwdata_start+0xffff4cd4>
 402b728:	9023883a 	mov	r17,r18
 402b72c:	9829883a 	mov	r20,r19
 402b730:	04000084 	movi	r16,2
 402b734:	003c9206 	br	402a980 <__flash_rwdata_start+0xffff4714>
 402b738:	04000044 	movi	r16,1
 402b73c:	dc000c15 	stw	r16,48(sp)
 402b740:	dc000615 	stw	r16,24(sp)
 402b744:	dc002215 	stw	r16,136(sp)
 402b748:	e0001115 	stw	zero,68(fp)
 402b74c:	000b883a 	mov	r5,zero
 402b750:	003c6906 	br	402a8f8 <__flash_rwdata_start+0xffff468c>
 402b754:	3021883a 	mov	r16,r6
 402b758:	003ffb06 	br	402b748 <__flash_rwdata_start+0xffff54dc>
 402b75c:	1000021e 	bne	r2,zero,402b768 <_dtoa_r+0x11e0>
 402b760:	4200004c 	andi	r8,r8,1
 402b764:	403e7d1e 	bne	r8,zero,402b15c <__flash_rwdata_start+0xffff4ef0>
 402b768:	01000c04 	movi	r4,48
 402b76c:	00000106 	br	402b774 <_dtoa_r+0x11ec>
 402b770:	102f883a 	mov	r23,r2
 402b774:	b8bfffc4 	addi	r2,r23,-1
 402b778:	10c00007 	ldb	r3,0(r2)
 402b77c:	193ffc26 	beq	r3,r4,402b770 <__flash_rwdata_start+0xffff5504>
 402b780:	003e8706 	br	402b1a0 <__flash_rwdata_start+0xffff4f34>
 402b784:	d8800517 	ldw	r2,20(sp)
 402b788:	00a3c83a 	sub	r17,zero,r2
 402b78c:	8800a426 	beq	r17,zero,402ba20 <_dtoa_r+0x1498>
 402b790:	888003cc 	andi	r2,r17,15
 402b794:	100490fa 	slli	r2,r2,3
 402b798:	00c00034 	movhi	r3,0
 402b79c:	18c16104 	addi	r3,r3,1412
 402b7a0:	1885883a 	add	r2,r3,r2
 402b7a4:	11800017 	ldw	r6,0(r2)
 402b7a8:	11c00117 	ldw	r7,4(r2)
 402b7ac:	9009883a 	mov	r4,r18
 402b7b0:	980b883a 	mov	r5,r19
 402b7b4:	8823d13a 	srai	r17,r17,4
 402b7b8:	40320f80 	call	40320f8 <__muldf3>
 402b7bc:	d8800f15 	stw	r2,60(sp)
 402b7c0:	d8c01015 	stw	r3,64(sp)
 402b7c4:	8800e826 	beq	r17,zero,402bb68 <_dtoa_r+0x15e0>
 402b7c8:	05000034 	movhi	r20,0
 402b7cc:	a5015704 	addi	r20,r20,1372
 402b7d0:	04000084 	movi	r16,2
 402b7d4:	8980004c 	andi	r6,r17,1
 402b7d8:	1009883a 	mov	r4,r2
 402b7dc:	8823d07a 	srai	r17,r17,1
 402b7e0:	180b883a 	mov	r5,r3
 402b7e4:	30000426 	beq	r6,zero,402b7f8 <_dtoa_r+0x1270>
 402b7e8:	a1800017 	ldw	r6,0(r20)
 402b7ec:	a1c00117 	ldw	r7,4(r20)
 402b7f0:	84000044 	addi	r16,r16,1
 402b7f4:	40320f80 	call	40320f8 <__muldf3>
 402b7f8:	a5000204 	addi	r20,r20,8
 402b7fc:	883ff51e 	bne	r17,zero,402b7d4 <__flash_rwdata_start+0xffff5568>
 402b800:	d8800f15 	stw	r2,60(sp)
 402b804:	d8c01015 	stw	r3,64(sp)
 402b808:	003c7606 	br	402a9e4 <__flash_rwdata_start+0xffff4778>
 402b80c:	00c00c04 	movi	r3,48
 402b810:	10c00005 	stb	r3,0(r2)
 402b814:	d8c00517 	ldw	r3,20(sp)
 402b818:	bd3fffc3 	ldbu	r20,-1(r23)
 402b81c:	18c00044 	addi	r3,r3,1
 402b820:	d8c00515 	stw	r3,20(sp)
 402b824:	003db906 	br	402af0c <__flash_rwdata_start+0xffff4ca0>
 402b828:	89400117 	ldw	r5,4(r17)
 402b82c:	e009883a 	mov	r4,fp
 402b830:	402d2f00 	call	402d2f0 <_Balloc>
 402b834:	89800417 	ldw	r6,16(r17)
 402b838:	89400304 	addi	r5,r17,12
 402b83c:	11000304 	addi	r4,r2,12
 402b840:	31800084 	addi	r6,r6,2
 402b844:	318d883a 	add	r6,r6,r6
 402b848:	318d883a 	add	r6,r6,r6
 402b84c:	1027883a 	mov	r19,r2
 402b850:	402d04c0 	call	402d04c <memcpy>
 402b854:	01800044 	movi	r6,1
 402b858:	980b883a 	mov	r5,r19
 402b85c:	e009883a 	mov	r4,fp
 402b860:	402da700 	call	402da70 <__lshift>
 402b864:	1029883a 	mov	r20,r2
 402b868:	003ecc06 	br	402b39c <__flash_rwdata_start+0xffff5130>
 402b86c:	00800e44 	movi	r2,57
 402b870:	90809026 	beq	r18,r2,402bab4 <_dtoa_r+0x152c>
 402b874:	92000044 	addi	r8,r18,1
 402b878:	003f1f06 	br	402b4f8 <__flash_rwdata_start+0xffff528c>
 402b87c:	9011883a 	mov	r8,r18
 402b880:	8825883a 	mov	r18,r17
 402b884:	a023883a 	mov	r17,r20
 402b888:	003e2906 	br	402b130 <__flash_rwdata_start+0xffff4ec4>
 402b88c:	002b883a 	mov	r21,zero
 402b890:	0023883a 	mov	r17,zero
 402b894:	003f5406 	br	402b5e8 <__flash_rwdata_start+0xffff537c>
 402b898:	61bfffc4 	addi	r6,r12,-1
 402b89c:	300490fa 	slli	r2,r6,3
 402b8a0:	00c00034 	movhi	r3,0
 402b8a4:	18c16104 	addi	r3,r3,1412
 402b8a8:	1885883a 	add	r2,r3,r2
 402b8ac:	11000017 	ldw	r4,0(r2)
 402b8b0:	11400117 	ldw	r5,4(r2)
 402b8b4:	d8800717 	ldw	r2,28(sp)
 402b8b8:	880f883a 	mov	r7,r17
 402b8bc:	d9801215 	stw	r6,72(sp)
 402b8c0:	800d883a 	mov	r6,r16
 402b8c4:	db001615 	stw	r12,88(sp)
 402b8c8:	15c00044 	addi	r23,r2,1
 402b8cc:	40320f80 	call	40320f8 <__muldf3>
 402b8d0:	d9401017 	ldw	r5,64(sp)
 402b8d4:	d9000f17 	ldw	r4,60(sp)
 402b8d8:	d8c01515 	stw	r3,84(sp)
 402b8dc:	d8801415 	stw	r2,80(sp)
 402b8e0:	403310c0 	call	403310c <__fixdfsi>
 402b8e4:	1009883a 	mov	r4,r2
 402b8e8:	1021883a 	mov	r16,r2
 402b8ec:	40266300 	call	4026630 <__floatsidf>
 402b8f0:	d9000f17 	ldw	r4,60(sp)
 402b8f4:	d9401017 	ldw	r5,64(sp)
 402b8f8:	100d883a 	mov	r6,r2
 402b8fc:	180f883a 	mov	r7,r3
 402b900:	40328100 	call	4032810 <__subdf3>
 402b904:	1829883a 	mov	r20,r3
 402b908:	d8c00717 	ldw	r3,28(sp)
 402b90c:	84000c04 	addi	r16,r16,48
 402b910:	1023883a 	mov	r17,r2
 402b914:	1c000005 	stb	r16,0(r3)
 402b918:	db001617 	ldw	r12,88(sp)
 402b91c:	00800044 	movi	r2,1
 402b920:	60802226 	beq	r12,r2,402b9ac <_dtoa_r+0x1424>
 402b924:	d9c00717 	ldw	r7,28(sp)
 402b928:	8805883a 	mov	r2,r17
 402b92c:	b82b883a 	mov	r21,r23
 402b930:	3b19883a 	add	r12,r7,r12
 402b934:	6023883a 	mov	r17,r12
 402b938:	a007883a 	mov	r3,r20
 402b93c:	dc800f15 	stw	r18,60(sp)
 402b940:	000d883a 	mov	r6,zero
 402b944:	01d00934 	movhi	r7,16420
 402b948:	1009883a 	mov	r4,r2
 402b94c:	180b883a 	mov	r5,r3
 402b950:	40320f80 	call	40320f8 <__muldf3>
 402b954:	180b883a 	mov	r5,r3
 402b958:	1009883a 	mov	r4,r2
 402b95c:	1829883a 	mov	r20,r3
 402b960:	1025883a 	mov	r18,r2
 402b964:	403310c0 	call	403310c <__fixdfsi>
 402b968:	1009883a 	mov	r4,r2
 402b96c:	1021883a 	mov	r16,r2
 402b970:	40266300 	call	4026630 <__floatsidf>
 402b974:	100d883a 	mov	r6,r2
 402b978:	180f883a 	mov	r7,r3
 402b97c:	9009883a 	mov	r4,r18
 402b980:	a00b883a 	mov	r5,r20
 402b984:	84000c04 	addi	r16,r16,48
 402b988:	40328100 	call	4032810 <__subdf3>
 402b98c:	ad400044 	addi	r21,r21,1
 402b990:	ac3fffc5 	stb	r16,-1(r21)
 402b994:	ac7fea1e 	bne	r21,r17,402b940 <__flash_rwdata_start+0xffff56d4>
 402b998:	1023883a 	mov	r17,r2
 402b99c:	d8801217 	ldw	r2,72(sp)
 402b9a0:	dc800f17 	ldw	r18,60(sp)
 402b9a4:	1829883a 	mov	r20,r3
 402b9a8:	b8af883a 	add	r23,r23,r2
 402b9ac:	d9001417 	ldw	r4,80(sp)
 402b9b0:	d9401517 	ldw	r5,84(sp)
 402b9b4:	000d883a 	mov	r6,zero
 402b9b8:	01cff834 	movhi	r7,16352
 402b9bc:	40315f40 	call	40315f4 <__adddf3>
 402b9c0:	880d883a 	mov	r6,r17
 402b9c4:	a00f883a 	mov	r7,r20
 402b9c8:	1009883a 	mov	r4,r2
 402b9cc:	180b883a 	mov	r5,r3
 402b9d0:	40320040 	call	4032004 <__ledf2>
 402b9d4:	10003e0e 	bge	r2,zero,402bad0 <_dtoa_r+0x1548>
 402b9d8:	d9001317 	ldw	r4,76(sp)
 402b9dc:	bd3fffc3 	ldbu	r20,-1(r23)
 402b9e0:	d9000515 	stw	r4,20(sp)
 402b9e4:	003d3b06 	br	402aed4 <__flash_rwdata_start+0xffff4c68>
 402b9e8:	0027883a 	mov	r19,zero
 402b9ec:	003f1b06 	br	402b65c <__flash_rwdata_start+0xffff53f0>
 402b9f0:	d8800817 	ldw	r2,32(sp)
 402b9f4:	11e9c83a 	sub	r20,r2,r7
 402b9f8:	0005883a 	mov	r2,zero
 402b9fc:	003d5406 	br	402af50 <__flash_rwdata_start+0xffff4ce4>
 402ba00:	00800044 	movi	r2,1
 402ba04:	003dc706 	br	402b124 <__flash_rwdata_start+0xffff4eb8>
 402ba08:	d8c00217 	ldw	r3,8(sp)
 402ba0c:	00800d84 	movi	r2,54
 402ba10:	dd400a17 	ldw	r21,40(sp)
 402ba14:	10c5c83a 	sub	r2,r2,r3
 402ba18:	dd000817 	ldw	r20,32(sp)
 402ba1c:	003d4c06 	br	402af50 <__flash_rwdata_start+0xffff4ce4>
 402ba20:	dc800f15 	stw	r18,60(sp)
 402ba24:	dcc01015 	stw	r19,64(sp)
 402ba28:	04000084 	movi	r16,2
 402ba2c:	003bed06 	br	402a9e4 <__flash_rwdata_start+0xffff4778>
 402ba30:	d9000617 	ldw	r4,24(sp)
 402ba34:	203f0d26 	beq	r4,zero,402b66c <__flash_rwdata_start+0xffff5400>
 402ba38:	d9800c17 	ldw	r6,48(sp)
 402ba3c:	01bcab0e 	bge	zero,r6,402acec <__flash_rwdata_start+0xffff4a80>
 402ba40:	d9401017 	ldw	r5,64(sp)
 402ba44:	d9000f17 	ldw	r4,60(sp)
 402ba48:	000d883a 	mov	r6,zero
 402ba4c:	01d00934 	movhi	r7,16420
 402ba50:	40320f80 	call	40320f8 <__muldf3>
 402ba54:	81000044 	addi	r4,r16,1
 402ba58:	d8800f15 	stw	r2,60(sp)
 402ba5c:	d8c01015 	stw	r3,64(sp)
 402ba60:	40266300 	call	4026630 <__floatsidf>
 402ba64:	d9800f17 	ldw	r6,60(sp)
 402ba68:	d9c01017 	ldw	r7,64(sp)
 402ba6c:	1009883a 	mov	r4,r2
 402ba70:	180b883a 	mov	r5,r3
 402ba74:	40320f80 	call	40320f8 <__muldf3>
 402ba78:	01d00734 	movhi	r7,16412
 402ba7c:	000d883a 	mov	r6,zero
 402ba80:	1009883a 	mov	r4,r2
 402ba84:	180b883a 	mov	r5,r3
 402ba88:	40315f40 	call	40315f4 <__adddf3>
 402ba8c:	d9c00517 	ldw	r7,20(sp)
 402ba90:	047f3034 	movhi	r17,64704
 402ba94:	1021883a 	mov	r16,r2
 402ba98:	39ffffc4 	addi	r7,r7,-1
 402ba9c:	d9c01315 	stw	r7,76(sp)
 402baa0:	1c63883a 	add	r17,r3,r17
 402baa4:	db000c17 	ldw	r12,48(sp)
 402baa8:	003bea06 	br	402aa54 <__flash_rwdata_start+0xffff47e8>
 402baac:	dc000915 	stw	r16,36(sp)
 402bab0:	003e0e06 	br	402b2ec <__flash_rwdata_start+0xffff5080>
 402bab4:	01000e44 	movi	r4,57
 402bab8:	8825883a 	mov	r18,r17
 402babc:	9dc00044 	addi	r23,r19,1
 402bac0:	99000005 	stb	r4,0(r19)
 402bac4:	a023883a 	mov	r17,r20
 402bac8:	dc000915 	stw	r16,36(sp)
 402bacc:	003da406 	br	402b160 <__flash_rwdata_start+0xffff4ef4>
 402bad0:	d9801417 	ldw	r6,80(sp)
 402bad4:	d9c01517 	ldw	r7,84(sp)
 402bad8:	0009883a 	mov	r4,zero
 402badc:	014ff834 	movhi	r5,16352
 402bae0:	40328100 	call	4032810 <__subdf3>
 402bae4:	880d883a 	mov	r6,r17
 402bae8:	a00f883a 	mov	r7,r20
 402baec:	1009883a 	mov	r4,r2
 402baf0:	180b883a 	mov	r5,r3
 402baf4:	4031f280 	call	4031f28 <__gedf2>
 402baf8:	00bc7c0e 	bge	zero,r2,402acec <__flash_rwdata_start+0xffff4a80>
 402bafc:	01000c04 	movi	r4,48
 402bb00:	00000106 	br	402bb08 <_dtoa_r+0x1580>
 402bb04:	102f883a 	mov	r23,r2
 402bb08:	b8bfffc4 	addi	r2,r23,-1
 402bb0c:	10c00007 	ldb	r3,0(r2)
 402bb10:	193ffc26 	beq	r3,r4,402bb04 <__flash_rwdata_start+0xffff5898>
 402bb14:	d9801317 	ldw	r6,76(sp)
 402bb18:	d9800515 	stw	r6,20(sp)
 402bb1c:	003c4406 	br	402ac30 <__flash_rwdata_start+0xffff49c4>
 402bb20:	d9801317 	ldw	r6,76(sp)
 402bb24:	d9800515 	stw	r6,20(sp)
 402bb28:	003cea06 	br	402aed4 <__flash_rwdata_start+0xffff4c68>
 402bb2c:	dd800f17 	ldw	r22,60(sp)
 402bb30:	dcc01017 	ldw	r19,64(sp)
 402bb34:	dc801217 	ldw	r18,72(sp)
 402bb38:	003c6c06 	br	402acec <__flash_rwdata_start+0xffff4a80>
 402bb3c:	903e031e 	bne	r18,zero,402b34c <__flash_rwdata_start+0xffff50e0>
 402bb40:	003ebb06 	br	402b630 <__flash_rwdata_start+0xffff53c4>
 402bb44:	103e6c1e 	bne	r2,zero,402b4f8 <__flash_rwdata_start+0xffff528c>
 402bb48:	4080004c 	andi	r2,r8,1
 402bb4c:	103e6a26 	beq	r2,zero,402b4f8 <__flash_rwdata_start+0xffff528c>
 402bb50:	003e6606 	br	402b4ec <__flash_rwdata_start+0xffff5280>
 402bb54:	d8c00317 	ldw	r3,12(sp)
 402bb58:	00800084 	movi	r2,2
 402bb5c:	10c02916 	blt	r2,r3,402bc04 <_dtoa_r+0x167c>
 402bb60:	d9000c17 	ldw	r4,48(sp)
 402bb64:	003e8806 	br	402b588 <__flash_rwdata_start+0xffff531c>
 402bb68:	04000084 	movi	r16,2
 402bb6c:	003b9d06 	br	402a9e4 <__flash_rwdata_start+0xffff4778>
 402bb70:	d9001317 	ldw	r4,76(sp)
 402bb74:	d9000515 	stw	r4,20(sp)
 402bb78:	003cd606 	br	402aed4 <__flash_rwdata_start+0xffff4c68>
 402bb7c:	d8801317 	ldw	r2,76(sp)
 402bb80:	d8800515 	stw	r2,20(sp)
 402bb84:	003c2a06 	br	402ac30 <__flash_rwdata_start+0xffff49c4>
 402bb88:	d9800317 	ldw	r6,12(sp)
 402bb8c:	00800084 	movi	r2,2
 402bb90:	11801516 	blt	r2,r6,402bbe8 <_dtoa_r+0x1660>
 402bb94:	d9c00c17 	ldw	r7,48(sp)
 402bb98:	d9c00615 	stw	r7,24(sp)
 402bb9c:	003df706 	br	402b37c <__flash_rwdata_start+0xffff5110>
 402bba0:	193d3926 	beq	r3,r4,402b088 <__flash_rwdata_start+0xffff4e1c>
 402bba4:	00c00f04 	movi	r3,60
 402bba8:	1885c83a 	sub	r2,r3,r2
 402bbac:	003ddf06 	br	402b32c <__flash_rwdata_start+0xffff50c0>
 402bbb0:	e009883a 	mov	r4,fp
 402bbb4:	e0001115 	stw	zero,68(fp)
 402bbb8:	000b883a 	mov	r5,zero
 402bbbc:	402d2f00 	call	402d2f0 <_Balloc>
 402bbc0:	d8800715 	stw	r2,28(sp)
 402bbc4:	d8c00717 	ldw	r3,28(sp)
 402bbc8:	00bfffc4 	movi	r2,-1
 402bbcc:	01000044 	movi	r4,1
 402bbd0:	d8800c15 	stw	r2,48(sp)
 402bbd4:	e0c01015 	stw	r3,64(fp)
 402bbd8:	d9000b15 	stw	r4,44(sp)
 402bbdc:	d8800615 	stw	r2,24(sp)
 402bbe0:	d8002215 	stw	zero,136(sp)
 402bbe4:	003c4106 	br	402acec <__flash_rwdata_start+0xffff4a80>
 402bbe8:	d8c00c17 	ldw	r3,48(sp)
 402bbec:	d8c00615 	stw	r3,24(sp)
 402bbf0:	003e7006 	br	402b5b4 <__flash_rwdata_start+0xffff5348>
 402bbf4:	04400044 	movi	r17,1
 402bbf8:	003b2006 	br	402a87c <__flash_rwdata_start+0xffff4610>
 402bbfc:	000b883a 	mov	r5,zero
 402bc00:	003b3d06 	br	402a8f8 <__flash_rwdata_start+0xffff468c>
 402bc04:	d8800c17 	ldw	r2,48(sp)
 402bc08:	d8800615 	stw	r2,24(sp)
 402bc0c:	003e6906 	br	402b5b4 <__flash_rwdata_start+0xffff5348>

0402bc10 <__sflush_r>:
 402bc10:	2880030b 	ldhu	r2,12(r5)
 402bc14:	defffb04 	addi	sp,sp,-20
 402bc18:	dcc00315 	stw	r19,12(sp)
 402bc1c:	dc400115 	stw	r17,4(sp)
 402bc20:	dfc00415 	stw	ra,16(sp)
 402bc24:	dc800215 	stw	r18,8(sp)
 402bc28:	dc000015 	stw	r16,0(sp)
 402bc2c:	10c0020c 	andi	r3,r2,8
 402bc30:	2823883a 	mov	r17,r5
 402bc34:	2027883a 	mov	r19,r4
 402bc38:	1800311e 	bne	r3,zero,402bd00 <__sflush_r+0xf0>
 402bc3c:	28c00117 	ldw	r3,4(r5)
 402bc40:	10820014 	ori	r2,r2,2048
 402bc44:	2880030d 	sth	r2,12(r5)
 402bc48:	00c04b0e 	bge	zero,r3,402bd78 <__sflush_r+0x168>
 402bc4c:	8a000a17 	ldw	r8,40(r17)
 402bc50:	40002326 	beq	r8,zero,402bce0 <__sflush_r+0xd0>
 402bc54:	9c000017 	ldw	r16,0(r19)
 402bc58:	10c4000c 	andi	r3,r2,4096
 402bc5c:	98000015 	stw	zero,0(r19)
 402bc60:	18004826 	beq	r3,zero,402bd84 <__sflush_r+0x174>
 402bc64:	89801417 	ldw	r6,80(r17)
 402bc68:	10c0010c 	andi	r3,r2,4
 402bc6c:	18000626 	beq	r3,zero,402bc88 <__sflush_r+0x78>
 402bc70:	88c00117 	ldw	r3,4(r17)
 402bc74:	88800c17 	ldw	r2,48(r17)
 402bc78:	30cdc83a 	sub	r6,r6,r3
 402bc7c:	10000226 	beq	r2,zero,402bc88 <__sflush_r+0x78>
 402bc80:	88800f17 	ldw	r2,60(r17)
 402bc84:	308dc83a 	sub	r6,r6,r2
 402bc88:	89400717 	ldw	r5,28(r17)
 402bc8c:	000f883a 	mov	r7,zero
 402bc90:	9809883a 	mov	r4,r19
 402bc94:	403ee83a 	callr	r8
 402bc98:	00ffffc4 	movi	r3,-1
 402bc9c:	10c04426 	beq	r2,r3,402bdb0 <__sflush_r+0x1a0>
 402bca0:	88c0030b 	ldhu	r3,12(r17)
 402bca4:	89000417 	ldw	r4,16(r17)
 402bca8:	88000115 	stw	zero,4(r17)
 402bcac:	197dffcc 	andi	r5,r3,63487
 402bcb0:	8940030d 	sth	r5,12(r17)
 402bcb4:	89000015 	stw	r4,0(r17)
 402bcb8:	18c4000c 	andi	r3,r3,4096
 402bcbc:	18002c1e 	bne	r3,zero,402bd70 <__sflush_r+0x160>
 402bcc0:	89400c17 	ldw	r5,48(r17)
 402bcc4:	9c000015 	stw	r16,0(r19)
 402bcc8:	28000526 	beq	r5,zero,402bce0 <__sflush_r+0xd0>
 402bccc:	88801004 	addi	r2,r17,64
 402bcd0:	28800226 	beq	r5,r2,402bcdc <__sflush_r+0xcc>
 402bcd4:	9809883a 	mov	r4,r19
 402bcd8:	402c37c0 	call	402c37c <_free_r>
 402bcdc:	88000c15 	stw	zero,48(r17)
 402bce0:	0005883a 	mov	r2,zero
 402bce4:	dfc00417 	ldw	ra,16(sp)
 402bce8:	dcc00317 	ldw	r19,12(sp)
 402bcec:	dc800217 	ldw	r18,8(sp)
 402bcf0:	dc400117 	ldw	r17,4(sp)
 402bcf4:	dc000017 	ldw	r16,0(sp)
 402bcf8:	dec00504 	addi	sp,sp,20
 402bcfc:	f800283a 	ret
 402bd00:	2c800417 	ldw	r18,16(r5)
 402bd04:	903ff626 	beq	r18,zero,402bce0 <__flash_rwdata_start+0xffff5a74>
 402bd08:	2c000017 	ldw	r16,0(r5)
 402bd0c:	108000cc 	andi	r2,r2,3
 402bd10:	2c800015 	stw	r18,0(r5)
 402bd14:	84a1c83a 	sub	r16,r16,r18
 402bd18:	1000131e 	bne	r2,zero,402bd68 <__sflush_r+0x158>
 402bd1c:	28800517 	ldw	r2,20(r5)
 402bd20:	88800215 	stw	r2,8(r17)
 402bd24:	04000316 	blt	zero,r16,402bd34 <__sflush_r+0x124>
 402bd28:	003fed06 	br	402bce0 <__flash_rwdata_start+0xffff5a74>
 402bd2c:	90a5883a 	add	r18,r18,r2
 402bd30:	043feb0e 	bge	zero,r16,402bce0 <__flash_rwdata_start+0xffff5a74>
 402bd34:	88800917 	ldw	r2,36(r17)
 402bd38:	89400717 	ldw	r5,28(r17)
 402bd3c:	800f883a 	mov	r7,r16
 402bd40:	900d883a 	mov	r6,r18
 402bd44:	9809883a 	mov	r4,r19
 402bd48:	103ee83a 	callr	r2
 402bd4c:	80a1c83a 	sub	r16,r16,r2
 402bd50:	00bff616 	blt	zero,r2,402bd2c <__flash_rwdata_start+0xffff5ac0>
 402bd54:	88c0030b 	ldhu	r3,12(r17)
 402bd58:	00bfffc4 	movi	r2,-1
 402bd5c:	18c01014 	ori	r3,r3,64
 402bd60:	88c0030d 	sth	r3,12(r17)
 402bd64:	003fdf06 	br	402bce4 <__flash_rwdata_start+0xffff5a78>
 402bd68:	0005883a 	mov	r2,zero
 402bd6c:	003fec06 	br	402bd20 <__flash_rwdata_start+0xffff5ab4>
 402bd70:	88801415 	stw	r2,80(r17)
 402bd74:	003fd206 	br	402bcc0 <__flash_rwdata_start+0xffff5a54>
 402bd78:	28c00f17 	ldw	r3,60(r5)
 402bd7c:	00ffb316 	blt	zero,r3,402bc4c <__flash_rwdata_start+0xffff59e0>
 402bd80:	003fd706 	br	402bce0 <__flash_rwdata_start+0xffff5a74>
 402bd84:	89400717 	ldw	r5,28(r17)
 402bd88:	000d883a 	mov	r6,zero
 402bd8c:	01c00044 	movi	r7,1
 402bd90:	9809883a 	mov	r4,r19
 402bd94:	403ee83a 	callr	r8
 402bd98:	100d883a 	mov	r6,r2
 402bd9c:	00bfffc4 	movi	r2,-1
 402bda0:	30801426 	beq	r6,r2,402bdf4 <__sflush_r+0x1e4>
 402bda4:	8880030b 	ldhu	r2,12(r17)
 402bda8:	8a000a17 	ldw	r8,40(r17)
 402bdac:	003fae06 	br	402bc68 <__flash_rwdata_start+0xffff59fc>
 402bdb0:	98c00017 	ldw	r3,0(r19)
 402bdb4:	183fba26 	beq	r3,zero,402bca0 <__flash_rwdata_start+0xffff5a34>
 402bdb8:	01000744 	movi	r4,29
 402bdbc:	19000626 	beq	r3,r4,402bdd8 <__sflush_r+0x1c8>
 402bdc0:	01000584 	movi	r4,22
 402bdc4:	19000426 	beq	r3,r4,402bdd8 <__sflush_r+0x1c8>
 402bdc8:	88c0030b 	ldhu	r3,12(r17)
 402bdcc:	18c01014 	ori	r3,r3,64
 402bdd0:	88c0030d 	sth	r3,12(r17)
 402bdd4:	003fc306 	br	402bce4 <__flash_rwdata_start+0xffff5a78>
 402bdd8:	8880030b 	ldhu	r2,12(r17)
 402bddc:	88c00417 	ldw	r3,16(r17)
 402bde0:	88000115 	stw	zero,4(r17)
 402bde4:	10bdffcc 	andi	r2,r2,63487
 402bde8:	8880030d 	sth	r2,12(r17)
 402bdec:	88c00015 	stw	r3,0(r17)
 402bdf0:	003fb306 	br	402bcc0 <__flash_rwdata_start+0xffff5a54>
 402bdf4:	98800017 	ldw	r2,0(r19)
 402bdf8:	103fea26 	beq	r2,zero,402bda4 <__flash_rwdata_start+0xffff5b38>
 402bdfc:	00c00744 	movi	r3,29
 402be00:	10c00226 	beq	r2,r3,402be0c <__sflush_r+0x1fc>
 402be04:	00c00584 	movi	r3,22
 402be08:	10c0031e 	bne	r2,r3,402be18 <__sflush_r+0x208>
 402be0c:	9c000015 	stw	r16,0(r19)
 402be10:	0005883a 	mov	r2,zero
 402be14:	003fb306 	br	402bce4 <__flash_rwdata_start+0xffff5a78>
 402be18:	88c0030b 	ldhu	r3,12(r17)
 402be1c:	3005883a 	mov	r2,r6
 402be20:	18c01014 	ori	r3,r3,64
 402be24:	88c0030d 	sth	r3,12(r17)
 402be28:	003fae06 	br	402bce4 <__flash_rwdata_start+0xffff5a78>

0402be2c <_fflush_r>:
 402be2c:	defffd04 	addi	sp,sp,-12
 402be30:	dc000115 	stw	r16,4(sp)
 402be34:	dfc00215 	stw	ra,8(sp)
 402be38:	2021883a 	mov	r16,r4
 402be3c:	20000226 	beq	r4,zero,402be48 <_fflush_r+0x1c>
 402be40:	20800e17 	ldw	r2,56(r4)
 402be44:	10000c26 	beq	r2,zero,402be78 <_fflush_r+0x4c>
 402be48:	2880030f 	ldh	r2,12(r5)
 402be4c:	1000051e 	bne	r2,zero,402be64 <_fflush_r+0x38>
 402be50:	0005883a 	mov	r2,zero
 402be54:	dfc00217 	ldw	ra,8(sp)
 402be58:	dc000117 	ldw	r16,4(sp)
 402be5c:	dec00304 	addi	sp,sp,12
 402be60:	f800283a 	ret
 402be64:	8009883a 	mov	r4,r16
 402be68:	dfc00217 	ldw	ra,8(sp)
 402be6c:	dc000117 	ldw	r16,4(sp)
 402be70:	dec00304 	addi	sp,sp,12
 402be74:	402bc101 	jmpi	402bc10 <__sflush_r>
 402be78:	d9400015 	stw	r5,0(sp)
 402be7c:	402c2080 	call	402c208 <__sinit>
 402be80:	d9400017 	ldw	r5,0(sp)
 402be84:	003ff006 	br	402be48 <__flash_rwdata_start+0xffff5bdc>

0402be88 <fflush>:
 402be88:	20000526 	beq	r4,zero,402bea0 <fflush+0x18>
 402be8c:	00800034 	movhi	r2,0
 402be90:	10886404 	addi	r2,r2,8592
 402be94:	200b883a 	mov	r5,r4
 402be98:	11000017 	ldw	r4,0(r2)
 402be9c:	402be2c1 	jmpi	402be2c <_fflush_r>
 402bea0:	00800034 	movhi	r2,0
 402bea4:	10886304 	addi	r2,r2,8588
 402bea8:	11000017 	ldw	r4,0(r2)
 402beac:	014100f4 	movhi	r5,1027
 402beb0:	296f8b04 	addi	r5,r5,-16852
 402beb4:	402cc0c1 	jmpi	402cc0c <_fwalk_reent>

0402beb8 <__fp_unlock>:
 402beb8:	0005883a 	mov	r2,zero
 402bebc:	f800283a 	ret

0402bec0 <_cleanup_r>:
 402bec0:	014100f4 	movhi	r5,1027
 402bec4:	29412004 	addi	r5,r5,1152
 402bec8:	402cc0c1 	jmpi	402cc0c <_fwalk_reent>

0402becc <__sinit.part.1>:
 402becc:	defff704 	addi	sp,sp,-36
 402bed0:	00c100f4 	movhi	r3,1027
 402bed4:	dfc00815 	stw	ra,32(sp)
 402bed8:	ddc00715 	stw	r23,28(sp)
 402bedc:	dd800615 	stw	r22,24(sp)
 402bee0:	dd400515 	stw	r21,20(sp)
 402bee4:	dd000415 	stw	r20,16(sp)
 402bee8:	dcc00315 	stw	r19,12(sp)
 402beec:	dc800215 	stw	r18,8(sp)
 402bef0:	dc400115 	stw	r17,4(sp)
 402bef4:	dc000015 	stw	r16,0(sp)
 402bef8:	18efb004 	addi	r3,r3,-16704
 402befc:	24000117 	ldw	r16,4(r4)
 402bf00:	20c00f15 	stw	r3,60(r4)
 402bf04:	2080bb04 	addi	r2,r4,748
 402bf08:	00c000c4 	movi	r3,3
 402bf0c:	20c0b915 	stw	r3,740(r4)
 402bf10:	2080ba15 	stw	r2,744(r4)
 402bf14:	2000b815 	stw	zero,736(r4)
 402bf18:	05c00204 	movi	r23,8
 402bf1c:	00800104 	movi	r2,4
 402bf20:	2025883a 	mov	r18,r4
 402bf24:	b80d883a 	mov	r6,r23
 402bf28:	81001704 	addi	r4,r16,92
 402bf2c:	000b883a 	mov	r5,zero
 402bf30:	80000015 	stw	zero,0(r16)
 402bf34:	80000115 	stw	zero,4(r16)
 402bf38:	80000215 	stw	zero,8(r16)
 402bf3c:	8080030d 	sth	r2,12(r16)
 402bf40:	80001915 	stw	zero,100(r16)
 402bf44:	8000038d 	sth	zero,14(r16)
 402bf48:	80000415 	stw	zero,16(r16)
 402bf4c:	80000515 	stw	zero,20(r16)
 402bf50:	80000615 	stw	zero,24(r16)
 402bf54:	40277940 	call	4027794 <memset>
 402bf58:	058100f4 	movhi	r22,1027
 402bf5c:	94400217 	ldw	r17,8(r18)
 402bf60:	054100f4 	movhi	r21,1027
 402bf64:	050100f4 	movhi	r20,1027
 402bf68:	04c100f4 	movhi	r19,1027
 402bf6c:	b5ba8b04 	addi	r22,r22,-5588
 402bf70:	ad7aa204 	addi	r21,r21,-5496
 402bf74:	a53ac104 	addi	r20,r20,-5372
 402bf78:	9cfad804 	addi	r19,r19,-5280
 402bf7c:	85800815 	stw	r22,32(r16)
 402bf80:	85400915 	stw	r21,36(r16)
 402bf84:	85000a15 	stw	r20,40(r16)
 402bf88:	84c00b15 	stw	r19,44(r16)
 402bf8c:	84000715 	stw	r16,28(r16)
 402bf90:	00800284 	movi	r2,10
 402bf94:	8880030d 	sth	r2,12(r17)
 402bf98:	00800044 	movi	r2,1
 402bf9c:	b80d883a 	mov	r6,r23
 402bfa0:	89001704 	addi	r4,r17,92
 402bfa4:	000b883a 	mov	r5,zero
 402bfa8:	88000015 	stw	zero,0(r17)
 402bfac:	88000115 	stw	zero,4(r17)
 402bfb0:	88000215 	stw	zero,8(r17)
 402bfb4:	88001915 	stw	zero,100(r17)
 402bfb8:	8880038d 	sth	r2,14(r17)
 402bfbc:	88000415 	stw	zero,16(r17)
 402bfc0:	88000515 	stw	zero,20(r17)
 402bfc4:	88000615 	stw	zero,24(r17)
 402bfc8:	40277940 	call	4027794 <memset>
 402bfcc:	94000317 	ldw	r16,12(r18)
 402bfd0:	00800484 	movi	r2,18
 402bfd4:	8c400715 	stw	r17,28(r17)
 402bfd8:	8d800815 	stw	r22,32(r17)
 402bfdc:	8d400915 	stw	r21,36(r17)
 402bfe0:	8d000a15 	stw	r20,40(r17)
 402bfe4:	8cc00b15 	stw	r19,44(r17)
 402bfe8:	8080030d 	sth	r2,12(r16)
 402bfec:	00800084 	movi	r2,2
 402bff0:	80000015 	stw	zero,0(r16)
 402bff4:	80000115 	stw	zero,4(r16)
 402bff8:	80000215 	stw	zero,8(r16)
 402bffc:	80001915 	stw	zero,100(r16)
 402c000:	8080038d 	sth	r2,14(r16)
 402c004:	80000415 	stw	zero,16(r16)
 402c008:	80000515 	stw	zero,20(r16)
 402c00c:	80000615 	stw	zero,24(r16)
 402c010:	b80d883a 	mov	r6,r23
 402c014:	000b883a 	mov	r5,zero
 402c018:	81001704 	addi	r4,r16,92
 402c01c:	40277940 	call	4027794 <memset>
 402c020:	00800044 	movi	r2,1
 402c024:	84000715 	stw	r16,28(r16)
 402c028:	85800815 	stw	r22,32(r16)
 402c02c:	85400915 	stw	r21,36(r16)
 402c030:	85000a15 	stw	r20,40(r16)
 402c034:	84c00b15 	stw	r19,44(r16)
 402c038:	90800e15 	stw	r2,56(r18)
 402c03c:	dfc00817 	ldw	ra,32(sp)
 402c040:	ddc00717 	ldw	r23,28(sp)
 402c044:	dd800617 	ldw	r22,24(sp)
 402c048:	dd400517 	ldw	r21,20(sp)
 402c04c:	dd000417 	ldw	r20,16(sp)
 402c050:	dcc00317 	ldw	r19,12(sp)
 402c054:	dc800217 	ldw	r18,8(sp)
 402c058:	dc400117 	ldw	r17,4(sp)
 402c05c:	dc000017 	ldw	r16,0(sp)
 402c060:	dec00904 	addi	sp,sp,36
 402c064:	f800283a 	ret

0402c068 <__fp_lock>:
 402c068:	0005883a 	mov	r2,zero
 402c06c:	f800283a 	ret

0402c070 <__sfmoreglue>:
 402c070:	defffc04 	addi	sp,sp,-16
 402c074:	dc400115 	stw	r17,4(sp)
 402c078:	2c7fffc4 	addi	r17,r5,-1
 402c07c:	8c401a24 	muli	r17,r17,104
 402c080:	dc800215 	stw	r18,8(sp)
 402c084:	2825883a 	mov	r18,r5
 402c088:	89401d04 	addi	r5,r17,116
 402c08c:	dc000015 	stw	r16,0(sp)
 402c090:	dfc00315 	stw	ra,12(sp)
 402c094:	4026f880 	call	4026f88 <_malloc_r>
 402c098:	1021883a 	mov	r16,r2
 402c09c:	10000726 	beq	r2,zero,402c0bc <__sfmoreglue+0x4c>
 402c0a0:	11000304 	addi	r4,r2,12
 402c0a4:	10000015 	stw	zero,0(r2)
 402c0a8:	14800115 	stw	r18,4(r2)
 402c0ac:	11000215 	stw	r4,8(r2)
 402c0b0:	89801a04 	addi	r6,r17,104
 402c0b4:	000b883a 	mov	r5,zero
 402c0b8:	40277940 	call	4027794 <memset>
 402c0bc:	8005883a 	mov	r2,r16
 402c0c0:	dfc00317 	ldw	ra,12(sp)
 402c0c4:	dc800217 	ldw	r18,8(sp)
 402c0c8:	dc400117 	ldw	r17,4(sp)
 402c0cc:	dc000017 	ldw	r16,0(sp)
 402c0d0:	dec00404 	addi	sp,sp,16
 402c0d4:	f800283a 	ret

0402c0d8 <__sfp>:
 402c0d8:	defffb04 	addi	sp,sp,-20
 402c0dc:	dc000015 	stw	r16,0(sp)
 402c0e0:	04000034 	movhi	r16,0
 402c0e4:	84086304 	addi	r16,r16,8588
 402c0e8:	dcc00315 	stw	r19,12(sp)
 402c0ec:	2027883a 	mov	r19,r4
 402c0f0:	81000017 	ldw	r4,0(r16)
 402c0f4:	dfc00415 	stw	ra,16(sp)
 402c0f8:	dc800215 	stw	r18,8(sp)
 402c0fc:	20800e17 	ldw	r2,56(r4)
 402c100:	dc400115 	stw	r17,4(sp)
 402c104:	1000021e 	bne	r2,zero,402c110 <__sfp+0x38>
 402c108:	402becc0 	call	402becc <__sinit.part.1>
 402c10c:	81000017 	ldw	r4,0(r16)
 402c110:	2480b804 	addi	r18,r4,736
 402c114:	047fffc4 	movi	r17,-1
 402c118:	91000117 	ldw	r4,4(r18)
 402c11c:	94000217 	ldw	r16,8(r18)
 402c120:	213fffc4 	addi	r4,r4,-1
 402c124:	20000a16 	blt	r4,zero,402c150 <__sfp+0x78>
 402c128:	8080030f 	ldh	r2,12(r16)
 402c12c:	10000c26 	beq	r2,zero,402c160 <__sfp+0x88>
 402c130:	80c01d04 	addi	r3,r16,116
 402c134:	00000206 	br	402c140 <__sfp+0x68>
 402c138:	18bfe60f 	ldh	r2,-104(r3)
 402c13c:	10000826 	beq	r2,zero,402c160 <__sfp+0x88>
 402c140:	213fffc4 	addi	r4,r4,-1
 402c144:	1c3ffd04 	addi	r16,r3,-12
 402c148:	18c01a04 	addi	r3,r3,104
 402c14c:	247ffa1e 	bne	r4,r17,402c138 <__flash_rwdata_start+0xffff5ecc>
 402c150:	90800017 	ldw	r2,0(r18)
 402c154:	10001d26 	beq	r2,zero,402c1cc <__sfp+0xf4>
 402c158:	1025883a 	mov	r18,r2
 402c15c:	003fee06 	br	402c118 <__flash_rwdata_start+0xffff5eac>
 402c160:	00bfffc4 	movi	r2,-1
 402c164:	8080038d 	sth	r2,14(r16)
 402c168:	00800044 	movi	r2,1
 402c16c:	8080030d 	sth	r2,12(r16)
 402c170:	80001915 	stw	zero,100(r16)
 402c174:	80000015 	stw	zero,0(r16)
 402c178:	80000215 	stw	zero,8(r16)
 402c17c:	80000115 	stw	zero,4(r16)
 402c180:	80000415 	stw	zero,16(r16)
 402c184:	80000515 	stw	zero,20(r16)
 402c188:	80000615 	stw	zero,24(r16)
 402c18c:	01800204 	movi	r6,8
 402c190:	000b883a 	mov	r5,zero
 402c194:	81001704 	addi	r4,r16,92
 402c198:	40277940 	call	4027794 <memset>
 402c19c:	8005883a 	mov	r2,r16
 402c1a0:	80000c15 	stw	zero,48(r16)
 402c1a4:	80000d15 	stw	zero,52(r16)
 402c1a8:	80001115 	stw	zero,68(r16)
 402c1ac:	80001215 	stw	zero,72(r16)
 402c1b0:	dfc00417 	ldw	ra,16(sp)
 402c1b4:	dcc00317 	ldw	r19,12(sp)
 402c1b8:	dc800217 	ldw	r18,8(sp)
 402c1bc:	dc400117 	ldw	r17,4(sp)
 402c1c0:	dc000017 	ldw	r16,0(sp)
 402c1c4:	dec00504 	addi	sp,sp,20
 402c1c8:	f800283a 	ret
 402c1cc:	01400104 	movi	r5,4
 402c1d0:	9809883a 	mov	r4,r19
 402c1d4:	402c0700 	call	402c070 <__sfmoreglue>
 402c1d8:	90800015 	stw	r2,0(r18)
 402c1dc:	103fde1e 	bne	r2,zero,402c158 <__flash_rwdata_start+0xffff5eec>
 402c1e0:	00800304 	movi	r2,12
 402c1e4:	98800015 	stw	r2,0(r19)
 402c1e8:	0005883a 	mov	r2,zero
 402c1ec:	003ff006 	br	402c1b0 <__flash_rwdata_start+0xffff5f44>

0402c1f0 <_cleanup>:
 402c1f0:	00800034 	movhi	r2,0
 402c1f4:	10886304 	addi	r2,r2,8588
 402c1f8:	11000017 	ldw	r4,0(r2)
 402c1fc:	014100f4 	movhi	r5,1027
 402c200:	29412004 	addi	r5,r5,1152
 402c204:	402cc0c1 	jmpi	402cc0c <_fwalk_reent>

0402c208 <__sinit>:
 402c208:	20800e17 	ldw	r2,56(r4)
 402c20c:	10000126 	beq	r2,zero,402c214 <__sinit+0xc>
 402c210:	f800283a 	ret
 402c214:	402becc1 	jmpi	402becc <__sinit.part.1>

0402c218 <__sfp_lock_acquire>:
 402c218:	f800283a 	ret

0402c21c <__sfp_lock_release>:
 402c21c:	f800283a 	ret

0402c220 <__sinit_lock_acquire>:
 402c220:	f800283a 	ret

0402c224 <__sinit_lock_release>:
 402c224:	f800283a 	ret

0402c228 <__fp_lock_all>:
 402c228:	00800034 	movhi	r2,0
 402c22c:	10886404 	addi	r2,r2,8592
 402c230:	11000017 	ldw	r4,0(r2)
 402c234:	014100f4 	movhi	r5,1027
 402c238:	29701a04 	addi	r5,r5,-16280
 402c23c:	402cb481 	jmpi	402cb48 <_fwalk>

0402c240 <__fp_unlock_all>:
 402c240:	00800034 	movhi	r2,0
 402c244:	10886404 	addi	r2,r2,8592
 402c248:	11000017 	ldw	r4,0(r2)
 402c24c:	014100f4 	movhi	r5,1027
 402c250:	296fae04 	addi	r5,r5,-16712
 402c254:	402cb481 	jmpi	402cb48 <_fwalk>

0402c258 <_malloc_trim_r>:
 402c258:	defffb04 	addi	sp,sp,-20
 402c25c:	dcc00315 	stw	r19,12(sp)
 402c260:	04c00034 	movhi	r19,0
 402c264:	dc800215 	stw	r18,8(sp)
 402c268:	dc400115 	stw	r17,4(sp)
 402c26c:	dc000015 	stw	r16,0(sp)
 402c270:	dfc00415 	stw	ra,16(sp)
 402c274:	2821883a 	mov	r16,r5
 402c278:	9cc1a604 	addi	r19,r19,1688
 402c27c:	2025883a 	mov	r18,r4
 402c280:	40339700 	call	4033970 <__malloc_lock>
 402c284:	98800217 	ldw	r2,8(r19)
 402c288:	14400117 	ldw	r17,4(r2)
 402c28c:	00bfff04 	movi	r2,-4
 402c290:	88a2703a 	and	r17,r17,r2
 402c294:	8c21c83a 	sub	r16,r17,r16
 402c298:	8403fbc4 	addi	r16,r16,4079
 402c29c:	8020d33a 	srli	r16,r16,12
 402c2a0:	0083ffc4 	movi	r2,4095
 402c2a4:	843fffc4 	addi	r16,r16,-1
 402c2a8:	8020933a 	slli	r16,r16,12
 402c2ac:	1400060e 	bge	r2,r16,402c2c8 <_malloc_trim_r+0x70>
 402c2b0:	000b883a 	mov	r5,zero
 402c2b4:	9009883a 	mov	r4,r18
 402c2b8:	4027a980 	call	4027a98 <_sbrk_r>
 402c2bc:	98c00217 	ldw	r3,8(r19)
 402c2c0:	1c47883a 	add	r3,r3,r17
 402c2c4:	10c00a26 	beq	r2,r3,402c2f0 <_malloc_trim_r+0x98>
 402c2c8:	9009883a 	mov	r4,r18
 402c2cc:	40339940 	call	4033994 <__malloc_unlock>
 402c2d0:	0005883a 	mov	r2,zero
 402c2d4:	dfc00417 	ldw	ra,16(sp)
 402c2d8:	dcc00317 	ldw	r19,12(sp)
 402c2dc:	dc800217 	ldw	r18,8(sp)
 402c2e0:	dc400117 	ldw	r17,4(sp)
 402c2e4:	dc000017 	ldw	r16,0(sp)
 402c2e8:	dec00504 	addi	sp,sp,20
 402c2ec:	f800283a 	ret
 402c2f0:	040bc83a 	sub	r5,zero,r16
 402c2f4:	9009883a 	mov	r4,r18
 402c2f8:	4027a980 	call	4027a98 <_sbrk_r>
 402c2fc:	00ffffc4 	movi	r3,-1
 402c300:	10c00d26 	beq	r2,r3,402c338 <_malloc_trim_r+0xe0>
 402c304:	00c00174 	movhi	r3,5
 402c308:	18f48904 	addi	r3,r3,-11740
 402c30c:	18800017 	ldw	r2,0(r3)
 402c310:	99000217 	ldw	r4,8(r19)
 402c314:	8c23c83a 	sub	r17,r17,r16
 402c318:	8c400054 	ori	r17,r17,1
 402c31c:	1421c83a 	sub	r16,r2,r16
 402c320:	24400115 	stw	r17,4(r4)
 402c324:	9009883a 	mov	r4,r18
 402c328:	1c000015 	stw	r16,0(r3)
 402c32c:	40339940 	call	4033994 <__malloc_unlock>
 402c330:	00800044 	movi	r2,1
 402c334:	003fe706 	br	402c2d4 <__flash_rwdata_start+0xffff6068>
 402c338:	000b883a 	mov	r5,zero
 402c33c:	9009883a 	mov	r4,r18
 402c340:	4027a980 	call	4027a98 <_sbrk_r>
 402c344:	99000217 	ldw	r4,8(r19)
 402c348:	014003c4 	movi	r5,15
 402c34c:	1107c83a 	sub	r3,r2,r4
 402c350:	28ffdd0e 	bge	r5,r3,402c2c8 <__flash_rwdata_start+0xffff605c>
 402c354:	01400034 	movhi	r5,0
 402c358:	29486104 	addi	r5,r5,8580
 402c35c:	29400017 	ldw	r5,0(r5)
 402c360:	18c00054 	ori	r3,r3,1
 402c364:	20c00115 	stw	r3,4(r4)
 402c368:	00c00174 	movhi	r3,5
 402c36c:	1145c83a 	sub	r2,r2,r5
 402c370:	18f48904 	addi	r3,r3,-11740
 402c374:	18800015 	stw	r2,0(r3)
 402c378:	003fd306 	br	402c2c8 <__flash_rwdata_start+0xffff605c>

0402c37c <_free_r>:
 402c37c:	28004126 	beq	r5,zero,402c484 <_free_r+0x108>
 402c380:	defffd04 	addi	sp,sp,-12
 402c384:	dc400115 	stw	r17,4(sp)
 402c388:	dc000015 	stw	r16,0(sp)
 402c38c:	2023883a 	mov	r17,r4
 402c390:	2821883a 	mov	r16,r5
 402c394:	dfc00215 	stw	ra,8(sp)
 402c398:	40339700 	call	4033970 <__malloc_lock>
 402c39c:	81ffff17 	ldw	r7,-4(r16)
 402c3a0:	00bfff84 	movi	r2,-2
 402c3a4:	01000034 	movhi	r4,0
 402c3a8:	81bffe04 	addi	r6,r16,-8
 402c3ac:	3884703a 	and	r2,r7,r2
 402c3b0:	2101a604 	addi	r4,r4,1688
 402c3b4:	308b883a 	add	r5,r6,r2
 402c3b8:	2a400117 	ldw	r9,4(r5)
 402c3bc:	22000217 	ldw	r8,8(r4)
 402c3c0:	00ffff04 	movi	r3,-4
 402c3c4:	48c6703a 	and	r3,r9,r3
 402c3c8:	2a005726 	beq	r5,r8,402c528 <_free_r+0x1ac>
 402c3cc:	28c00115 	stw	r3,4(r5)
 402c3d0:	39c0004c 	andi	r7,r7,1
 402c3d4:	3800091e 	bne	r7,zero,402c3fc <_free_r+0x80>
 402c3d8:	823ffe17 	ldw	r8,-8(r16)
 402c3dc:	22400204 	addi	r9,r4,8
 402c3e0:	320dc83a 	sub	r6,r6,r8
 402c3e4:	31c00217 	ldw	r7,8(r6)
 402c3e8:	1205883a 	add	r2,r2,r8
 402c3ec:	3a406526 	beq	r7,r9,402c584 <_free_r+0x208>
 402c3f0:	32000317 	ldw	r8,12(r6)
 402c3f4:	3a000315 	stw	r8,12(r7)
 402c3f8:	41c00215 	stw	r7,8(r8)
 402c3fc:	28cf883a 	add	r7,r5,r3
 402c400:	39c00117 	ldw	r7,4(r7)
 402c404:	39c0004c 	andi	r7,r7,1
 402c408:	38003a26 	beq	r7,zero,402c4f4 <_free_r+0x178>
 402c40c:	10c00054 	ori	r3,r2,1
 402c410:	30c00115 	stw	r3,4(r6)
 402c414:	3087883a 	add	r3,r6,r2
 402c418:	18800015 	stw	r2,0(r3)
 402c41c:	00c07fc4 	movi	r3,511
 402c420:	18801936 	bltu	r3,r2,402c488 <_free_r+0x10c>
 402c424:	1004d0fa 	srli	r2,r2,3
 402c428:	01c00044 	movi	r7,1
 402c42c:	21400117 	ldw	r5,4(r4)
 402c430:	10c00044 	addi	r3,r2,1
 402c434:	18c7883a 	add	r3,r3,r3
 402c438:	1005d0ba 	srai	r2,r2,2
 402c43c:	18c7883a 	add	r3,r3,r3
 402c440:	18c7883a 	add	r3,r3,r3
 402c444:	1907883a 	add	r3,r3,r4
 402c448:	3884983a 	sll	r2,r7,r2
 402c44c:	19c00017 	ldw	r7,0(r3)
 402c450:	1a3ffe04 	addi	r8,r3,-8
 402c454:	1144b03a 	or	r2,r2,r5
 402c458:	32000315 	stw	r8,12(r6)
 402c45c:	31c00215 	stw	r7,8(r6)
 402c460:	20800115 	stw	r2,4(r4)
 402c464:	19800015 	stw	r6,0(r3)
 402c468:	39800315 	stw	r6,12(r7)
 402c46c:	8809883a 	mov	r4,r17
 402c470:	dfc00217 	ldw	ra,8(sp)
 402c474:	dc400117 	ldw	r17,4(sp)
 402c478:	dc000017 	ldw	r16,0(sp)
 402c47c:	dec00304 	addi	sp,sp,12
 402c480:	40339941 	jmpi	4033994 <__malloc_unlock>
 402c484:	f800283a 	ret
 402c488:	100ad27a 	srli	r5,r2,9
 402c48c:	00c00104 	movi	r3,4
 402c490:	19404a36 	bltu	r3,r5,402c5bc <_free_r+0x240>
 402c494:	100ad1ba 	srli	r5,r2,6
 402c498:	28c00e44 	addi	r3,r5,57
 402c49c:	18c7883a 	add	r3,r3,r3
 402c4a0:	29400e04 	addi	r5,r5,56
 402c4a4:	18c7883a 	add	r3,r3,r3
 402c4a8:	18c7883a 	add	r3,r3,r3
 402c4ac:	1909883a 	add	r4,r3,r4
 402c4b0:	20c00017 	ldw	r3,0(r4)
 402c4b4:	01c00034 	movhi	r7,0
 402c4b8:	213ffe04 	addi	r4,r4,-8
 402c4bc:	39c1a604 	addi	r7,r7,1688
 402c4c0:	20c04426 	beq	r4,r3,402c5d4 <_free_r+0x258>
 402c4c4:	01ffff04 	movi	r7,-4
 402c4c8:	19400117 	ldw	r5,4(r3)
 402c4cc:	29ca703a 	and	r5,r5,r7
 402c4d0:	1140022e 	bgeu	r2,r5,402c4dc <_free_r+0x160>
 402c4d4:	18c00217 	ldw	r3,8(r3)
 402c4d8:	20fffb1e 	bne	r4,r3,402c4c8 <__flash_rwdata_start+0xffff625c>
 402c4dc:	19000317 	ldw	r4,12(r3)
 402c4e0:	31000315 	stw	r4,12(r6)
 402c4e4:	30c00215 	stw	r3,8(r6)
 402c4e8:	21800215 	stw	r6,8(r4)
 402c4ec:	19800315 	stw	r6,12(r3)
 402c4f0:	003fde06 	br	402c46c <__flash_rwdata_start+0xffff6200>
 402c4f4:	29c00217 	ldw	r7,8(r5)
 402c4f8:	10c5883a 	add	r2,r2,r3
 402c4fc:	00c00034 	movhi	r3,0
 402c500:	18c1a804 	addi	r3,r3,1696
 402c504:	38c03b26 	beq	r7,r3,402c5f4 <_free_r+0x278>
 402c508:	2a000317 	ldw	r8,12(r5)
 402c50c:	11400054 	ori	r5,r2,1
 402c510:	3087883a 	add	r3,r6,r2
 402c514:	3a000315 	stw	r8,12(r7)
 402c518:	41c00215 	stw	r7,8(r8)
 402c51c:	31400115 	stw	r5,4(r6)
 402c520:	18800015 	stw	r2,0(r3)
 402c524:	003fbd06 	br	402c41c <__flash_rwdata_start+0xffff61b0>
 402c528:	39c0004c 	andi	r7,r7,1
 402c52c:	10c5883a 	add	r2,r2,r3
 402c530:	3800071e 	bne	r7,zero,402c550 <_free_r+0x1d4>
 402c534:	81fffe17 	ldw	r7,-8(r16)
 402c538:	31cdc83a 	sub	r6,r6,r7
 402c53c:	30c00317 	ldw	r3,12(r6)
 402c540:	31400217 	ldw	r5,8(r6)
 402c544:	11c5883a 	add	r2,r2,r7
 402c548:	28c00315 	stw	r3,12(r5)
 402c54c:	19400215 	stw	r5,8(r3)
 402c550:	10c00054 	ori	r3,r2,1
 402c554:	30c00115 	stw	r3,4(r6)
 402c558:	00c00034 	movhi	r3,0
 402c55c:	18c86204 	addi	r3,r3,8584
 402c560:	18c00017 	ldw	r3,0(r3)
 402c564:	21800215 	stw	r6,8(r4)
 402c568:	10ffc036 	bltu	r2,r3,402c46c <__flash_rwdata_start+0xffff6200>
 402c56c:	00800034 	movhi	r2,0
 402c570:	10887904 	addi	r2,r2,8676
 402c574:	11400017 	ldw	r5,0(r2)
 402c578:	8809883a 	mov	r4,r17
 402c57c:	402c2580 	call	402c258 <_malloc_trim_r>
 402c580:	003fba06 	br	402c46c <__flash_rwdata_start+0xffff6200>
 402c584:	28c9883a 	add	r4,r5,r3
 402c588:	21000117 	ldw	r4,4(r4)
 402c58c:	2100004c 	andi	r4,r4,1
 402c590:	2000391e 	bne	r4,zero,402c678 <_free_r+0x2fc>
 402c594:	29c00217 	ldw	r7,8(r5)
 402c598:	29000317 	ldw	r4,12(r5)
 402c59c:	1885883a 	add	r2,r3,r2
 402c5a0:	10c00054 	ori	r3,r2,1
 402c5a4:	39000315 	stw	r4,12(r7)
 402c5a8:	21c00215 	stw	r7,8(r4)
 402c5ac:	30c00115 	stw	r3,4(r6)
 402c5b0:	308d883a 	add	r6,r6,r2
 402c5b4:	30800015 	stw	r2,0(r6)
 402c5b8:	003fac06 	br	402c46c <__flash_rwdata_start+0xffff6200>
 402c5bc:	00c00504 	movi	r3,20
 402c5c0:	19401536 	bltu	r3,r5,402c618 <_free_r+0x29c>
 402c5c4:	28c01704 	addi	r3,r5,92
 402c5c8:	18c7883a 	add	r3,r3,r3
 402c5cc:	294016c4 	addi	r5,r5,91
 402c5d0:	003fb406 	br	402c4a4 <__flash_rwdata_start+0xffff6238>
 402c5d4:	280bd0ba 	srai	r5,r5,2
 402c5d8:	00c00044 	movi	r3,1
 402c5dc:	38800117 	ldw	r2,4(r7)
 402c5e0:	194a983a 	sll	r5,r3,r5
 402c5e4:	2007883a 	mov	r3,r4
 402c5e8:	2884b03a 	or	r2,r5,r2
 402c5ec:	38800115 	stw	r2,4(r7)
 402c5f0:	003fbb06 	br	402c4e0 <__flash_rwdata_start+0xffff6274>
 402c5f4:	21800515 	stw	r6,20(r4)
 402c5f8:	21800415 	stw	r6,16(r4)
 402c5fc:	10c00054 	ori	r3,r2,1
 402c600:	31c00315 	stw	r7,12(r6)
 402c604:	31c00215 	stw	r7,8(r6)
 402c608:	30c00115 	stw	r3,4(r6)
 402c60c:	308d883a 	add	r6,r6,r2
 402c610:	30800015 	stw	r2,0(r6)
 402c614:	003f9506 	br	402c46c <__flash_rwdata_start+0xffff6200>
 402c618:	00c01504 	movi	r3,84
 402c61c:	19400536 	bltu	r3,r5,402c634 <_free_r+0x2b8>
 402c620:	100ad33a 	srli	r5,r2,12
 402c624:	28c01bc4 	addi	r3,r5,111
 402c628:	18c7883a 	add	r3,r3,r3
 402c62c:	29401b84 	addi	r5,r5,110
 402c630:	003f9c06 	br	402c4a4 <__flash_rwdata_start+0xffff6238>
 402c634:	00c05504 	movi	r3,340
 402c638:	19400536 	bltu	r3,r5,402c650 <_free_r+0x2d4>
 402c63c:	100ad3fa 	srli	r5,r2,15
 402c640:	28c01e04 	addi	r3,r5,120
 402c644:	18c7883a 	add	r3,r3,r3
 402c648:	29401dc4 	addi	r5,r5,119
 402c64c:	003f9506 	br	402c4a4 <__flash_rwdata_start+0xffff6238>
 402c650:	00c15504 	movi	r3,1364
 402c654:	19400536 	bltu	r3,r5,402c66c <_free_r+0x2f0>
 402c658:	100ad4ba 	srli	r5,r2,18
 402c65c:	28c01f44 	addi	r3,r5,125
 402c660:	18c7883a 	add	r3,r3,r3
 402c664:	29401f04 	addi	r5,r5,124
 402c668:	003f8e06 	br	402c4a4 <__flash_rwdata_start+0xffff6238>
 402c66c:	00c03f84 	movi	r3,254
 402c670:	01401f84 	movi	r5,126
 402c674:	003f8b06 	br	402c4a4 <__flash_rwdata_start+0xffff6238>
 402c678:	10c00054 	ori	r3,r2,1
 402c67c:	30c00115 	stw	r3,4(r6)
 402c680:	308d883a 	add	r6,r6,r2
 402c684:	30800015 	stw	r2,0(r6)
 402c688:	003f7806 	br	402c46c <__flash_rwdata_start+0xffff6200>

0402c68c <__sfvwrite_r>:
 402c68c:	30800217 	ldw	r2,8(r6)
 402c690:	10006726 	beq	r2,zero,402c830 <__sfvwrite_r+0x1a4>
 402c694:	28c0030b 	ldhu	r3,12(r5)
 402c698:	defff404 	addi	sp,sp,-48
 402c69c:	dd400715 	stw	r21,28(sp)
 402c6a0:	dd000615 	stw	r20,24(sp)
 402c6a4:	dc000215 	stw	r16,8(sp)
 402c6a8:	dfc00b15 	stw	ra,44(sp)
 402c6ac:	df000a15 	stw	fp,40(sp)
 402c6b0:	ddc00915 	stw	r23,36(sp)
 402c6b4:	dd800815 	stw	r22,32(sp)
 402c6b8:	dcc00515 	stw	r19,20(sp)
 402c6bc:	dc800415 	stw	r18,16(sp)
 402c6c0:	dc400315 	stw	r17,12(sp)
 402c6c4:	1880020c 	andi	r2,r3,8
 402c6c8:	2821883a 	mov	r16,r5
 402c6cc:	202b883a 	mov	r21,r4
 402c6d0:	3029883a 	mov	r20,r6
 402c6d4:	10002726 	beq	r2,zero,402c774 <__sfvwrite_r+0xe8>
 402c6d8:	28800417 	ldw	r2,16(r5)
 402c6dc:	10002526 	beq	r2,zero,402c774 <__sfvwrite_r+0xe8>
 402c6e0:	1880008c 	andi	r2,r3,2
 402c6e4:	a4400017 	ldw	r17,0(r20)
 402c6e8:	10002a26 	beq	r2,zero,402c794 <__sfvwrite_r+0x108>
 402c6ec:	05a00034 	movhi	r22,32768
 402c6f0:	0027883a 	mov	r19,zero
 402c6f4:	0025883a 	mov	r18,zero
 402c6f8:	b5bf0004 	addi	r22,r22,-1024
 402c6fc:	980d883a 	mov	r6,r19
 402c700:	a809883a 	mov	r4,r21
 402c704:	90004626 	beq	r18,zero,402c820 <__sfvwrite_r+0x194>
 402c708:	900f883a 	mov	r7,r18
 402c70c:	b480022e 	bgeu	r22,r18,402c718 <__sfvwrite_r+0x8c>
 402c710:	01e00034 	movhi	r7,32768
 402c714:	39ff0004 	addi	r7,r7,-1024
 402c718:	80800917 	ldw	r2,36(r16)
 402c71c:	81400717 	ldw	r5,28(r16)
 402c720:	103ee83a 	callr	r2
 402c724:	0080570e 	bge	zero,r2,402c884 <__sfvwrite_r+0x1f8>
 402c728:	a0c00217 	ldw	r3,8(r20)
 402c72c:	98a7883a 	add	r19,r19,r2
 402c730:	90a5c83a 	sub	r18,r18,r2
 402c734:	1885c83a 	sub	r2,r3,r2
 402c738:	a0800215 	stw	r2,8(r20)
 402c73c:	103fef1e 	bne	r2,zero,402c6fc <__flash_rwdata_start+0xffff6490>
 402c740:	0005883a 	mov	r2,zero
 402c744:	dfc00b17 	ldw	ra,44(sp)
 402c748:	df000a17 	ldw	fp,40(sp)
 402c74c:	ddc00917 	ldw	r23,36(sp)
 402c750:	dd800817 	ldw	r22,32(sp)
 402c754:	dd400717 	ldw	r21,28(sp)
 402c758:	dd000617 	ldw	r20,24(sp)
 402c75c:	dcc00517 	ldw	r19,20(sp)
 402c760:	dc800417 	ldw	r18,16(sp)
 402c764:	dc400317 	ldw	r17,12(sp)
 402c768:	dc000217 	ldw	r16,8(sp)
 402c76c:	dec00c04 	addi	sp,sp,48
 402c770:	f800283a 	ret
 402c774:	800b883a 	mov	r5,r16
 402c778:	a809883a 	mov	r4,r21
 402c77c:	402a2340 	call	402a234 <__swsetup_r>
 402c780:	1000eb1e 	bne	r2,zero,402cb30 <__sfvwrite_r+0x4a4>
 402c784:	80c0030b 	ldhu	r3,12(r16)
 402c788:	a4400017 	ldw	r17,0(r20)
 402c78c:	1880008c 	andi	r2,r3,2
 402c790:	103fd61e 	bne	r2,zero,402c6ec <__flash_rwdata_start+0xffff6480>
 402c794:	1880004c 	andi	r2,r3,1
 402c798:	10003f1e 	bne	r2,zero,402c898 <__sfvwrite_r+0x20c>
 402c79c:	0039883a 	mov	fp,zero
 402c7a0:	0025883a 	mov	r18,zero
 402c7a4:	90001a26 	beq	r18,zero,402c810 <__sfvwrite_r+0x184>
 402c7a8:	1880800c 	andi	r2,r3,512
 402c7ac:	84c00217 	ldw	r19,8(r16)
 402c7b0:	10002126 	beq	r2,zero,402c838 <__sfvwrite_r+0x1ac>
 402c7b4:	982f883a 	mov	r23,r19
 402c7b8:	94c09336 	bltu	r18,r19,402ca08 <__sfvwrite_r+0x37c>
 402c7bc:	1881200c 	andi	r2,r3,1152
 402c7c0:	10009e1e 	bne	r2,zero,402ca3c <__sfvwrite_r+0x3b0>
 402c7c4:	81000017 	ldw	r4,0(r16)
 402c7c8:	b80d883a 	mov	r6,r23
 402c7cc:	e00b883a 	mov	r5,fp
 402c7d0:	402d1940 	call	402d194 <memmove>
 402c7d4:	80c00217 	ldw	r3,8(r16)
 402c7d8:	81000017 	ldw	r4,0(r16)
 402c7dc:	9005883a 	mov	r2,r18
 402c7e0:	1ce7c83a 	sub	r19,r3,r19
 402c7e4:	25cf883a 	add	r7,r4,r23
 402c7e8:	84c00215 	stw	r19,8(r16)
 402c7ec:	81c00015 	stw	r7,0(r16)
 402c7f0:	a0c00217 	ldw	r3,8(r20)
 402c7f4:	e0b9883a 	add	fp,fp,r2
 402c7f8:	90a5c83a 	sub	r18,r18,r2
 402c7fc:	18a7c83a 	sub	r19,r3,r2
 402c800:	a4c00215 	stw	r19,8(r20)
 402c804:	983fce26 	beq	r19,zero,402c740 <__flash_rwdata_start+0xffff64d4>
 402c808:	80c0030b 	ldhu	r3,12(r16)
 402c80c:	903fe61e 	bne	r18,zero,402c7a8 <__flash_rwdata_start+0xffff653c>
 402c810:	8f000017 	ldw	fp,0(r17)
 402c814:	8c800117 	ldw	r18,4(r17)
 402c818:	8c400204 	addi	r17,r17,8
 402c81c:	003fe106 	br	402c7a4 <__flash_rwdata_start+0xffff6538>
 402c820:	8cc00017 	ldw	r19,0(r17)
 402c824:	8c800117 	ldw	r18,4(r17)
 402c828:	8c400204 	addi	r17,r17,8
 402c82c:	003fb306 	br	402c6fc <__flash_rwdata_start+0xffff6490>
 402c830:	0005883a 	mov	r2,zero
 402c834:	f800283a 	ret
 402c838:	81000017 	ldw	r4,0(r16)
 402c83c:	80800417 	ldw	r2,16(r16)
 402c840:	11005736 	bltu	r2,r4,402c9a0 <__sfvwrite_r+0x314>
 402c844:	85c00517 	ldw	r23,20(r16)
 402c848:	95c05536 	bltu	r18,r23,402c9a0 <__sfvwrite_r+0x314>
 402c84c:	00a00034 	movhi	r2,32768
 402c850:	10bfffc4 	addi	r2,r2,-1
 402c854:	9009883a 	mov	r4,r18
 402c858:	1480012e 	bgeu	r2,r18,402c860 <__sfvwrite_r+0x1d4>
 402c85c:	1009883a 	mov	r4,r2
 402c860:	b80b883a 	mov	r5,r23
 402c864:	40245f40 	call	40245f4 <__divsi3>
 402c868:	15cf383a 	mul	r7,r2,r23
 402c86c:	81400717 	ldw	r5,28(r16)
 402c870:	80800917 	ldw	r2,36(r16)
 402c874:	e00d883a 	mov	r6,fp
 402c878:	a809883a 	mov	r4,r21
 402c87c:	103ee83a 	callr	r2
 402c880:	00bfdb16 	blt	zero,r2,402c7f0 <__flash_rwdata_start+0xffff6584>
 402c884:	8080030b 	ldhu	r2,12(r16)
 402c888:	10801014 	ori	r2,r2,64
 402c88c:	8080030d 	sth	r2,12(r16)
 402c890:	00bfffc4 	movi	r2,-1
 402c894:	003fab06 	br	402c744 <__flash_rwdata_start+0xffff64d8>
 402c898:	0027883a 	mov	r19,zero
 402c89c:	0011883a 	mov	r8,zero
 402c8a0:	0039883a 	mov	fp,zero
 402c8a4:	0025883a 	mov	r18,zero
 402c8a8:	90001f26 	beq	r18,zero,402c928 <__sfvwrite_r+0x29c>
 402c8ac:	40005a26 	beq	r8,zero,402ca18 <__sfvwrite_r+0x38c>
 402c8b0:	982d883a 	mov	r22,r19
 402c8b4:	94c0012e 	bgeu	r18,r19,402c8bc <__sfvwrite_r+0x230>
 402c8b8:	902d883a 	mov	r22,r18
 402c8bc:	81000017 	ldw	r4,0(r16)
 402c8c0:	80800417 	ldw	r2,16(r16)
 402c8c4:	b02f883a 	mov	r23,r22
 402c8c8:	81c00517 	ldw	r7,20(r16)
 402c8cc:	1100032e 	bgeu	r2,r4,402c8dc <__sfvwrite_r+0x250>
 402c8d0:	80c00217 	ldw	r3,8(r16)
 402c8d4:	38c7883a 	add	r3,r7,r3
 402c8d8:	1d801816 	blt	r3,r22,402c93c <__sfvwrite_r+0x2b0>
 402c8dc:	b1c03e16 	blt	r22,r7,402c9d8 <__sfvwrite_r+0x34c>
 402c8e0:	80800917 	ldw	r2,36(r16)
 402c8e4:	81400717 	ldw	r5,28(r16)
 402c8e8:	e00d883a 	mov	r6,fp
 402c8ec:	da000115 	stw	r8,4(sp)
 402c8f0:	a809883a 	mov	r4,r21
 402c8f4:	103ee83a 	callr	r2
 402c8f8:	102f883a 	mov	r23,r2
 402c8fc:	da000117 	ldw	r8,4(sp)
 402c900:	00bfe00e 	bge	zero,r2,402c884 <__flash_rwdata_start+0xffff6618>
 402c904:	9de7c83a 	sub	r19,r19,r23
 402c908:	98001f26 	beq	r19,zero,402c988 <__sfvwrite_r+0x2fc>
 402c90c:	a0800217 	ldw	r2,8(r20)
 402c910:	e5f9883a 	add	fp,fp,r23
 402c914:	95e5c83a 	sub	r18,r18,r23
 402c918:	15efc83a 	sub	r23,r2,r23
 402c91c:	a5c00215 	stw	r23,8(r20)
 402c920:	b83f8726 	beq	r23,zero,402c740 <__flash_rwdata_start+0xffff64d4>
 402c924:	903fe11e 	bne	r18,zero,402c8ac <__flash_rwdata_start+0xffff6640>
 402c928:	8f000017 	ldw	fp,0(r17)
 402c92c:	8c800117 	ldw	r18,4(r17)
 402c930:	0011883a 	mov	r8,zero
 402c934:	8c400204 	addi	r17,r17,8
 402c938:	003fdb06 	br	402c8a8 <__flash_rwdata_start+0xffff663c>
 402c93c:	180d883a 	mov	r6,r3
 402c940:	e00b883a 	mov	r5,fp
 402c944:	da000115 	stw	r8,4(sp)
 402c948:	d8c00015 	stw	r3,0(sp)
 402c94c:	402d1940 	call	402d194 <memmove>
 402c950:	d8c00017 	ldw	r3,0(sp)
 402c954:	80800017 	ldw	r2,0(r16)
 402c958:	800b883a 	mov	r5,r16
 402c95c:	a809883a 	mov	r4,r21
 402c960:	10c5883a 	add	r2,r2,r3
 402c964:	80800015 	stw	r2,0(r16)
 402c968:	d8c00015 	stw	r3,0(sp)
 402c96c:	402be2c0 	call	402be2c <_fflush_r>
 402c970:	d8c00017 	ldw	r3,0(sp)
 402c974:	da000117 	ldw	r8,4(sp)
 402c978:	103fc21e 	bne	r2,zero,402c884 <__flash_rwdata_start+0xffff6618>
 402c97c:	182f883a 	mov	r23,r3
 402c980:	9de7c83a 	sub	r19,r19,r23
 402c984:	983fe11e 	bne	r19,zero,402c90c <__flash_rwdata_start+0xffff66a0>
 402c988:	800b883a 	mov	r5,r16
 402c98c:	a809883a 	mov	r4,r21
 402c990:	402be2c0 	call	402be2c <_fflush_r>
 402c994:	103fbb1e 	bne	r2,zero,402c884 <__flash_rwdata_start+0xffff6618>
 402c998:	0011883a 	mov	r8,zero
 402c99c:	003fdb06 	br	402c90c <__flash_rwdata_start+0xffff66a0>
 402c9a0:	94c0012e 	bgeu	r18,r19,402c9a8 <__sfvwrite_r+0x31c>
 402c9a4:	9027883a 	mov	r19,r18
 402c9a8:	980d883a 	mov	r6,r19
 402c9ac:	e00b883a 	mov	r5,fp
 402c9b0:	402d1940 	call	402d194 <memmove>
 402c9b4:	80800217 	ldw	r2,8(r16)
 402c9b8:	80c00017 	ldw	r3,0(r16)
 402c9bc:	14c5c83a 	sub	r2,r2,r19
 402c9c0:	1cc7883a 	add	r3,r3,r19
 402c9c4:	80800215 	stw	r2,8(r16)
 402c9c8:	80c00015 	stw	r3,0(r16)
 402c9cc:	10004326 	beq	r2,zero,402cadc <__sfvwrite_r+0x450>
 402c9d0:	9805883a 	mov	r2,r19
 402c9d4:	003f8606 	br	402c7f0 <__flash_rwdata_start+0xffff6584>
 402c9d8:	b00d883a 	mov	r6,r22
 402c9dc:	e00b883a 	mov	r5,fp
 402c9e0:	da000115 	stw	r8,4(sp)
 402c9e4:	402d1940 	call	402d194 <memmove>
 402c9e8:	80800217 	ldw	r2,8(r16)
 402c9ec:	80c00017 	ldw	r3,0(r16)
 402c9f0:	da000117 	ldw	r8,4(sp)
 402c9f4:	1585c83a 	sub	r2,r2,r22
 402c9f8:	1dad883a 	add	r22,r3,r22
 402c9fc:	80800215 	stw	r2,8(r16)
 402ca00:	85800015 	stw	r22,0(r16)
 402ca04:	003fbf06 	br	402c904 <__flash_rwdata_start+0xffff6698>
 402ca08:	81000017 	ldw	r4,0(r16)
 402ca0c:	9027883a 	mov	r19,r18
 402ca10:	902f883a 	mov	r23,r18
 402ca14:	003f6c06 	br	402c7c8 <__flash_rwdata_start+0xffff655c>
 402ca18:	900d883a 	mov	r6,r18
 402ca1c:	01400284 	movi	r5,10
 402ca20:	e009883a 	mov	r4,fp
 402ca24:	402cf680 	call	402cf68 <memchr>
 402ca28:	10003e26 	beq	r2,zero,402cb24 <__sfvwrite_r+0x498>
 402ca2c:	10800044 	addi	r2,r2,1
 402ca30:	1727c83a 	sub	r19,r2,fp
 402ca34:	02000044 	movi	r8,1
 402ca38:	003f9d06 	br	402c8b0 <__flash_rwdata_start+0xffff6644>
 402ca3c:	80800517 	ldw	r2,20(r16)
 402ca40:	81400417 	ldw	r5,16(r16)
 402ca44:	81c00017 	ldw	r7,0(r16)
 402ca48:	10a7883a 	add	r19,r2,r2
 402ca4c:	9885883a 	add	r2,r19,r2
 402ca50:	1026d7fa 	srli	r19,r2,31
 402ca54:	396dc83a 	sub	r22,r7,r5
 402ca58:	b1000044 	addi	r4,r22,1
 402ca5c:	9885883a 	add	r2,r19,r2
 402ca60:	1027d07a 	srai	r19,r2,1
 402ca64:	2485883a 	add	r2,r4,r18
 402ca68:	980d883a 	mov	r6,r19
 402ca6c:	9880022e 	bgeu	r19,r2,402ca78 <__sfvwrite_r+0x3ec>
 402ca70:	1027883a 	mov	r19,r2
 402ca74:	100d883a 	mov	r6,r2
 402ca78:	18c1000c 	andi	r3,r3,1024
 402ca7c:	18001c26 	beq	r3,zero,402caf0 <__sfvwrite_r+0x464>
 402ca80:	300b883a 	mov	r5,r6
 402ca84:	a809883a 	mov	r4,r21
 402ca88:	4026f880 	call	4026f88 <_malloc_r>
 402ca8c:	102f883a 	mov	r23,r2
 402ca90:	10002926 	beq	r2,zero,402cb38 <__sfvwrite_r+0x4ac>
 402ca94:	81400417 	ldw	r5,16(r16)
 402ca98:	b00d883a 	mov	r6,r22
 402ca9c:	1009883a 	mov	r4,r2
 402caa0:	402d04c0 	call	402d04c <memcpy>
 402caa4:	8080030b 	ldhu	r2,12(r16)
 402caa8:	00fedfc4 	movi	r3,-1153
 402caac:	10c4703a 	and	r2,r2,r3
 402cab0:	10802014 	ori	r2,r2,128
 402cab4:	8080030d 	sth	r2,12(r16)
 402cab8:	bd89883a 	add	r4,r23,r22
 402cabc:	9d8fc83a 	sub	r7,r19,r22
 402cac0:	85c00415 	stw	r23,16(r16)
 402cac4:	84c00515 	stw	r19,20(r16)
 402cac8:	81000015 	stw	r4,0(r16)
 402cacc:	9027883a 	mov	r19,r18
 402cad0:	81c00215 	stw	r7,8(r16)
 402cad4:	902f883a 	mov	r23,r18
 402cad8:	003f3b06 	br	402c7c8 <__flash_rwdata_start+0xffff655c>
 402cadc:	800b883a 	mov	r5,r16
 402cae0:	a809883a 	mov	r4,r21
 402cae4:	402be2c0 	call	402be2c <_fflush_r>
 402cae8:	103fb926 	beq	r2,zero,402c9d0 <__flash_rwdata_start+0xffff6764>
 402caec:	003f6506 	br	402c884 <__flash_rwdata_start+0xffff6618>
 402caf0:	a809883a 	mov	r4,r21
 402caf4:	402e4540 	call	402e454 <_realloc_r>
 402caf8:	102f883a 	mov	r23,r2
 402cafc:	103fee1e 	bne	r2,zero,402cab8 <__flash_rwdata_start+0xffff684c>
 402cb00:	81400417 	ldw	r5,16(r16)
 402cb04:	a809883a 	mov	r4,r21
 402cb08:	402c37c0 	call	402c37c <_free_r>
 402cb0c:	8080030b 	ldhu	r2,12(r16)
 402cb10:	00ffdfc4 	movi	r3,-129
 402cb14:	1884703a 	and	r2,r3,r2
 402cb18:	00c00304 	movi	r3,12
 402cb1c:	a8c00015 	stw	r3,0(r21)
 402cb20:	003f5906 	br	402c888 <__flash_rwdata_start+0xffff661c>
 402cb24:	94c00044 	addi	r19,r18,1
 402cb28:	02000044 	movi	r8,1
 402cb2c:	003f6006 	br	402c8b0 <__flash_rwdata_start+0xffff6644>
 402cb30:	00bfffc4 	movi	r2,-1
 402cb34:	003f0306 	br	402c744 <__flash_rwdata_start+0xffff64d8>
 402cb38:	00800304 	movi	r2,12
 402cb3c:	a8800015 	stw	r2,0(r21)
 402cb40:	8080030b 	ldhu	r2,12(r16)
 402cb44:	003f5006 	br	402c888 <__flash_rwdata_start+0xffff661c>

0402cb48 <_fwalk>:
 402cb48:	defff704 	addi	sp,sp,-36
 402cb4c:	dd000415 	stw	r20,16(sp)
 402cb50:	dfc00815 	stw	ra,32(sp)
 402cb54:	ddc00715 	stw	r23,28(sp)
 402cb58:	dd800615 	stw	r22,24(sp)
 402cb5c:	dd400515 	stw	r21,20(sp)
 402cb60:	dcc00315 	stw	r19,12(sp)
 402cb64:	dc800215 	stw	r18,8(sp)
 402cb68:	dc400115 	stw	r17,4(sp)
 402cb6c:	dc000015 	stw	r16,0(sp)
 402cb70:	2500b804 	addi	r20,r4,736
 402cb74:	a0002326 	beq	r20,zero,402cc04 <_fwalk+0xbc>
 402cb78:	282b883a 	mov	r21,r5
 402cb7c:	002f883a 	mov	r23,zero
 402cb80:	05800044 	movi	r22,1
 402cb84:	04ffffc4 	movi	r19,-1
 402cb88:	a4400117 	ldw	r17,4(r20)
 402cb8c:	a4800217 	ldw	r18,8(r20)
 402cb90:	8c7fffc4 	addi	r17,r17,-1
 402cb94:	88000d16 	blt	r17,zero,402cbcc <_fwalk+0x84>
 402cb98:	94000304 	addi	r16,r18,12
 402cb9c:	94800384 	addi	r18,r18,14
 402cba0:	8080000b 	ldhu	r2,0(r16)
 402cba4:	8c7fffc4 	addi	r17,r17,-1
 402cba8:	813ffd04 	addi	r4,r16,-12
 402cbac:	b080042e 	bgeu	r22,r2,402cbc0 <_fwalk+0x78>
 402cbb0:	9080000f 	ldh	r2,0(r18)
 402cbb4:	14c00226 	beq	r2,r19,402cbc0 <_fwalk+0x78>
 402cbb8:	a83ee83a 	callr	r21
 402cbbc:	b8aeb03a 	or	r23,r23,r2
 402cbc0:	84001a04 	addi	r16,r16,104
 402cbc4:	94801a04 	addi	r18,r18,104
 402cbc8:	8cfff51e 	bne	r17,r19,402cba0 <__flash_rwdata_start+0xffff6934>
 402cbcc:	a5000017 	ldw	r20,0(r20)
 402cbd0:	a03fed1e 	bne	r20,zero,402cb88 <__flash_rwdata_start+0xffff691c>
 402cbd4:	b805883a 	mov	r2,r23
 402cbd8:	dfc00817 	ldw	ra,32(sp)
 402cbdc:	ddc00717 	ldw	r23,28(sp)
 402cbe0:	dd800617 	ldw	r22,24(sp)
 402cbe4:	dd400517 	ldw	r21,20(sp)
 402cbe8:	dd000417 	ldw	r20,16(sp)
 402cbec:	dcc00317 	ldw	r19,12(sp)
 402cbf0:	dc800217 	ldw	r18,8(sp)
 402cbf4:	dc400117 	ldw	r17,4(sp)
 402cbf8:	dc000017 	ldw	r16,0(sp)
 402cbfc:	dec00904 	addi	sp,sp,36
 402cc00:	f800283a 	ret
 402cc04:	002f883a 	mov	r23,zero
 402cc08:	003ff206 	br	402cbd4 <__flash_rwdata_start+0xffff6968>

0402cc0c <_fwalk_reent>:
 402cc0c:	defff704 	addi	sp,sp,-36
 402cc10:	dd000415 	stw	r20,16(sp)
 402cc14:	dfc00815 	stw	ra,32(sp)
 402cc18:	ddc00715 	stw	r23,28(sp)
 402cc1c:	dd800615 	stw	r22,24(sp)
 402cc20:	dd400515 	stw	r21,20(sp)
 402cc24:	dcc00315 	stw	r19,12(sp)
 402cc28:	dc800215 	stw	r18,8(sp)
 402cc2c:	dc400115 	stw	r17,4(sp)
 402cc30:	dc000015 	stw	r16,0(sp)
 402cc34:	2500b804 	addi	r20,r4,736
 402cc38:	a0002326 	beq	r20,zero,402ccc8 <_fwalk_reent+0xbc>
 402cc3c:	282b883a 	mov	r21,r5
 402cc40:	2027883a 	mov	r19,r4
 402cc44:	002f883a 	mov	r23,zero
 402cc48:	05800044 	movi	r22,1
 402cc4c:	04bfffc4 	movi	r18,-1
 402cc50:	a4400117 	ldw	r17,4(r20)
 402cc54:	a4000217 	ldw	r16,8(r20)
 402cc58:	8c7fffc4 	addi	r17,r17,-1
 402cc5c:	88000c16 	blt	r17,zero,402cc90 <_fwalk_reent+0x84>
 402cc60:	84000304 	addi	r16,r16,12
 402cc64:	8080000b 	ldhu	r2,0(r16)
 402cc68:	8c7fffc4 	addi	r17,r17,-1
 402cc6c:	817ffd04 	addi	r5,r16,-12
 402cc70:	b080052e 	bgeu	r22,r2,402cc88 <_fwalk_reent+0x7c>
 402cc74:	8080008f 	ldh	r2,2(r16)
 402cc78:	9809883a 	mov	r4,r19
 402cc7c:	14800226 	beq	r2,r18,402cc88 <_fwalk_reent+0x7c>
 402cc80:	a83ee83a 	callr	r21
 402cc84:	b8aeb03a 	or	r23,r23,r2
 402cc88:	84001a04 	addi	r16,r16,104
 402cc8c:	8cbff51e 	bne	r17,r18,402cc64 <__flash_rwdata_start+0xffff69f8>
 402cc90:	a5000017 	ldw	r20,0(r20)
 402cc94:	a03fee1e 	bne	r20,zero,402cc50 <__flash_rwdata_start+0xffff69e4>
 402cc98:	b805883a 	mov	r2,r23
 402cc9c:	dfc00817 	ldw	ra,32(sp)
 402cca0:	ddc00717 	ldw	r23,28(sp)
 402cca4:	dd800617 	ldw	r22,24(sp)
 402cca8:	dd400517 	ldw	r21,20(sp)
 402ccac:	dd000417 	ldw	r20,16(sp)
 402ccb0:	dcc00317 	ldw	r19,12(sp)
 402ccb4:	dc800217 	ldw	r18,8(sp)
 402ccb8:	dc400117 	ldw	r17,4(sp)
 402ccbc:	dc000017 	ldw	r16,0(sp)
 402ccc0:	dec00904 	addi	sp,sp,36
 402ccc4:	f800283a 	ret
 402ccc8:	002f883a 	mov	r23,zero
 402cccc:	003ff206 	br	402cc98 <__flash_rwdata_start+0xffff6a2c>

0402ccd0 <_setlocale_r>:
 402ccd0:	30001b26 	beq	r6,zero,402cd40 <_setlocale_r+0x70>
 402ccd4:	01400034 	movhi	r5,0
 402ccd8:	defffe04 	addi	sp,sp,-8
 402ccdc:	29414704 	addi	r5,r5,1308
 402cce0:	3009883a 	mov	r4,r6
 402cce4:	dc000015 	stw	r16,0(sp)
 402cce8:	dfc00115 	stw	ra,4(sp)
 402ccec:	3021883a 	mov	r16,r6
 402ccf0:	4027df00 	call	4027df0 <strcmp>
 402ccf4:	1000061e 	bne	r2,zero,402cd10 <_setlocale_r+0x40>
 402ccf8:	00800034 	movhi	r2,0
 402ccfc:	10814604 	addi	r2,r2,1304
 402cd00:	dfc00117 	ldw	ra,4(sp)
 402cd04:	dc000017 	ldw	r16,0(sp)
 402cd08:	dec00204 	addi	sp,sp,8
 402cd0c:	f800283a 	ret
 402cd10:	01400034 	movhi	r5,0
 402cd14:	29414604 	addi	r5,r5,1304
 402cd18:	8009883a 	mov	r4,r16
 402cd1c:	4027df00 	call	4027df0 <strcmp>
 402cd20:	103ff526 	beq	r2,zero,402ccf8 <__flash_rwdata_start+0xffff6a8c>
 402cd24:	01400034 	movhi	r5,0
 402cd28:	29413104 	addi	r5,r5,1220
 402cd2c:	8009883a 	mov	r4,r16
 402cd30:	4027df00 	call	4027df0 <strcmp>
 402cd34:	103ff026 	beq	r2,zero,402ccf8 <__flash_rwdata_start+0xffff6a8c>
 402cd38:	0005883a 	mov	r2,zero
 402cd3c:	003ff006 	br	402cd00 <__flash_rwdata_start+0xffff6a94>
 402cd40:	00800034 	movhi	r2,0
 402cd44:	10814604 	addi	r2,r2,1304
 402cd48:	f800283a 	ret

0402cd4c <__locale_charset>:
 402cd4c:	00800034 	movhi	r2,0
 402cd50:	1083b904 	addi	r2,r2,3812
 402cd54:	f800283a 	ret

0402cd58 <__locale_mb_cur_max>:
 402cd58:	00800034 	movhi	r2,0
 402cd5c:	10886504 	addi	r2,r2,8596
 402cd60:	10800017 	ldw	r2,0(r2)
 402cd64:	f800283a 	ret

0402cd68 <__locale_msgcharset>:
 402cd68:	00800034 	movhi	r2,0
 402cd6c:	1083b104 	addi	r2,r2,3780
 402cd70:	f800283a 	ret

0402cd74 <__locale_cjk_lang>:
 402cd74:	0005883a 	mov	r2,zero
 402cd78:	f800283a 	ret

0402cd7c <_localeconv_r>:
 402cd7c:	00800034 	movhi	r2,0
 402cd80:	1083c104 	addi	r2,r2,3844
 402cd84:	f800283a 	ret

0402cd88 <setlocale>:
 402cd88:	00800034 	movhi	r2,0
 402cd8c:	10886404 	addi	r2,r2,8592
 402cd90:	280d883a 	mov	r6,r5
 402cd94:	200b883a 	mov	r5,r4
 402cd98:	11000017 	ldw	r4,0(r2)
 402cd9c:	402ccd01 	jmpi	402ccd0 <_setlocale_r>

0402cda0 <localeconv>:
 402cda0:	00800034 	movhi	r2,0
 402cda4:	1083c104 	addi	r2,r2,3844
 402cda8:	f800283a 	ret

0402cdac <__smakebuf_r>:
 402cdac:	2880030b 	ldhu	r2,12(r5)
 402cdb0:	10c0008c 	andi	r3,r2,2
 402cdb4:	1800411e 	bne	r3,zero,402cebc <__smakebuf_r+0x110>
 402cdb8:	deffec04 	addi	sp,sp,-80
 402cdbc:	dc000f15 	stw	r16,60(sp)
 402cdc0:	2821883a 	mov	r16,r5
 402cdc4:	2940038f 	ldh	r5,14(r5)
 402cdc8:	dc401015 	stw	r17,64(sp)
 402cdcc:	dfc01315 	stw	ra,76(sp)
 402cdd0:	dcc01215 	stw	r19,72(sp)
 402cdd4:	dc801115 	stw	r18,68(sp)
 402cdd8:	2023883a 	mov	r17,r4
 402cddc:	28001c16 	blt	r5,zero,402ce50 <__smakebuf_r+0xa4>
 402cde0:	d80d883a 	mov	r6,sp
 402cde4:	403078c0 	call	403078c <_fstat_r>
 402cde8:	10001816 	blt	r2,zero,402ce4c <__smakebuf_r+0xa0>
 402cdec:	d8800117 	ldw	r2,4(sp)
 402cdf0:	00e00014 	movui	r3,32768
 402cdf4:	10bc000c 	andi	r2,r2,61440
 402cdf8:	14c80020 	cmpeqi	r19,r2,8192
 402cdfc:	10c03726 	beq	r2,r3,402cedc <__smakebuf_r+0x130>
 402ce00:	80c0030b 	ldhu	r3,12(r16)
 402ce04:	18c20014 	ori	r3,r3,2048
 402ce08:	80c0030d 	sth	r3,12(r16)
 402ce0c:	00c80004 	movi	r3,8192
 402ce10:	10c0521e 	bne	r2,r3,402cf5c <__smakebuf_r+0x1b0>
 402ce14:	8140038f 	ldh	r5,14(r16)
 402ce18:	8809883a 	mov	r4,r17
 402ce1c:	40307e80 	call	40307e8 <_isatty_r>
 402ce20:	10004c26 	beq	r2,zero,402cf54 <__smakebuf_r+0x1a8>
 402ce24:	8080030b 	ldhu	r2,12(r16)
 402ce28:	80c010c4 	addi	r3,r16,67
 402ce2c:	80c00015 	stw	r3,0(r16)
 402ce30:	10800054 	ori	r2,r2,1
 402ce34:	8080030d 	sth	r2,12(r16)
 402ce38:	00800044 	movi	r2,1
 402ce3c:	80c00415 	stw	r3,16(r16)
 402ce40:	80800515 	stw	r2,20(r16)
 402ce44:	04810004 	movi	r18,1024
 402ce48:	00000706 	br	402ce68 <__smakebuf_r+0xbc>
 402ce4c:	8080030b 	ldhu	r2,12(r16)
 402ce50:	10c0200c 	andi	r3,r2,128
 402ce54:	18001f1e 	bne	r3,zero,402ced4 <__smakebuf_r+0x128>
 402ce58:	04810004 	movi	r18,1024
 402ce5c:	10820014 	ori	r2,r2,2048
 402ce60:	8080030d 	sth	r2,12(r16)
 402ce64:	0027883a 	mov	r19,zero
 402ce68:	900b883a 	mov	r5,r18
 402ce6c:	8809883a 	mov	r4,r17
 402ce70:	4026f880 	call	4026f88 <_malloc_r>
 402ce74:	10002c26 	beq	r2,zero,402cf28 <__smakebuf_r+0x17c>
 402ce78:	80c0030b 	ldhu	r3,12(r16)
 402ce7c:	010100f4 	movhi	r4,1027
 402ce80:	212fb004 	addi	r4,r4,-16704
 402ce84:	89000f15 	stw	r4,60(r17)
 402ce88:	18c02014 	ori	r3,r3,128
 402ce8c:	80c0030d 	sth	r3,12(r16)
 402ce90:	80800015 	stw	r2,0(r16)
 402ce94:	80800415 	stw	r2,16(r16)
 402ce98:	84800515 	stw	r18,20(r16)
 402ce9c:	98001a1e 	bne	r19,zero,402cf08 <__smakebuf_r+0x15c>
 402cea0:	dfc01317 	ldw	ra,76(sp)
 402cea4:	dcc01217 	ldw	r19,72(sp)
 402cea8:	dc801117 	ldw	r18,68(sp)
 402ceac:	dc401017 	ldw	r17,64(sp)
 402ceb0:	dc000f17 	ldw	r16,60(sp)
 402ceb4:	dec01404 	addi	sp,sp,80
 402ceb8:	f800283a 	ret
 402cebc:	288010c4 	addi	r2,r5,67
 402cec0:	28800015 	stw	r2,0(r5)
 402cec4:	28800415 	stw	r2,16(r5)
 402cec8:	00800044 	movi	r2,1
 402cecc:	28800515 	stw	r2,20(r5)
 402ced0:	f800283a 	ret
 402ced4:	04801004 	movi	r18,64
 402ced8:	003fe006 	br	402ce5c <__flash_rwdata_start+0xffff6bf0>
 402cedc:	81000a17 	ldw	r4,40(r16)
 402cee0:	00c100f4 	movhi	r3,1027
 402cee4:	18fac104 	addi	r3,r3,-5372
 402cee8:	20ffc51e 	bne	r4,r3,402ce00 <__flash_rwdata_start+0xffff6b94>
 402ceec:	8080030b 	ldhu	r2,12(r16)
 402cef0:	04810004 	movi	r18,1024
 402cef4:	84801315 	stw	r18,76(r16)
 402cef8:	1484b03a 	or	r2,r2,r18
 402cefc:	8080030d 	sth	r2,12(r16)
 402cf00:	0027883a 	mov	r19,zero
 402cf04:	003fd806 	br	402ce68 <__flash_rwdata_start+0xffff6bfc>
 402cf08:	8140038f 	ldh	r5,14(r16)
 402cf0c:	8809883a 	mov	r4,r17
 402cf10:	40307e80 	call	40307e8 <_isatty_r>
 402cf14:	103fe226 	beq	r2,zero,402cea0 <__flash_rwdata_start+0xffff6c34>
 402cf18:	8080030b 	ldhu	r2,12(r16)
 402cf1c:	10800054 	ori	r2,r2,1
 402cf20:	8080030d 	sth	r2,12(r16)
 402cf24:	003fde06 	br	402cea0 <__flash_rwdata_start+0xffff6c34>
 402cf28:	8080030b 	ldhu	r2,12(r16)
 402cf2c:	10c0800c 	andi	r3,r2,512
 402cf30:	183fdb1e 	bne	r3,zero,402cea0 <__flash_rwdata_start+0xffff6c34>
 402cf34:	10800094 	ori	r2,r2,2
 402cf38:	80c010c4 	addi	r3,r16,67
 402cf3c:	8080030d 	sth	r2,12(r16)
 402cf40:	00800044 	movi	r2,1
 402cf44:	80c00015 	stw	r3,0(r16)
 402cf48:	80c00415 	stw	r3,16(r16)
 402cf4c:	80800515 	stw	r2,20(r16)
 402cf50:	003fd306 	br	402cea0 <__flash_rwdata_start+0xffff6c34>
 402cf54:	04810004 	movi	r18,1024
 402cf58:	003fc306 	br	402ce68 <__flash_rwdata_start+0xffff6bfc>
 402cf5c:	0027883a 	mov	r19,zero
 402cf60:	04810004 	movi	r18,1024
 402cf64:	003fc006 	br	402ce68 <__flash_rwdata_start+0xffff6bfc>

0402cf68 <memchr>:
 402cf68:	208000cc 	andi	r2,r4,3
 402cf6c:	280f883a 	mov	r7,r5
 402cf70:	10003426 	beq	r2,zero,402d044 <memchr+0xdc>
 402cf74:	30bfffc4 	addi	r2,r6,-1
 402cf78:	30001a26 	beq	r6,zero,402cfe4 <memchr+0x7c>
 402cf7c:	20c00003 	ldbu	r3,0(r4)
 402cf80:	29803fcc 	andi	r6,r5,255
 402cf84:	30c0051e 	bne	r6,r3,402cf9c <memchr+0x34>
 402cf88:	00001806 	br	402cfec <memchr+0x84>
 402cf8c:	10001526 	beq	r2,zero,402cfe4 <memchr+0x7c>
 402cf90:	20c00003 	ldbu	r3,0(r4)
 402cf94:	10bfffc4 	addi	r2,r2,-1
 402cf98:	30c01426 	beq	r6,r3,402cfec <memchr+0x84>
 402cf9c:	21000044 	addi	r4,r4,1
 402cfa0:	20c000cc 	andi	r3,r4,3
 402cfa4:	183ff91e 	bne	r3,zero,402cf8c <__flash_rwdata_start+0xffff6d20>
 402cfa8:	020000c4 	movi	r8,3
 402cfac:	40801136 	bltu	r8,r2,402cff4 <memchr+0x8c>
 402cfb0:	10000c26 	beq	r2,zero,402cfe4 <memchr+0x7c>
 402cfb4:	20c00003 	ldbu	r3,0(r4)
 402cfb8:	29403fcc 	andi	r5,r5,255
 402cfbc:	28c00b26 	beq	r5,r3,402cfec <memchr+0x84>
 402cfc0:	20c00044 	addi	r3,r4,1
 402cfc4:	39803fcc 	andi	r6,r7,255
 402cfc8:	2089883a 	add	r4,r4,r2
 402cfcc:	00000306 	br	402cfdc <memchr+0x74>
 402cfd0:	18c00044 	addi	r3,r3,1
 402cfd4:	197fffc3 	ldbu	r5,-1(r3)
 402cfd8:	31400526 	beq	r6,r5,402cff0 <memchr+0x88>
 402cfdc:	1805883a 	mov	r2,r3
 402cfe0:	20fffb1e 	bne	r4,r3,402cfd0 <__flash_rwdata_start+0xffff6d64>
 402cfe4:	0005883a 	mov	r2,zero
 402cfe8:	f800283a 	ret
 402cfec:	2005883a 	mov	r2,r4
 402cff0:	f800283a 	ret
 402cff4:	28c03fcc 	andi	r3,r5,255
 402cff8:	1812923a 	slli	r9,r3,8
 402cffc:	02ffbff4 	movhi	r11,65279
 402d000:	02a02074 	movhi	r10,32897
 402d004:	48d2b03a 	or	r9,r9,r3
 402d008:	4806943a 	slli	r3,r9,16
 402d00c:	5affbfc4 	addi	r11,r11,-257
 402d010:	52a02004 	addi	r10,r10,-32640
 402d014:	48d2b03a 	or	r9,r9,r3
 402d018:	20c00017 	ldw	r3,0(r4)
 402d01c:	48c6f03a 	xor	r3,r9,r3
 402d020:	1acd883a 	add	r6,r3,r11
 402d024:	00c6303a 	nor	r3,zero,r3
 402d028:	30c6703a 	and	r3,r6,r3
 402d02c:	1a86703a 	and	r3,r3,r10
 402d030:	183fe01e 	bne	r3,zero,402cfb4 <__flash_rwdata_start+0xffff6d48>
 402d034:	10bfff04 	addi	r2,r2,-4
 402d038:	21000104 	addi	r4,r4,4
 402d03c:	40bff636 	bltu	r8,r2,402d018 <__flash_rwdata_start+0xffff6dac>
 402d040:	003fdb06 	br	402cfb0 <__flash_rwdata_start+0xffff6d44>
 402d044:	3005883a 	mov	r2,r6
 402d048:	003fd706 	br	402cfa8 <__flash_rwdata_start+0xffff6d3c>

0402d04c <memcpy>:
 402d04c:	defffd04 	addi	sp,sp,-12
 402d050:	dfc00215 	stw	ra,8(sp)
 402d054:	dc400115 	stw	r17,4(sp)
 402d058:	dc000015 	stw	r16,0(sp)
 402d05c:	00c003c4 	movi	r3,15
 402d060:	2005883a 	mov	r2,r4
 402d064:	1980452e 	bgeu	r3,r6,402d17c <memcpy+0x130>
 402d068:	2906b03a 	or	r3,r5,r4
 402d06c:	18c000cc 	andi	r3,r3,3
 402d070:	1800441e 	bne	r3,zero,402d184 <memcpy+0x138>
 402d074:	347ffc04 	addi	r17,r6,-16
 402d078:	8822d13a 	srli	r17,r17,4
 402d07c:	28c00104 	addi	r3,r5,4
 402d080:	23400104 	addi	r13,r4,4
 402d084:	8820913a 	slli	r16,r17,4
 402d088:	2b000204 	addi	r12,r5,8
 402d08c:	22c00204 	addi	r11,r4,8
 402d090:	84000504 	addi	r16,r16,20
 402d094:	2a800304 	addi	r10,r5,12
 402d098:	22400304 	addi	r9,r4,12
 402d09c:	2c21883a 	add	r16,r5,r16
 402d0a0:	2811883a 	mov	r8,r5
 402d0a4:	200f883a 	mov	r7,r4
 402d0a8:	41000017 	ldw	r4,0(r8)
 402d0ac:	1fc00017 	ldw	ra,0(r3)
 402d0b0:	63c00017 	ldw	r15,0(r12)
 402d0b4:	39000015 	stw	r4,0(r7)
 402d0b8:	53800017 	ldw	r14,0(r10)
 402d0bc:	6fc00015 	stw	ra,0(r13)
 402d0c0:	5bc00015 	stw	r15,0(r11)
 402d0c4:	4b800015 	stw	r14,0(r9)
 402d0c8:	18c00404 	addi	r3,r3,16
 402d0cc:	39c00404 	addi	r7,r7,16
 402d0d0:	42000404 	addi	r8,r8,16
 402d0d4:	6b400404 	addi	r13,r13,16
 402d0d8:	63000404 	addi	r12,r12,16
 402d0dc:	5ac00404 	addi	r11,r11,16
 402d0e0:	52800404 	addi	r10,r10,16
 402d0e4:	4a400404 	addi	r9,r9,16
 402d0e8:	1c3fef1e 	bne	r3,r16,402d0a8 <__flash_rwdata_start+0xffff6e3c>
 402d0ec:	89c00044 	addi	r7,r17,1
 402d0f0:	380e913a 	slli	r7,r7,4
 402d0f4:	310003cc 	andi	r4,r6,15
 402d0f8:	02c000c4 	movi	r11,3
 402d0fc:	11c7883a 	add	r3,r2,r7
 402d100:	29cb883a 	add	r5,r5,r7
 402d104:	5900212e 	bgeu	r11,r4,402d18c <memcpy+0x140>
 402d108:	1813883a 	mov	r9,r3
 402d10c:	2811883a 	mov	r8,r5
 402d110:	200f883a 	mov	r7,r4
 402d114:	42800017 	ldw	r10,0(r8)
 402d118:	4a400104 	addi	r9,r9,4
 402d11c:	39ffff04 	addi	r7,r7,-4
 402d120:	4abfff15 	stw	r10,-4(r9)
 402d124:	42000104 	addi	r8,r8,4
 402d128:	59fffa36 	bltu	r11,r7,402d114 <__flash_rwdata_start+0xffff6ea8>
 402d12c:	213fff04 	addi	r4,r4,-4
 402d130:	2008d0ba 	srli	r4,r4,2
 402d134:	318000cc 	andi	r6,r6,3
 402d138:	21000044 	addi	r4,r4,1
 402d13c:	2109883a 	add	r4,r4,r4
 402d140:	2109883a 	add	r4,r4,r4
 402d144:	1907883a 	add	r3,r3,r4
 402d148:	290b883a 	add	r5,r5,r4
 402d14c:	30000626 	beq	r6,zero,402d168 <memcpy+0x11c>
 402d150:	198d883a 	add	r6,r3,r6
 402d154:	29c00003 	ldbu	r7,0(r5)
 402d158:	18c00044 	addi	r3,r3,1
 402d15c:	29400044 	addi	r5,r5,1
 402d160:	19ffffc5 	stb	r7,-1(r3)
 402d164:	19bffb1e 	bne	r3,r6,402d154 <__flash_rwdata_start+0xffff6ee8>
 402d168:	dfc00217 	ldw	ra,8(sp)
 402d16c:	dc400117 	ldw	r17,4(sp)
 402d170:	dc000017 	ldw	r16,0(sp)
 402d174:	dec00304 	addi	sp,sp,12
 402d178:	f800283a 	ret
 402d17c:	2007883a 	mov	r3,r4
 402d180:	003ff206 	br	402d14c <__flash_rwdata_start+0xffff6ee0>
 402d184:	2007883a 	mov	r3,r4
 402d188:	003ff106 	br	402d150 <__flash_rwdata_start+0xffff6ee4>
 402d18c:	200d883a 	mov	r6,r4
 402d190:	003fee06 	br	402d14c <__flash_rwdata_start+0xffff6ee0>

0402d194 <memmove>:
 402d194:	2005883a 	mov	r2,r4
 402d198:	29000b2e 	bgeu	r5,r4,402d1c8 <memmove+0x34>
 402d19c:	298f883a 	add	r7,r5,r6
 402d1a0:	21c0092e 	bgeu	r4,r7,402d1c8 <memmove+0x34>
 402d1a4:	2187883a 	add	r3,r4,r6
 402d1a8:	198bc83a 	sub	r5,r3,r6
 402d1ac:	30004826 	beq	r6,zero,402d2d0 <memmove+0x13c>
 402d1b0:	39ffffc4 	addi	r7,r7,-1
 402d1b4:	39000003 	ldbu	r4,0(r7)
 402d1b8:	18ffffc4 	addi	r3,r3,-1
 402d1bc:	19000005 	stb	r4,0(r3)
 402d1c0:	28fffb1e 	bne	r5,r3,402d1b0 <__flash_rwdata_start+0xffff6f44>
 402d1c4:	f800283a 	ret
 402d1c8:	00c003c4 	movi	r3,15
 402d1cc:	1980412e 	bgeu	r3,r6,402d2d4 <memmove+0x140>
 402d1d0:	2886b03a 	or	r3,r5,r2
 402d1d4:	18c000cc 	andi	r3,r3,3
 402d1d8:	1800401e 	bne	r3,zero,402d2dc <memmove+0x148>
 402d1dc:	33fffc04 	addi	r15,r6,-16
 402d1e0:	781ed13a 	srli	r15,r15,4
 402d1e4:	28c00104 	addi	r3,r5,4
 402d1e8:	13400104 	addi	r13,r2,4
 402d1ec:	781c913a 	slli	r14,r15,4
 402d1f0:	2b000204 	addi	r12,r5,8
 402d1f4:	12c00204 	addi	r11,r2,8
 402d1f8:	73800504 	addi	r14,r14,20
 402d1fc:	2a800304 	addi	r10,r5,12
 402d200:	12400304 	addi	r9,r2,12
 402d204:	2b9d883a 	add	r14,r5,r14
 402d208:	2811883a 	mov	r8,r5
 402d20c:	100f883a 	mov	r7,r2
 402d210:	41000017 	ldw	r4,0(r8)
 402d214:	39c00404 	addi	r7,r7,16
 402d218:	18c00404 	addi	r3,r3,16
 402d21c:	393ffc15 	stw	r4,-16(r7)
 402d220:	193ffc17 	ldw	r4,-16(r3)
 402d224:	6b400404 	addi	r13,r13,16
 402d228:	5ac00404 	addi	r11,r11,16
 402d22c:	693ffc15 	stw	r4,-16(r13)
 402d230:	61000017 	ldw	r4,0(r12)
 402d234:	4a400404 	addi	r9,r9,16
 402d238:	42000404 	addi	r8,r8,16
 402d23c:	593ffc15 	stw	r4,-16(r11)
 402d240:	51000017 	ldw	r4,0(r10)
 402d244:	63000404 	addi	r12,r12,16
 402d248:	52800404 	addi	r10,r10,16
 402d24c:	493ffc15 	stw	r4,-16(r9)
 402d250:	1bbfef1e 	bne	r3,r14,402d210 <__flash_rwdata_start+0xffff6fa4>
 402d254:	79000044 	addi	r4,r15,1
 402d258:	2008913a 	slli	r4,r4,4
 402d25c:	328003cc 	andi	r10,r6,15
 402d260:	02c000c4 	movi	r11,3
 402d264:	1107883a 	add	r3,r2,r4
 402d268:	290b883a 	add	r5,r5,r4
 402d26c:	5a801e2e 	bgeu	r11,r10,402d2e8 <memmove+0x154>
 402d270:	1813883a 	mov	r9,r3
 402d274:	2811883a 	mov	r8,r5
 402d278:	500f883a 	mov	r7,r10
 402d27c:	41000017 	ldw	r4,0(r8)
 402d280:	4a400104 	addi	r9,r9,4
 402d284:	39ffff04 	addi	r7,r7,-4
 402d288:	493fff15 	stw	r4,-4(r9)
 402d28c:	42000104 	addi	r8,r8,4
 402d290:	59fffa36 	bltu	r11,r7,402d27c <__flash_rwdata_start+0xffff7010>
 402d294:	513fff04 	addi	r4,r10,-4
 402d298:	2008d0ba 	srli	r4,r4,2
 402d29c:	318000cc 	andi	r6,r6,3
 402d2a0:	21000044 	addi	r4,r4,1
 402d2a4:	2109883a 	add	r4,r4,r4
 402d2a8:	2109883a 	add	r4,r4,r4
 402d2ac:	1907883a 	add	r3,r3,r4
 402d2b0:	290b883a 	add	r5,r5,r4
 402d2b4:	30000b26 	beq	r6,zero,402d2e4 <memmove+0x150>
 402d2b8:	198d883a 	add	r6,r3,r6
 402d2bc:	29c00003 	ldbu	r7,0(r5)
 402d2c0:	18c00044 	addi	r3,r3,1
 402d2c4:	29400044 	addi	r5,r5,1
 402d2c8:	19ffffc5 	stb	r7,-1(r3)
 402d2cc:	19bffb1e 	bne	r3,r6,402d2bc <__flash_rwdata_start+0xffff7050>
 402d2d0:	f800283a 	ret
 402d2d4:	1007883a 	mov	r3,r2
 402d2d8:	003ff606 	br	402d2b4 <__flash_rwdata_start+0xffff7048>
 402d2dc:	1007883a 	mov	r3,r2
 402d2e0:	003ff506 	br	402d2b8 <__flash_rwdata_start+0xffff704c>
 402d2e4:	f800283a 	ret
 402d2e8:	500d883a 	mov	r6,r10
 402d2ec:	003ff106 	br	402d2b4 <__flash_rwdata_start+0xffff7048>

0402d2f0 <_Balloc>:
 402d2f0:	20801317 	ldw	r2,76(r4)
 402d2f4:	defffc04 	addi	sp,sp,-16
 402d2f8:	dc400115 	stw	r17,4(sp)
 402d2fc:	dc000015 	stw	r16,0(sp)
 402d300:	dfc00315 	stw	ra,12(sp)
 402d304:	dc800215 	stw	r18,8(sp)
 402d308:	2023883a 	mov	r17,r4
 402d30c:	2821883a 	mov	r16,r5
 402d310:	10000f26 	beq	r2,zero,402d350 <_Balloc+0x60>
 402d314:	8407883a 	add	r3,r16,r16
 402d318:	18c7883a 	add	r3,r3,r3
 402d31c:	10c7883a 	add	r3,r2,r3
 402d320:	18800017 	ldw	r2,0(r3)
 402d324:	10001126 	beq	r2,zero,402d36c <_Balloc+0x7c>
 402d328:	11000017 	ldw	r4,0(r2)
 402d32c:	19000015 	stw	r4,0(r3)
 402d330:	10000415 	stw	zero,16(r2)
 402d334:	10000315 	stw	zero,12(r2)
 402d338:	dfc00317 	ldw	ra,12(sp)
 402d33c:	dc800217 	ldw	r18,8(sp)
 402d340:	dc400117 	ldw	r17,4(sp)
 402d344:	dc000017 	ldw	r16,0(sp)
 402d348:	dec00404 	addi	sp,sp,16
 402d34c:	f800283a 	ret
 402d350:	01800844 	movi	r6,33
 402d354:	01400104 	movi	r5,4
 402d358:	40303bc0 	call	40303bc <_calloc_r>
 402d35c:	88801315 	stw	r2,76(r17)
 402d360:	103fec1e 	bne	r2,zero,402d314 <__flash_rwdata_start+0xffff70a8>
 402d364:	0005883a 	mov	r2,zero
 402d368:	003ff306 	br	402d338 <__flash_rwdata_start+0xffff70cc>
 402d36c:	01400044 	movi	r5,1
 402d370:	2c24983a 	sll	r18,r5,r16
 402d374:	8809883a 	mov	r4,r17
 402d378:	91800144 	addi	r6,r18,5
 402d37c:	318d883a 	add	r6,r6,r6
 402d380:	318d883a 	add	r6,r6,r6
 402d384:	40303bc0 	call	40303bc <_calloc_r>
 402d388:	103ff626 	beq	r2,zero,402d364 <__flash_rwdata_start+0xffff70f8>
 402d38c:	14000115 	stw	r16,4(r2)
 402d390:	14800215 	stw	r18,8(r2)
 402d394:	003fe606 	br	402d330 <__flash_rwdata_start+0xffff70c4>

0402d398 <_Bfree>:
 402d398:	28000826 	beq	r5,zero,402d3bc <_Bfree+0x24>
 402d39c:	28c00117 	ldw	r3,4(r5)
 402d3a0:	20801317 	ldw	r2,76(r4)
 402d3a4:	18c7883a 	add	r3,r3,r3
 402d3a8:	18c7883a 	add	r3,r3,r3
 402d3ac:	10c5883a 	add	r2,r2,r3
 402d3b0:	10c00017 	ldw	r3,0(r2)
 402d3b4:	28c00015 	stw	r3,0(r5)
 402d3b8:	11400015 	stw	r5,0(r2)
 402d3bc:	f800283a 	ret

0402d3c0 <__multadd>:
 402d3c0:	defffa04 	addi	sp,sp,-24
 402d3c4:	dc800315 	stw	r18,12(sp)
 402d3c8:	dc400215 	stw	r17,8(sp)
 402d3cc:	dc000115 	stw	r16,4(sp)
 402d3d0:	2823883a 	mov	r17,r5
 402d3d4:	2c000417 	ldw	r16,16(r5)
 402d3d8:	dfc00515 	stw	ra,20(sp)
 402d3dc:	dcc00415 	stw	r19,16(sp)
 402d3e0:	2025883a 	mov	r18,r4
 402d3e4:	29400504 	addi	r5,r5,20
 402d3e8:	0011883a 	mov	r8,zero
 402d3ec:	28c00017 	ldw	r3,0(r5)
 402d3f0:	29400104 	addi	r5,r5,4
 402d3f4:	42000044 	addi	r8,r8,1
 402d3f8:	18bfffcc 	andi	r2,r3,65535
 402d3fc:	1185383a 	mul	r2,r2,r6
 402d400:	1806d43a 	srli	r3,r3,16
 402d404:	11cf883a 	add	r7,r2,r7
 402d408:	3808d43a 	srli	r4,r7,16
 402d40c:	1987383a 	mul	r3,r3,r6
 402d410:	38bfffcc 	andi	r2,r7,65535
 402d414:	1907883a 	add	r3,r3,r4
 402d418:	1808943a 	slli	r4,r3,16
 402d41c:	180ed43a 	srli	r7,r3,16
 402d420:	2085883a 	add	r2,r4,r2
 402d424:	28bfff15 	stw	r2,-4(r5)
 402d428:	443ff016 	blt	r8,r16,402d3ec <__flash_rwdata_start+0xffff7180>
 402d42c:	38000926 	beq	r7,zero,402d454 <__multadd+0x94>
 402d430:	88800217 	ldw	r2,8(r17)
 402d434:	80800f0e 	bge	r16,r2,402d474 <__multadd+0xb4>
 402d438:	80800144 	addi	r2,r16,5
 402d43c:	1085883a 	add	r2,r2,r2
 402d440:	1085883a 	add	r2,r2,r2
 402d444:	8885883a 	add	r2,r17,r2
 402d448:	11c00015 	stw	r7,0(r2)
 402d44c:	84000044 	addi	r16,r16,1
 402d450:	8c000415 	stw	r16,16(r17)
 402d454:	8805883a 	mov	r2,r17
 402d458:	dfc00517 	ldw	ra,20(sp)
 402d45c:	dcc00417 	ldw	r19,16(sp)
 402d460:	dc800317 	ldw	r18,12(sp)
 402d464:	dc400217 	ldw	r17,8(sp)
 402d468:	dc000117 	ldw	r16,4(sp)
 402d46c:	dec00604 	addi	sp,sp,24
 402d470:	f800283a 	ret
 402d474:	89400117 	ldw	r5,4(r17)
 402d478:	9009883a 	mov	r4,r18
 402d47c:	d9c00015 	stw	r7,0(sp)
 402d480:	29400044 	addi	r5,r5,1
 402d484:	402d2f00 	call	402d2f0 <_Balloc>
 402d488:	89800417 	ldw	r6,16(r17)
 402d48c:	89400304 	addi	r5,r17,12
 402d490:	11000304 	addi	r4,r2,12
 402d494:	31800084 	addi	r6,r6,2
 402d498:	318d883a 	add	r6,r6,r6
 402d49c:	318d883a 	add	r6,r6,r6
 402d4a0:	1027883a 	mov	r19,r2
 402d4a4:	402d04c0 	call	402d04c <memcpy>
 402d4a8:	d9c00017 	ldw	r7,0(sp)
 402d4ac:	88000a26 	beq	r17,zero,402d4d8 <__multadd+0x118>
 402d4b0:	88c00117 	ldw	r3,4(r17)
 402d4b4:	90801317 	ldw	r2,76(r18)
 402d4b8:	18c7883a 	add	r3,r3,r3
 402d4bc:	18c7883a 	add	r3,r3,r3
 402d4c0:	10c5883a 	add	r2,r2,r3
 402d4c4:	10c00017 	ldw	r3,0(r2)
 402d4c8:	88c00015 	stw	r3,0(r17)
 402d4cc:	14400015 	stw	r17,0(r2)
 402d4d0:	9823883a 	mov	r17,r19
 402d4d4:	003fd806 	br	402d438 <__flash_rwdata_start+0xffff71cc>
 402d4d8:	9823883a 	mov	r17,r19
 402d4dc:	003fd606 	br	402d438 <__flash_rwdata_start+0xffff71cc>

0402d4e0 <__s2b>:
 402d4e0:	defff904 	addi	sp,sp,-28
 402d4e4:	dc400115 	stw	r17,4(sp)
 402d4e8:	dc000015 	stw	r16,0(sp)
 402d4ec:	2023883a 	mov	r17,r4
 402d4f0:	2821883a 	mov	r16,r5
 402d4f4:	39000204 	addi	r4,r7,8
 402d4f8:	01400244 	movi	r5,9
 402d4fc:	dcc00315 	stw	r19,12(sp)
 402d500:	dc800215 	stw	r18,8(sp)
 402d504:	dfc00615 	stw	ra,24(sp)
 402d508:	dd400515 	stw	r21,20(sp)
 402d50c:	dd000415 	stw	r20,16(sp)
 402d510:	3825883a 	mov	r18,r7
 402d514:	3027883a 	mov	r19,r6
 402d518:	40245f40 	call	40245f4 <__divsi3>
 402d51c:	00c00044 	movi	r3,1
 402d520:	000b883a 	mov	r5,zero
 402d524:	1880030e 	bge	r3,r2,402d534 <__s2b+0x54>
 402d528:	18c7883a 	add	r3,r3,r3
 402d52c:	29400044 	addi	r5,r5,1
 402d530:	18bffd16 	blt	r3,r2,402d528 <__flash_rwdata_start+0xffff72bc>
 402d534:	8809883a 	mov	r4,r17
 402d538:	402d2f00 	call	402d2f0 <_Balloc>
 402d53c:	d8c00717 	ldw	r3,28(sp)
 402d540:	10c00515 	stw	r3,20(r2)
 402d544:	00c00044 	movi	r3,1
 402d548:	10c00415 	stw	r3,16(r2)
 402d54c:	00c00244 	movi	r3,9
 402d550:	1cc0210e 	bge	r3,r19,402d5d8 <__s2b+0xf8>
 402d554:	80eb883a 	add	r21,r16,r3
 402d558:	a829883a 	mov	r20,r21
 402d55c:	84e1883a 	add	r16,r16,r19
 402d560:	a1c00007 	ldb	r7,0(r20)
 402d564:	01800284 	movi	r6,10
 402d568:	a5000044 	addi	r20,r20,1
 402d56c:	100b883a 	mov	r5,r2
 402d570:	39fff404 	addi	r7,r7,-48
 402d574:	8809883a 	mov	r4,r17
 402d578:	402d3c00 	call	402d3c0 <__multadd>
 402d57c:	a43ff81e 	bne	r20,r16,402d560 <__flash_rwdata_start+0xffff72f4>
 402d580:	ace1883a 	add	r16,r21,r19
 402d584:	843ffe04 	addi	r16,r16,-8
 402d588:	9c800a0e 	bge	r19,r18,402d5b4 <__s2b+0xd4>
 402d58c:	94e5c83a 	sub	r18,r18,r19
 402d590:	84a5883a 	add	r18,r16,r18
 402d594:	81c00007 	ldb	r7,0(r16)
 402d598:	01800284 	movi	r6,10
 402d59c:	84000044 	addi	r16,r16,1
 402d5a0:	100b883a 	mov	r5,r2
 402d5a4:	39fff404 	addi	r7,r7,-48
 402d5a8:	8809883a 	mov	r4,r17
 402d5ac:	402d3c00 	call	402d3c0 <__multadd>
 402d5b0:	84bff81e 	bne	r16,r18,402d594 <__flash_rwdata_start+0xffff7328>
 402d5b4:	dfc00617 	ldw	ra,24(sp)
 402d5b8:	dd400517 	ldw	r21,20(sp)
 402d5bc:	dd000417 	ldw	r20,16(sp)
 402d5c0:	dcc00317 	ldw	r19,12(sp)
 402d5c4:	dc800217 	ldw	r18,8(sp)
 402d5c8:	dc400117 	ldw	r17,4(sp)
 402d5cc:	dc000017 	ldw	r16,0(sp)
 402d5d0:	dec00704 	addi	sp,sp,28
 402d5d4:	f800283a 	ret
 402d5d8:	84000284 	addi	r16,r16,10
 402d5dc:	1827883a 	mov	r19,r3
 402d5e0:	003fe906 	br	402d588 <__flash_rwdata_start+0xffff731c>

0402d5e4 <__hi0bits>:
 402d5e4:	20bfffec 	andhi	r2,r4,65535
 402d5e8:	1000141e 	bne	r2,zero,402d63c <__hi0bits+0x58>
 402d5ec:	2008943a 	slli	r4,r4,16
 402d5f0:	00800404 	movi	r2,16
 402d5f4:	20ffc02c 	andhi	r3,r4,65280
 402d5f8:	1800021e 	bne	r3,zero,402d604 <__hi0bits+0x20>
 402d5fc:	2008923a 	slli	r4,r4,8
 402d600:	10800204 	addi	r2,r2,8
 402d604:	20fc002c 	andhi	r3,r4,61440
 402d608:	1800021e 	bne	r3,zero,402d614 <__hi0bits+0x30>
 402d60c:	2008913a 	slli	r4,r4,4
 402d610:	10800104 	addi	r2,r2,4
 402d614:	20f0002c 	andhi	r3,r4,49152
 402d618:	1800031e 	bne	r3,zero,402d628 <__hi0bits+0x44>
 402d61c:	2109883a 	add	r4,r4,r4
 402d620:	10800084 	addi	r2,r2,2
 402d624:	2109883a 	add	r4,r4,r4
 402d628:	20000316 	blt	r4,zero,402d638 <__hi0bits+0x54>
 402d62c:	2110002c 	andhi	r4,r4,16384
 402d630:	2000041e 	bne	r4,zero,402d644 <__hi0bits+0x60>
 402d634:	00800804 	movi	r2,32
 402d638:	f800283a 	ret
 402d63c:	0005883a 	mov	r2,zero
 402d640:	003fec06 	br	402d5f4 <__flash_rwdata_start+0xffff7388>
 402d644:	10800044 	addi	r2,r2,1
 402d648:	f800283a 	ret

0402d64c <__lo0bits>:
 402d64c:	20c00017 	ldw	r3,0(r4)
 402d650:	188001cc 	andi	r2,r3,7
 402d654:	10000826 	beq	r2,zero,402d678 <__lo0bits+0x2c>
 402d658:	1880004c 	andi	r2,r3,1
 402d65c:	1000211e 	bne	r2,zero,402d6e4 <__lo0bits+0x98>
 402d660:	1880008c 	andi	r2,r3,2
 402d664:	1000211e 	bne	r2,zero,402d6ec <__lo0bits+0xa0>
 402d668:	1806d0ba 	srli	r3,r3,2
 402d66c:	00800084 	movi	r2,2
 402d670:	20c00015 	stw	r3,0(r4)
 402d674:	f800283a 	ret
 402d678:	18bfffcc 	andi	r2,r3,65535
 402d67c:	10001326 	beq	r2,zero,402d6cc <__lo0bits+0x80>
 402d680:	0005883a 	mov	r2,zero
 402d684:	19403fcc 	andi	r5,r3,255
 402d688:	2800021e 	bne	r5,zero,402d694 <__lo0bits+0x48>
 402d68c:	1806d23a 	srli	r3,r3,8
 402d690:	10800204 	addi	r2,r2,8
 402d694:	194003cc 	andi	r5,r3,15
 402d698:	2800021e 	bne	r5,zero,402d6a4 <__lo0bits+0x58>
 402d69c:	1806d13a 	srli	r3,r3,4
 402d6a0:	10800104 	addi	r2,r2,4
 402d6a4:	194000cc 	andi	r5,r3,3
 402d6a8:	2800021e 	bne	r5,zero,402d6b4 <__lo0bits+0x68>
 402d6ac:	1806d0ba 	srli	r3,r3,2
 402d6b0:	10800084 	addi	r2,r2,2
 402d6b4:	1940004c 	andi	r5,r3,1
 402d6b8:	2800081e 	bne	r5,zero,402d6dc <__lo0bits+0x90>
 402d6bc:	1806d07a 	srli	r3,r3,1
 402d6c0:	1800051e 	bne	r3,zero,402d6d8 <__lo0bits+0x8c>
 402d6c4:	00800804 	movi	r2,32
 402d6c8:	f800283a 	ret
 402d6cc:	1806d43a 	srli	r3,r3,16
 402d6d0:	00800404 	movi	r2,16
 402d6d4:	003feb06 	br	402d684 <__flash_rwdata_start+0xffff7418>
 402d6d8:	10800044 	addi	r2,r2,1
 402d6dc:	20c00015 	stw	r3,0(r4)
 402d6e0:	f800283a 	ret
 402d6e4:	0005883a 	mov	r2,zero
 402d6e8:	f800283a 	ret
 402d6ec:	1806d07a 	srli	r3,r3,1
 402d6f0:	00800044 	movi	r2,1
 402d6f4:	20c00015 	stw	r3,0(r4)
 402d6f8:	f800283a 	ret

0402d6fc <__i2b>:
 402d6fc:	defffd04 	addi	sp,sp,-12
 402d700:	dc000015 	stw	r16,0(sp)
 402d704:	04000044 	movi	r16,1
 402d708:	dc400115 	stw	r17,4(sp)
 402d70c:	2823883a 	mov	r17,r5
 402d710:	800b883a 	mov	r5,r16
 402d714:	dfc00215 	stw	ra,8(sp)
 402d718:	402d2f00 	call	402d2f0 <_Balloc>
 402d71c:	14400515 	stw	r17,20(r2)
 402d720:	14000415 	stw	r16,16(r2)
 402d724:	dfc00217 	ldw	ra,8(sp)
 402d728:	dc400117 	ldw	r17,4(sp)
 402d72c:	dc000017 	ldw	r16,0(sp)
 402d730:	dec00304 	addi	sp,sp,12
 402d734:	f800283a 	ret

0402d738 <__multiply>:
 402d738:	defffa04 	addi	sp,sp,-24
 402d73c:	dcc00315 	stw	r19,12(sp)
 402d740:	dc800215 	stw	r18,8(sp)
 402d744:	34c00417 	ldw	r19,16(r6)
 402d748:	2c800417 	ldw	r18,16(r5)
 402d74c:	dd000415 	stw	r20,16(sp)
 402d750:	dc400115 	stw	r17,4(sp)
 402d754:	dfc00515 	stw	ra,20(sp)
 402d758:	dc000015 	stw	r16,0(sp)
 402d75c:	2829883a 	mov	r20,r5
 402d760:	3023883a 	mov	r17,r6
 402d764:	94c0050e 	bge	r18,r19,402d77c <__multiply+0x44>
 402d768:	9007883a 	mov	r3,r18
 402d76c:	3029883a 	mov	r20,r6
 402d770:	9825883a 	mov	r18,r19
 402d774:	2823883a 	mov	r17,r5
 402d778:	1827883a 	mov	r19,r3
 402d77c:	a0800217 	ldw	r2,8(r20)
 402d780:	94e1883a 	add	r16,r18,r19
 402d784:	a1400117 	ldw	r5,4(r20)
 402d788:	1400010e 	bge	r2,r16,402d790 <__multiply+0x58>
 402d78c:	29400044 	addi	r5,r5,1
 402d790:	402d2f00 	call	402d2f0 <_Balloc>
 402d794:	8415883a 	add	r10,r16,r16
 402d798:	12c00504 	addi	r11,r2,20
 402d79c:	5295883a 	add	r10,r10,r10
 402d7a0:	5a95883a 	add	r10,r11,r10
 402d7a4:	5807883a 	mov	r3,r11
 402d7a8:	5a80032e 	bgeu	r11,r10,402d7b8 <__multiply+0x80>
 402d7ac:	18000015 	stw	zero,0(r3)
 402d7b0:	18c00104 	addi	r3,r3,4
 402d7b4:	1abffd36 	bltu	r3,r10,402d7ac <__flash_rwdata_start+0xffff7540>
 402d7b8:	9ce7883a 	add	r19,r19,r19
 402d7bc:	94a5883a 	add	r18,r18,r18
 402d7c0:	89800504 	addi	r6,r17,20
 402d7c4:	9ce7883a 	add	r19,r19,r19
 402d7c8:	a3400504 	addi	r13,r20,20
 402d7cc:	94a5883a 	add	r18,r18,r18
 402d7d0:	34d9883a 	add	r12,r6,r19
 402d7d4:	6c93883a 	add	r9,r13,r18
 402d7d8:	3300422e 	bgeu	r6,r12,402d8e4 <__multiply+0x1ac>
 402d7dc:	37c00017 	ldw	ra,0(r6)
 402d7e0:	fbffffcc 	andi	r15,ra,65535
 402d7e4:	78001b26 	beq	r15,zero,402d854 <__multiply+0x11c>
 402d7e8:	5811883a 	mov	r8,r11
 402d7ec:	681d883a 	mov	r14,r13
 402d7f0:	000f883a 	mov	r7,zero
 402d7f4:	71000017 	ldw	r4,0(r14)
 402d7f8:	40c00017 	ldw	r3,0(r8)
 402d7fc:	73800104 	addi	r14,r14,4
 402d800:	217fffcc 	andi	r5,r4,65535
 402d804:	2bcb383a 	mul	r5,r5,r15
 402d808:	2008d43a 	srli	r4,r4,16
 402d80c:	1c7fffcc 	andi	r17,r3,65535
 402d810:	2c4b883a 	add	r5,r5,r17
 402d814:	29cb883a 	add	r5,r5,r7
 402d818:	23c9383a 	mul	r4,r4,r15
 402d81c:	1806d43a 	srli	r3,r3,16
 402d820:	280ed43a 	srli	r7,r5,16
 402d824:	297fffcc 	andi	r5,r5,65535
 402d828:	20c7883a 	add	r3,r4,r3
 402d82c:	19c7883a 	add	r3,r3,r7
 402d830:	1808943a 	slli	r4,r3,16
 402d834:	4023883a 	mov	r17,r8
 402d838:	180ed43a 	srli	r7,r3,16
 402d83c:	214ab03a 	or	r5,r4,r5
 402d840:	41400015 	stw	r5,0(r8)
 402d844:	42000104 	addi	r8,r8,4
 402d848:	727fea36 	bltu	r14,r9,402d7f4 <__flash_rwdata_start+0xffff7588>
 402d84c:	89c00115 	stw	r7,4(r17)
 402d850:	37c00017 	ldw	ra,0(r6)
 402d854:	f83ed43a 	srli	ra,ra,16
 402d858:	f8001f26 	beq	ra,zero,402d8d8 <__multiply+0x1a0>
 402d85c:	58c00017 	ldw	r3,0(r11)
 402d860:	681d883a 	mov	r14,r13
 402d864:	581f883a 	mov	r15,r11
 402d868:	1811883a 	mov	r8,r3
 402d86c:	5825883a 	mov	r18,r11
 402d870:	000f883a 	mov	r7,zero
 402d874:	00000106 	br	402d87c <__multiply+0x144>
 402d878:	8825883a 	mov	r18,r17
 402d87c:	7140000b 	ldhu	r5,0(r14)
 402d880:	4010d43a 	srli	r8,r8,16
 402d884:	193fffcc 	andi	r4,r3,65535
 402d888:	2fcb383a 	mul	r5,r5,ra
 402d88c:	7bc00104 	addi	r15,r15,4
 402d890:	73800104 	addi	r14,r14,4
 402d894:	2a0b883a 	add	r5,r5,r8
 402d898:	29cb883a 	add	r5,r5,r7
 402d89c:	2806943a 	slli	r3,r5,16
 402d8a0:	94400104 	addi	r17,r18,4
 402d8a4:	280ad43a 	srli	r5,r5,16
 402d8a8:	1908b03a 	or	r4,r3,r4
 402d8ac:	793fff15 	stw	r4,-4(r15)
 402d8b0:	70ffff17 	ldw	r3,-4(r14)
 402d8b4:	8a000017 	ldw	r8,0(r17)
 402d8b8:	1806d43a 	srli	r3,r3,16
 402d8bc:	413fffcc 	andi	r4,r8,65535
 402d8c0:	1fc7383a 	mul	r3,r3,ra
 402d8c4:	1907883a 	add	r3,r3,r4
 402d8c8:	1947883a 	add	r3,r3,r5
 402d8cc:	180ed43a 	srli	r7,r3,16
 402d8d0:	727fe936 	bltu	r14,r9,402d878 <__flash_rwdata_start+0xffff760c>
 402d8d4:	90c00115 	stw	r3,4(r18)
 402d8d8:	31800104 	addi	r6,r6,4
 402d8dc:	5ac00104 	addi	r11,r11,4
 402d8e0:	333fbe36 	bltu	r6,r12,402d7dc <__flash_rwdata_start+0xffff7570>
 402d8e4:	0400090e 	bge	zero,r16,402d90c <__multiply+0x1d4>
 402d8e8:	50ffff17 	ldw	r3,-4(r10)
 402d8ec:	52bfff04 	addi	r10,r10,-4
 402d8f0:	18000326 	beq	r3,zero,402d900 <__multiply+0x1c8>
 402d8f4:	00000506 	br	402d90c <__multiply+0x1d4>
 402d8f8:	50c00017 	ldw	r3,0(r10)
 402d8fc:	1800031e 	bne	r3,zero,402d90c <__multiply+0x1d4>
 402d900:	843fffc4 	addi	r16,r16,-1
 402d904:	52bfff04 	addi	r10,r10,-4
 402d908:	803ffb1e 	bne	r16,zero,402d8f8 <__flash_rwdata_start+0xffff768c>
 402d90c:	14000415 	stw	r16,16(r2)
 402d910:	dfc00517 	ldw	ra,20(sp)
 402d914:	dd000417 	ldw	r20,16(sp)
 402d918:	dcc00317 	ldw	r19,12(sp)
 402d91c:	dc800217 	ldw	r18,8(sp)
 402d920:	dc400117 	ldw	r17,4(sp)
 402d924:	dc000017 	ldw	r16,0(sp)
 402d928:	dec00604 	addi	sp,sp,24
 402d92c:	f800283a 	ret

0402d930 <__pow5mult>:
 402d930:	defffa04 	addi	sp,sp,-24
 402d934:	dcc00315 	stw	r19,12(sp)
 402d938:	dc000015 	stw	r16,0(sp)
 402d93c:	dfc00515 	stw	ra,20(sp)
 402d940:	dd000415 	stw	r20,16(sp)
 402d944:	dc800215 	stw	r18,8(sp)
 402d948:	dc400115 	stw	r17,4(sp)
 402d94c:	308000cc 	andi	r2,r6,3
 402d950:	3021883a 	mov	r16,r6
 402d954:	2027883a 	mov	r19,r4
 402d958:	10002f1e 	bne	r2,zero,402da18 <__pow5mult+0xe8>
 402d95c:	2825883a 	mov	r18,r5
 402d960:	8021d0ba 	srai	r16,r16,2
 402d964:	80001a26 	beq	r16,zero,402d9d0 <__pow5mult+0xa0>
 402d968:	9c401217 	ldw	r17,72(r19)
 402d96c:	8800061e 	bne	r17,zero,402d988 <__pow5mult+0x58>
 402d970:	00003406 	br	402da44 <__pow5mult+0x114>
 402d974:	8021d07a 	srai	r16,r16,1
 402d978:	80001526 	beq	r16,zero,402d9d0 <__pow5mult+0xa0>
 402d97c:	88800017 	ldw	r2,0(r17)
 402d980:	10001c26 	beq	r2,zero,402d9f4 <__pow5mult+0xc4>
 402d984:	1023883a 	mov	r17,r2
 402d988:	8080004c 	andi	r2,r16,1
 402d98c:	103ff926 	beq	r2,zero,402d974 <__flash_rwdata_start+0xffff7708>
 402d990:	880d883a 	mov	r6,r17
 402d994:	900b883a 	mov	r5,r18
 402d998:	9809883a 	mov	r4,r19
 402d99c:	402d7380 	call	402d738 <__multiply>
 402d9a0:	90001b26 	beq	r18,zero,402da10 <__pow5mult+0xe0>
 402d9a4:	91000117 	ldw	r4,4(r18)
 402d9a8:	98c01317 	ldw	r3,76(r19)
 402d9ac:	8021d07a 	srai	r16,r16,1
 402d9b0:	2109883a 	add	r4,r4,r4
 402d9b4:	2109883a 	add	r4,r4,r4
 402d9b8:	1907883a 	add	r3,r3,r4
 402d9bc:	19000017 	ldw	r4,0(r3)
 402d9c0:	91000015 	stw	r4,0(r18)
 402d9c4:	1c800015 	stw	r18,0(r3)
 402d9c8:	1025883a 	mov	r18,r2
 402d9cc:	803feb1e 	bne	r16,zero,402d97c <__flash_rwdata_start+0xffff7710>
 402d9d0:	9005883a 	mov	r2,r18
 402d9d4:	dfc00517 	ldw	ra,20(sp)
 402d9d8:	dd000417 	ldw	r20,16(sp)
 402d9dc:	dcc00317 	ldw	r19,12(sp)
 402d9e0:	dc800217 	ldw	r18,8(sp)
 402d9e4:	dc400117 	ldw	r17,4(sp)
 402d9e8:	dc000017 	ldw	r16,0(sp)
 402d9ec:	dec00604 	addi	sp,sp,24
 402d9f0:	f800283a 	ret
 402d9f4:	880d883a 	mov	r6,r17
 402d9f8:	880b883a 	mov	r5,r17
 402d9fc:	9809883a 	mov	r4,r19
 402da00:	402d7380 	call	402d738 <__multiply>
 402da04:	88800015 	stw	r2,0(r17)
 402da08:	10000015 	stw	zero,0(r2)
 402da0c:	003fdd06 	br	402d984 <__flash_rwdata_start+0xffff7718>
 402da10:	1025883a 	mov	r18,r2
 402da14:	003fd706 	br	402d974 <__flash_rwdata_start+0xffff7708>
 402da18:	10bfffc4 	addi	r2,r2,-1
 402da1c:	1085883a 	add	r2,r2,r2
 402da20:	00c00034 	movhi	r3,0
 402da24:	18c14a04 	addi	r3,r3,1320
 402da28:	1085883a 	add	r2,r2,r2
 402da2c:	1885883a 	add	r2,r3,r2
 402da30:	11800017 	ldw	r6,0(r2)
 402da34:	000f883a 	mov	r7,zero
 402da38:	402d3c00 	call	402d3c0 <__multadd>
 402da3c:	1025883a 	mov	r18,r2
 402da40:	003fc706 	br	402d960 <__flash_rwdata_start+0xffff76f4>
 402da44:	05000044 	movi	r20,1
 402da48:	a00b883a 	mov	r5,r20
 402da4c:	9809883a 	mov	r4,r19
 402da50:	402d2f00 	call	402d2f0 <_Balloc>
 402da54:	1023883a 	mov	r17,r2
 402da58:	00809c44 	movi	r2,625
 402da5c:	88800515 	stw	r2,20(r17)
 402da60:	8d000415 	stw	r20,16(r17)
 402da64:	9c401215 	stw	r17,72(r19)
 402da68:	88000015 	stw	zero,0(r17)
 402da6c:	003fc606 	br	402d988 <__flash_rwdata_start+0xffff771c>

0402da70 <__lshift>:
 402da70:	defff904 	addi	sp,sp,-28
 402da74:	dd400515 	stw	r21,20(sp)
 402da78:	dcc00315 	stw	r19,12(sp)
 402da7c:	302bd17a 	srai	r21,r6,5
 402da80:	2cc00417 	ldw	r19,16(r5)
 402da84:	28800217 	ldw	r2,8(r5)
 402da88:	dd000415 	stw	r20,16(sp)
 402da8c:	ace7883a 	add	r19,r21,r19
 402da90:	dc800215 	stw	r18,8(sp)
 402da94:	dc400115 	stw	r17,4(sp)
 402da98:	dc000015 	stw	r16,0(sp)
 402da9c:	dfc00615 	stw	ra,24(sp)
 402daa0:	9c000044 	addi	r16,r19,1
 402daa4:	2823883a 	mov	r17,r5
 402daa8:	3029883a 	mov	r20,r6
 402daac:	2025883a 	mov	r18,r4
 402dab0:	29400117 	ldw	r5,4(r5)
 402dab4:	1400030e 	bge	r2,r16,402dac4 <__lshift+0x54>
 402dab8:	1085883a 	add	r2,r2,r2
 402dabc:	29400044 	addi	r5,r5,1
 402dac0:	143ffd16 	blt	r2,r16,402dab8 <__flash_rwdata_start+0xffff784c>
 402dac4:	9009883a 	mov	r4,r18
 402dac8:	402d2f00 	call	402d2f0 <_Balloc>
 402dacc:	10c00504 	addi	r3,r2,20
 402dad0:	0540070e 	bge	zero,r21,402daf0 <__lshift+0x80>
 402dad4:	ad6b883a 	add	r21,r21,r21
 402dad8:	ad6b883a 	add	r21,r21,r21
 402dadc:	1809883a 	mov	r4,r3
 402dae0:	1d47883a 	add	r3,r3,r21
 402dae4:	20000015 	stw	zero,0(r4)
 402dae8:	21000104 	addi	r4,r4,4
 402daec:	193ffd1e 	bne	r3,r4,402dae4 <__flash_rwdata_start+0xffff7878>
 402daf0:	8a000417 	ldw	r8,16(r17)
 402daf4:	89000504 	addi	r4,r17,20
 402daf8:	a18007cc 	andi	r6,r20,31
 402dafc:	4211883a 	add	r8,r8,r8
 402db00:	4211883a 	add	r8,r8,r8
 402db04:	2211883a 	add	r8,r4,r8
 402db08:	30002326 	beq	r6,zero,402db98 <__lshift+0x128>
 402db0c:	02400804 	movi	r9,32
 402db10:	4993c83a 	sub	r9,r9,r6
 402db14:	000b883a 	mov	r5,zero
 402db18:	21c00017 	ldw	r7,0(r4)
 402db1c:	1815883a 	mov	r10,r3
 402db20:	18c00104 	addi	r3,r3,4
 402db24:	398e983a 	sll	r7,r7,r6
 402db28:	21000104 	addi	r4,r4,4
 402db2c:	394ab03a 	or	r5,r7,r5
 402db30:	197fff15 	stw	r5,-4(r3)
 402db34:	217fff17 	ldw	r5,-4(r4)
 402db38:	2a4ad83a 	srl	r5,r5,r9
 402db3c:	223ff636 	bltu	r4,r8,402db18 <__flash_rwdata_start+0xffff78ac>
 402db40:	51400115 	stw	r5,4(r10)
 402db44:	28001a1e 	bne	r5,zero,402dbb0 <__lshift+0x140>
 402db48:	843fffc4 	addi	r16,r16,-1
 402db4c:	14000415 	stw	r16,16(r2)
 402db50:	88000826 	beq	r17,zero,402db74 <__lshift+0x104>
 402db54:	89000117 	ldw	r4,4(r17)
 402db58:	90c01317 	ldw	r3,76(r18)
 402db5c:	2109883a 	add	r4,r4,r4
 402db60:	2109883a 	add	r4,r4,r4
 402db64:	1907883a 	add	r3,r3,r4
 402db68:	19000017 	ldw	r4,0(r3)
 402db6c:	89000015 	stw	r4,0(r17)
 402db70:	1c400015 	stw	r17,0(r3)
 402db74:	dfc00617 	ldw	ra,24(sp)
 402db78:	dd400517 	ldw	r21,20(sp)
 402db7c:	dd000417 	ldw	r20,16(sp)
 402db80:	dcc00317 	ldw	r19,12(sp)
 402db84:	dc800217 	ldw	r18,8(sp)
 402db88:	dc400117 	ldw	r17,4(sp)
 402db8c:	dc000017 	ldw	r16,0(sp)
 402db90:	dec00704 	addi	sp,sp,28
 402db94:	f800283a 	ret
 402db98:	21400017 	ldw	r5,0(r4)
 402db9c:	18c00104 	addi	r3,r3,4
 402dba0:	21000104 	addi	r4,r4,4
 402dba4:	197fff15 	stw	r5,-4(r3)
 402dba8:	223ffb36 	bltu	r4,r8,402db98 <__flash_rwdata_start+0xffff792c>
 402dbac:	003fe606 	br	402db48 <__flash_rwdata_start+0xffff78dc>
 402dbb0:	9c000084 	addi	r16,r19,2
 402dbb4:	003fe406 	br	402db48 <__flash_rwdata_start+0xffff78dc>

0402dbb8 <__mcmp>:
 402dbb8:	20800417 	ldw	r2,16(r4)
 402dbbc:	28c00417 	ldw	r3,16(r5)
 402dbc0:	10c5c83a 	sub	r2,r2,r3
 402dbc4:	1000111e 	bne	r2,zero,402dc0c <__mcmp+0x54>
 402dbc8:	18c7883a 	add	r3,r3,r3
 402dbcc:	18c7883a 	add	r3,r3,r3
 402dbd0:	21000504 	addi	r4,r4,20
 402dbd4:	29400504 	addi	r5,r5,20
 402dbd8:	20c5883a 	add	r2,r4,r3
 402dbdc:	28cb883a 	add	r5,r5,r3
 402dbe0:	00000106 	br	402dbe8 <__mcmp+0x30>
 402dbe4:	20800a2e 	bgeu	r4,r2,402dc10 <__mcmp+0x58>
 402dbe8:	10bfff04 	addi	r2,r2,-4
 402dbec:	297fff04 	addi	r5,r5,-4
 402dbf0:	11800017 	ldw	r6,0(r2)
 402dbf4:	28c00017 	ldw	r3,0(r5)
 402dbf8:	30fffa26 	beq	r6,r3,402dbe4 <__flash_rwdata_start+0xffff7978>
 402dbfc:	30c00236 	bltu	r6,r3,402dc08 <__mcmp+0x50>
 402dc00:	00800044 	movi	r2,1
 402dc04:	f800283a 	ret
 402dc08:	00bfffc4 	movi	r2,-1
 402dc0c:	f800283a 	ret
 402dc10:	0005883a 	mov	r2,zero
 402dc14:	f800283a 	ret

0402dc18 <__mdiff>:
 402dc18:	28c00417 	ldw	r3,16(r5)
 402dc1c:	30800417 	ldw	r2,16(r6)
 402dc20:	defffa04 	addi	sp,sp,-24
 402dc24:	dcc00315 	stw	r19,12(sp)
 402dc28:	dc800215 	stw	r18,8(sp)
 402dc2c:	dfc00515 	stw	ra,20(sp)
 402dc30:	dd000415 	stw	r20,16(sp)
 402dc34:	dc400115 	stw	r17,4(sp)
 402dc38:	dc000015 	stw	r16,0(sp)
 402dc3c:	1887c83a 	sub	r3,r3,r2
 402dc40:	2825883a 	mov	r18,r5
 402dc44:	3027883a 	mov	r19,r6
 402dc48:	1800141e 	bne	r3,zero,402dc9c <__mdiff+0x84>
 402dc4c:	1085883a 	add	r2,r2,r2
 402dc50:	1085883a 	add	r2,r2,r2
 402dc54:	2a000504 	addi	r8,r5,20
 402dc58:	34000504 	addi	r16,r6,20
 402dc5c:	4087883a 	add	r3,r8,r2
 402dc60:	8085883a 	add	r2,r16,r2
 402dc64:	00000106 	br	402dc6c <__mdiff+0x54>
 402dc68:	40c0592e 	bgeu	r8,r3,402ddd0 <__mdiff+0x1b8>
 402dc6c:	18ffff04 	addi	r3,r3,-4
 402dc70:	10bfff04 	addi	r2,r2,-4
 402dc74:	19c00017 	ldw	r7,0(r3)
 402dc78:	11400017 	ldw	r5,0(r2)
 402dc7c:	397ffa26 	beq	r7,r5,402dc68 <__flash_rwdata_start+0xffff79fc>
 402dc80:	3940592e 	bgeu	r7,r5,402dde8 <__mdiff+0x1d0>
 402dc84:	9005883a 	mov	r2,r18
 402dc88:	4023883a 	mov	r17,r8
 402dc8c:	9825883a 	mov	r18,r19
 402dc90:	05000044 	movi	r20,1
 402dc94:	1027883a 	mov	r19,r2
 402dc98:	00000406 	br	402dcac <__mdiff+0x94>
 402dc9c:	18005616 	blt	r3,zero,402ddf8 <__mdiff+0x1e0>
 402dca0:	34400504 	addi	r17,r6,20
 402dca4:	2c000504 	addi	r16,r5,20
 402dca8:	0029883a 	mov	r20,zero
 402dcac:	91400117 	ldw	r5,4(r18)
 402dcb0:	402d2f00 	call	402d2f0 <_Balloc>
 402dcb4:	92400417 	ldw	r9,16(r18)
 402dcb8:	9b000417 	ldw	r12,16(r19)
 402dcbc:	12c00504 	addi	r11,r2,20
 402dcc0:	4a51883a 	add	r8,r9,r9
 402dcc4:	6319883a 	add	r12,r12,r12
 402dcc8:	4211883a 	add	r8,r8,r8
 402dccc:	6319883a 	add	r12,r12,r12
 402dcd0:	15000315 	stw	r20,12(r2)
 402dcd4:	8211883a 	add	r8,r16,r8
 402dcd8:	8b19883a 	add	r12,r17,r12
 402dcdc:	0007883a 	mov	r3,zero
 402dce0:	81400017 	ldw	r5,0(r16)
 402dce4:	89c00017 	ldw	r7,0(r17)
 402dce8:	59800104 	addi	r6,r11,4
 402dcec:	293fffcc 	andi	r4,r5,65535
 402dcf0:	20c7883a 	add	r3,r4,r3
 402dcf4:	393fffcc 	andi	r4,r7,65535
 402dcf8:	1909c83a 	sub	r4,r3,r4
 402dcfc:	280ad43a 	srli	r5,r5,16
 402dd00:	380ed43a 	srli	r7,r7,16
 402dd04:	2007d43a 	srai	r3,r4,16
 402dd08:	213fffcc 	andi	r4,r4,65535
 402dd0c:	29cbc83a 	sub	r5,r5,r7
 402dd10:	28c7883a 	add	r3,r5,r3
 402dd14:	180a943a 	slli	r5,r3,16
 402dd18:	8c400104 	addi	r17,r17,4
 402dd1c:	84000104 	addi	r16,r16,4
 402dd20:	2908b03a 	or	r4,r5,r4
 402dd24:	59000015 	stw	r4,0(r11)
 402dd28:	1807d43a 	srai	r3,r3,16
 402dd2c:	3015883a 	mov	r10,r6
 402dd30:	3017883a 	mov	r11,r6
 402dd34:	8b3fea36 	bltu	r17,r12,402dce0 <__flash_rwdata_start+0xffff7a74>
 402dd38:	8200162e 	bgeu	r16,r8,402dd94 <__mdiff+0x17c>
 402dd3c:	8017883a 	mov	r11,r16
 402dd40:	59400017 	ldw	r5,0(r11)
 402dd44:	31800104 	addi	r6,r6,4
 402dd48:	5ac00104 	addi	r11,r11,4
 402dd4c:	293fffcc 	andi	r4,r5,65535
 402dd50:	20c7883a 	add	r3,r4,r3
 402dd54:	280ed43a 	srli	r7,r5,16
 402dd58:	180bd43a 	srai	r5,r3,16
 402dd5c:	193fffcc 	andi	r4,r3,65535
 402dd60:	3947883a 	add	r3,r7,r5
 402dd64:	180a943a 	slli	r5,r3,16
 402dd68:	1807d43a 	srai	r3,r3,16
 402dd6c:	2908b03a 	or	r4,r5,r4
 402dd70:	313fff15 	stw	r4,-4(r6)
 402dd74:	5a3ff236 	bltu	r11,r8,402dd40 <__flash_rwdata_start+0xffff7ad4>
 402dd78:	0406303a 	nor	r3,zero,r16
 402dd7c:	1a07883a 	add	r3,r3,r8
 402dd80:	1806d0ba 	srli	r3,r3,2
 402dd84:	18c00044 	addi	r3,r3,1
 402dd88:	18c7883a 	add	r3,r3,r3
 402dd8c:	18c7883a 	add	r3,r3,r3
 402dd90:	50d5883a 	add	r10,r10,r3
 402dd94:	50ffff04 	addi	r3,r10,-4
 402dd98:	2000041e 	bne	r4,zero,402ddac <__mdiff+0x194>
 402dd9c:	18ffff04 	addi	r3,r3,-4
 402dda0:	19000017 	ldw	r4,0(r3)
 402dda4:	4a7fffc4 	addi	r9,r9,-1
 402dda8:	203ffc26 	beq	r4,zero,402dd9c <__flash_rwdata_start+0xffff7b30>
 402ddac:	12400415 	stw	r9,16(r2)
 402ddb0:	dfc00517 	ldw	ra,20(sp)
 402ddb4:	dd000417 	ldw	r20,16(sp)
 402ddb8:	dcc00317 	ldw	r19,12(sp)
 402ddbc:	dc800217 	ldw	r18,8(sp)
 402ddc0:	dc400117 	ldw	r17,4(sp)
 402ddc4:	dc000017 	ldw	r16,0(sp)
 402ddc8:	dec00604 	addi	sp,sp,24
 402ddcc:	f800283a 	ret
 402ddd0:	000b883a 	mov	r5,zero
 402ddd4:	402d2f00 	call	402d2f0 <_Balloc>
 402ddd8:	00c00044 	movi	r3,1
 402dddc:	10c00415 	stw	r3,16(r2)
 402dde0:	10000515 	stw	zero,20(r2)
 402dde4:	003ff206 	br	402ddb0 <__flash_rwdata_start+0xffff7b44>
 402dde8:	8023883a 	mov	r17,r16
 402ddec:	0029883a 	mov	r20,zero
 402ddf0:	4021883a 	mov	r16,r8
 402ddf4:	003fad06 	br	402dcac <__flash_rwdata_start+0xffff7a40>
 402ddf8:	9005883a 	mov	r2,r18
 402ddfc:	94400504 	addi	r17,r18,20
 402de00:	9c000504 	addi	r16,r19,20
 402de04:	9825883a 	mov	r18,r19
 402de08:	05000044 	movi	r20,1
 402de0c:	1027883a 	mov	r19,r2
 402de10:	003fa606 	br	402dcac <__flash_rwdata_start+0xffff7a40>

0402de14 <__ulp>:
 402de14:	295ffc2c 	andhi	r5,r5,32752
 402de18:	00bf3034 	movhi	r2,64704
 402de1c:	2887883a 	add	r3,r5,r2
 402de20:	00c0020e 	bge	zero,r3,402de2c <__ulp+0x18>
 402de24:	0005883a 	mov	r2,zero
 402de28:	f800283a 	ret
 402de2c:	00c7c83a 	sub	r3,zero,r3
 402de30:	1807d53a 	srai	r3,r3,20
 402de34:	008004c4 	movi	r2,19
 402de38:	10c00b0e 	bge	r2,r3,402de68 <__ulp+0x54>
 402de3c:	18bffb04 	addi	r2,r3,-20
 402de40:	01000784 	movi	r4,30
 402de44:	0007883a 	mov	r3,zero
 402de48:	20800516 	blt	r4,r2,402de60 <__ulp+0x4c>
 402de4c:	010007c4 	movi	r4,31
 402de50:	2089c83a 	sub	r4,r4,r2
 402de54:	00800044 	movi	r2,1
 402de58:	1104983a 	sll	r2,r2,r4
 402de5c:	f800283a 	ret
 402de60:	00800044 	movi	r2,1
 402de64:	f800283a 	ret
 402de68:	01400234 	movhi	r5,8
 402de6c:	28c7d83a 	sra	r3,r5,r3
 402de70:	0005883a 	mov	r2,zero
 402de74:	f800283a 	ret

0402de78 <__b2d>:
 402de78:	defffa04 	addi	sp,sp,-24
 402de7c:	dc000015 	stw	r16,0(sp)
 402de80:	24000417 	ldw	r16,16(r4)
 402de84:	dc400115 	stw	r17,4(sp)
 402de88:	24400504 	addi	r17,r4,20
 402de8c:	8421883a 	add	r16,r16,r16
 402de90:	8421883a 	add	r16,r16,r16
 402de94:	8c21883a 	add	r16,r17,r16
 402de98:	dc800215 	stw	r18,8(sp)
 402de9c:	84bfff17 	ldw	r18,-4(r16)
 402dea0:	dd000415 	stw	r20,16(sp)
 402dea4:	dcc00315 	stw	r19,12(sp)
 402dea8:	9009883a 	mov	r4,r18
 402deac:	2829883a 	mov	r20,r5
 402deb0:	dfc00515 	stw	ra,20(sp)
 402deb4:	402d5e40 	call	402d5e4 <__hi0bits>
 402deb8:	00c00804 	movi	r3,32
 402debc:	1889c83a 	sub	r4,r3,r2
 402dec0:	a1000015 	stw	r4,0(r20)
 402dec4:	01000284 	movi	r4,10
 402dec8:	84ffff04 	addi	r19,r16,-4
 402decc:	20801216 	blt	r4,r2,402df18 <__b2d+0xa0>
 402ded0:	018002c4 	movi	r6,11
 402ded4:	308dc83a 	sub	r6,r6,r2
 402ded8:	9186d83a 	srl	r3,r18,r6
 402dedc:	18cffc34 	orhi	r3,r3,16368
 402dee0:	8cc0212e 	bgeu	r17,r19,402df68 <__b2d+0xf0>
 402dee4:	813ffe17 	ldw	r4,-8(r16)
 402dee8:	218cd83a 	srl	r6,r4,r6
 402deec:	10800544 	addi	r2,r2,21
 402def0:	9084983a 	sll	r2,r18,r2
 402def4:	1184b03a 	or	r2,r2,r6
 402def8:	dfc00517 	ldw	ra,20(sp)
 402defc:	dd000417 	ldw	r20,16(sp)
 402df00:	dcc00317 	ldw	r19,12(sp)
 402df04:	dc800217 	ldw	r18,8(sp)
 402df08:	dc400117 	ldw	r17,4(sp)
 402df0c:	dc000017 	ldw	r16,0(sp)
 402df10:	dec00604 	addi	sp,sp,24
 402df14:	f800283a 	ret
 402df18:	8cc00f2e 	bgeu	r17,r19,402df58 <__b2d+0xe0>
 402df1c:	117ffd44 	addi	r5,r2,-11
 402df20:	80bffe17 	ldw	r2,-8(r16)
 402df24:	28000e26 	beq	r5,zero,402df60 <__b2d+0xe8>
 402df28:	1949c83a 	sub	r4,r3,r5
 402df2c:	9164983a 	sll	r18,r18,r5
 402df30:	1106d83a 	srl	r3,r2,r4
 402df34:	81bffe04 	addi	r6,r16,-8
 402df38:	948ffc34 	orhi	r18,r18,16368
 402df3c:	90c6b03a 	or	r3,r18,r3
 402df40:	89800e2e 	bgeu	r17,r6,402df7c <__b2d+0x104>
 402df44:	81bffd17 	ldw	r6,-12(r16)
 402df48:	1144983a 	sll	r2,r2,r5
 402df4c:	310ad83a 	srl	r5,r6,r4
 402df50:	2884b03a 	or	r2,r5,r2
 402df54:	003fe806 	br	402def8 <__flash_rwdata_start+0xffff7c8c>
 402df58:	10bffd44 	addi	r2,r2,-11
 402df5c:	1000041e 	bne	r2,zero,402df70 <__b2d+0xf8>
 402df60:	90cffc34 	orhi	r3,r18,16368
 402df64:	003fe406 	br	402def8 <__flash_rwdata_start+0xffff7c8c>
 402df68:	000d883a 	mov	r6,zero
 402df6c:	003fdf06 	br	402deec <__flash_rwdata_start+0xffff7c80>
 402df70:	90a4983a 	sll	r18,r18,r2
 402df74:	0005883a 	mov	r2,zero
 402df78:	003ff906 	br	402df60 <__flash_rwdata_start+0xffff7cf4>
 402df7c:	1144983a 	sll	r2,r2,r5
 402df80:	003fdd06 	br	402def8 <__flash_rwdata_start+0xffff7c8c>

0402df84 <__d2b>:
 402df84:	defff804 	addi	sp,sp,-32
 402df88:	dc000215 	stw	r16,8(sp)
 402df8c:	3021883a 	mov	r16,r6
 402df90:	dc400315 	stw	r17,12(sp)
 402df94:	8022907a 	slli	r17,r16,1
 402df98:	dd000615 	stw	r20,24(sp)
 402df9c:	2829883a 	mov	r20,r5
 402dfa0:	01400044 	movi	r5,1
 402dfa4:	dcc00515 	stw	r19,20(sp)
 402dfa8:	dc800415 	stw	r18,16(sp)
 402dfac:	dfc00715 	stw	ra,28(sp)
 402dfb0:	3825883a 	mov	r18,r7
 402dfb4:	8822d57a 	srli	r17,r17,21
 402dfb8:	402d2f00 	call	402d2f0 <_Balloc>
 402dfbc:	1027883a 	mov	r19,r2
 402dfc0:	00800434 	movhi	r2,16
 402dfc4:	10bfffc4 	addi	r2,r2,-1
 402dfc8:	808c703a 	and	r6,r16,r2
 402dfcc:	88000126 	beq	r17,zero,402dfd4 <__d2b+0x50>
 402dfd0:	31800434 	orhi	r6,r6,16
 402dfd4:	d9800015 	stw	r6,0(sp)
 402dfd8:	a0002426 	beq	r20,zero,402e06c <__d2b+0xe8>
 402dfdc:	d9000104 	addi	r4,sp,4
 402dfe0:	dd000115 	stw	r20,4(sp)
 402dfe4:	402d64c0 	call	402d64c <__lo0bits>
 402dfe8:	d8c00017 	ldw	r3,0(sp)
 402dfec:	10002f1e 	bne	r2,zero,402e0ac <__d2b+0x128>
 402dff0:	d9000117 	ldw	r4,4(sp)
 402dff4:	99000515 	stw	r4,20(r19)
 402dff8:	1821003a 	cmpeq	r16,r3,zero
 402dffc:	01000084 	movi	r4,2
 402e000:	2421c83a 	sub	r16,r4,r16
 402e004:	98c00615 	stw	r3,24(r19)
 402e008:	9c000415 	stw	r16,16(r19)
 402e00c:	88001f1e 	bne	r17,zero,402e08c <__d2b+0x108>
 402e010:	10bef384 	addi	r2,r2,-1074
 402e014:	90800015 	stw	r2,0(r18)
 402e018:	00900034 	movhi	r2,16384
 402e01c:	10bfffc4 	addi	r2,r2,-1
 402e020:	8085883a 	add	r2,r16,r2
 402e024:	1085883a 	add	r2,r2,r2
 402e028:	1085883a 	add	r2,r2,r2
 402e02c:	9885883a 	add	r2,r19,r2
 402e030:	11000517 	ldw	r4,20(r2)
 402e034:	8020917a 	slli	r16,r16,5
 402e038:	402d5e40 	call	402d5e4 <__hi0bits>
 402e03c:	d8c00817 	ldw	r3,32(sp)
 402e040:	8085c83a 	sub	r2,r16,r2
 402e044:	18800015 	stw	r2,0(r3)
 402e048:	9805883a 	mov	r2,r19
 402e04c:	dfc00717 	ldw	ra,28(sp)
 402e050:	dd000617 	ldw	r20,24(sp)
 402e054:	dcc00517 	ldw	r19,20(sp)
 402e058:	dc800417 	ldw	r18,16(sp)
 402e05c:	dc400317 	ldw	r17,12(sp)
 402e060:	dc000217 	ldw	r16,8(sp)
 402e064:	dec00804 	addi	sp,sp,32
 402e068:	f800283a 	ret
 402e06c:	d809883a 	mov	r4,sp
 402e070:	402d64c0 	call	402d64c <__lo0bits>
 402e074:	d8c00017 	ldw	r3,0(sp)
 402e078:	04000044 	movi	r16,1
 402e07c:	9c000415 	stw	r16,16(r19)
 402e080:	98c00515 	stw	r3,20(r19)
 402e084:	10800804 	addi	r2,r2,32
 402e088:	883fe126 	beq	r17,zero,402e010 <__flash_rwdata_start+0xffff7da4>
 402e08c:	00c00d44 	movi	r3,53
 402e090:	8c7ef344 	addi	r17,r17,-1075
 402e094:	88a3883a 	add	r17,r17,r2
 402e098:	1885c83a 	sub	r2,r3,r2
 402e09c:	d8c00817 	ldw	r3,32(sp)
 402e0a0:	94400015 	stw	r17,0(r18)
 402e0a4:	18800015 	stw	r2,0(r3)
 402e0a8:	003fe706 	br	402e048 <__flash_rwdata_start+0xffff7ddc>
 402e0ac:	01000804 	movi	r4,32
 402e0b0:	2089c83a 	sub	r4,r4,r2
 402e0b4:	1908983a 	sll	r4,r3,r4
 402e0b8:	d9400117 	ldw	r5,4(sp)
 402e0bc:	1886d83a 	srl	r3,r3,r2
 402e0c0:	2148b03a 	or	r4,r4,r5
 402e0c4:	99000515 	stw	r4,20(r19)
 402e0c8:	d8c00015 	stw	r3,0(sp)
 402e0cc:	003fca06 	br	402dff8 <__flash_rwdata_start+0xffff7d8c>

0402e0d0 <__ratio>:
 402e0d0:	defff904 	addi	sp,sp,-28
 402e0d4:	dc400315 	stw	r17,12(sp)
 402e0d8:	2823883a 	mov	r17,r5
 402e0dc:	d9400104 	addi	r5,sp,4
 402e0e0:	dfc00615 	stw	ra,24(sp)
 402e0e4:	dcc00515 	stw	r19,20(sp)
 402e0e8:	dc800415 	stw	r18,16(sp)
 402e0ec:	2027883a 	mov	r19,r4
 402e0f0:	dc000215 	stw	r16,8(sp)
 402e0f4:	402de780 	call	402de78 <__b2d>
 402e0f8:	d80b883a 	mov	r5,sp
 402e0fc:	8809883a 	mov	r4,r17
 402e100:	1025883a 	mov	r18,r2
 402e104:	1821883a 	mov	r16,r3
 402e108:	402de780 	call	402de78 <__b2d>
 402e10c:	8a000417 	ldw	r8,16(r17)
 402e110:	99000417 	ldw	r4,16(r19)
 402e114:	d9400117 	ldw	r5,4(sp)
 402e118:	2209c83a 	sub	r4,r4,r8
 402e11c:	2010917a 	slli	r8,r4,5
 402e120:	d9000017 	ldw	r4,0(sp)
 402e124:	2909c83a 	sub	r4,r5,r4
 402e128:	4109883a 	add	r4,r8,r4
 402e12c:	01000e0e 	bge	zero,r4,402e168 <__ratio+0x98>
 402e130:	2008953a 	slli	r4,r4,20
 402e134:	2421883a 	add	r16,r4,r16
 402e138:	100d883a 	mov	r6,r2
 402e13c:	180f883a 	mov	r7,r3
 402e140:	9009883a 	mov	r4,r18
 402e144:	800b883a 	mov	r5,r16
 402e148:	4025d480 	call	4025d48 <__divdf3>
 402e14c:	dfc00617 	ldw	ra,24(sp)
 402e150:	dcc00517 	ldw	r19,20(sp)
 402e154:	dc800417 	ldw	r18,16(sp)
 402e158:	dc400317 	ldw	r17,12(sp)
 402e15c:	dc000217 	ldw	r16,8(sp)
 402e160:	dec00704 	addi	sp,sp,28
 402e164:	f800283a 	ret
 402e168:	2008953a 	slli	r4,r4,20
 402e16c:	1907c83a 	sub	r3,r3,r4
 402e170:	003ff106 	br	402e138 <__flash_rwdata_start+0xffff7ecc>

0402e174 <_mprec_log10>:
 402e174:	defffe04 	addi	sp,sp,-8
 402e178:	dc000015 	stw	r16,0(sp)
 402e17c:	dfc00115 	stw	ra,4(sp)
 402e180:	008005c4 	movi	r2,23
 402e184:	2021883a 	mov	r16,r4
 402e188:	11000d0e 	bge	r2,r4,402e1c0 <_mprec_log10+0x4c>
 402e18c:	0005883a 	mov	r2,zero
 402e190:	00cffc34 	movhi	r3,16368
 402e194:	843fffc4 	addi	r16,r16,-1
 402e198:	000d883a 	mov	r6,zero
 402e19c:	01d00934 	movhi	r7,16420
 402e1a0:	1009883a 	mov	r4,r2
 402e1a4:	180b883a 	mov	r5,r3
 402e1a8:	40320f80 	call	40320f8 <__muldf3>
 402e1ac:	803ff91e 	bne	r16,zero,402e194 <__flash_rwdata_start+0xffff7f28>
 402e1b0:	dfc00117 	ldw	ra,4(sp)
 402e1b4:	dc000017 	ldw	r16,0(sp)
 402e1b8:	dec00204 	addi	sp,sp,8
 402e1bc:	f800283a 	ret
 402e1c0:	202090fa 	slli	r16,r4,3
 402e1c4:	00800034 	movhi	r2,0
 402e1c8:	10816104 	addi	r2,r2,1412
 402e1cc:	1421883a 	add	r16,r2,r16
 402e1d0:	80800017 	ldw	r2,0(r16)
 402e1d4:	80c00117 	ldw	r3,4(r16)
 402e1d8:	dfc00117 	ldw	ra,4(sp)
 402e1dc:	dc000017 	ldw	r16,0(sp)
 402e1e0:	dec00204 	addi	sp,sp,8
 402e1e4:	f800283a 	ret

0402e1e8 <__copybits>:
 402e1e8:	297fffc4 	addi	r5,r5,-1
 402e1ec:	280fd17a 	srai	r7,r5,5
 402e1f0:	30c00417 	ldw	r3,16(r6)
 402e1f4:	30800504 	addi	r2,r6,20
 402e1f8:	39c00044 	addi	r7,r7,1
 402e1fc:	18c7883a 	add	r3,r3,r3
 402e200:	39cf883a 	add	r7,r7,r7
 402e204:	18c7883a 	add	r3,r3,r3
 402e208:	39cf883a 	add	r7,r7,r7
 402e20c:	10c7883a 	add	r3,r2,r3
 402e210:	21cf883a 	add	r7,r4,r7
 402e214:	10c00d2e 	bgeu	r2,r3,402e24c <__copybits+0x64>
 402e218:	200b883a 	mov	r5,r4
 402e21c:	12000017 	ldw	r8,0(r2)
 402e220:	29400104 	addi	r5,r5,4
 402e224:	10800104 	addi	r2,r2,4
 402e228:	2a3fff15 	stw	r8,-4(r5)
 402e22c:	10fffb36 	bltu	r2,r3,402e21c <__flash_rwdata_start+0xffff7fb0>
 402e230:	1985c83a 	sub	r2,r3,r6
 402e234:	10bffac4 	addi	r2,r2,-21
 402e238:	1004d0ba 	srli	r2,r2,2
 402e23c:	10800044 	addi	r2,r2,1
 402e240:	1085883a 	add	r2,r2,r2
 402e244:	1085883a 	add	r2,r2,r2
 402e248:	2089883a 	add	r4,r4,r2
 402e24c:	21c0032e 	bgeu	r4,r7,402e25c <__copybits+0x74>
 402e250:	20000015 	stw	zero,0(r4)
 402e254:	21000104 	addi	r4,r4,4
 402e258:	21fffd36 	bltu	r4,r7,402e250 <__flash_rwdata_start+0xffff7fe4>
 402e25c:	f800283a 	ret

0402e260 <__any_on>:
 402e260:	20c00417 	ldw	r3,16(r4)
 402e264:	2805d17a 	srai	r2,r5,5
 402e268:	21000504 	addi	r4,r4,20
 402e26c:	18800d0e 	bge	r3,r2,402e2a4 <__any_on+0x44>
 402e270:	18c7883a 	add	r3,r3,r3
 402e274:	18c7883a 	add	r3,r3,r3
 402e278:	20c7883a 	add	r3,r4,r3
 402e27c:	20c0192e 	bgeu	r4,r3,402e2e4 <__any_on+0x84>
 402e280:	18bfff17 	ldw	r2,-4(r3)
 402e284:	18ffff04 	addi	r3,r3,-4
 402e288:	1000041e 	bne	r2,zero,402e29c <__any_on+0x3c>
 402e28c:	20c0142e 	bgeu	r4,r3,402e2e0 <__any_on+0x80>
 402e290:	18ffff04 	addi	r3,r3,-4
 402e294:	19400017 	ldw	r5,0(r3)
 402e298:	283ffc26 	beq	r5,zero,402e28c <__flash_rwdata_start+0xffff8020>
 402e29c:	00800044 	movi	r2,1
 402e2a0:	f800283a 	ret
 402e2a4:	10c00a0e 	bge	r2,r3,402e2d0 <__any_on+0x70>
 402e2a8:	1085883a 	add	r2,r2,r2
 402e2ac:	1085883a 	add	r2,r2,r2
 402e2b0:	294007cc 	andi	r5,r5,31
 402e2b4:	2087883a 	add	r3,r4,r2
 402e2b8:	283ff026 	beq	r5,zero,402e27c <__flash_rwdata_start+0xffff8010>
 402e2bc:	19800017 	ldw	r6,0(r3)
 402e2c0:	3144d83a 	srl	r2,r6,r5
 402e2c4:	114a983a 	sll	r5,r2,r5
 402e2c8:	317ff41e 	bne	r6,r5,402e29c <__flash_rwdata_start+0xffff8030>
 402e2cc:	003feb06 	br	402e27c <__flash_rwdata_start+0xffff8010>
 402e2d0:	1085883a 	add	r2,r2,r2
 402e2d4:	1085883a 	add	r2,r2,r2
 402e2d8:	2087883a 	add	r3,r4,r2
 402e2dc:	003fe706 	br	402e27c <__flash_rwdata_start+0xffff8010>
 402e2e0:	f800283a 	ret
 402e2e4:	0005883a 	mov	r2,zero
 402e2e8:	f800283a 	ret

0402e2ec <_putc_r>:
 402e2ec:	defffc04 	addi	sp,sp,-16
 402e2f0:	dc000215 	stw	r16,8(sp)
 402e2f4:	dfc00315 	stw	ra,12(sp)
 402e2f8:	2021883a 	mov	r16,r4
 402e2fc:	20000226 	beq	r4,zero,402e308 <_putc_r+0x1c>
 402e300:	20800e17 	ldw	r2,56(r4)
 402e304:	10001b26 	beq	r2,zero,402e374 <_putc_r+0x88>
 402e308:	30800217 	ldw	r2,8(r6)
 402e30c:	10bfffc4 	addi	r2,r2,-1
 402e310:	30800215 	stw	r2,8(r6)
 402e314:	10000a16 	blt	r2,zero,402e340 <_putc_r+0x54>
 402e318:	30800017 	ldw	r2,0(r6)
 402e31c:	11400005 	stb	r5,0(r2)
 402e320:	30800017 	ldw	r2,0(r6)
 402e324:	10c00044 	addi	r3,r2,1
 402e328:	30c00015 	stw	r3,0(r6)
 402e32c:	10800003 	ldbu	r2,0(r2)
 402e330:	dfc00317 	ldw	ra,12(sp)
 402e334:	dc000217 	ldw	r16,8(sp)
 402e338:	dec00404 	addi	sp,sp,16
 402e33c:	f800283a 	ret
 402e340:	30c00617 	ldw	r3,24(r6)
 402e344:	10c00616 	blt	r2,r3,402e360 <_putc_r+0x74>
 402e348:	30800017 	ldw	r2,0(r6)
 402e34c:	00c00284 	movi	r3,10
 402e350:	11400005 	stb	r5,0(r2)
 402e354:	30800017 	ldw	r2,0(r6)
 402e358:	11400003 	ldbu	r5,0(r2)
 402e35c:	28fff11e 	bne	r5,r3,402e324 <__flash_rwdata_start+0xffff80b8>
 402e360:	8009883a 	mov	r4,r16
 402e364:	dfc00317 	ldw	ra,12(sp)
 402e368:	dc000217 	ldw	r16,8(sp)
 402e36c:	dec00404 	addi	sp,sp,16
 402e370:	40301b01 	jmpi	40301b0 <__swbuf_r>
 402e374:	d9400015 	stw	r5,0(sp)
 402e378:	d9800115 	stw	r6,4(sp)
 402e37c:	402c2080 	call	402c208 <__sinit>
 402e380:	d9800117 	ldw	r6,4(sp)
 402e384:	d9400017 	ldw	r5,0(sp)
 402e388:	003fdf06 	br	402e308 <__flash_rwdata_start+0xffff809c>

0402e38c <putc>:
 402e38c:	00800034 	movhi	r2,0
 402e390:	defffc04 	addi	sp,sp,-16
 402e394:	10886404 	addi	r2,r2,8592
 402e398:	dc000115 	stw	r16,4(sp)
 402e39c:	14000017 	ldw	r16,0(r2)
 402e3a0:	dc400215 	stw	r17,8(sp)
 402e3a4:	dfc00315 	stw	ra,12(sp)
 402e3a8:	2023883a 	mov	r17,r4
 402e3ac:	80000226 	beq	r16,zero,402e3b8 <putc+0x2c>
 402e3b0:	80800e17 	ldw	r2,56(r16)
 402e3b4:	10001a26 	beq	r2,zero,402e420 <putc+0x94>
 402e3b8:	28800217 	ldw	r2,8(r5)
 402e3bc:	10bfffc4 	addi	r2,r2,-1
 402e3c0:	28800215 	stw	r2,8(r5)
 402e3c4:	10000b16 	blt	r2,zero,402e3f4 <putc+0x68>
 402e3c8:	28800017 	ldw	r2,0(r5)
 402e3cc:	14400005 	stb	r17,0(r2)
 402e3d0:	28800017 	ldw	r2,0(r5)
 402e3d4:	10c00044 	addi	r3,r2,1
 402e3d8:	28c00015 	stw	r3,0(r5)
 402e3dc:	10800003 	ldbu	r2,0(r2)
 402e3e0:	dfc00317 	ldw	ra,12(sp)
 402e3e4:	dc400217 	ldw	r17,8(sp)
 402e3e8:	dc000117 	ldw	r16,4(sp)
 402e3ec:	dec00404 	addi	sp,sp,16
 402e3f0:	f800283a 	ret
 402e3f4:	28c00617 	ldw	r3,24(r5)
 402e3f8:	10c00e16 	blt	r2,r3,402e434 <putc+0xa8>
 402e3fc:	28800017 	ldw	r2,0(r5)
 402e400:	01000284 	movi	r4,10
 402e404:	14400005 	stb	r17,0(r2)
 402e408:	28800017 	ldw	r2,0(r5)
 402e40c:	10c00003 	ldbu	r3,0(r2)
 402e410:	193ff01e 	bne	r3,r4,402e3d4 <__flash_rwdata_start+0xffff8168>
 402e414:	280d883a 	mov	r6,r5
 402e418:	180b883a 	mov	r5,r3
 402e41c:	00000706 	br	402e43c <putc+0xb0>
 402e420:	8009883a 	mov	r4,r16
 402e424:	d9400015 	stw	r5,0(sp)
 402e428:	402c2080 	call	402c208 <__sinit>
 402e42c:	d9400017 	ldw	r5,0(sp)
 402e430:	003fe106 	br	402e3b8 <__flash_rwdata_start+0xffff814c>
 402e434:	280d883a 	mov	r6,r5
 402e438:	880b883a 	mov	r5,r17
 402e43c:	8009883a 	mov	r4,r16
 402e440:	dfc00317 	ldw	ra,12(sp)
 402e444:	dc400217 	ldw	r17,8(sp)
 402e448:	dc000117 	ldw	r16,4(sp)
 402e44c:	dec00404 	addi	sp,sp,16
 402e450:	40301b01 	jmpi	40301b0 <__swbuf_r>

0402e454 <_realloc_r>:
 402e454:	defff604 	addi	sp,sp,-40
 402e458:	dc800215 	stw	r18,8(sp)
 402e45c:	dfc00915 	stw	ra,36(sp)
 402e460:	df000815 	stw	fp,32(sp)
 402e464:	ddc00715 	stw	r23,28(sp)
 402e468:	dd800615 	stw	r22,24(sp)
 402e46c:	dd400515 	stw	r21,20(sp)
 402e470:	dd000415 	stw	r20,16(sp)
 402e474:	dcc00315 	stw	r19,12(sp)
 402e478:	dc400115 	stw	r17,4(sp)
 402e47c:	dc000015 	stw	r16,0(sp)
 402e480:	3025883a 	mov	r18,r6
 402e484:	2800b726 	beq	r5,zero,402e764 <_realloc_r+0x310>
 402e488:	282b883a 	mov	r21,r5
 402e48c:	2029883a 	mov	r20,r4
 402e490:	40339700 	call	4033970 <__malloc_lock>
 402e494:	a8bfff17 	ldw	r2,-4(r21)
 402e498:	043fff04 	movi	r16,-4
 402e49c:	90c002c4 	addi	r3,r18,11
 402e4a0:	01000584 	movi	r4,22
 402e4a4:	acfffe04 	addi	r19,r21,-8
 402e4a8:	1420703a 	and	r16,r2,r16
 402e4ac:	20c0332e 	bgeu	r4,r3,402e57c <_realloc_r+0x128>
 402e4b0:	047ffe04 	movi	r17,-8
 402e4b4:	1c62703a 	and	r17,r3,r17
 402e4b8:	8807883a 	mov	r3,r17
 402e4bc:	88005816 	blt	r17,zero,402e620 <_realloc_r+0x1cc>
 402e4c0:	8c805736 	bltu	r17,r18,402e620 <_realloc_r+0x1cc>
 402e4c4:	80c0300e 	bge	r16,r3,402e588 <_realloc_r+0x134>
 402e4c8:	07000034 	movhi	fp,0
 402e4cc:	e701a604 	addi	fp,fp,1688
 402e4d0:	e1c00217 	ldw	r7,8(fp)
 402e4d4:	9c09883a 	add	r4,r19,r16
 402e4d8:	22000117 	ldw	r8,4(r4)
 402e4dc:	21c06326 	beq	r4,r7,402e66c <_realloc_r+0x218>
 402e4e0:	017fff84 	movi	r5,-2
 402e4e4:	414a703a 	and	r5,r8,r5
 402e4e8:	214b883a 	add	r5,r4,r5
 402e4ec:	29800117 	ldw	r6,4(r5)
 402e4f0:	3180004c 	andi	r6,r6,1
 402e4f4:	30003f26 	beq	r6,zero,402e5f4 <_realloc_r+0x1a0>
 402e4f8:	1080004c 	andi	r2,r2,1
 402e4fc:	10008326 	beq	r2,zero,402e70c <_realloc_r+0x2b8>
 402e500:	900b883a 	mov	r5,r18
 402e504:	a009883a 	mov	r4,r20
 402e508:	4026f880 	call	4026f88 <_malloc_r>
 402e50c:	1025883a 	mov	r18,r2
 402e510:	10011e26 	beq	r2,zero,402e98c <_realloc_r+0x538>
 402e514:	a93fff17 	ldw	r4,-4(r21)
 402e518:	10fffe04 	addi	r3,r2,-8
 402e51c:	00bfff84 	movi	r2,-2
 402e520:	2084703a 	and	r2,r4,r2
 402e524:	9885883a 	add	r2,r19,r2
 402e528:	1880ee26 	beq	r3,r2,402e8e4 <_realloc_r+0x490>
 402e52c:	81bfff04 	addi	r6,r16,-4
 402e530:	00800904 	movi	r2,36
 402e534:	1180b836 	bltu	r2,r6,402e818 <_realloc_r+0x3c4>
 402e538:	00c004c4 	movi	r3,19
 402e53c:	19809636 	bltu	r3,r6,402e798 <_realloc_r+0x344>
 402e540:	9005883a 	mov	r2,r18
 402e544:	a807883a 	mov	r3,r21
 402e548:	19000017 	ldw	r4,0(r3)
 402e54c:	11000015 	stw	r4,0(r2)
 402e550:	19000117 	ldw	r4,4(r3)
 402e554:	11000115 	stw	r4,4(r2)
 402e558:	18c00217 	ldw	r3,8(r3)
 402e55c:	10c00215 	stw	r3,8(r2)
 402e560:	a80b883a 	mov	r5,r21
 402e564:	a009883a 	mov	r4,r20
 402e568:	402c37c0 	call	402c37c <_free_r>
 402e56c:	a009883a 	mov	r4,r20
 402e570:	40339940 	call	4033994 <__malloc_unlock>
 402e574:	9005883a 	mov	r2,r18
 402e578:	00001206 	br	402e5c4 <_realloc_r+0x170>
 402e57c:	00c00404 	movi	r3,16
 402e580:	1823883a 	mov	r17,r3
 402e584:	003fce06 	br	402e4c0 <__flash_rwdata_start+0xffff8254>
 402e588:	a825883a 	mov	r18,r21
 402e58c:	8445c83a 	sub	r2,r16,r17
 402e590:	00c003c4 	movi	r3,15
 402e594:	18802636 	bltu	r3,r2,402e630 <_realloc_r+0x1dc>
 402e598:	99800117 	ldw	r6,4(r19)
 402e59c:	9c07883a 	add	r3,r19,r16
 402e5a0:	3180004c 	andi	r6,r6,1
 402e5a4:	3420b03a 	or	r16,r6,r16
 402e5a8:	9c000115 	stw	r16,4(r19)
 402e5ac:	18800117 	ldw	r2,4(r3)
 402e5b0:	10800054 	ori	r2,r2,1
 402e5b4:	18800115 	stw	r2,4(r3)
 402e5b8:	a009883a 	mov	r4,r20
 402e5bc:	40339940 	call	4033994 <__malloc_unlock>
 402e5c0:	9005883a 	mov	r2,r18
 402e5c4:	dfc00917 	ldw	ra,36(sp)
 402e5c8:	df000817 	ldw	fp,32(sp)
 402e5cc:	ddc00717 	ldw	r23,28(sp)
 402e5d0:	dd800617 	ldw	r22,24(sp)
 402e5d4:	dd400517 	ldw	r21,20(sp)
 402e5d8:	dd000417 	ldw	r20,16(sp)
 402e5dc:	dcc00317 	ldw	r19,12(sp)
 402e5e0:	dc800217 	ldw	r18,8(sp)
 402e5e4:	dc400117 	ldw	r17,4(sp)
 402e5e8:	dc000017 	ldw	r16,0(sp)
 402e5ec:	dec00a04 	addi	sp,sp,40
 402e5f0:	f800283a 	ret
 402e5f4:	017fff04 	movi	r5,-4
 402e5f8:	414a703a 	and	r5,r8,r5
 402e5fc:	814d883a 	add	r6,r16,r5
 402e600:	30c01f16 	blt	r6,r3,402e680 <_realloc_r+0x22c>
 402e604:	20800317 	ldw	r2,12(r4)
 402e608:	20c00217 	ldw	r3,8(r4)
 402e60c:	a825883a 	mov	r18,r21
 402e610:	3021883a 	mov	r16,r6
 402e614:	18800315 	stw	r2,12(r3)
 402e618:	10c00215 	stw	r3,8(r2)
 402e61c:	003fdb06 	br	402e58c <__flash_rwdata_start+0xffff8320>
 402e620:	00800304 	movi	r2,12
 402e624:	a0800015 	stw	r2,0(r20)
 402e628:	0005883a 	mov	r2,zero
 402e62c:	003fe506 	br	402e5c4 <__flash_rwdata_start+0xffff8358>
 402e630:	98c00117 	ldw	r3,4(r19)
 402e634:	9c4b883a 	add	r5,r19,r17
 402e638:	11000054 	ori	r4,r2,1
 402e63c:	18c0004c 	andi	r3,r3,1
 402e640:	1c62b03a 	or	r17,r3,r17
 402e644:	9c400115 	stw	r17,4(r19)
 402e648:	29000115 	stw	r4,4(r5)
 402e64c:	2885883a 	add	r2,r5,r2
 402e650:	10c00117 	ldw	r3,4(r2)
 402e654:	29400204 	addi	r5,r5,8
 402e658:	a009883a 	mov	r4,r20
 402e65c:	18c00054 	ori	r3,r3,1
 402e660:	10c00115 	stw	r3,4(r2)
 402e664:	402c37c0 	call	402c37c <_free_r>
 402e668:	003fd306 	br	402e5b8 <__flash_rwdata_start+0xffff834c>
 402e66c:	017fff04 	movi	r5,-4
 402e670:	414a703a 	and	r5,r8,r5
 402e674:	89800404 	addi	r6,r17,16
 402e678:	8151883a 	add	r8,r16,r5
 402e67c:	4180590e 	bge	r8,r6,402e7e4 <_realloc_r+0x390>
 402e680:	1080004c 	andi	r2,r2,1
 402e684:	103f9e1e 	bne	r2,zero,402e500 <__flash_rwdata_start+0xffff8294>
 402e688:	adbffe17 	ldw	r22,-8(r21)
 402e68c:	00bfff04 	movi	r2,-4
 402e690:	9dadc83a 	sub	r22,r19,r22
 402e694:	b1800117 	ldw	r6,4(r22)
 402e698:	3084703a 	and	r2,r6,r2
 402e69c:	20002026 	beq	r4,zero,402e720 <_realloc_r+0x2cc>
 402e6a0:	80af883a 	add	r23,r16,r2
 402e6a4:	b96f883a 	add	r23,r23,r5
 402e6a8:	21c05f26 	beq	r4,r7,402e828 <_realloc_r+0x3d4>
 402e6ac:	b8c01c16 	blt	r23,r3,402e720 <_realloc_r+0x2cc>
 402e6b0:	20800317 	ldw	r2,12(r4)
 402e6b4:	20c00217 	ldw	r3,8(r4)
 402e6b8:	81bfff04 	addi	r6,r16,-4
 402e6bc:	01000904 	movi	r4,36
 402e6c0:	18800315 	stw	r2,12(r3)
 402e6c4:	10c00215 	stw	r3,8(r2)
 402e6c8:	b0c00217 	ldw	r3,8(r22)
 402e6cc:	b0800317 	ldw	r2,12(r22)
 402e6d0:	b4800204 	addi	r18,r22,8
 402e6d4:	18800315 	stw	r2,12(r3)
 402e6d8:	10c00215 	stw	r3,8(r2)
 402e6dc:	21801b36 	bltu	r4,r6,402e74c <_realloc_r+0x2f8>
 402e6e0:	008004c4 	movi	r2,19
 402e6e4:	1180352e 	bgeu	r2,r6,402e7bc <_realloc_r+0x368>
 402e6e8:	a8800017 	ldw	r2,0(r21)
 402e6ec:	b0800215 	stw	r2,8(r22)
 402e6f0:	a8800117 	ldw	r2,4(r21)
 402e6f4:	b0800315 	stw	r2,12(r22)
 402e6f8:	008006c4 	movi	r2,27
 402e6fc:	11807f36 	bltu	r2,r6,402e8fc <_realloc_r+0x4a8>
 402e700:	b0800404 	addi	r2,r22,16
 402e704:	ad400204 	addi	r21,r21,8
 402e708:	00002d06 	br	402e7c0 <_realloc_r+0x36c>
 402e70c:	adbffe17 	ldw	r22,-8(r21)
 402e710:	00bfff04 	movi	r2,-4
 402e714:	9dadc83a 	sub	r22,r19,r22
 402e718:	b1000117 	ldw	r4,4(r22)
 402e71c:	2084703a 	and	r2,r4,r2
 402e720:	b03f7726 	beq	r22,zero,402e500 <__flash_rwdata_start+0xffff8294>
 402e724:	80af883a 	add	r23,r16,r2
 402e728:	b8ff7516 	blt	r23,r3,402e500 <__flash_rwdata_start+0xffff8294>
 402e72c:	b0800317 	ldw	r2,12(r22)
 402e730:	b0c00217 	ldw	r3,8(r22)
 402e734:	81bfff04 	addi	r6,r16,-4
 402e738:	01000904 	movi	r4,36
 402e73c:	18800315 	stw	r2,12(r3)
 402e740:	10c00215 	stw	r3,8(r2)
 402e744:	b4800204 	addi	r18,r22,8
 402e748:	21bfe52e 	bgeu	r4,r6,402e6e0 <__flash_rwdata_start+0xffff8474>
 402e74c:	a80b883a 	mov	r5,r21
 402e750:	9009883a 	mov	r4,r18
 402e754:	402d1940 	call	402d194 <memmove>
 402e758:	b821883a 	mov	r16,r23
 402e75c:	b027883a 	mov	r19,r22
 402e760:	003f8a06 	br	402e58c <__flash_rwdata_start+0xffff8320>
 402e764:	300b883a 	mov	r5,r6
 402e768:	dfc00917 	ldw	ra,36(sp)
 402e76c:	df000817 	ldw	fp,32(sp)
 402e770:	ddc00717 	ldw	r23,28(sp)
 402e774:	dd800617 	ldw	r22,24(sp)
 402e778:	dd400517 	ldw	r21,20(sp)
 402e77c:	dd000417 	ldw	r20,16(sp)
 402e780:	dcc00317 	ldw	r19,12(sp)
 402e784:	dc800217 	ldw	r18,8(sp)
 402e788:	dc400117 	ldw	r17,4(sp)
 402e78c:	dc000017 	ldw	r16,0(sp)
 402e790:	dec00a04 	addi	sp,sp,40
 402e794:	4026f881 	jmpi	4026f88 <_malloc_r>
 402e798:	a8c00017 	ldw	r3,0(r21)
 402e79c:	90c00015 	stw	r3,0(r18)
 402e7a0:	a8c00117 	ldw	r3,4(r21)
 402e7a4:	90c00115 	stw	r3,4(r18)
 402e7a8:	00c006c4 	movi	r3,27
 402e7ac:	19804536 	bltu	r3,r6,402e8c4 <_realloc_r+0x470>
 402e7b0:	90800204 	addi	r2,r18,8
 402e7b4:	a8c00204 	addi	r3,r21,8
 402e7b8:	003f6306 	br	402e548 <__flash_rwdata_start+0xffff82dc>
 402e7bc:	9005883a 	mov	r2,r18
 402e7c0:	a8c00017 	ldw	r3,0(r21)
 402e7c4:	b821883a 	mov	r16,r23
 402e7c8:	b027883a 	mov	r19,r22
 402e7cc:	10c00015 	stw	r3,0(r2)
 402e7d0:	a8c00117 	ldw	r3,4(r21)
 402e7d4:	10c00115 	stw	r3,4(r2)
 402e7d8:	a8c00217 	ldw	r3,8(r21)
 402e7dc:	10c00215 	stw	r3,8(r2)
 402e7e0:	003f6a06 	br	402e58c <__flash_rwdata_start+0xffff8320>
 402e7e4:	9c67883a 	add	r19,r19,r17
 402e7e8:	4445c83a 	sub	r2,r8,r17
 402e7ec:	e4c00215 	stw	r19,8(fp)
 402e7f0:	10800054 	ori	r2,r2,1
 402e7f4:	98800115 	stw	r2,4(r19)
 402e7f8:	a8bfff17 	ldw	r2,-4(r21)
 402e7fc:	a009883a 	mov	r4,r20
 402e800:	1080004c 	andi	r2,r2,1
 402e804:	1462b03a 	or	r17,r2,r17
 402e808:	ac7fff15 	stw	r17,-4(r21)
 402e80c:	40339940 	call	4033994 <__malloc_unlock>
 402e810:	a805883a 	mov	r2,r21
 402e814:	003f6b06 	br	402e5c4 <__flash_rwdata_start+0xffff8358>
 402e818:	a80b883a 	mov	r5,r21
 402e81c:	9009883a 	mov	r4,r18
 402e820:	402d1940 	call	402d194 <memmove>
 402e824:	003f4e06 	br	402e560 <__flash_rwdata_start+0xffff82f4>
 402e828:	89000404 	addi	r4,r17,16
 402e82c:	b93fbc16 	blt	r23,r4,402e720 <__flash_rwdata_start+0xffff84b4>
 402e830:	b0800317 	ldw	r2,12(r22)
 402e834:	b0c00217 	ldw	r3,8(r22)
 402e838:	81bfff04 	addi	r6,r16,-4
 402e83c:	01000904 	movi	r4,36
 402e840:	18800315 	stw	r2,12(r3)
 402e844:	10c00215 	stw	r3,8(r2)
 402e848:	b4800204 	addi	r18,r22,8
 402e84c:	21804336 	bltu	r4,r6,402e95c <_realloc_r+0x508>
 402e850:	008004c4 	movi	r2,19
 402e854:	11803f2e 	bgeu	r2,r6,402e954 <_realloc_r+0x500>
 402e858:	a8800017 	ldw	r2,0(r21)
 402e85c:	b0800215 	stw	r2,8(r22)
 402e860:	a8800117 	ldw	r2,4(r21)
 402e864:	b0800315 	stw	r2,12(r22)
 402e868:	008006c4 	movi	r2,27
 402e86c:	11803f36 	bltu	r2,r6,402e96c <_realloc_r+0x518>
 402e870:	b0800404 	addi	r2,r22,16
 402e874:	ad400204 	addi	r21,r21,8
 402e878:	a8c00017 	ldw	r3,0(r21)
 402e87c:	10c00015 	stw	r3,0(r2)
 402e880:	a8c00117 	ldw	r3,4(r21)
 402e884:	10c00115 	stw	r3,4(r2)
 402e888:	a8c00217 	ldw	r3,8(r21)
 402e88c:	10c00215 	stw	r3,8(r2)
 402e890:	b447883a 	add	r3,r22,r17
 402e894:	bc45c83a 	sub	r2,r23,r17
 402e898:	e0c00215 	stw	r3,8(fp)
 402e89c:	10800054 	ori	r2,r2,1
 402e8a0:	18800115 	stw	r2,4(r3)
 402e8a4:	b0800117 	ldw	r2,4(r22)
 402e8a8:	a009883a 	mov	r4,r20
 402e8ac:	1080004c 	andi	r2,r2,1
 402e8b0:	1462b03a 	or	r17,r2,r17
 402e8b4:	b4400115 	stw	r17,4(r22)
 402e8b8:	40339940 	call	4033994 <__malloc_unlock>
 402e8bc:	9005883a 	mov	r2,r18
 402e8c0:	003f4006 	br	402e5c4 <__flash_rwdata_start+0xffff8358>
 402e8c4:	a8c00217 	ldw	r3,8(r21)
 402e8c8:	90c00215 	stw	r3,8(r18)
 402e8cc:	a8c00317 	ldw	r3,12(r21)
 402e8d0:	90c00315 	stw	r3,12(r18)
 402e8d4:	30801126 	beq	r6,r2,402e91c <_realloc_r+0x4c8>
 402e8d8:	90800404 	addi	r2,r18,16
 402e8dc:	a8c00404 	addi	r3,r21,16
 402e8e0:	003f1906 	br	402e548 <__flash_rwdata_start+0xffff82dc>
 402e8e4:	90ffff17 	ldw	r3,-4(r18)
 402e8e8:	00bfff04 	movi	r2,-4
 402e8ec:	a825883a 	mov	r18,r21
 402e8f0:	1884703a 	and	r2,r3,r2
 402e8f4:	80a1883a 	add	r16,r16,r2
 402e8f8:	003f2406 	br	402e58c <__flash_rwdata_start+0xffff8320>
 402e8fc:	a8800217 	ldw	r2,8(r21)
 402e900:	b0800415 	stw	r2,16(r22)
 402e904:	a8800317 	ldw	r2,12(r21)
 402e908:	b0800515 	stw	r2,20(r22)
 402e90c:	31000a26 	beq	r6,r4,402e938 <_realloc_r+0x4e4>
 402e910:	b0800604 	addi	r2,r22,24
 402e914:	ad400404 	addi	r21,r21,16
 402e918:	003fa906 	br	402e7c0 <__flash_rwdata_start+0xffff8554>
 402e91c:	a9000417 	ldw	r4,16(r21)
 402e920:	90800604 	addi	r2,r18,24
 402e924:	a8c00604 	addi	r3,r21,24
 402e928:	91000415 	stw	r4,16(r18)
 402e92c:	a9000517 	ldw	r4,20(r21)
 402e930:	91000515 	stw	r4,20(r18)
 402e934:	003f0406 	br	402e548 <__flash_rwdata_start+0xffff82dc>
 402e938:	a8c00417 	ldw	r3,16(r21)
 402e93c:	ad400604 	addi	r21,r21,24
 402e940:	b0800804 	addi	r2,r22,32
 402e944:	b0c00615 	stw	r3,24(r22)
 402e948:	a8ffff17 	ldw	r3,-4(r21)
 402e94c:	b0c00715 	stw	r3,28(r22)
 402e950:	003f9b06 	br	402e7c0 <__flash_rwdata_start+0xffff8554>
 402e954:	9005883a 	mov	r2,r18
 402e958:	003fc706 	br	402e878 <__flash_rwdata_start+0xffff860c>
 402e95c:	a80b883a 	mov	r5,r21
 402e960:	9009883a 	mov	r4,r18
 402e964:	402d1940 	call	402d194 <memmove>
 402e968:	003fc906 	br	402e890 <__flash_rwdata_start+0xffff8624>
 402e96c:	a8800217 	ldw	r2,8(r21)
 402e970:	b0800415 	stw	r2,16(r22)
 402e974:	a8800317 	ldw	r2,12(r21)
 402e978:	b0800515 	stw	r2,20(r22)
 402e97c:	31000726 	beq	r6,r4,402e99c <_realloc_r+0x548>
 402e980:	b0800604 	addi	r2,r22,24
 402e984:	ad400404 	addi	r21,r21,16
 402e988:	003fbb06 	br	402e878 <__flash_rwdata_start+0xffff860c>
 402e98c:	a009883a 	mov	r4,r20
 402e990:	40339940 	call	4033994 <__malloc_unlock>
 402e994:	0005883a 	mov	r2,zero
 402e998:	003f0a06 	br	402e5c4 <__flash_rwdata_start+0xffff8358>
 402e99c:	a8c00417 	ldw	r3,16(r21)
 402e9a0:	ad400604 	addi	r21,r21,24
 402e9a4:	b0800804 	addi	r2,r22,32
 402e9a8:	b0c00615 	stw	r3,24(r22)
 402e9ac:	a8ffff17 	ldw	r3,-4(r21)
 402e9b0:	b0c00715 	stw	r3,28(r22)
 402e9b4:	003fb006 	br	402e878 <__flash_rwdata_start+0xffff860c>

0402e9b8 <__fpclassifyd>:
 402e9b8:	00a00034 	movhi	r2,32768
 402e9bc:	10bfffc4 	addi	r2,r2,-1
 402e9c0:	2884703a 	and	r2,r5,r2
 402e9c4:	10000726 	beq	r2,zero,402e9e4 <__fpclassifyd+0x2c>
 402e9c8:	00fffc34 	movhi	r3,65520
 402e9cc:	019ff834 	movhi	r6,32736
 402e9d0:	28c7883a 	add	r3,r5,r3
 402e9d4:	31bfffc4 	addi	r6,r6,-1
 402e9d8:	30c00536 	bltu	r6,r3,402e9f0 <__fpclassifyd+0x38>
 402e9dc:	00800104 	movi	r2,4
 402e9e0:	f800283a 	ret
 402e9e4:	2000021e 	bne	r4,zero,402e9f0 <__fpclassifyd+0x38>
 402e9e8:	00800084 	movi	r2,2
 402e9ec:	f800283a 	ret
 402e9f0:	00dffc34 	movhi	r3,32752
 402e9f4:	019ff834 	movhi	r6,32736
 402e9f8:	28cb883a 	add	r5,r5,r3
 402e9fc:	31bfffc4 	addi	r6,r6,-1
 402ea00:	317ff62e 	bgeu	r6,r5,402e9dc <__flash_rwdata_start+0xffff8770>
 402ea04:	01400434 	movhi	r5,16
 402ea08:	297fffc4 	addi	r5,r5,-1
 402ea0c:	28800236 	bltu	r5,r2,402ea18 <__fpclassifyd+0x60>
 402ea10:	008000c4 	movi	r2,3
 402ea14:	f800283a 	ret
 402ea18:	10c00226 	beq	r2,r3,402ea24 <__fpclassifyd+0x6c>
 402ea1c:	0005883a 	mov	r2,zero
 402ea20:	f800283a 	ret
 402ea24:	2005003a 	cmpeq	r2,r4,zero
 402ea28:	f800283a 	ret

0402ea2c <__sread>:
 402ea2c:	defffe04 	addi	sp,sp,-8
 402ea30:	dc000015 	stw	r16,0(sp)
 402ea34:	2821883a 	mov	r16,r5
 402ea38:	2940038f 	ldh	r5,14(r5)
 402ea3c:	dfc00115 	stw	ra,4(sp)
 402ea40:	403089c0 	call	403089c <_read_r>
 402ea44:	10000716 	blt	r2,zero,402ea64 <__sread+0x38>
 402ea48:	80c01417 	ldw	r3,80(r16)
 402ea4c:	1887883a 	add	r3,r3,r2
 402ea50:	80c01415 	stw	r3,80(r16)
 402ea54:	dfc00117 	ldw	ra,4(sp)
 402ea58:	dc000017 	ldw	r16,0(sp)
 402ea5c:	dec00204 	addi	sp,sp,8
 402ea60:	f800283a 	ret
 402ea64:	80c0030b 	ldhu	r3,12(r16)
 402ea68:	18fbffcc 	andi	r3,r3,61439
 402ea6c:	80c0030d 	sth	r3,12(r16)
 402ea70:	dfc00117 	ldw	ra,4(sp)
 402ea74:	dc000017 	ldw	r16,0(sp)
 402ea78:	dec00204 	addi	sp,sp,8
 402ea7c:	f800283a 	ret

0402ea80 <__seofread>:
 402ea80:	0005883a 	mov	r2,zero
 402ea84:	f800283a 	ret

0402ea88 <__swrite>:
 402ea88:	2880030b 	ldhu	r2,12(r5)
 402ea8c:	defffb04 	addi	sp,sp,-20
 402ea90:	dcc00315 	stw	r19,12(sp)
 402ea94:	dc800215 	stw	r18,8(sp)
 402ea98:	dc400115 	stw	r17,4(sp)
 402ea9c:	dc000015 	stw	r16,0(sp)
 402eaa0:	dfc00415 	stw	ra,16(sp)
 402eaa4:	10c0400c 	andi	r3,r2,256
 402eaa8:	2821883a 	mov	r16,r5
 402eaac:	2023883a 	mov	r17,r4
 402eab0:	3025883a 	mov	r18,r6
 402eab4:	3827883a 	mov	r19,r7
 402eab8:	18000526 	beq	r3,zero,402ead0 <__swrite+0x48>
 402eabc:	2940038f 	ldh	r5,14(r5)
 402eac0:	01c00084 	movi	r7,2
 402eac4:	000d883a 	mov	r6,zero
 402eac8:	403083c0 	call	403083c <_lseek_r>
 402eacc:	8080030b 	ldhu	r2,12(r16)
 402ead0:	8140038f 	ldh	r5,14(r16)
 402ead4:	10bbffcc 	andi	r2,r2,61439
 402ead8:	980f883a 	mov	r7,r19
 402eadc:	900d883a 	mov	r6,r18
 402eae0:	8809883a 	mov	r4,r17
 402eae4:	8080030d 	sth	r2,12(r16)
 402eae8:	dfc00417 	ldw	ra,16(sp)
 402eaec:	dcc00317 	ldw	r19,12(sp)
 402eaf0:	dc800217 	ldw	r18,8(sp)
 402eaf4:	dc400117 	ldw	r17,4(sp)
 402eaf8:	dc000017 	ldw	r16,0(sp)
 402eafc:	dec00504 	addi	sp,sp,20
 402eb00:	40303081 	jmpi	4030308 <_write_r>

0402eb04 <__sseek>:
 402eb04:	defffe04 	addi	sp,sp,-8
 402eb08:	dc000015 	stw	r16,0(sp)
 402eb0c:	2821883a 	mov	r16,r5
 402eb10:	2940038f 	ldh	r5,14(r5)
 402eb14:	dfc00115 	stw	ra,4(sp)
 402eb18:	403083c0 	call	403083c <_lseek_r>
 402eb1c:	00ffffc4 	movi	r3,-1
 402eb20:	10c00826 	beq	r2,r3,402eb44 <__sseek+0x40>
 402eb24:	80c0030b 	ldhu	r3,12(r16)
 402eb28:	80801415 	stw	r2,80(r16)
 402eb2c:	18c40014 	ori	r3,r3,4096
 402eb30:	80c0030d 	sth	r3,12(r16)
 402eb34:	dfc00117 	ldw	ra,4(sp)
 402eb38:	dc000017 	ldw	r16,0(sp)
 402eb3c:	dec00204 	addi	sp,sp,8
 402eb40:	f800283a 	ret
 402eb44:	80c0030b 	ldhu	r3,12(r16)
 402eb48:	18fbffcc 	andi	r3,r3,61439
 402eb4c:	80c0030d 	sth	r3,12(r16)
 402eb50:	dfc00117 	ldw	ra,4(sp)
 402eb54:	dc000017 	ldw	r16,0(sp)
 402eb58:	dec00204 	addi	sp,sp,8
 402eb5c:	f800283a 	ret

0402eb60 <__sclose>:
 402eb60:	2940038f 	ldh	r5,14(r5)
 402eb64:	40303681 	jmpi	4030368 <_close_r>

0402eb68 <__sprint_r.part.0>:
 402eb68:	28801917 	ldw	r2,100(r5)
 402eb6c:	defff604 	addi	sp,sp,-40
 402eb70:	dd400515 	stw	r21,20(sp)
 402eb74:	dfc00915 	stw	ra,36(sp)
 402eb78:	df000815 	stw	fp,32(sp)
 402eb7c:	ddc00715 	stw	r23,28(sp)
 402eb80:	dd800615 	stw	r22,24(sp)
 402eb84:	dd000415 	stw	r20,16(sp)
 402eb88:	dcc00315 	stw	r19,12(sp)
 402eb8c:	dc800215 	stw	r18,8(sp)
 402eb90:	dc400115 	stw	r17,4(sp)
 402eb94:	dc000015 	stw	r16,0(sp)
 402eb98:	1088000c 	andi	r2,r2,8192
 402eb9c:	302b883a 	mov	r21,r6
 402eba0:	10002e26 	beq	r2,zero,402ec5c <__sprint_r.part.0+0xf4>
 402eba4:	30800217 	ldw	r2,8(r6)
 402eba8:	35800017 	ldw	r22,0(r6)
 402ebac:	10002926 	beq	r2,zero,402ec54 <__sprint_r.part.0+0xec>
 402ebb0:	2827883a 	mov	r19,r5
 402ebb4:	2029883a 	mov	r20,r4
 402ebb8:	b5c00104 	addi	r23,r22,4
 402ebbc:	04bfffc4 	movi	r18,-1
 402ebc0:	bc400017 	ldw	r17,0(r23)
 402ebc4:	b4000017 	ldw	r16,0(r22)
 402ebc8:	0039883a 	mov	fp,zero
 402ebcc:	8822d0ba 	srli	r17,r17,2
 402ebd0:	8800031e 	bne	r17,zero,402ebe0 <__sprint_r.part.0+0x78>
 402ebd4:	00001806 	br	402ec38 <__sprint_r.part.0+0xd0>
 402ebd8:	84000104 	addi	r16,r16,4
 402ebdc:	8f001526 	beq	r17,fp,402ec34 <__sprint_r.part.0+0xcc>
 402ebe0:	81400017 	ldw	r5,0(r16)
 402ebe4:	980d883a 	mov	r6,r19
 402ebe8:	a009883a 	mov	r4,r20
 402ebec:	40306e80 	call	40306e8 <_fputwc_r>
 402ebf0:	e7000044 	addi	fp,fp,1
 402ebf4:	14bff81e 	bne	r2,r18,402ebd8 <__flash_rwdata_start+0xffff896c>
 402ebf8:	9005883a 	mov	r2,r18
 402ebfc:	a8000215 	stw	zero,8(r21)
 402ec00:	a8000115 	stw	zero,4(r21)
 402ec04:	dfc00917 	ldw	ra,36(sp)
 402ec08:	df000817 	ldw	fp,32(sp)
 402ec0c:	ddc00717 	ldw	r23,28(sp)
 402ec10:	dd800617 	ldw	r22,24(sp)
 402ec14:	dd400517 	ldw	r21,20(sp)
 402ec18:	dd000417 	ldw	r20,16(sp)
 402ec1c:	dcc00317 	ldw	r19,12(sp)
 402ec20:	dc800217 	ldw	r18,8(sp)
 402ec24:	dc400117 	ldw	r17,4(sp)
 402ec28:	dc000017 	ldw	r16,0(sp)
 402ec2c:	dec00a04 	addi	sp,sp,40
 402ec30:	f800283a 	ret
 402ec34:	a8800217 	ldw	r2,8(r21)
 402ec38:	8c63883a 	add	r17,r17,r17
 402ec3c:	8c63883a 	add	r17,r17,r17
 402ec40:	1445c83a 	sub	r2,r2,r17
 402ec44:	a8800215 	stw	r2,8(r21)
 402ec48:	b5800204 	addi	r22,r22,8
 402ec4c:	bdc00204 	addi	r23,r23,8
 402ec50:	103fdb1e 	bne	r2,zero,402ebc0 <__flash_rwdata_start+0xffff8954>
 402ec54:	0005883a 	mov	r2,zero
 402ec58:	003fe806 	br	402ebfc <__flash_rwdata_start+0xffff8990>
 402ec5c:	402c68c0 	call	402c68c <__sfvwrite_r>
 402ec60:	003fe606 	br	402ebfc <__flash_rwdata_start+0xffff8990>

0402ec64 <__sprint_r>:
 402ec64:	30c00217 	ldw	r3,8(r6)
 402ec68:	18000126 	beq	r3,zero,402ec70 <__sprint_r+0xc>
 402ec6c:	402eb681 	jmpi	402eb68 <__sprint_r.part.0>
 402ec70:	30000115 	stw	zero,4(r6)
 402ec74:	0005883a 	mov	r2,zero
 402ec78:	f800283a 	ret

0402ec7c <___vfiprintf_internal_r>:
 402ec7c:	deffc904 	addi	sp,sp,-220
 402ec80:	df003515 	stw	fp,212(sp)
 402ec84:	dd003115 	stw	r20,196(sp)
 402ec88:	dfc03615 	stw	ra,216(sp)
 402ec8c:	ddc03415 	stw	r23,208(sp)
 402ec90:	dd803315 	stw	r22,204(sp)
 402ec94:	dd403215 	stw	r21,200(sp)
 402ec98:	dcc03015 	stw	r19,192(sp)
 402ec9c:	dc802f15 	stw	r18,188(sp)
 402eca0:	dc402e15 	stw	r17,184(sp)
 402eca4:	dc002d15 	stw	r16,180(sp)
 402eca8:	d9002015 	stw	r4,128(sp)
 402ecac:	d9c02215 	stw	r7,136(sp)
 402ecb0:	2829883a 	mov	r20,r5
 402ecb4:	3039883a 	mov	fp,r6
 402ecb8:	20000226 	beq	r4,zero,402ecc4 <___vfiprintf_internal_r+0x48>
 402ecbc:	20800e17 	ldw	r2,56(r4)
 402ecc0:	1000cf26 	beq	r2,zero,402f000 <___vfiprintf_internal_r+0x384>
 402ecc4:	a080030b 	ldhu	r2,12(r20)
 402ecc8:	10c8000c 	andi	r3,r2,8192
 402eccc:	1800061e 	bne	r3,zero,402ece8 <___vfiprintf_internal_r+0x6c>
 402ecd0:	a1001917 	ldw	r4,100(r20)
 402ecd4:	00f7ffc4 	movi	r3,-8193
 402ecd8:	10880014 	ori	r2,r2,8192
 402ecdc:	20c6703a 	and	r3,r4,r3
 402ece0:	a080030d 	sth	r2,12(r20)
 402ece4:	a0c01915 	stw	r3,100(r20)
 402ece8:	10c0020c 	andi	r3,r2,8
 402ecec:	1800a926 	beq	r3,zero,402ef94 <___vfiprintf_internal_r+0x318>
 402ecf0:	a0c00417 	ldw	r3,16(r20)
 402ecf4:	1800a726 	beq	r3,zero,402ef94 <___vfiprintf_internal_r+0x318>
 402ecf8:	1080068c 	andi	r2,r2,26
 402ecfc:	00c00284 	movi	r3,10
 402ed00:	10c0ac26 	beq	r2,r3,402efb4 <___vfiprintf_internal_r+0x338>
 402ed04:	da801a04 	addi	r10,sp,104
 402ed08:	da801e15 	stw	r10,120(sp)
 402ed0c:	d8801e17 	ldw	r2,120(sp)
 402ed10:	da8019c4 	addi	r10,sp,103
 402ed14:	05800034 	movhi	r22,0
 402ed18:	05c00034 	movhi	r23,0
 402ed1c:	da801f15 	stw	r10,124(sp)
 402ed20:	1295c83a 	sub	r10,r2,r10
 402ed24:	b5819704 	addi	r22,r22,1628
 402ed28:	bdc19304 	addi	r23,r23,1612
 402ed2c:	dec01a15 	stw	sp,104(sp)
 402ed30:	d8001c15 	stw	zero,112(sp)
 402ed34:	d8001b15 	stw	zero,108(sp)
 402ed38:	d8002615 	stw	zero,152(sp)
 402ed3c:	d8002315 	stw	zero,140(sp)
 402ed40:	da802715 	stw	r10,156(sp)
 402ed44:	d811883a 	mov	r8,sp
 402ed48:	dd002115 	stw	r20,132(sp)
 402ed4c:	e021883a 	mov	r16,fp
 402ed50:	80800007 	ldb	r2,0(r16)
 402ed54:	1003ea26 	beq	r2,zero,402fd00 <___vfiprintf_internal_r+0x1084>
 402ed58:	00c00944 	movi	r3,37
 402ed5c:	8025883a 	mov	r18,r16
 402ed60:	10c0021e 	bne	r2,r3,402ed6c <___vfiprintf_internal_r+0xf0>
 402ed64:	00001606 	br	402edc0 <___vfiprintf_internal_r+0x144>
 402ed68:	10c00326 	beq	r2,r3,402ed78 <___vfiprintf_internal_r+0xfc>
 402ed6c:	94800044 	addi	r18,r18,1
 402ed70:	90800007 	ldb	r2,0(r18)
 402ed74:	103ffc1e 	bne	r2,zero,402ed68 <__flash_rwdata_start+0xffff8afc>
 402ed78:	9423c83a 	sub	r17,r18,r16
 402ed7c:	88001026 	beq	r17,zero,402edc0 <___vfiprintf_internal_r+0x144>
 402ed80:	d8c01c17 	ldw	r3,112(sp)
 402ed84:	d8801b17 	ldw	r2,108(sp)
 402ed88:	44000015 	stw	r16,0(r8)
 402ed8c:	88c7883a 	add	r3,r17,r3
 402ed90:	10800044 	addi	r2,r2,1
 402ed94:	44400115 	stw	r17,4(r8)
 402ed98:	d8c01c15 	stw	r3,112(sp)
 402ed9c:	d8801b15 	stw	r2,108(sp)
 402eda0:	010001c4 	movi	r4,7
 402eda4:	2080760e 	bge	r4,r2,402ef80 <___vfiprintf_internal_r+0x304>
 402eda8:	1803821e 	bne	r3,zero,402fbb4 <___vfiprintf_internal_r+0xf38>
 402edac:	da802317 	ldw	r10,140(sp)
 402edb0:	d8001b15 	stw	zero,108(sp)
 402edb4:	d811883a 	mov	r8,sp
 402edb8:	5455883a 	add	r10,r10,r17
 402edbc:	da802315 	stw	r10,140(sp)
 402edc0:	90800007 	ldb	r2,0(r18)
 402edc4:	10044626 	beq	r2,zero,402fee0 <___vfiprintf_internal_r+0x1264>
 402edc8:	90c00047 	ldb	r3,1(r18)
 402edcc:	94000044 	addi	r16,r18,1
 402edd0:	d8001d85 	stb	zero,118(sp)
 402edd4:	0009883a 	mov	r4,zero
 402edd8:	000f883a 	mov	r7,zero
 402eddc:	027fffc4 	movi	r9,-1
 402ede0:	0023883a 	mov	r17,zero
 402ede4:	0029883a 	mov	r20,zero
 402ede8:	01401604 	movi	r5,88
 402edec:	01800244 	movi	r6,9
 402edf0:	03400a84 	movi	r13,42
 402edf4:	03001b04 	movi	r12,108
 402edf8:	84000044 	addi	r16,r16,1
 402edfc:	18bff804 	addi	r2,r3,-32
 402ee00:	28827336 	bltu	r5,r2,402f7d0 <___vfiprintf_internal_r+0xb54>
 402ee04:	100490ba 	slli	r2,r2,2
 402ee08:	028100f4 	movhi	r10,1027
 402ee0c:	52bb8704 	addi	r10,r10,-4580
 402ee10:	1285883a 	add	r2,r2,r10
 402ee14:	10800017 	ldw	r2,0(r2)
 402ee18:	1000683a 	jmp	r2
 402ee1c:	0402f504 	movi	r16,3028
 402ee20:	0402f7d0 	cmplti	r16,zero,3039
 402ee24:	0402f7d0 	cmplti	r16,zero,3039
 402ee28:	0402f524 	muli	r16,zero,3028
 402ee2c:	0402f7d0 	cmplti	r16,zero,3039
 402ee30:	0402f7d0 	cmplti	r16,zero,3039
 402ee34:	0402f7d0 	cmplti	r16,zero,3039
 402ee38:	0402f7d0 	cmplti	r16,zero,3039
 402ee3c:	0402f7d0 	cmplti	r16,zero,3039
 402ee40:	0402f7d0 	cmplti	r16,zero,3039
 402ee44:	0402f70c 	andi	r16,zero,3036
 402ee48:	0402f728 	cmpgeui	r16,zero,3036
 402ee4c:	0402f7d0 	cmplti	r16,zero,3039
 402ee50:	0402f010 	cmplti	r16,zero,3008
 402ee54:	0402f738 	rdprs	r16,zero,3036
 402ee58:	0402f7d0 	cmplti	r16,zero,3039
 402ee5c:	0402f530 	cmpltui	r16,zero,3028
 402ee60:	0402f53c 	xorhi	r16,zero,3028
 402ee64:	0402f53c 	xorhi	r16,zero,3028
 402ee68:	0402f53c 	xorhi	r16,zero,3028
 402ee6c:	0402f53c 	xorhi	r16,zero,3028
 402ee70:	0402f53c 	xorhi	r16,zero,3028
 402ee74:	0402f53c 	xorhi	r16,zero,3028
 402ee78:	0402f53c 	xorhi	r16,zero,3028
 402ee7c:	0402f53c 	xorhi	r16,zero,3028
 402ee80:	0402f53c 	xorhi	r16,zero,3028
 402ee84:	0402f7d0 	cmplti	r16,zero,3039
 402ee88:	0402f7d0 	cmplti	r16,zero,3039
 402ee8c:	0402f7d0 	cmplti	r16,zero,3039
 402ee90:	0402f7d0 	cmplti	r16,zero,3039
 402ee94:	0402f7d0 	cmplti	r16,zero,3039
 402ee98:	0402f7d0 	cmplti	r16,zero,3039
 402ee9c:	0402f7d0 	cmplti	r16,zero,3039
 402eea0:	0402f7d0 	cmplti	r16,zero,3039
 402eea4:	0402f7d0 	cmplti	r16,zero,3039
 402eea8:	0402f7d0 	cmplti	r16,zero,3039
 402eeac:	0402f568 	cmpgeui	r16,zero,3029
 402eeb0:	0402f7d0 	cmplti	r16,zero,3039
 402eeb4:	0402f7d0 	cmplti	r16,zero,3039
 402eeb8:	0402f7d0 	cmplti	r16,zero,3039
 402eebc:	0402f7d0 	cmplti	r16,zero,3039
 402eec0:	0402f7d0 	cmplti	r16,zero,3039
 402eec4:	0402f7d0 	cmplti	r16,zero,3039
 402eec8:	0402f7d0 	cmplti	r16,zero,3039
 402eecc:	0402f7d0 	cmplti	r16,zero,3039
 402eed0:	0402f7d0 	cmplti	r16,zero,3039
 402eed4:	0402f7d0 	cmplti	r16,zero,3039
 402eed8:	0402f5a0 	cmpeqi	r16,zero,3030
 402eedc:	0402f7d0 	cmplti	r16,zero,3039
 402eee0:	0402f7d0 	cmplti	r16,zero,3039
 402eee4:	0402f7d0 	cmplti	r16,zero,3039
 402eee8:	0402f7d0 	cmplti	r16,zero,3039
 402eeec:	0402f7d0 	cmplti	r16,zero,3039
 402eef0:	0402f5f8 	rdprs	r16,zero,3031
 402eef4:	0402f7d0 	cmplti	r16,zero,3039
 402eef8:	0402f7d0 	cmplti	r16,zero,3039
 402eefc:	0402f668 	cmpgeui	r16,zero,3033
 402ef00:	0402f7d0 	cmplti	r16,zero,3039
 402ef04:	0402f7d0 	cmplti	r16,zero,3039
 402ef08:	0402f7d0 	cmplti	r16,zero,3039
 402ef0c:	0402f7d0 	cmplti	r16,zero,3039
 402ef10:	0402f7d0 	cmplti	r16,zero,3039
 402ef14:	0402f7d0 	cmplti	r16,zero,3039
 402ef18:	0402f7d0 	cmplti	r16,zero,3039
 402ef1c:	0402f7d0 	cmplti	r16,zero,3039
 402ef20:	0402f7d0 	cmplti	r16,zero,3039
 402ef24:	0402f7d0 	cmplti	r16,zero,3039
 402ef28:	0402f414 	movui	r16,3024
 402ef2c:	0402f440 	call	402f44 <__alt_heap_start+0x3b5bf8>
 402ef30:	0402f7d0 	cmplti	r16,zero,3039
 402ef34:	0402f7d0 	cmplti	r16,zero,3039
 402ef38:	0402f7d0 	cmplti	r16,zero,3039
 402ef3c:	0402f778 	rdprs	r16,zero,3037
 402ef40:	0402f440 	call	402f44 <__alt_heap_start+0x3b5bf8>
 402ef44:	0402f7d0 	cmplti	r16,zero,3039
 402ef48:	0402f7d0 	cmplti	r16,zero,3039
 402ef4c:	0402f2d4 	movui	r16,3019
 402ef50:	0402f7d0 	cmplti	r16,zero,3039
 402ef54:	0402f2e4 	muli	r16,zero,3019
 402ef58:	0402f320 	cmpeqi	r16,zero,3020
 402ef5c:	0402f01c 	xori	r16,zero,3008
 402ef60:	0402f2c8 	cmpgei	r16,zero,3019
 402ef64:	0402f7d0 	cmplti	r16,zero,3039
 402ef68:	0402f6a4 	muli	r16,zero,3034
 402ef6c:	0402f7d0 	cmplti	r16,zero,3039
 402ef70:	0402f6fc 	xorhi	r16,zero,3035
 402ef74:	0402f7d0 	cmplti	r16,zero,3039
 402ef78:	0402f7d0 	cmplti	r16,zero,3039
 402ef7c:	0402f3c0 	call	402f3c <__alt_heap_start+0x3b5bf0>
 402ef80:	42000204 	addi	r8,r8,8
 402ef84:	da802317 	ldw	r10,140(sp)
 402ef88:	5455883a 	add	r10,r10,r17
 402ef8c:	da802315 	stw	r10,140(sp)
 402ef90:	003f8b06 	br	402edc0 <__flash_rwdata_start+0xffff8b54>
 402ef94:	d9002017 	ldw	r4,128(sp)
 402ef98:	a00b883a 	mov	r5,r20
 402ef9c:	402a2340 	call	402a234 <__swsetup_r>
 402efa0:	1003b11e 	bne	r2,zero,402fe68 <___vfiprintf_internal_r+0x11ec>
 402efa4:	a080030b 	ldhu	r2,12(r20)
 402efa8:	00c00284 	movi	r3,10
 402efac:	1080068c 	andi	r2,r2,26
 402efb0:	10ff541e 	bne	r2,r3,402ed04 <__flash_rwdata_start+0xffff8a98>
 402efb4:	a080038f 	ldh	r2,14(r20)
 402efb8:	103f5216 	blt	r2,zero,402ed04 <__flash_rwdata_start+0xffff8a98>
 402efbc:	d9c02217 	ldw	r7,136(sp)
 402efc0:	d9002017 	ldw	r4,128(sp)
 402efc4:	e00d883a 	mov	r6,fp
 402efc8:	a00b883a 	mov	r5,r20
 402efcc:	40300f40 	call	40300f4 <__sbprintf>
 402efd0:	dfc03617 	ldw	ra,216(sp)
 402efd4:	df003517 	ldw	fp,212(sp)
 402efd8:	ddc03417 	ldw	r23,208(sp)
 402efdc:	dd803317 	ldw	r22,204(sp)
 402efe0:	dd403217 	ldw	r21,200(sp)
 402efe4:	dd003117 	ldw	r20,196(sp)
 402efe8:	dcc03017 	ldw	r19,192(sp)
 402efec:	dc802f17 	ldw	r18,188(sp)
 402eff0:	dc402e17 	ldw	r17,184(sp)
 402eff4:	dc002d17 	ldw	r16,180(sp)
 402eff8:	dec03704 	addi	sp,sp,220
 402effc:	f800283a 	ret
 402f000:	402c2080 	call	402c208 <__sinit>
 402f004:	003f2f06 	br	402ecc4 <__flash_rwdata_start+0xffff8a58>
 402f008:	0463c83a 	sub	r17,zero,r17
 402f00c:	d8802215 	stw	r2,136(sp)
 402f010:	a5000114 	ori	r20,r20,4
 402f014:	80c00007 	ldb	r3,0(r16)
 402f018:	003f7706 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f01c:	00800c04 	movi	r2,48
 402f020:	da802217 	ldw	r10,136(sp)
 402f024:	d8801d05 	stb	r2,116(sp)
 402f028:	00801e04 	movi	r2,120
 402f02c:	d8801d45 	stb	r2,117(sp)
 402f030:	d8001d85 	stb	zero,118(sp)
 402f034:	50c00104 	addi	r3,r10,4
 402f038:	54800017 	ldw	r18,0(r10)
 402f03c:	0027883a 	mov	r19,zero
 402f040:	a0800094 	ori	r2,r20,2
 402f044:	48030b16 	blt	r9,zero,402fc74 <___vfiprintf_internal_r+0xff8>
 402f048:	00bfdfc4 	movi	r2,-129
 402f04c:	a096703a 	and	r11,r20,r2
 402f050:	d8c02215 	stw	r3,136(sp)
 402f054:	5d000094 	ori	r20,r11,2
 402f058:	90032b1e 	bne	r18,zero,402fd08 <___vfiprintf_internal_r+0x108c>
 402f05c:	00800034 	movhi	r2,0
 402f060:	10813204 	addi	r2,r2,1224
 402f064:	d8802615 	stw	r2,152(sp)
 402f068:	0039883a 	mov	fp,zero
 402f06c:	48017b1e 	bne	r9,zero,402f65c <___vfiprintf_internal_r+0x9e0>
 402f070:	0013883a 	mov	r9,zero
 402f074:	0027883a 	mov	r19,zero
 402f078:	dd401a04 	addi	r21,sp,104
 402f07c:	4825883a 	mov	r18,r9
 402f080:	4cc0010e 	bge	r9,r19,402f088 <___vfiprintf_internal_r+0x40c>
 402f084:	9825883a 	mov	r18,r19
 402f088:	e7003fcc 	andi	fp,fp,255
 402f08c:	e700201c 	xori	fp,fp,128
 402f090:	e73fe004 	addi	fp,fp,-128
 402f094:	e0000126 	beq	fp,zero,402f09c <___vfiprintf_internal_r+0x420>
 402f098:	94800044 	addi	r18,r18,1
 402f09c:	a380008c 	andi	r14,r20,2
 402f0a0:	70000126 	beq	r14,zero,402f0a8 <___vfiprintf_internal_r+0x42c>
 402f0a4:	94800084 	addi	r18,r18,2
 402f0a8:	a700210c 	andi	fp,r20,132
 402f0ac:	e001df1e 	bne	fp,zero,402f82c <___vfiprintf_internal_r+0xbb0>
 402f0b0:	8c87c83a 	sub	r3,r17,r18
 402f0b4:	00c1dd0e 	bge	zero,r3,402f82c <___vfiprintf_internal_r+0xbb0>
 402f0b8:	01c00404 	movi	r7,16
 402f0bc:	d8801c17 	ldw	r2,112(sp)
 402f0c0:	38c3ad0e 	bge	r7,r3,402ff78 <___vfiprintf_internal_r+0x12fc>
 402f0c4:	02800034 	movhi	r10,0
 402f0c8:	52819704 	addi	r10,r10,1628
 402f0cc:	dc002915 	stw	r16,164(sp)
 402f0d0:	d9801b17 	ldw	r6,108(sp)
 402f0d4:	da802415 	stw	r10,144(sp)
 402f0d8:	03c001c4 	movi	r15,7
 402f0dc:	da402515 	stw	r9,148(sp)
 402f0e0:	db802815 	stw	r14,160(sp)
 402f0e4:	1821883a 	mov	r16,r3
 402f0e8:	00000506 	br	402f100 <___vfiprintf_internal_r+0x484>
 402f0ec:	31400084 	addi	r5,r6,2
 402f0f0:	42000204 	addi	r8,r8,8
 402f0f4:	200d883a 	mov	r6,r4
 402f0f8:	843ffc04 	addi	r16,r16,-16
 402f0fc:	3c000d0e 	bge	r7,r16,402f134 <___vfiprintf_internal_r+0x4b8>
 402f100:	10800404 	addi	r2,r2,16
 402f104:	31000044 	addi	r4,r6,1
 402f108:	45800015 	stw	r22,0(r8)
 402f10c:	41c00115 	stw	r7,4(r8)
 402f110:	d8801c15 	stw	r2,112(sp)
 402f114:	d9001b15 	stw	r4,108(sp)
 402f118:	793ff40e 	bge	r15,r4,402f0ec <__flash_rwdata_start+0xffff8e80>
 402f11c:	1001b51e 	bne	r2,zero,402f7f4 <___vfiprintf_internal_r+0xb78>
 402f120:	843ffc04 	addi	r16,r16,-16
 402f124:	000d883a 	mov	r6,zero
 402f128:	01400044 	movi	r5,1
 402f12c:	d811883a 	mov	r8,sp
 402f130:	3c3ff316 	blt	r7,r16,402f100 <__flash_rwdata_start+0xffff8e94>
 402f134:	8007883a 	mov	r3,r16
 402f138:	da402517 	ldw	r9,148(sp)
 402f13c:	db802817 	ldw	r14,160(sp)
 402f140:	dc002917 	ldw	r16,164(sp)
 402f144:	da802417 	ldw	r10,144(sp)
 402f148:	1885883a 	add	r2,r3,r2
 402f14c:	40c00115 	stw	r3,4(r8)
 402f150:	42800015 	stw	r10,0(r8)
 402f154:	d8801c15 	stw	r2,112(sp)
 402f158:	d9401b15 	stw	r5,108(sp)
 402f15c:	00c001c4 	movi	r3,7
 402f160:	19426016 	blt	r3,r5,402fae4 <___vfiprintf_internal_r+0xe68>
 402f164:	d8c01d87 	ldb	r3,118(sp)
 402f168:	42000204 	addi	r8,r8,8
 402f16c:	29000044 	addi	r4,r5,1
 402f170:	1801b31e 	bne	r3,zero,402f840 <___vfiprintf_internal_r+0xbc4>
 402f174:	7001c026 	beq	r14,zero,402f878 <___vfiprintf_internal_r+0xbfc>
 402f178:	d8c01d04 	addi	r3,sp,116
 402f17c:	10800084 	addi	r2,r2,2
 402f180:	40c00015 	stw	r3,0(r8)
 402f184:	00c00084 	movi	r3,2
 402f188:	40c00115 	stw	r3,4(r8)
 402f18c:	d8801c15 	stw	r2,112(sp)
 402f190:	d9001b15 	stw	r4,108(sp)
 402f194:	00c001c4 	movi	r3,7
 402f198:	1902650e 	bge	r3,r4,402fb30 <___vfiprintf_internal_r+0xeb4>
 402f19c:	10029a1e 	bne	r2,zero,402fc08 <___vfiprintf_internal_r+0xf8c>
 402f1a0:	00c02004 	movi	r3,128
 402f1a4:	01000044 	movi	r4,1
 402f1a8:	000b883a 	mov	r5,zero
 402f1ac:	d811883a 	mov	r8,sp
 402f1b0:	e0c1b31e 	bne	fp,r3,402f880 <___vfiprintf_internal_r+0xc04>
 402f1b4:	8cb9c83a 	sub	fp,r17,r18
 402f1b8:	0701b10e 	bge	zero,fp,402f880 <___vfiprintf_internal_r+0xc04>
 402f1bc:	01c00404 	movi	r7,16
 402f1c0:	3f03890e 	bge	r7,fp,402ffe8 <___vfiprintf_internal_r+0x136c>
 402f1c4:	00c00034 	movhi	r3,0
 402f1c8:	18c19304 	addi	r3,r3,1612
 402f1cc:	d8c02415 	stw	r3,144(sp)
 402f1d0:	8007883a 	mov	r3,r16
 402f1d4:	034001c4 	movi	r13,7
 402f1d8:	e021883a 	mov	r16,fp
 402f1dc:	da402515 	stw	r9,148(sp)
 402f1e0:	1839883a 	mov	fp,r3
 402f1e4:	00000506 	br	402f1fc <___vfiprintf_internal_r+0x580>
 402f1e8:	29800084 	addi	r6,r5,2
 402f1ec:	42000204 	addi	r8,r8,8
 402f1f0:	180b883a 	mov	r5,r3
 402f1f4:	843ffc04 	addi	r16,r16,-16
 402f1f8:	3c000d0e 	bge	r7,r16,402f230 <___vfiprintf_internal_r+0x5b4>
 402f1fc:	10800404 	addi	r2,r2,16
 402f200:	28c00044 	addi	r3,r5,1
 402f204:	45c00015 	stw	r23,0(r8)
 402f208:	41c00115 	stw	r7,4(r8)
 402f20c:	d8801c15 	stw	r2,112(sp)
 402f210:	d8c01b15 	stw	r3,108(sp)
 402f214:	68fff40e 	bge	r13,r3,402f1e8 <__flash_rwdata_start+0xffff8f7c>
 402f218:	1002241e 	bne	r2,zero,402faac <___vfiprintf_internal_r+0xe30>
 402f21c:	843ffc04 	addi	r16,r16,-16
 402f220:	01800044 	movi	r6,1
 402f224:	000b883a 	mov	r5,zero
 402f228:	d811883a 	mov	r8,sp
 402f22c:	3c3ff316 	blt	r7,r16,402f1fc <__flash_rwdata_start+0xffff8f90>
 402f230:	da402517 	ldw	r9,148(sp)
 402f234:	e007883a 	mov	r3,fp
 402f238:	8039883a 	mov	fp,r16
 402f23c:	1821883a 	mov	r16,r3
 402f240:	d8c02417 	ldw	r3,144(sp)
 402f244:	1705883a 	add	r2,r2,fp
 402f248:	47000115 	stw	fp,4(r8)
 402f24c:	40c00015 	stw	r3,0(r8)
 402f250:	d8801c15 	stw	r2,112(sp)
 402f254:	d9801b15 	stw	r6,108(sp)
 402f258:	00c001c4 	movi	r3,7
 402f25c:	19827616 	blt	r3,r6,402fc38 <___vfiprintf_internal_r+0xfbc>
 402f260:	4cf9c83a 	sub	fp,r9,r19
 402f264:	42000204 	addi	r8,r8,8
 402f268:	31000044 	addi	r4,r6,1
 402f26c:	300b883a 	mov	r5,r6
 402f270:	07018516 	blt	zero,fp,402f888 <___vfiprintf_internal_r+0xc0c>
 402f274:	9885883a 	add	r2,r19,r2
 402f278:	45400015 	stw	r21,0(r8)
 402f27c:	44c00115 	stw	r19,4(r8)
 402f280:	d8801c15 	stw	r2,112(sp)
 402f284:	d9001b15 	stw	r4,108(sp)
 402f288:	00c001c4 	movi	r3,7
 402f28c:	1901dd0e 	bge	r3,r4,402fa04 <___vfiprintf_internal_r+0xd88>
 402f290:	1002401e 	bne	r2,zero,402fb94 <___vfiprintf_internal_r+0xf18>
 402f294:	d8001b15 	stw	zero,108(sp)
 402f298:	a2c0010c 	andi	r11,r20,4
 402f29c:	58000226 	beq	r11,zero,402f2a8 <___vfiprintf_internal_r+0x62c>
 402f2a0:	8ca7c83a 	sub	r19,r17,r18
 402f2a4:	04c2f216 	blt	zero,r19,402fe70 <___vfiprintf_internal_r+0x11f4>
 402f2a8:	8c80010e 	bge	r17,r18,402f2b0 <___vfiprintf_internal_r+0x634>
 402f2ac:	9023883a 	mov	r17,r18
 402f2b0:	da802317 	ldw	r10,140(sp)
 402f2b4:	5455883a 	add	r10,r10,r17
 402f2b8:	da802315 	stw	r10,140(sp)
 402f2bc:	d8001b15 	stw	zero,108(sp)
 402f2c0:	d811883a 	mov	r8,sp
 402f2c4:	003ea206 	br	402ed50 <__flash_rwdata_start+0xffff8ae4>
 402f2c8:	a5000814 	ori	r20,r20,32
 402f2cc:	80c00007 	ldb	r3,0(r16)
 402f2d0:	003ec906 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f2d4:	80c00007 	ldb	r3,0(r16)
 402f2d8:	1b030926 	beq	r3,r12,402ff00 <___vfiprintf_internal_r+0x1284>
 402f2dc:	a5000414 	ori	r20,r20,16
 402f2e0:	003ec506 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f2e4:	21003fcc 	andi	r4,r4,255
 402f2e8:	20035e1e 	bne	r4,zero,4030064 <___vfiprintf_internal_r+0x13e8>
 402f2ec:	a080080c 	andi	r2,r20,32
 402f2f0:	1002a526 	beq	r2,zero,402fd88 <___vfiprintf_internal_r+0x110c>
 402f2f4:	da802217 	ldw	r10,136(sp)
 402f2f8:	50800017 	ldw	r2,0(r10)
 402f2fc:	da802317 	ldw	r10,140(sp)
 402f300:	5007d7fa 	srai	r3,r10,31
 402f304:	da802217 	ldw	r10,136(sp)
 402f308:	10c00115 	stw	r3,4(r2)
 402f30c:	52800104 	addi	r10,r10,4
 402f310:	da802215 	stw	r10,136(sp)
 402f314:	da802317 	ldw	r10,140(sp)
 402f318:	12800015 	stw	r10,0(r2)
 402f31c:	003e8c06 	br	402ed50 <__flash_rwdata_start+0xffff8ae4>
 402f320:	21003fcc 	andi	r4,r4,255
 402f324:	2003511e 	bne	r4,zero,403006c <___vfiprintf_internal_r+0x13f0>
 402f328:	a080080c 	andi	r2,r20,32
 402f32c:	1000a126 	beq	r2,zero,402f5b4 <___vfiprintf_internal_r+0x938>
 402f330:	da802217 	ldw	r10,136(sp)
 402f334:	d8001d85 	stb	zero,118(sp)
 402f338:	50800204 	addi	r2,r10,8
 402f33c:	54800017 	ldw	r18,0(r10)
 402f340:	54c00117 	ldw	r19,4(r10)
 402f344:	4802b416 	blt	r9,zero,402fe18 <___vfiprintf_internal_r+0x119c>
 402f348:	013fdfc4 	movi	r4,-129
 402f34c:	94c6b03a 	or	r3,r18,r19
 402f350:	d8802215 	stw	r2,136(sp)
 402f354:	a128703a 	and	r20,r20,r4
 402f358:	1800a226 	beq	r3,zero,402f5e4 <___vfiprintf_internal_r+0x968>
 402f35c:	0039883a 	mov	fp,zero
 402f360:	dd401a04 	addi	r21,sp,104
 402f364:	9006d0fa 	srli	r3,r18,3
 402f368:	9808977a 	slli	r4,r19,29
 402f36c:	9826d0fa 	srli	r19,r19,3
 402f370:	948001cc 	andi	r18,r18,7
 402f374:	90800c04 	addi	r2,r18,48
 402f378:	ad7fffc4 	addi	r21,r21,-1
 402f37c:	20e4b03a 	or	r18,r4,r3
 402f380:	a8800005 	stb	r2,0(r21)
 402f384:	94c6b03a 	or	r3,r18,r19
 402f388:	183ff61e 	bne	r3,zero,402f364 <__flash_rwdata_start+0xffff90f8>
 402f38c:	a0c0004c 	andi	r3,r20,1
 402f390:	18005926 	beq	r3,zero,402f4f8 <___vfiprintf_internal_r+0x87c>
 402f394:	10803fcc 	andi	r2,r2,255
 402f398:	1080201c 	xori	r2,r2,128
 402f39c:	10bfe004 	addi	r2,r2,-128
 402f3a0:	00c00c04 	movi	r3,48
 402f3a4:	10c05426 	beq	r2,r3,402f4f8 <___vfiprintf_internal_r+0x87c>
 402f3a8:	da801e17 	ldw	r10,120(sp)
 402f3ac:	a8bfffc4 	addi	r2,r21,-1
 402f3b0:	a8ffffc5 	stb	r3,-1(r21)
 402f3b4:	50a7c83a 	sub	r19,r10,r2
 402f3b8:	102b883a 	mov	r21,r2
 402f3bc:	003f2f06 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 402f3c0:	21003fcc 	andi	r4,r4,255
 402f3c4:	2003421e 	bne	r4,zero,40300d0 <___vfiprintf_internal_r+0x1454>
 402f3c8:	00800034 	movhi	r2,0
 402f3cc:	10813204 	addi	r2,r2,1224
 402f3d0:	d8802615 	stw	r2,152(sp)
 402f3d4:	a080080c 	andi	r2,r20,32
 402f3d8:	1000aa26 	beq	r2,zero,402f684 <___vfiprintf_internal_r+0xa08>
 402f3dc:	da802217 	ldw	r10,136(sp)
 402f3e0:	54800017 	ldw	r18,0(r10)
 402f3e4:	54c00117 	ldw	r19,4(r10)
 402f3e8:	52800204 	addi	r10,r10,8
 402f3ec:	da802215 	stw	r10,136(sp)
 402f3f0:	a080004c 	andi	r2,r20,1
 402f3f4:	1001d226 	beq	r2,zero,402fb40 <___vfiprintf_internal_r+0xec4>
 402f3f8:	94c4b03a 	or	r2,r18,r19
 402f3fc:	1002351e 	bne	r2,zero,402fcd4 <___vfiprintf_internal_r+0x1058>
 402f400:	d8001d85 	stb	zero,118(sp)
 402f404:	48022216 	blt	r9,zero,402fc90 <___vfiprintf_internal_r+0x1014>
 402f408:	00bfdfc4 	movi	r2,-129
 402f40c:	a0a8703a 	and	r20,r20,r2
 402f410:	003f1506 	br	402f068 <__flash_rwdata_start+0xffff8dfc>
 402f414:	da802217 	ldw	r10,136(sp)
 402f418:	04800044 	movi	r18,1
 402f41c:	d8001d85 	stb	zero,118(sp)
 402f420:	50800017 	ldw	r2,0(r10)
 402f424:	52800104 	addi	r10,r10,4
 402f428:	da802215 	stw	r10,136(sp)
 402f42c:	d8801005 	stb	r2,64(sp)
 402f430:	9027883a 	mov	r19,r18
 402f434:	dd401004 	addi	r21,sp,64
 402f438:	0013883a 	mov	r9,zero
 402f43c:	003f1706 	br	402f09c <__flash_rwdata_start+0xffff8e30>
 402f440:	21003fcc 	andi	r4,r4,255
 402f444:	2003201e 	bne	r4,zero,40300c8 <___vfiprintf_internal_r+0x144c>
 402f448:	a080080c 	andi	r2,r20,32
 402f44c:	10004b26 	beq	r2,zero,402f57c <___vfiprintf_internal_r+0x900>
 402f450:	da802217 	ldw	r10,136(sp)
 402f454:	50800117 	ldw	r2,4(r10)
 402f458:	54800017 	ldw	r18,0(r10)
 402f45c:	52800204 	addi	r10,r10,8
 402f460:	da802215 	stw	r10,136(sp)
 402f464:	1027883a 	mov	r19,r2
 402f468:	10022c16 	blt	r2,zero,402fd1c <___vfiprintf_internal_r+0x10a0>
 402f46c:	df001d83 	ldbu	fp,118(sp)
 402f470:	48007216 	blt	r9,zero,402f63c <___vfiprintf_internal_r+0x9c0>
 402f474:	00ffdfc4 	movi	r3,-129
 402f478:	94c4b03a 	or	r2,r18,r19
 402f47c:	a0e8703a 	and	r20,r20,r3
 402f480:	1000cc26 	beq	r2,zero,402f7b4 <___vfiprintf_internal_r+0xb38>
 402f484:	98021026 	beq	r19,zero,402fcc8 <___vfiprintf_internal_r+0x104c>
 402f488:	dc402415 	stw	r17,144(sp)
 402f48c:	dc002515 	stw	r16,148(sp)
 402f490:	9823883a 	mov	r17,r19
 402f494:	9021883a 	mov	r16,r18
 402f498:	dd401a04 	addi	r21,sp,104
 402f49c:	4825883a 	mov	r18,r9
 402f4a0:	4027883a 	mov	r19,r8
 402f4a4:	8009883a 	mov	r4,r16
 402f4a8:	880b883a 	mov	r5,r17
 402f4ac:	01800284 	movi	r6,10
 402f4b0:	000f883a 	mov	r7,zero
 402f4b4:	40310bc0 	call	40310bc <__umoddi3>
 402f4b8:	10800c04 	addi	r2,r2,48
 402f4bc:	ad7fffc4 	addi	r21,r21,-1
 402f4c0:	8009883a 	mov	r4,r16
 402f4c4:	880b883a 	mov	r5,r17
 402f4c8:	a8800005 	stb	r2,0(r21)
 402f4cc:	01800284 	movi	r6,10
 402f4d0:	000f883a 	mov	r7,zero
 402f4d4:	4030b440 	call	4030b44 <__udivdi3>
 402f4d8:	1021883a 	mov	r16,r2
 402f4dc:	10c4b03a 	or	r2,r2,r3
 402f4e0:	1823883a 	mov	r17,r3
 402f4e4:	103fef1e 	bne	r2,zero,402f4a4 <__flash_rwdata_start+0xffff9238>
 402f4e8:	dc402417 	ldw	r17,144(sp)
 402f4ec:	dc002517 	ldw	r16,148(sp)
 402f4f0:	9013883a 	mov	r9,r18
 402f4f4:	9811883a 	mov	r8,r19
 402f4f8:	da801e17 	ldw	r10,120(sp)
 402f4fc:	5567c83a 	sub	r19,r10,r21
 402f500:	003ede06 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 402f504:	38803fcc 	andi	r2,r7,255
 402f508:	1080201c 	xori	r2,r2,128
 402f50c:	10bfe004 	addi	r2,r2,-128
 402f510:	1002371e 	bne	r2,zero,402fdf0 <___vfiprintf_internal_r+0x1174>
 402f514:	01000044 	movi	r4,1
 402f518:	01c00804 	movi	r7,32
 402f51c:	80c00007 	ldb	r3,0(r16)
 402f520:	003e3506 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f524:	a5000054 	ori	r20,r20,1
 402f528:	80c00007 	ldb	r3,0(r16)
 402f52c:	003e3206 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f530:	a5002014 	ori	r20,r20,128
 402f534:	80c00007 	ldb	r3,0(r16)
 402f538:	003e2f06 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f53c:	8015883a 	mov	r10,r16
 402f540:	0023883a 	mov	r17,zero
 402f544:	18bff404 	addi	r2,r3,-48
 402f548:	50c00007 	ldb	r3,0(r10)
 402f54c:	8c4002a4 	muli	r17,r17,10
 402f550:	84000044 	addi	r16,r16,1
 402f554:	8015883a 	mov	r10,r16
 402f558:	1463883a 	add	r17,r2,r17
 402f55c:	18bff404 	addi	r2,r3,-48
 402f560:	30bff92e 	bgeu	r6,r2,402f548 <__flash_rwdata_start+0xffff92dc>
 402f564:	003e2506 	br	402edfc <__flash_rwdata_start+0xffff8b90>
 402f568:	21003fcc 	andi	r4,r4,255
 402f56c:	2002d41e 	bne	r4,zero,40300c0 <___vfiprintf_internal_r+0x1444>
 402f570:	a5000414 	ori	r20,r20,16
 402f574:	a080080c 	andi	r2,r20,32
 402f578:	103fb51e 	bne	r2,zero,402f450 <__flash_rwdata_start+0xffff91e4>
 402f57c:	a080040c 	andi	r2,r20,16
 402f580:	1001f826 	beq	r2,zero,402fd64 <___vfiprintf_internal_r+0x10e8>
 402f584:	da802217 	ldw	r10,136(sp)
 402f588:	54800017 	ldw	r18,0(r10)
 402f58c:	52800104 	addi	r10,r10,4
 402f590:	da802215 	stw	r10,136(sp)
 402f594:	9027d7fa 	srai	r19,r18,31
 402f598:	9805883a 	mov	r2,r19
 402f59c:	003fb206 	br	402f468 <__flash_rwdata_start+0xffff91fc>
 402f5a0:	21003fcc 	andi	r4,r4,255
 402f5a4:	2002c41e 	bne	r4,zero,40300b8 <___vfiprintf_internal_r+0x143c>
 402f5a8:	a5000414 	ori	r20,r20,16
 402f5ac:	a080080c 	andi	r2,r20,32
 402f5b0:	103f5f1e 	bne	r2,zero,402f330 <__flash_rwdata_start+0xffff90c4>
 402f5b4:	a080040c 	andi	r2,r20,16
 402f5b8:	10020f26 	beq	r2,zero,402fdf8 <___vfiprintf_internal_r+0x117c>
 402f5bc:	da802217 	ldw	r10,136(sp)
 402f5c0:	d8001d85 	stb	zero,118(sp)
 402f5c4:	0027883a 	mov	r19,zero
 402f5c8:	50800104 	addi	r2,r10,4
 402f5cc:	54800017 	ldw	r18,0(r10)
 402f5d0:	48021116 	blt	r9,zero,402fe18 <___vfiprintf_internal_r+0x119c>
 402f5d4:	00ffdfc4 	movi	r3,-129
 402f5d8:	d8802215 	stw	r2,136(sp)
 402f5dc:	a0e8703a 	and	r20,r20,r3
 402f5e0:	903f5e1e 	bne	r18,zero,402f35c <__flash_rwdata_start+0xffff90f0>
 402f5e4:	0039883a 	mov	fp,zero
 402f5e8:	4802a626 	beq	r9,zero,4030084 <___vfiprintf_internal_r+0x1408>
 402f5ec:	0025883a 	mov	r18,zero
 402f5f0:	0027883a 	mov	r19,zero
 402f5f4:	003f5a06 	br	402f360 <__flash_rwdata_start+0xffff90f4>
 402f5f8:	21003fcc 	andi	r4,r4,255
 402f5fc:	20029f1e 	bne	r4,zero,403007c <___vfiprintf_internal_r+0x1400>
 402f600:	a5000414 	ori	r20,r20,16
 402f604:	a080080c 	andi	r2,r20,32
 402f608:	10005e1e 	bne	r2,zero,402f784 <___vfiprintf_internal_r+0xb08>
 402f60c:	a080040c 	andi	r2,r20,16
 402f610:	1001a21e 	bne	r2,zero,402fc9c <___vfiprintf_internal_r+0x1020>
 402f614:	a080100c 	andi	r2,r20,64
 402f618:	d8001d85 	stb	zero,118(sp)
 402f61c:	da802217 	ldw	r10,136(sp)
 402f620:	1002231e 	bne	r2,zero,402feb0 <___vfiprintf_internal_r+0x1234>
 402f624:	50800104 	addi	r2,r10,4
 402f628:	54800017 	ldw	r18,0(r10)
 402f62c:	0027883a 	mov	r19,zero
 402f630:	4801a00e 	bge	r9,zero,402fcb4 <___vfiprintf_internal_r+0x1038>
 402f634:	d8802215 	stw	r2,136(sp)
 402f638:	0039883a 	mov	fp,zero
 402f63c:	94c4b03a 	or	r2,r18,r19
 402f640:	103f901e 	bne	r2,zero,402f484 <__flash_rwdata_start+0xffff9218>
 402f644:	00800044 	movi	r2,1
 402f648:	10803fcc 	andi	r2,r2,255
 402f64c:	00c00044 	movi	r3,1
 402f650:	10c05926 	beq	r2,r3,402f7b8 <___vfiprintf_internal_r+0xb3c>
 402f654:	00c00084 	movi	r3,2
 402f658:	10ffe41e 	bne	r2,r3,402f5ec <__flash_rwdata_start+0xffff9380>
 402f65c:	0025883a 	mov	r18,zero
 402f660:	0027883a 	mov	r19,zero
 402f664:	00013d06 	br	402fb5c <___vfiprintf_internal_r+0xee0>
 402f668:	21003fcc 	andi	r4,r4,255
 402f66c:	2002811e 	bne	r4,zero,4030074 <___vfiprintf_internal_r+0x13f8>
 402f670:	00800034 	movhi	r2,0
 402f674:	10812d04 	addi	r2,r2,1204
 402f678:	d8802615 	stw	r2,152(sp)
 402f67c:	a080080c 	andi	r2,r20,32
 402f680:	103f561e 	bne	r2,zero,402f3dc <__flash_rwdata_start+0xffff9170>
 402f684:	a080040c 	andi	r2,r20,16
 402f688:	1001d126 	beq	r2,zero,402fdd0 <___vfiprintf_internal_r+0x1154>
 402f68c:	da802217 	ldw	r10,136(sp)
 402f690:	0027883a 	mov	r19,zero
 402f694:	54800017 	ldw	r18,0(r10)
 402f698:	52800104 	addi	r10,r10,4
 402f69c:	da802215 	stw	r10,136(sp)
 402f6a0:	003f5306 	br	402f3f0 <__flash_rwdata_start+0xffff9184>
 402f6a4:	da802217 	ldw	r10,136(sp)
 402f6a8:	d8001d85 	stb	zero,118(sp)
 402f6ac:	55400017 	ldw	r21,0(r10)
 402f6b0:	50c00104 	addi	r3,r10,4
 402f6b4:	a8024226 	beq	r21,zero,402ffc0 <___vfiprintf_internal_r+0x1344>
 402f6b8:	48021816 	blt	r9,zero,402ff1c <___vfiprintf_internal_r+0x12a0>
 402f6bc:	480d883a 	mov	r6,r9
 402f6c0:	000b883a 	mov	r5,zero
 402f6c4:	a809883a 	mov	r4,r21
 402f6c8:	d8c02a15 	stw	r3,168(sp)
 402f6cc:	da002b15 	stw	r8,172(sp)
 402f6d0:	da402c15 	stw	r9,176(sp)
 402f6d4:	402cf680 	call	402cf68 <memchr>
 402f6d8:	d8c02a17 	ldw	r3,168(sp)
 402f6dc:	da002b17 	ldw	r8,172(sp)
 402f6e0:	da402c17 	ldw	r9,176(sp)
 402f6e4:	10024826 	beq	r2,zero,4030008 <___vfiprintf_internal_r+0x138c>
 402f6e8:	1567c83a 	sub	r19,r2,r21
 402f6ec:	df001d83 	ldbu	fp,118(sp)
 402f6f0:	d8c02215 	stw	r3,136(sp)
 402f6f4:	0013883a 	mov	r9,zero
 402f6f8:	003e6006 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 402f6fc:	21003fcc 	andi	r4,r4,255
 402f700:	203fc026 	beq	r4,zero,402f604 <__flash_rwdata_start+0xffff9398>
 402f704:	d9c01d85 	stb	r7,118(sp)
 402f708:	003fbe06 	br	402f604 <__flash_rwdata_start+0xffff9398>
 402f70c:	da802217 	ldw	r10,136(sp)
 402f710:	54400017 	ldw	r17,0(r10)
 402f714:	50800104 	addi	r2,r10,4
 402f718:	883e3b16 	blt	r17,zero,402f008 <__flash_rwdata_start+0xffff8d9c>
 402f71c:	d8802215 	stw	r2,136(sp)
 402f720:	80c00007 	ldb	r3,0(r16)
 402f724:	003db406 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f728:	01000044 	movi	r4,1
 402f72c:	01c00ac4 	movi	r7,43
 402f730:	80c00007 	ldb	r3,0(r16)
 402f734:	003db006 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f738:	80c00007 	ldb	r3,0(r16)
 402f73c:	82800044 	addi	r10,r16,1
 402f740:	1b423c26 	beq	r3,r13,4030034 <___vfiprintf_internal_r+0x13b8>
 402f744:	18bff404 	addi	r2,r3,-48
 402f748:	0013883a 	mov	r9,zero
 402f74c:	30822b36 	bltu	r6,r2,402fffc <___vfiprintf_internal_r+0x1380>
 402f750:	50c00007 	ldb	r3,0(r10)
 402f754:	4a4002a4 	muli	r9,r9,10
 402f758:	54000044 	addi	r16,r10,1
 402f75c:	8015883a 	mov	r10,r16
 402f760:	4893883a 	add	r9,r9,r2
 402f764:	18bff404 	addi	r2,r3,-48
 402f768:	30bff92e 	bgeu	r6,r2,402f750 <__flash_rwdata_start+0xffff94e4>
 402f76c:	483da30e 	bge	r9,zero,402edfc <__flash_rwdata_start+0xffff8b90>
 402f770:	027fffc4 	movi	r9,-1
 402f774:	003da106 	br	402edfc <__flash_rwdata_start+0xffff8b90>
 402f778:	a5001014 	ori	r20,r20,64
 402f77c:	80c00007 	ldb	r3,0(r16)
 402f780:	003d9d06 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402f784:	da802217 	ldw	r10,136(sp)
 402f788:	d8001d85 	stb	zero,118(sp)
 402f78c:	50c00204 	addi	r3,r10,8
 402f790:	54800017 	ldw	r18,0(r10)
 402f794:	54c00117 	ldw	r19,4(r10)
 402f798:	4801ca16 	blt	r9,zero,402fec4 <___vfiprintf_internal_r+0x1248>
 402f79c:	013fdfc4 	movi	r4,-129
 402f7a0:	94c4b03a 	or	r2,r18,r19
 402f7a4:	d8c02215 	stw	r3,136(sp)
 402f7a8:	a128703a 	and	r20,r20,r4
 402f7ac:	0039883a 	mov	fp,zero
 402f7b0:	103f341e 	bne	r2,zero,402f484 <__flash_rwdata_start+0xffff9218>
 402f7b4:	483e2e26 	beq	r9,zero,402f070 <__flash_rwdata_start+0xffff8e04>
 402f7b8:	0025883a 	mov	r18,zero
 402f7bc:	94800c04 	addi	r18,r18,48
 402f7c0:	dc8019c5 	stb	r18,103(sp)
 402f7c4:	dcc02717 	ldw	r19,156(sp)
 402f7c8:	dd4019c4 	addi	r21,sp,103
 402f7cc:	003e2b06 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 402f7d0:	21003fcc 	andi	r4,r4,255
 402f7d4:	2002361e 	bne	r4,zero,40300b0 <___vfiprintf_internal_r+0x1434>
 402f7d8:	1801c126 	beq	r3,zero,402fee0 <___vfiprintf_internal_r+0x1264>
 402f7dc:	04800044 	movi	r18,1
 402f7e0:	d8c01005 	stb	r3,64(sp)
 402f7e4:	d8001d85 	stb	zero,118(sp)
 402f7e8:	9027883a 	mov	r19,r18
 402f7ec:	dd401004 	addi	r21,sp,64
 402f7f0:	003f1106 	br	402f438 <__flash_rwdata_start+0xffff91cc>
 402f7f4:	d9402117 	ldw	r5,132(sp)
 402f7f8:	d9002017 	ldw	r4,128(sp)
 402f7fc:	d9801a04 	addi	r6,sp,104
 402f800:	d9c02b15 	stw	r7,172(sp)
 402f804:	dbc02a15 	stw	r15,168(sp)
 402f808:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402f80c:	d9c02b17 	ldw	r7,172(sp)
 402f810:	dbc02a17 	ldw	r15,168(sp)
 402f814:	10006d1e 	bne	r2,zero,402f9cc <___vfiprintf_internal_r+0xd50>
 402f818:	d9801b17 	ldw	r6,108(sp)
 402f81c:	d8801c17 	ldw	r2,112(sp)
 402f820:	d811883a 	mov	r8,sp
 402f824:	31400044 	addi	r5,r6,1
 402f828:	003e3306 	br	402f0f8 <__flash_rwdata_start+0xffff8e8c>
 402f82c:	d9401b17 	ldw	r5,108(sp)
 402f830:	d8801c17 	ldw	r2,112(sp)
 402f834:	29000044 	addi	r4,r5,1
 402f838:	d8c01d87 	ldb	r3,118(sp)
 402f83c:	183e4d26 	beq	r3,zero,402f174 <__flash_rwdata_start+0xffff8f08>
 402f840:	00c00044 	movi	r3,1
 402f844:	d9401d84 	addi	r5,sp,118
 402f848:	10c5883a 	add	r2,r2,r3
 402f84c:	41400015 	stw	r5,0(r8)
 402f850:	40c00115 	stw	r3,4(r8)
 402f854:	d8801c15 	stw	r2,112(sp)
 402f858:	d9001b15 	stw	r4,108(sp)
 402f85c:	014001c4 	movi	r5,7
 402f860:	2900a90e 	bge	r5,r4,402fb08 <___vfiprintf_internal_r+0xe8c>
 402f864:	1000da1e 	bne	r2,zero,402fbd0 <___vfiprintf_internal_r+0xf54>
 402f868:	7000ab1e 	bne	r14,zero,402fb18 <___vfiprintf_internal_r+0xe9c>
 402f86c:	000b883a 	mov	r5,zero
 402f870:	1809883a 	mov	r4,r3
 402f874:	d811883a 	mov	r8,sp
 402f878:	00c02004 	movi	r3,128
 402f87c:	e0fe4d26 	beq	fp,r3,402f1b4 <__flash_rwdata_start+0xffff8f48>
 402f880:	4cf9c83a 	sub	fp,r9,r19
 402f884:	073e7b0e 	bge	zero,fp,402f274 <__flash_rwdata_start+0xffff9008>
 402f888:	01c00404 	movi	r7,16
 402f88c:	3f01900e 	bge	r7,fp,402fed0 <___vfiprintf_internal_r+0x1254>
 402f890:	00c00034 	movhi	r3,0
 402f894:	18c19304 	addi	r3,r3,1612
 402f898:	d8c02415 	stw	r3,144(sp)
 402f89c:	034001c4 	movi	r13,7
 402f8a0:	00000506 	br	402f8b8 <___vfiprintf_internal_r+0xc3c>
 402f8a4:	29000084 	addi	r4,r5,2
 402f8a8:	42000204 	addi	r8,r8,8
 402f8ac:	180b883a 	mov	r5,r3
 402f8b0:	e73ffc04 	addi	fp,fp,-16
 402f8b4:	3f000d0e 	bge	r7,fp,402f8ec <___vfiprintf_internal_r+0xc70>
 402f8b8:	10800404 	addi	r2,r2,16
 402f8bc:	28c00044 	addi	r3,r5,1
 402f8c0:	45c00015 	stw	r23,0(r8)
 402f8c4:	41c00115 	stw	r7,4(r8)
 402f8c8:	d8801c15 	stw	r2,112(sp)
 402f8cc:	d8c01b15 	stw	r3,108(sp)
 402f8d0:	68fff40e 	bge	r13,r3,402f8a4 <__flash_rwdata_start+0xffff9638>
 402f8d4:	1000101e 	bne	r2,zero,402f918 <___vfiprintf_internal_r+0xc9c>
 402f8d8:	e73ffc04 	addi	fp,fp,-16
 402f8dc:	01000044 	movi	r4,1
 402f8e0:	000b883a 	mov	r5,zero
 402f8e4:	d811883a 	mov	r8,sp
 402f8e8:	3f3ff316 	blt	r7,fp,402f8b8 <__flash_rwdata_start+0xffff964c>
 402f8ec:	da802417 	ldw	r10,144(sp)
 402f8f0:	1705883a 	add	r2,r2,fp
 402f8f4:	47000115 	stw	fp,4(r8)
 402f8f8:	42800015 	stw	r10,0(r8)
 402f8fc:	d8801c15 	stw	r2,112(sp)
 402f900:	d9001b15 	stw	r4,108(sp)
 402f904:	00c001c4 	movi	r3,7
 402f908:	19003616 	blt	r3,r4,402f9e4 <___vfiprintf_internal_r+0xd68>
 402f90c:	42000204 	addi	r8,r8,8
 402f910:	21000044 	addi	r4,r4,1
 402f914:	003e5706 	br	402f274 <__flash_rwdata_start+0xffff9008>
 402f918:	d9402117 	ldw	r5,132(sp)
 402f91c:	d9002017 	ldw	r4,128(sp)
 402f920:	d9801a04 	addi	r6,sp,104
 402f924:	d9c02b15 	stw	r7,172(sp)
 402f928:	db402a15 	stw	r13,168(sp)
 402f92c:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402f930:	d9c02b17 	ldw	r7,172(sp)
 402f934:	db402a17 	ldw	r13,168(sp)
 402f938:	1000241e 	bne	r2,zero,402f9cc <___vfiprintf_internal_r+0xd50>
 402f93c:	d9401b17 	ldw	r5,108(sp)
 402f940:	d8801c17 	ldw	r2,112(sp)
 402f944:	d811883a 	mov	r8,sp
 402f948:	29000044 	addi	r4,r5,1
 402f94c:	003fd806 	br	402f8b0 <__flash_rwdata_start+0xffff9644>
 402f950:	d9401b17 	ldw	r5,108(sp)
 402f954:	00c00034 	movhi	r3,0
 402f958:	18c19704 	addi	r3,r3,1628
 402f95c:	d8c02415 	stw	r3,144(sp)
 402f960:	29400044 	addi	r5,r5,1
 402f964:	d8c02417 	ldw	r3,144(sp)
 402f968:	14c5883a 	add	r2,r2,r19
 402f96c:	44c00115 	stw	r19,4(r8)
 402f970:	40c00015 	stw	r3,0(r8)
 402f974:	d8801c15 	stw	r2,112(sp)
 402f978:	d9401b15 	stw	r5,108(sp)
 402f97c:	00c001c4 	movi	r3,7
 402f980:	1940070e 	bge	r3,r5,402f9a0 <___vfiprintf_internal_r+0xd24>
 402f984:	103e4826 	beq	r2,zero,402f2a8 <__flash_rwdata_start+0xffff903c>
 402f988:	d9402117 	ldw	r5,132(sp)
 402f98c:	d9002017 	ldw	r4,128(sp)
 402f990:	d9801a04 	addi	r6,sp,104
 402f994:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402f998:	10000c1e 	bne	r2,zero,402f9cc <___vfiprintf_internal_r+0xd50>
 402f99c:	d8801c17 	ldw	r2,112(sp)
 402f9a0:	8c80010e 	bge	r17,r18,402f9a8 <___vfiprintf_internal_r+0xd2c>
 402f9a4:	9023883a 	mov	r17,r18
 402f9a8:	da802317 	ldw	r10,140(sp)
 402f9ac:	5455883a 	add	r10,r10,r17
 402f9b0:	da802315 	stw	r10,140(sp)
 402f9b4:	103e4126 	beq	r2,zero,402f2bc <__flash_rwdata_start+0xffff9050>
 402f9b8:	d9402117 	ldw	r5,132(sp)
 402f9bc:	d9002017 	ldw	r4,128(sp)
 402f9c0:	d9801a04 	addi	r6,sp,104
 402f9c4:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402f9c8:	103e3c26 	beq	r2,zero,402f2bc <__flash_rwdata_start+0xffff9050>
 402f9cc:	dd002117 	ldw	r20,132(sp)
 402f9d0:	a080030b 	ldhu	r2,12(r20)
 402f9d4:	1080100c 	andi	r2,r2,64
 402f9d8:	1001231e 	bne	r2,zero,402fe68 <___vfiprintf_internal_r+0x11ec>
 402f9dc:	d8802317 	ldw	r2,140(sp)
 402f9e0:	003d7b06 	br	402efd0 <__flash_rwdata_start+0xffff8d64>
 402f9e4:	1000991e 	bne	r2,zero,402fc4c <___vfiprintf_internal_r+0xfd0>
 402f9e8:	00c00044 	movi	r3,1
 402f9ec:	9805883a 	mov	r2,r19
 402f9f0:	dd400015 	stw	r21,0(sp)
 402f9f4:	dcc00115 	stw	r19,4(sp)
 402f9f8:	dcc01c15 	stw	r19,112(sp)
 402f9fc:	d8c01b15 	stw	r3,108(sp)
 402fa00:	d811883a 	mov	r8,sp
 402fa04:	42000204 	addi	r8,r8,8
 402fa08:	a2c0010c 	andi	r11,r20,4
 402fa0c:	583fe426 	beq	r11,zero,402f9a0 <__flash_rwdata_start+0xffff9734>
 402fa10:	8ca7c83a 	sub	r19,r17,r18
 402fa14:	04ffe20e 	bge	zero,r19,402f9a0 <__flash_rwdata_start+0xffff9734>
 402fa18:	01c00404 	movi	r7,16
 402fa1c:	3cffcc0e 	bge	r7,r19,402f950 <__flash_rwdata_start+0xffff96e4>
 402fa20:	02800034 	movhi	r10,0
 402fa24:	52819704 	addi	r10,r10,1628
 402fa28:	d9001b17 	ldw	r4,108(sp)
 402fa2c:	da802415 	stw	r10,144(sp)
 402fa30:	382b883a 	mov	r21,r7
 402fa34:	050001c4 	movi	r20,7
 402fa38:	df002017 	ldw	fp,128(sp)
 402fa3c:	00000506 	br	402fa54 <___vfiprintf_internal_r+0xdd8>
 402fa40:	21400084 	addi	r5,r4,2
 402fa44:	42000204 	addi	r8,r8,8
 402fa48:	1809883a 	mov	r4,r3
 402fa4c:	9cfffc04 	addi	r19,r19,-16
 402fa50:	acffc40e 	bge	r21,r19,402f964 <__flash_rwdata_start+0xffff96f8>
 402fa54:	10800404 	addi	r2,r2,16
 402fa58:	20c00044 	addi	r3,r4,1
 402fa5c:	45800015 	stw	r22,0(r8)
 402fa60:	45400115 	stw	r21,4(r8)
 402fa64:	d8801c15 	stw	r2,112(sp)
 402fa68:	d8c01b15 	stw	r3,108(sp)
 402fa6c:	a0fff40e 	bge	r20,r3,402fa40 <__flash_rwdata_start+0xffff97d4>
 402fa70:	1000041e 	bne	r2,zero,402fa84 <___vfiprintf_internal_r+0xe08>
 402fa74:	01400044 	movi	r5,1
 402fa78:	0009883a 	mov	r4,zero
 402fa7c:	d811883a 	mov	r8,sp
 402fa80:	003ff206 	br	402fa4c <__flash_rwdata_start+0xffff97e0>
 402fa84:	d9402117 	ldw	r5,132(sp)
 402fa88:	d9801a04 	addi	r6,sp,104
 402fa8c:	e009883a 	mov	r4,fp
 402fa90:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fa94:	103fcd1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fa98:	d9001b17 	ldw	r4,108(sp)
 402fa9c:	d8801c17 	ldw	r2,112(sp)
 402faa0:	d811883a 	mov	r8,sp
 402faa4:	21400044 	addi	r5,r4,1
 402faa8:	003fe806 	br	402fa4c <__flash_rwdata_start+0xffff97e0>
 402faac:	d9402117 	ldw	r5,132(sp)
 402fab0:	d9002017 	ldw	r4,128(sp)
 402fab4:	d9801a04 	addi	r6,sp,104
 402fab8:	d9c02b15 	stw	r7,172(sp)
 402fabc:	db402a15 	stw	r13,168(sp)
 402fac0:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fac4:	d9c02b17 	ldw	r7,172(sp)
 402fac8:	db402a17 	ldw	r13,168(sp)
 402facc:	103fbf1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fad0:	d9401b17 	ldw	r5,108(sp)
 402fad4:	d8801c17 	ldw	r2,112(sp)
 402fad8:	d811883a 	mov	r8,sp
 402fadc:	29800044 	addi	r6,r5,1
 402fae0:	003dc406 	br	402f1f4 <__flash_rwdata_start+0xffff8f88>
 402fae4:	1000d21e 	bne	r2,zero,402fe30 <___vfiprintf_internal_r+0x11b4>
 402fae8:	d8c01d87 	ldb	r3,118(sp)
 402faec:	18009526 	beq	r3,zero,402fd44 <___vfiprintf_internal_r+0x10c8>
 402faf0:	00800044 	movi	r2,1
 402faf4:	d8c01d84 	addi	r3,sp,118
 402faf8:	1009883a 	mov	r4,r2
 402fafc:	d8c00015 	stw	r3,0(sp)
 402fb00:	d8800115 	stw	r2,4(sp)
 402fb04:	d811883a 	mov	r8,sp
 402fb08:	200b883a 	mov	r5,r4
 402fb0c:	42000204 	addi	r8,r8,8
 402fb10:	21000044 	addi	r4,r4,1
 402fb14:	003d9706 	br	402f174 <__flash_rwdata_start+0xffff8f08>
 402fb18:	d9001d04 	addi	r4,sp,116
 402fb1c:	00800084 	movi	r2,2
 402fb20:	d9000015 	stw	r4,0(sp)
 402fb24:	d8800115 	stw	r2,4(sp)
 402fb28:	1809883a 	mov	r4,r3
 402fb2c:	d811883a 	mov	r8,sp
 402fb30:	200b883a 	mov	r5,r4
 402fb34:	42000204 	addi	r8,r8,8
 402fb38:	21000044 	addi	r4,r4,1
 402fb3c:	003f4e06 	br	402f878 <__flash_rwdata_start+0xffff960c>
 402fb40:	d8001d85 	stb	zero,118(sp)
 402fb44:	48005016 	blt	r9,zero,402fc88 <___vfiprintf_internal_r+0x100c>
 402fb48:	00ffdfc4 	movi	r3,-129
 402fb4c:	94c4b03a 	or	r2,r18,r19
 402fb50:	a0e8703a 	and	r20,r20,r3
 402fb54:	103d4426 	beq	r2,zero,402f068 <__flash_rwdata_start+0xffff8dfc>
 402fb58:	0039883a 	mov	fp,zero
 402fb5c:	d9002617 	ldw	r4,152(sp)
 402fb60:	dd401a04 	addi	r21,sp,104
 402fb64:	908003cc 	andi	r2,r18,15
 402fb68:	9806973a 	slli	r3,r19,28
 402fb6c:	2085883a 	add	r2,r4,r2
 402fb70:	9024d13a 	srli	r18,r18,4
 402fb74:	10800003 	ldbu	r2,0(r2)
 402fb78:	9826d13a 	srli	r19,r19,4
 402fb7c:	ad7fffc4 	addi	r21,r21,-1
 402fb80:	1ca4b03a 	or	r18,r3,r18
 402fb84:	a8800005 	stb	r2,0(r21)
 402fb88:	94c4b03a 	or	r2,r18,r19
 402fb8c:	103ff51e 	bne	r2,zero,402fb64 <__flash_rwdata_start+0xffff98f8>
 402fb90:	003e5906 	br	402f4f8 <__flash_rwdata_start+0xffff928c>
 402fb94:	d9402117 	ldw	r5,132(sp)
 402fb98:	d9002017 	ldw	r4,128(sp)
 402fb9c:	d9801a04 	addi	r6,sp,104
 402fba0:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fba4:	103f891e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fba8:	d8801c17 	ldw	r2,112(sp)
 402fbac:	d811883a 	mov	r8,sp
 402fbb0:	003f9506 	br	402fa08 <__flash_rwdata_start+0xffff979c>
 402fbb4:	d9402117 	ldw	r5,132(sp)
 402fbb8:	d9002017 	ldw	r4,128(sp)
 402fbbc:	d9801a04 	addi	r6,sp,104
 402fbc0:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fbc4:	103f811e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fbc8:	d811883a 	mov	r8,sp
 402fbcc:	003ced06 	br	402ef84 <__flash_rwdata_start+0xffff8d18>
 402fbd0:	d9402117 	ldw	r5,132(sp)
 402fbd4:	d9002017 	ldw	r4,128(sp)
 402fbd8:	d9801a04 	addi	r6,sp,104
 402fbdc:	da402c15 	stw	r9,176(sp)
 402fbe0:	db802a15 	stw	r14,168(sp)
 402fbe4:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fbe8:	da402c17 	ldw	r9,176(sp)
 402fbec:	db802a17 	ldw	r14,168(sp)
 402fbf0:	103f761e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fbf4:	d9401b17 	ldw	r5,108(sp)
 402fbf8:	d8801c17 	ldw	r2,112(sp)
 402fbfc:	d811883a 	mov	r8,sp
 402fc00:	29000044 	addi	r4,r5,1
 402fc04:	003d5b06 	br	402f174 <__flash_rwdata_start+0xffff8f08>
 402fc08:	d9402117 	ldw	r5,132(sp)
 402fc0c:	d9002017 	ldw	r4,128(sp)
 402fc10:	d9801a04 	addi	r6,sp,104
 402fc14:	da402c15 	stw	r9,176(sp)
 402fc18:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fc1c:	da402c17 	ldw	r9,176(sp)
 402fc20:	103f6a1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fc24:	d9401b17 	ldw	r5,108(sp)
 402fc28:	d8801c17 	ldw	r2,112(sp)
 402fc2c:	d811883a 	mov	r8,sp
 402fc30:	29000044 	addi	r4,r5,1
 402fc34:	003f1006 	br	402f878 <__flash_rwdata_start+0xffff960c>
 402fc38:	1000c31e 	bne	r2,zero,402ff48 <___vfiprintf_internal_r+0x12cc>
 402fc3c:	01000044 	movi	r4,1
 402fc40:	000b883a 	mov	r5,zero
 402fc44:	d811883a 	mov	r8,sp
 402fc48:	003f0d06 	br	402f880 <__flash_rwdata_start+0xffff9614>
 402fc4c:	d9402117 	ldw	r5,132(sp)
 402fc50:	d9002017 	ldw	r4,128(sp)
 402fc54:	d9801a04 	addi	r6,sp,104
 402fc58:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fc5c:	103f5b1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fc60:	d9001b17 	ldw	r4,108(sp)
 402fc64:	d8801c17 	ldw	r2,112(sp)
 402fc68:	d811883a 	mov	r8,sp
 402fc6c:	21000044 	addi	r4,r4,1
 402fc70:	003d8006 	br	402f274 <__flash_rwdata_start+0xffff9008>
 402fc74:	01000034 	movhi	r4,0
 402fc78:	21013204 	addi	r4,r4,1224
 402fc7c:	d9002615 	stw	r4,152(sp)
 402fc80:	d8c02215 	stw	r3,136(sp)
 402fc84:	1029883a 	mov	r20,r2
 402fc88:	94c4b03a 	or	r2,r18,r19
 402fc8c:	103fb21e 	bne	r2,zero,402fb58 <__flash_rwdata_start+0xffff98ec>
 402fc90:	0039883a 	mov	fp,zero
 402fc94:	00800084 	movi	r2,2
 402fc98:	003e6b06 	br	402f648 <__flash_rwdata_start+0xffff93dc>
 402fc9c:	da802217 	ldw	r10,136(sp)
 402fca0:	d8001d85 	stb	zero,118(sp)
 402fca4:	0027883a 	mov	r19,zero
 402fca8:	50800104 	addi	r2,r10,4
 402fcac:	54800017 	ldw	r18,0(r10)
 402fcb0:	483e6016 	blt	r9,zero,402f634 <__flash_rwdata_start+0xffff93c8>
 402fcb4:	00ffdfc4 	movi	r3,-129
 402fcb8:	d8802215 	stw	r2,136(sp)
 402fcbc:	a0e8703a 	and	r20,r20,r3
 402fcc0:	0039883a 	mov	fp,zero
 402fcc4:	903ebb26 	beq	r18,zero,402f7b4 <__flash_rwdata_start+0xffff9548>
 402fcc8:	00800244 	movi	r2,9
 402fccc:	14bdee36 	bltu	r2,r18,402f488 <__flash_rwdata_start+0xffff921c>
 402fcd0:	003eba06 	br	402f7bc <__flash_rwdata_start+0xffff9550>
 402fcd4:	00800c04 	movi	r2,48
 402fcd8:	d8c01d45 	stb	r3,117(sp)
 402fcdc:	d8801d05 	stb	r2,116(sp)
 402fce0:	d8001d85 	stb	zero,118(sp)
 402fce4:	a0c00094 	ori	r3,r20,2
 402fce8:	4800a916 	blt	r9,zero,402ff90 <___vfiprintf_internal_r+0x1314>
 402fcec:	00bfdfc4 	movi	r2,-129
 402fcf0:	a096703a 	and	r11,r20,r2
 402fcf4:	5d000094 	ori	r20,r11,2
 402fcf8:	0039883a 	mov	fp,zero
 402fcfc:	003f9706 	br	402fb5c <__flash_rwdata_start+0xffff98f0>
 402fd00:	8025883a 	mov	r18,r16
 402fd04:	003c2e06 	br	402edc0 <__flash_rwdata_start+0xffff8b54>
 402fd08:	00800034 	movhi	r2,0
 402fd0c:	10813204 	addi	r2,r2,1224
 402fd10:	0039883a 	mov	fp,zero
 402fd14:	d8802615 	stw	r2,152(sp)
 402fd18:	003f9006 	br	402fb5c <__flash_rwdata_start+0xffff98f0>
 402fd1c:	04a5c83a 	sub	r18,zero,r18
 402fd20:	07000b44 	movi	fp,45
 402fd24:	9004c03a 	cmpne	r2,r18,zero
 402fd28:	04e7c83a 	sub	r19,zero,r19
 402fd2c:	df001d85 	stb	fp,118(sp)
 402fd30:	98a7c83a 	sub	r19,r19,r2
 402fd34:	48009f16 	blt	r9,zero,402ffb4 <___vfiprintf_internal_r+0x1338>
 402fd38:	00bfdfc4 	movi	r2,-129
 402fd3c:	a0a8703a 	and	r20,r20,r2
 402fd40:	003dd006 	br	402f484 <__flash_rwdata_start+0xffff9218>
 402fd44:	70004c26 	beq	r14,zero,402fe78 <___vfiprintf_internal_r+0x11fc>
 402fd48:	00800084 	movi	r2,2
 402fd4c:	d8c01d04 	addi	r3,sp,116
 402fd50:	d8c00015 	stw	r3,0(sp)
 402fd54:	d8800115 	stw	r2,4(sp)
 402fd58:	01000044 	movi	r4,1
 402fd5c:	d811883a 	mov	r8,sp
 402fd60:	003f7306 	br	402fb30 <__flash_rwdata_start+0xffff98c4>
 402fd64:	a080100c 	andi	r2,r20,64
 402fd68:	da802217 	ldw	r10,136(sp)
 402fd6c:	103e0626 	beq	r2,zero,402f588 <__flash_rwdata_start+0xffff931c>
 402fd70:	5480000f 	ldh	r18,0(r10)
 402fd74:	52800104 	addi	r10,r10,4
 402fd78:	da802215 	stw	r10,136(sp)
 402fd7c:	9027d7fa 	srai	r19,r18,31
 402fd80:	9805883a 	mov	r2,r19
 402fd84:	003db806 	br	402f468 <__flash_rwdata_start+0xffff91fc>
 402fd88:	a080040c 	andi	r2,r20,16
 402fd8c:	1000091e 	bne	r2,zero,402fdb4 <___vfiprintf_internal_r+0x1138>
 402fd90:	a2c0100c 	andi	r11,r20,64
 402fd94:	58000726 	beq	r11,zero,402fdb4 <___vfiprintf_internal_r+0x1138>
 402fd98:	da802217 	ldw	r10,136(sp)
 402fd9c:	50800017 	ldw	r2,0(r10)
 402fda0:	52800104 	addi	r10,r10,4
 402fda4:	da802215 	stw	r10,136(sp)
 402fda8:	da802317 	ldw	r10,140(sp)
 402fdac:	1280000d 	sth	r10,0(r2)
 402fdb0:	003be706 	br	402ed50 <__flash_rwdata_start+0xffff8ae4>
 402fdb4:	da802217 	ldw	r10,136(sp)
 402fdb8:	50800017 	ldw	r2,0(r10)
 402fdbc:	52800104 	addi	r10,r10,4
 402fdc0:	da802215 	stw	r10,136(sp)
 402fdc4:	da802317 	ldw	r10,140(sp)
 402fdc8:	12800015 	stw	r10,0(r2)
 402fdcc:	003be006 	br	402ed50 <__flash_rwdata_start+0xffff8ae4>
 402fdd0:	a080100c 	andi	r2,r20,64
 402fdd4:	da802217 	ldw	r10,136(sp)
 402fdd8:	10003026 	beq	r2,zero,402fe9c <___vfiprintf_internal_r+0x1220>
 402fddc:	5480000b 	ldhu	r18,0(r10)
 402fde0:	52800104 	addi	r10,r10,4
 402fde4:	0027883a 	mov	r19,zero
 402fde8:	da802215 	stw	r10,136(sp)
 402fdec:	003d8006 	br	402f3f0 <__flash_rwdata_start+0xffff9184>
 402fdf0:	80c00007 	ldb	r3,0(r16)
 402fdf4:	003c0006 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402fdf8:	a080100c 	andi	r2,r20,64
 402fdfc:	d8001d85 	stb	zero,118(sp)
 402fe00:	da802217 	ldw	r10,136(sp)
 402fe04:	1000201e 	bne	r2,zero,402fe88 <___vfiprintf_internal_r+0x120c>
 402fe08:	50800104 	addi	r2,r10,4
 402fe0c:	54800017 	ldw	r18,0(r10)
 402fe10:	0027883a 	mov	r19,zero
 402fe14:	483def0e 	bge	r9,zero,402f5d4 <__flash_rwdata_start+0xffff9368>
 402fe18:	94c6b03a 	or	r3,r18,r19
 402fe1c:	d8802215 	stw	r2,136(sp)
 402fe20:	183d4e1e 	bne	r3,zero,402f35c <__flash_rwdata_start+0xffff90f0>
 402fe24:	0039883a 	mov	fp,zero
 402fe28:	0005883a 	mov	r2,zero
 402fe2c:	003e0606 	br	402f648 <__flash_rwdata_start+0xffff93dc>
 402fe30:	d9402117 	ldw	r5,132(sp)
 402fe34:	d9002017 	ldw	r4,128(sp)
 402fe38:	d9801a04 	addi	r6,sp,104
 402fe3c:	da402c15 	stw	r9,176(sp)
 402fe40:	db802a15 	stw	r14,168(sp)
 402fe44:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fe48:	da402c17 	ldw	r9,176(sp)
 402fe4c:	db802a17 	ldw	r14,168(sp)
 402fe50:	103ede1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402fe54:	d9401b17 	ldw	r5,108(sp)
 402fe58:	d8801c17 	ldw	r2,112(sp)
 402fe5c:	d811883a 	mov	r8,sp
 402fe60:	29000044 	addi	r4,r5,1
 402fe64:	003e7406 	br	402f838 <__flash_rwdata_start+0xffff95cc>
 402fe68:	00bfffc4 	movi	r2,-1
 402fe6c:	003c5806 	br	402efd0 <__flash_rwdata_start+0xffff8d64>
 402fe70:	d811883a 	mov	r8,sp
 402fe74:	003ee806 	br	402fa18 <__flash_rwdata_start+0xffff97ac>
 402fe78:	000b883a 	mov	r5,zero
 402fe7c:	01000044 	movi	r4,1
 402fe80:	d811883a 	mov	r8,sp
 402fe84:	003e7c06 	br	402f878 <__flash_rwdata_start+0xffff960c>
 402fe88:	50800104 	addi	r2,r10,4
 402fe8c:	5480000b 	ldhu	r18,0(r10)
 402fe90:	0027883a 	mov	r19,zero
 402fe94:	483dcf0e 	bge	r9,zero,402f5d4 <__flash_rwdata_start+0xffff9368>
 402fe98:	003fdf06 	br	402fe18 <__flash_rwdata_start+0xffff9bac>
 402fe9c:	54800017 	ldw	r18,0(r10)
 402fea0:	52800104 	addi	r10,r10,4
 402fea4:	0027883a 	mov	r19,zero
 402fea8:	da802215 	stw	r10,136(sp)
 402feac:	003d5006 	br	402f3f0 <__flash_rwdata_start+0xffff9184>
 402feb0:	50800104 	addi	r2,r10,4
 402feb4:	5480000b 	ldhu	r18,0(r10)
 402feb8:	0027883a 	mov	r19,zero
 402febc:	483f7d0e 	bge	r9,zero,402fcb4 <__flash_rwdata_start+0xffff9a48>
 402fec0:	003ddc06 	br	402f634 <__flash_rwdata_start+0xffff93c8>
 402fec4:	d8c02215 	stw	r3,136(sp)
 402fec8:	0039883a 	mov	fp,zero
 402fecc:	003ddb06 	br	402f63c <__flash_rwdata_start+0xffff93d0>
 402fed0:	02800034 	movhi	r10,0
 402fed4:	52819304 	addi	r10,r10,1612
 402fed8:	da802415 	stw	r10,144(sp)
 402fedc:	003e8306 	br	402f8ec <__flash_rwdata_start+0xffff9680>
 402fee0:	d8801c17 	ldw	r2,112(sp)
 402fee4:	dd002117 	ldw	r20,132(sp)
 402fee8:	103eb926 	beq	r2,zero,402f9d0 <__flash_rwdata_start+0xffff9764>
 402feec:	d9002017 	ldw	r4,128(sp)
 402fef0:	d9801a04 	addi	r6,sp,104
 402fef4:	a00b883a 	mov	r5,r20
 402fef8:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402fefc:	003eb406 	br	402f9d0 <__flash_rwdata_start+0xffff9764>
 402ff00:	80c00043 	ldbu	r3,1(r16)
 402ff04:	a5000814 	ori	r20,r20,32
 402ff08:	84000044 	addi	r16,r16,1
 402ff0c:	18c03fcc 	andi	r3,r3,255
 402ff10:	18c0201c 	xori	r3,r3,128
 402ff14:	18ffe004 	addi	r3,r3,-128
 402ff18:	003bb706 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 402ff1c:	a809883a 	mov	r4,r21
 402ff20:	d8c02a15 	stw	r3,168(sp)
 402ff24:	da002b15 	stw	r8,172(sp)
 402ff28:	4027ecc0 	call	4027ecc <strlen>
 402ff2c:	d8c02a17 	ldw	r3,168(sp)
 402ff30:	1027883a 	mov	r19,r2
 402ff34:	df001d83 	ldbu	fp,118(sp)
 402ff38:	d8c02215 	stw	r3,136(sp)
 402ff3c:	0013883a 	mov	r9,zero
 402ff40:	da002b17 	ldw	r8,172(sp)
 402ff44:	003c4d06 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 402ff48:	d9402117 	ldw	r5,132(sp)
 402ff4c:	d9002017 	ldw	r4,128(sp)
 402ff50:	d9801a04 	addi	r6,sp,104
 402ff54:	da402c15 	stw	r9,176(sp)
 402ff58:	402eb680 	call	402eb68 <__sprint_r.part.0>
 402ff5c:	da402c17 	ldw	r9,176(sp)
 402ff60:	103e9a1e 	bne	r2,zero,402f9cc <__flash_rwdata_start+0xffff9760>
 402ff64:	d9401b17 	ldw	r5,108(sp)
 402ff68:	d8801c17 	ldw	r2,112(sp)
 402ff6c:	d811883a 	mov	r8,sp
 402ff70:	29000044 	addi	r4,r5,1
 402ff74:	003e4206 	br	402f880 <__flash_rwdata_start+0xffff9614>
 402ff78:	d9401b17 	ldw	r5,108(sp)
 402ff7c:	01000034 	movhi	r4,0
 402ff80:	21019704 	addi	r4,r4,1628
 402ff84:	d9002415 	stw	r4,144(sp)
 402ff88:	29400044 	addi	r5,r5,1
 402ff8c:	003c6d06 	br	402f144 <__flash_rwdata_start+0xffff8ed8>
 402ff90:	0039883a 	mov	fp,zero
 402ff94:	00800084 	movi	r2,2
 402ff98:	10803fcc 	andi	r2,r2,255
 402ff9c:	01000044 	movi	r4,1
 402ffa0:	11001e26 	beq	r2,r4,403001c <___vfiprintf_internal_r+0x13a0>
 402ffa4:	01000084 	movi	r4,2
 402ffa8:	11001e1e 	bne	r2,r4,4030024 <___vfiprintf_internal_r+0x13a8>
 402ffac:	1829883a 	mov	r20,r3
 402ffb0:	003eea06 	br	402fb5c <__flash_rwdata_start+0xffff98f0>
 402ffb4:	a007883a 	mov	r3,r20
 402ffb8:	00800044 	movi	r2,1
 402ffbc:	003ff606 	br	402ff98 <__flash_rwdata_start+0xffff9d2c>
 402ffc0:	00800184 	movi	r2,6
 402ffc4:	1240012e 	bgeu	r2,r9,402ffcc <___vfiprintf_internal_r+0x1350>
 402ffc8:	1013883a 	mov	r9,r2
 402ffcc:	4827883a 	mov	r19,r9
 402ffd0:	4825883a 	mov	r18,r9
 402ffd4:	48001516 	blt	r9,zero,403002c <___vfiprintf_internal_r+0x13b0>
 402ffd8:	05400034 	movhi	r21,0
 402ffdc:	d8c02215 	stw	r3,136(sp)
 402ffe0:	ad413704 	addi	r21,r21,1244
 402ffe4:	003d1406 	br	402f438 <__flash_rwdata_start+0xffff91cc>
 402ffe8:	02800034 	movhi	r10,0
 402ffec:	52819304 	addi	r10,r10,1612
 402fff0:	da802415 	stw	r10,144(sp)
 402fff4:	200d883a 	mov	r6,r4
 402fff8:	003c9106 	br	402f240 <__flash_rwdata_start+0xffff8fd4>
 402fffc:	5021883a 	mov	r16,r10
 4030000:	0013883a 	mov	r9,zero
 4030004:	003b7d06 	br	402edfc <__flash_rwdata_start+0xffff8b90>
 4030008:	4827883a 	mov	r19,r9
 403000c:	df001d83 	ldbu	fp,118(sp)
 4030010:	d8c02215 	stw	r3,136(sp)
 4030014:	0013883a 	mov	r9,zero
 4030018:	003c1806 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 403001c:	1829883a 	mov	r20,r3
 4030020:	003d1806 	br	402f484 <__flash_rwdata_start+0xffff9218>
 4030024:	1829883a 	mov	r20,r3
 4030028:	003ccd06 	br	402f360 <__flash_rwdata_start+0xffff90f4>
 403002c:	0025883a 	mov	r18,zero
 4030030:	003fe906 	br	402ffd8 <__flash_rwdata_start+0xffff9d6c>
 4030034:	d8802217 	ldw	r2,136(sp)
 4030038:	80c00043 	ldbu	r3,1(r16)
 403003c:	5021883a 	mov	r16,r10
 4030040:	12400017 	ldw	r9,0(r2)
 4030044:	10800104 	addi	r2,r2,4
 4030048:	d8802215 	stw	r2,136(sp)
 403004c:	483faf0e 	bge	r9,zero,402ff0c <__flash_rwdata_start+0xffff9ca0>
 4030050:	18c03fcc 	andi	r3,r3,255
 4030054:	18c0201c 	xori	r3,r3,128
 4030058:	027fffc4 	movi	r9,-1
 403005c:	18ffe004 	addi	r3,r3,-128
 4030060:	003b6506 	br	402edf8 <__flash_rwdata_start+0xffff8b8c>
 4030064:	d9c01d85 	stb	r7,118(sp)
 4030068:	003ca006 	br	402f2ec <__flash_rwdata_start+0xffff9080>
 403006c:	d9c01d85 	stb	r7,118(sp)
 4030070:	003cad06 	br	402f328 <__flash_rwdata_start+0xffff90bc>
 4030074:	d9c01d85 	stb	r7,118(sp)
 4030078:	003d7d06 	br	402f670 <__flash_rwdata_start+0xffff9404>
 403007c:	d9c01d85 	stb	r7,118(sp)
 4030080:	003d5f06 	br	402f600 <__flash_rwdata_start+0xffff9394>
 4030084:	a080004c 	andi	r2,r20,1
 4030088:	0039883a 	mov	fp,zero
 403008c:	10000526 	beq	r2,zero,40300a4 <___vfiprintf_internal_r+0x1428>
 4030090:	00800c04 	movi	r2,48
 4030094:	d88019c5 	stb	r2,103(sp)
 4030098:	dcc02717 	ldw	r19,156(sp)
 403009c:	dd4019c4 	addi	r21,sp,103
 40300a0:	003bf606 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 40300a4:	0027883a 	mov	r19,zero
 40300a8:	dd401a04 	addi	r21,sp,104
 40300ac:	003bf306 	br	402f07c <__flash_rwdata_start+0xffff8e10>
 40300b0:	d9c01d85 	stb	r7,118(sp)
 40300b4:	003dc806 	br	402f7d8 <__flash_rwdata_start+0xffff956c>
 40300b8:	d9c01d85 	stb	r7,118(sp)
 40300bc:	003d3a06 	br	402f5a8 <__flash_rwdata_start+0xffff933c>
 40300c0:	d9c01d85 	stb	r7,118(sp)
 40300c4:	003d2a06 	br	402f570 <__flash_rwdata_start+0xffff9304>
 40300c8:	d9c01d85 	stb	r7,118(sp)
 40300cc:	003cde06 	br	402f448 <__flash_rwdata_start+0xffff91dc>
 40300d0:	d9c01d85 	stb	r7,118(sp)
 40300d4:	003cbc06 	br	402f3c8 <__flash_rwdata_start+0xffff915c>

040300d8 <__vfiprintf_internal>:
 40300d8:	00800034 	movhi	r2,0
 40300dc:	10886404 	addi	r2,r2,8592
 40300e0:	300f883a 	mov	r7,r6
 40300e4:	280d883a 	mov	r6,r5
 40300e8:	200b883a 	mov	r5,r4
 40300ec:	11000017 	ldw	r4,0(r2)
 40300f0:	402ec7c1 	jmpi	402ec7c <___vfiprintf_internal_r>

040300f4 <__sbprintf>:
 40300f4:	2880030b 	ldhu	r2,12(r5)
 40300f8:	2ac01917 	ldw	r11,100(r5)
 40300fc:	2a80038b 	ldhu	r10,14(r5)
 4030100:	2a400717 	ldw	r9,28(r5)
 4030104:	2a000917 	ldw	r8,36(r5)
 4030108:	defee204 	addi	sp,sp,-1144
 403010c:	00c10004 	movi	r3,1024
 4030110:	dc011a15 	stw	r16,1128(sp)
 4030114:	10bfff4c 	andi	r2,r2,65533
 4030118:	2821883a 	mov	r16,r5
 403011c:	d8cb883a 	add	r5,sp,r3
 4030120:	dc811c15 	stw	r18,1136(sp)
 4030124:	dc411b15 	stw	r17,1132(sp)
 4030128:	dfc11d15 	stw	ra,1140(sp)
 403012c:	2025883a 	mov	r18,r4
 4030130:	d881030d 	sth	r2,1036(sp)
 4030134:	dac11915 	stw	r11,1124(sp)
 4030138:	da81038d 	sth	r10,1038(sp)
 403013c:	da410715 	stw	r9,1052(sp)
 4030140:	da010915 	stw	r8,1060(sp)
 4030144:	dec10015 	stw	sp,1024(sp)
 4030148:	dec10415 	stw	sp,1040(sp)
 403014c:	d8c10215 	stw	r3,1032(sp)
 4030150:	d8c10515 	stw	r3,1044(sp)
 4030154:	d8010615 	stw	zero,1048(sp)
 4030158:	402ec7c0 	call	402ec7c <___vfiprintf_internal_r>
 403015c:	1023883a 	mov	r17,r2
 4030160:	10000416 	blt	r2,zero,4030174 <__sbprintf+0x80>
 4030164:	d9410004 	addi	r5,sp,1024
 4030168:	9009883a 	mov	r4,r18
 403016c:	402be2c0 	call	402be2c <_fflush_r>
 4030170:	10000d1e 	bne	r2,zero,40301a8 <__sbprintf+0xb4>
 4030174:	d881030b 	ldhu	r2,1036(sp)
 4030178:	1080100c 	andi	r2,r2,64
 403017c:	10000326 	beq	r2,zero,403018c <__sbprintf+0x98>
 4030180:	8080030b 	ldhu	r2,12(r16)
 4030184:	10801014 	ori	r2,r2,64
 4030188:	8080030d 	sth	r2,12(r16)
 403018c:	8805883a 	mov	r2,r17
 4030190:	dfc11d17 	ldw	ra,1140(sp)
 4030194:	dc811c17 	ldw	r18,1136(sp)
 4030198:	dc411b17 	ldw	r17,1132(sp)
 403019c:	dc011a17 	ldw	r16,1128(sp)
 40301a0:	dec11e04 	addi	sp,sp,1144
 40301a4:	f800283a 	ret
 40301a8:	047fffc4 	movi	r17,-1
 40301ac:	003ff106 	br	4030174 <__flash_rwdata_start+0xffff9f08>

040301b0 <__swbuf_r>:
 40301b0:	defffb04 	addi	sp,sp,-20
 40301b4:	dcc00315 	stw	r19,12(sp)
 40301b8:	dc800215 	stw	r18,8(sp)
 40301bc:	dc000015 	stw	r16,0(sp)
 40301c0:	dfc00415 	stw	ra,16(sp)
 40301c4:	dc400115 	stw	r17,4(sp)
 40301c8:	2025883a 	mov	r18,r4
 40301cc:	2827883a 	mov	r19,r5
 40301d0:	3021883a 	mov	r16,r6
 40301d4:	20000226 	beq	r4,zero,40301e0 <__swbuf_r+0x30>
 40301d8:	20800e17 	ldw	r2,56(r4)
 40301dc:	10004226 	beq	r2,zero,40302e8 <__swbuf_r+0x138>
 40301e0:	80800617 	ldw	r2,24(r16)
 40301e4:	8100030b 	ldhu	r4,12(r16)
 40301e8:	80800215 	stw	r2,8(r16)
 40301ec:	2080020c 	andi	r2,r4,8
 40301f0:	10003626 	beq	r2,zero,40302cc <__swbuf_r+0x11c>
 40301f4:	80c00417 	ldw	r3,16(r16)
 40301f8:	18003426 	beq	r3,zero,40302cc <__swbuf_r+0x11c>
 40301fc:	2088000c 	andi	r2,r4,8192
 4030200:	9c403fcc 	andi	r17,r19,255
 4030204:	10001a26 	beq	r2,zero,4030270 <__swbuf_r+0xc0>
 4030208:	80800017 	ldw	r2,0(r16)
 403020c:	81000517 	ldw	r4,20(r16)
 4030210:	10c7c83a 	sub	r3,r2,r3
 4030214:	1900200e 	bge	r3,r4,4030298 <__swbuf_r+0xe8>
 4030218:	18c00044 	addi	r3,r3,1
 403021c:	81000217 	ldw	r4,8(r16)
 4030220:	11400044 	addi	r5,r2,1
 4030224:	81400015 	stw	r5,0(r16)
 4030228:	213fffc4 	addi	r4,r4,-1
 403022c:	81000215 	stw	r4,8(r16)
 4030230:	14c00005 	stb	r19,0(r2)
 4030234:	80800517 	ldw	r2,20(r16)
 4030238:	10c01e26 	beq	r2,r3,40302b4 <__swbuf_r+0x104>
 403023c:	8080030b 	ldhu	r2,12(r16)
 4030240:	1080004c 	andi	r2,r2,1
 4030244:	10000226 	beq	r2,zero,4030250 <__swbuf_r+0xa0>
 4030248:	00800284 	movi	r2,10
 403024c:	88801926 	beq	r17,r2,40302b4 <__swbuf_r+0x104>
 4030250:	8805883a 	mov	r2,r17
 4030254:	dfc00417 	ldw	ra,16(sp)
 4030258:	dcc00317 	ldw	r19,12(sp)
 403025c:	dc800217 	ldw	r18,8(sp)
 4030260:	dc400117 	ldw	r17,4(sp)
 4030264:	dc000017 	ldw	r16,0(sp)
 4030268:	dec00504 	addi	sp,sp,20
 403026c:	f800283a 	ret
 4030270:	81401917 	ldw	r5,100(r16)
 4030274:	00b7ffc4 	movi	r2,-8193
 4030278:	21080014 	ori	r4,r4,8192
 403027c:	2884703a 	and	r2,r5,r2
 4030280:	80801915 	stw	r2,100(r16)
 4030284:	80800017 	ldw	r2,0(r16)
 4030288:	8100030d 	sth	r4,12(r16)
 403028c:	81000517 	ldw	r4,20(r16)
 4030290:	10c7c83a 	sub	r3,r2,r3
 4030294:	193fe016 	blt	r3,r4,4030218 <__flash_rwdata_start+0xffff9fac>
 4030298:	800b883a 	mov	r5,r16
 403029c:	9009883a 	mov	r4,r18
 40302a0:	402be2c0 	call	402be2c <_fflush_r>
 40302a4:	1000071e 	bne	r2,zero,40302c4 <__swbuf_r+0x114>
 40302a8:	80800017 	ldw	r2,0(r16)
 40302ac:	00c00044 	movi	r3,1
 40302b0:	003fda06 	br	403021c <__flash_rwdata_start+0xffff9fb0>
 40302b4:	800b883a 	mov	r5,r16
 40302b8:	9009883a 	mov	r4,r18
 40302bc:	402be2c0 	call	402be2c <_fflush_r>
 40302c0:	103fe326 	beq	r2,zero,4030250 <__flash_rwdata_start+0xffff9fe4>
 40302c4:	00bfffc4 	movi	r2,-1
 40302c8:	003fe206 	br	4030254 <__flash_rwdata_start+0xffff9fe8>
 40302cc:	800b883a 	mov	r5,r16
 40302d0:	9009883a 	mov	r4,r18
 40302d4:	402a2340 	call	402a234 <__swsetup_r>
 40302d8:	103ffa1e 	bne	r2,zero,40302c4 <__flash_rwdata_start+0xffffa058>
 40302dc:	8100030b 	ldhu	r4,12(r16)
 40302e0:	80c00417 	ldw	r3,16(r16)
 40302e4:	003fc506 	br	40301fc <__flash_rwdata_start+0xffff9f90>
 40302e8:	402c2080 	call	402c208 <__sinit>
 40302ec:	003fbc06 	br	40301e0 <__flash_rwdata_start+0xffff9f74>

040302f0 <__swbuf>:
 40302f0:	00800034 	movhi	r2,0
 40302f4:	10886404 	addi	r2,r2,8592
 40302f8:	280d883a 	mov	r6,r5
 40302fc:	200b883a 	mov	r5,r4
 4030300:	11000017 	ldw	r4,0(r2)
 4030304:	40301b01 	jmpi	40301b0 <__swbuf_r>

04030308 <_write_r>:
 4030308:	defffd04 	addi	sp,sp,-12
 403030c:	2805883a 	mov	r2,r5
 4030310:	dc000015 	stw	r16,0(sp)
 4030314:	04000034 	movhi	r16,0
 4030318:	dc400115 	stw	r17,4(sp)
 403031c:	300b883a 	mov	r5,r6
 4030320:	84087a04 	addi	r16,r16,8680
 4030324:	2023883a 	mov	r17,r4
 4030328:	380d883a 	mov	r6,r7
 403032c:	1009883a 	mov	r4,r2
 4030330:	dfc00215 	stw	ra,8(sp)
 4030334:	80000015 	stw	zero,0(r16)
 4030338:	4033de40 	call	4033de4 <write>
 403033c:	00ffffc4 	movi	r3,-1
 4030340:	10c00526 	beq	r2,r3,4030358 <_write_r+0x50>
 4030344:	dfc00217 	ldw	ra,8(sp)
 4030348:	dc400117 	ldw	r17,4(sp)
 403034c:	dc000017 	ldw	r16,0(sp)
 4030350:	dec00304 	addi	sp,sp,12
 4030354:	f800283a 	ret
 4030358:	80c00017 	ldw	r3,0(r16)
 403035c:	183ff926 	beq	r3,zero,4030344 <__flash_rwdata_start+0xffffa0d8>
 4030360:	88c00015 	stw	r3,0(r17)
 4030364:	003ff706 	br	4030344 <__flash_rwdata_start+0xffffa0d8>

04030368 <_close_r>:
 4030368:	defffd04 	addi	sp,sp,-12
 403036c:	dc000015 	stw	r16,0(sp)
 4030370:	04000034 	movhi	r16,0
 4030374:	dc400115 	stw	r17,4(sp)
 4030378:	84087a04 	addi	r16,r16,8680
 403037c:	2023883a 	mov	r17,r4
 4030380:	2809883a 	mov	r4,r5
 4030384:	dfc00215 	stw	ra,8(sp)
 4030388:	80000015 	stw	zero,0(r16)
 403038c:	40332700 	call	4033270 <close>
 4030390:	00ffffc4 	movi	r3,-1
 4030394:	10c00526 	beq	r2,r3,40303ac <_close_r+0x44>
 4030398:	dfc00217 	ldw	ra,8(sp)
 403039c:	dc400117 	ldw	r17,4(sp)
 40303a0:	dc000017 	ldw	r16,0(sp)
 40303a4:	dec00304 	addi	sp,sp,12
 40303a8:	f800283a 	ret
 40303ac:	80c00017 	ldw	r3,0(r16)
 40303b0:	183ff926 	beq	r3,zero,4030398 <__flash_rwdata_start+0xffffa12c>
 40303b4:	88c00015 	stw	r3,0(r17)
 40303b8:	003ff706 	br	4030398 <__flash_rwdata_start+0xffffa12c>

040303bc <_calloc_r>:
 40303bc:	298b383a 	mul	r5,r5,r6
 40303c0:	defffe04 	addi	sp,sp,-8
 40303c4:	dfc00115 	stw	ra,4(sp)
 40303c8:	dc000015 	stw	r16,0(sp)
 40303cc:	4026f880 	call	4026f88 <_malloc_r>
 40303d0:	10002926 	beq	r2,zero,4030478 <_calloc_r+0xbc>
 40303d4:	11bfff17 	ldw	r6,-4(r2)
 40303d8:	1021883a 	mov	r16,r2
 40303dc:	00bfff04 	movi	r2,-4
 40303e0:	308c703a 	and	r6,r6,r2
 40303e4:	00c00904 	movi	r3,36
 40303e8:	308d883a 	add	r6,r6,r2
 40303ec:	19801636 	bltu	r3,r6,4030448 <_calloc_r+0x8c>
 40303f0:	008004c4 	movi	r2,19
 40303f4:	11800b2e 	bgeu	r2,r6,4030424 <_calloc_r+0x68>
 40303f8:	80000015 	stw	zero,0(r16)
 40303fc:	80000115 	stw	zero,4(r16)
 4030400:	008006c4 	movi	r2,27
 4030404:	11801a2e 	bgeu	r2,r6,4030470 <_calloc_r+0xb4>
 4030408:	80000215 	stw	zero,8(r16)
 403040c:	80000315 	stw	zero,12(r16)
 4030410:	30c0151e 	bne	r6,r3,4030468 <_calloc_r+0xac>
 4030414:	80000415 	stw	zero,16(r16)
 4030418:	80800604 	addi	r2,r16,24
 403041c:	80000515 	stw	zero,20(r16)
 4030420:	00000106 	br	4030428 <_calloc_r+0x6c>
 4030424:	8005883a 	mov	r2,r16
 4030428:	10000015 	stw	zero,0(r2)
 403042c:	10000115 	stw	zero,4(r2)
 4030430:	10000215 	stw	zero,8(r2)
 4030434:	8005883a 	mov	r2,r16
 4030438:	dfc00117 	ldw	ra,4(sp)
 403043c:	dc000017 	ldw	r16,0(sp)
 4030440:	dec00204 	addi	sp,sp,8
 4030444:	f800283a 	ret
 4030448:	000b883a 	mov	r5,zero
 403044c:	8009883a 	mov	r4,r16
 4030450:	40277940 	call	4027794 <memset>
 4030454:	8005883a 	mov	r2,r16
 4030458:	dfc00117 	ldw	ra,4(sp)
 403045c:	dc000017 	ldw	r16,0(sp)
 4030460:	dec00204 	addi	sp,sp,8
 4030464:	f800283a 	ret
 4030468:	80800404 	addi	r2,r16,16
 403046c:	003fee06 	br	4030428 <__flash_rwdata_start+0xffffa1bc>
 4030470:	80800204 	addi	r2,r16,8
 4030474:	003fec06 	br	4030428 <__flash_rwdata_start+0xffffa1bc>
 4030478:	0005883a 	mov	r2,zero
 403047c:	003fee06 	br	4030438 <__flash_rwdata_start+0xffffa1cc>

04030480 <_fclose_r>:
 4030480:	28003926 	beq	r5,zero,4030568 <_fclose_r+0xe8>
 4030484:	defffc04 	addi	sp,sp,-16
 4030488:	dc400115 	stw	r17,4(sp)
 403048c:	dc000015 	stw	r16,0(sp)
 4030490:	dfc00315 	stw	ra,12(sp)
 4030494:	dc800215 	stw	r18,8(sp)
 4030498:	2023883a 	mov	r17,r4
 403049c:	2821883a 	mov	r16,r5
 40304a0:	20000226 	beq	r4,zero,40304ac <_fclose_r+0x2c>
 40304a4:	20800e17 	ldw	r2,56(r4)
 40304a8:	10002726 	beq	r2,zero,4030548 <_fclose_r+0xc8>
 40304ac:	8080030f 	ldh	r2,12(r16)
 40304b0:	1000071e 	bne	r2,zero,40304d0 <_fclose_r+0x50>
 40304b4:	0005883a 	mov	r2,zero
 40304b8:	dfc00317 	ldw	ra,12(sp)
 40304bc:	dc800217 	ldw	r18,8(sp)
 40304c0:	dc400117 	ldw	r17,4(sp)
 40304c4:	dc000017 	ldw	r16,0(sp)
 40304c8:	dec00404 	addi	sp,sp,16
 40304cc:	f800283a 	ret
 40304d0:	800b883a 	mov	r5,r16
 40304d4:	8809883a 	mov	r4,r17
 40304d8:	402bc100 	call	402bc10 <__sflush_r>
 40304dc:	1025883a 	mov	r18,r2
 40304e0:	80800b17 	ldw	r2,44(r16)
 40304e4:	10000426 	beq	r2,zero,40304f8 <_fclose_r+0x78>
 40304e8:	81400717 	ldw	r5,28(r16)
 40304ec:	8809883a 	mov	r4,r17
 40304f0:	103ee83a 	callr	r2
 40304f4:	10001616 	blt	r2,zero,4030550 <_fclose_r+0xd0>
 40304f8:	8080030b 	ldhu	r2,12(r16)
 40304fc:	1080200c 	andi	r2,r2,128
 4030500:	1000151e 	bne	r2,zero,4030558 <_fclose_r+0xd8>
 4030504:	81400c17 	ldw	r5,48(r16)
 4030508:	28000526 	beq	r5,zero,4030520 <_fclose_r+0xa0>
 403050c:	80801004 	addi	r2,r16,64
 4030510:	28800226 	beq	r5,r2,403051c <_fclose_r+0x9c>
 4030514:	8809883a 	mov	r4,r17
 4030518:	402c37c0 	call	402c37c <_free_r>
 403051c:	80000c15 	stw	zero,48(r16)
 4030520:	81401117 	ldw	r5,68(r16)
 4030524:	28000326 	beq	r5,zero,4030534 <_fclose_r+0xb4>
 4030528:	8809883a 	mov	r4,r17
 403052c:	402c37c0 	call	402c37c <_free_r>
 4030530:	80001115 	stw	zero,68(r16)
 4030534:	402c2180 	call	402c218 <__sfp_lock_acquire>
 4030538:	8000030d 	sth	zero,12(r16)
 403053c:	402c21c0 	call	402c21c <__sfp_lock_release>
 4030540:	9005883a 	mov	r2,r18
 4030544:	003fdc06 	br	40304b8 <__flash_rwdata_start+0xffffa24c>
 4030548:	402c2080 	call	402c208 <__sinit>
 403054c:	003fd706 	br	40304ac <__flash_rwdata_start+0xffffa240>
 4030550:	04bfffc4 	movi	r18,-1
 4030554:	003fe806 	br	40304f8 <__flash_rwdata_start+0xffffa28c>
 4030558:	81400417 	ldw	r5,16(r16)
 403055c:	8809883a 	mov	r4,r17
 4030560:	402c37c0 	call	402c37c <_free_r>
 4030564:	003fe706 	br	4030504 <__flash_rwdata_start+0xffffa298>
 4030568:	0005883a 	mov	r2,zero
 403056c:	f800283a 	ret

04030570 <fclose>:
 4030570:	00800034 	movhi	r2,0
 4030574:	10886404 	addi	r2,r2,8592
 4030578:	200b883a 	mov	r5,r4
 403057c:	11000017 	ldw	r4,0(r2)
 4030580:	40304801 	jmpi	4030480 <_fclose_r>

04030584 <__fputwc>:
 4030584:	defff804 	addi	sp,sp,-32
 4030588:	dcc00415 	stw	r19,16(sp)
 403058c:	dc800315 	stw	r18,12(sp)
 4030590:	dc000115 	stw	r16,4(sp)
 4030594:	dfc00715 	stw	ra,28(sp)
 4030598:	dd400615 	stw	r21,24(sp)
 403059c:	dd000515 	stw	r20,20(sp)
 40305a0:	dc400215 	stw	r17,8(sp)
 40305a4:	2027883a 	mov	r19,r4
 40305a8:	2825883a 	mov	r18,r5
 40305ac:	3021883a 	mov	r16,r6
 40305b0:	402cd580 	call	402cd58 <__locale_mb_cur_max>
 40305b4:	00c00044 	movi	r3,1
 40305b8:	10c03e26 	beq	r2,r3,40306b4 <__fputwc+0x130>
 40305bc:	81c01704 	addi	r7,r16,92
 40305c0:	900d883a 	mov	r6,r18
 40305c4:	d80b883a 	mov	r5,sp
 40305c8:	9809883a 	mov	r4,r19
 40305cc:	40308fc0 	call	40308fc <_wcrtomb_r>
 40305d0:	1029883a 	mov	r20,r2
 40305d4:	00bfffc4 	movi	r2,-1
 40305d8:	a0802026 	beq	r20,r2,403065c <__fputwc+0xd8>
 40305dc:	d9400003 	ldbu	r5,0(sp)
 40305e0:	a0001c26 	beq	r20,zero,4030654 <__fputwc+0xd0>
 40305e4:	0023883a 	mov	r17,zero
 40305e8:	05400284 	movi	r21,10
 40305ec:	00000906 	br	4030614 <__fputwc+0x90>
 40305f0:	80800017 	ldw	r2,0(r16)
 40305f4:	11400005 	stb	r5,0(r2)
 40305f8:	80c00017 	ldw	r3,0(r16)
 40305fc:	18c00044 	addi	r3,r3,1
 4030600:	80c00015 	stw	r3,0(r16)
 4030604:	8c400044 	addi	r17,r17,1
 4030608:	dc45883a 	add	r2,sp,r17
 403060c:	8d00112e 	bgeu	r17,r20,4030654 <__fputwc+0xd0>
 4030610:	11400003 	ldbu	r5,0(r2)
 4030614:	80c00217 	ldw	r3,8(r16)
 4030618:	18ffffc4 	addi	r3,r3,-1
 403061c:	80c00215 	stw	r3,8(r16)
 4030620:	183ff30e 	bge	r3,zero,40305f0 <__flash_rwdata_start+0xffffa384>
 4030624:	80800617 	ldw	r2,24(r16)
 4030628:	18801916 	blt	r3,r2,4030690 <__fputwc+0x10c>
 403062c:	80800017 	ldw	r2,0(r16)
 4030630:	11400005 	stb	r5,0(r2)
 4030634:	80800017 	ldw	r2,0(r16)
 4030638:	10c00003 	ldbu	r3,0(r2)
 403063c:	10800044 	addi	r2,r2,1
 4030640:	1d402326 	beq	r3,r21,40306d0 <__fputwc+0x14c>
 4030644:	80800015 	stw	r2,0(r16)
 4030648:	8c400044 	addi	r17,r17,1
 403064c:	dc45883a 	add	r2,sp,r17
 4030650:	8d3fef36 	bltu	r17,r20,4030610 <__flash_rwdata_start+0xffffa3a4>
 4030654:	9005883a 	mov	r2,r18
 4030658:	00000406 	br	403066c <__fputwc+0xe8>
 403065c:	80c0030b 	ldhu	r3,12(r16)
 4030660:	a005883a 	mov	r2,r20
 4030664:	18c01014 	ori	r3,r3,64
 4030668:	80c0030d 	sth	r3,12(r16)
 403066c:	dfc00717 	ldw	ra,28(sp)
 4030670:	dd400617 	ldw	r21,24(sp)
 4030674:	dd000517 	ldw	r20,20(sp)
 4030678:	dcc00417 	ldw	r19,16(sp)
 403067c:	dc800317 	ldw	r18,12(sp)
 4030680:	dc400217 	ldw	r17,8(sp)
 4030684:	dc000117 	ldw	r16,4(sp)
 4030688:	dec00804 	addi	sp,sp,32
 403068c:	f800283a 	ret
 4030690:	800d883a 	mov	r6,r16
 4030694:	29403fcc 	andi	r5,r5,255
 4030698:	9809883a 	mov	r4,r19
 403069c:	40301b00 	call	40301b0 <__swbuf_r>
 40306a0:	10bfffe0 	cmpeqi	r2,r2,-1
 40306a4:	10803fcc 	andi	r2,r2,255
 40306a8:	103fd626 	beq	r2,zero,4030604 <__flash_rwdata_start+0xffffa398>
 40306ac:	00bfffc4 	movi	r2,-1
 40306b0:	003fee06 	br	403066c <__flash_rwdata_start+0xffffa400>
 40306b4:	90ffffc4 	addi	r3,r18,-1
 40306b8:	01003f84 	movi	r4,254
 40306bc:	20ffbf36 	bltu	r4,r3,40305bc <__flash_rwdata_start+0xffffa350>
 40306c0:	900b883a 	mov	r5,r18
 40306c4:	dc800005 	stb	r18,0(sp)
 40306c8:	1029883a 	mov	r20,r2
 40306cc:	003fc506 	br	40305e4 <__flash_rwdata_start+0xffffa378>
 40306d0:	800d883a 	mov	r6,r16
 40306d4:	a80b883a 	mov	r5,r21
 40306d8:	9809883a 	mov	r4,r19
 40306dc:	40301b00 	call	40301b0 <__swbuf_r>
 40306e0:	10bfffe0 	cmpeqi	r2,r2,-1
 40306e4:	003fef06 	br	40306a4 <__flash_rwdata_start+0xffffa438>

040306e8 <_fputwc_r>:
 40306e8:	3080030b 	ldhu	r2,12(r6)
 40306ec:	10c8000c 	andi	r3,r2,8192
 40306f0:	1800051e 	bne	r3,zero,4030708 <_fputwc_r+0x20>
 40306f4:	30c01917 	ldw	r3,100(r6)
 40306f8:	10880014 	ori	r2,r2,8192
 40306fc:	3080030d 	sth	r2,12(r6)
 4030700:	18880014 	ori	r2,r3,8192
 4030704:	30801915 	stw	r2,100(r6)
 4030708:	40305841 	jmpi	4030584 <__fputwc>

0403070c <fputwc>:
 403070c:	00800034 	movhi	r2,0
 4030710:	defffc04 	addi	sp,sp,-16
 4030714:	10886404 	addi	r2,r2,8592
 4030718:	dc000115 	stw	r16,4(sp)
 403071c:	14000017 	ldw	r16,0(r2)
 4030720:	dc400215 	stw	r17,8(sp)
 4030724:	dfc00315 	stw	ra,12(sp)
 4030728:	2023883a 	mov	r17,r4
 403072c:	80000226 	beq	r16,zero,4030738 <fputwc+0x2c>
 4030730:	80800e17 	ldw	r2,56(r16)
 4030734:	10001026 	beq	r2,zero,4030778 <fputwc+0x6c>
 4030738:	2880030b 	ldhu	r2,12(r5)
 403073c:	10c8000c 	andi	r3,r2,8192
 4030740:	1800051e 	bne	r3,zero,4030758 <fputwc+0x4c>
 4030744:	28c01917 	ldw	r3,100(r5)
 4030748:	10880014 	ori	r2,r2,8192
 403074c:	2880030d 	sth	r2,12(r5)
 4030750:	18880014 	ori	r2,r3,8192
 4030754:	28801915 	stw	r2,100(r5)
 4030758:	280d883a 	mov	r6,r5
 403075c:	8009883a 	mov	r4,r16
 4030760:	880b883a 	mov	r5,r17
 4030764:	dfc00317 	ldw	ra,12(sp)
 4030768:	dc400217 	ldw	r17,8(sp)
 403076c:	dc000117 	ldw	r16,4(sp)
 4030770:	dec00404 	addi	sp,sp,16
 4030774:	40305841 	jmpi	4030584 <__fputwc>
 4030778:	8009883a 	mov	r4,r16
 403077c:	d9400015 	stw	r5,0(sp)
 4030780:	402c2080 	call	402c208 <__sinit>
 4030784:	d9400017 	ldw	r5,0(sp)
 4030788:	003feb06 	br	4030738 <__flash_rwdata_start+0xffffa4cc>

0403078c <_fstat_r>:
 403078c:	defffd04 	addi	sp,sp,-12
 4030790:	2805883a 	mov	r2,r5
 4030794:	dc000015 	stw	r16,0(sp)
 4030798:	04000034 	movhi	r16,0
 403079c:	dc400115 	stw	r17,4(sp)
 40307a0:	84087a04 	addi	r16,r16,8680
 40307a4:	2023883a 	mov	r17,r4
 40307a8:	300b883a 	mov	r5,r6
 40307ac:	1009883a 	mov	r4,r2
 40307b0:	dfc00215 	stw	ra,8(sp)
 40307b4:	80000015 	stw	zero,0(r16)
 40307b8:	40333dc0 	call	40333dc <fstat>
 40307bc:	00ffffc4 	movi	r3,-1
 40307c0:	10c00526 	beq	r2,r3,40307d8 <_fstat_r+0x4c>
 40307c4:	dfc00217 	ldw	ra,8(sp)
 40307c8:	dc400117 	ldw	r17,4(sp)
 40307cc:	dc000017 	ldw	r16,0(sp)
 40307d0:	dec00304 	addi	sp,sp,12
 40307d4:	f800283a 	ret
 40307d8:	80c00017 	ldw	r3,0(r16)
 40307dc:	183ff926 	beq	r3,zero,40307c4 <__flash_rwdata_start+0xffffa558>
 40307e0:	88c00015 	stw	r3,0(r17)
 40307e4:	003ff706 	br	40307c4 <__flash_rwdata_start+0xffffa558>

040307e8 <_isatty_r>:
 40307e8:	defffd04 	addi	sp,sp,-12
 40307ec:	dc000015 	stw	r16,0(sp)
 40307f0:	04000034 	movhi	r16,0
 40307f4:	dc400115 	stw	r17,4(sp)
 40307f8:	84087a04 	addi	r16,r16,8680
 40307fc:	2023883a 	mov	r17,r4
 4030800:	2809883a 	mov	r4,r5
 4030804:	dfc00215 	stw	ra,8(sp)
 4030808:	80000015 	stw	zero,0(r16)
 403080c:	40334e80 	call	40334e8 <isatty>
 4030810:	00ffffc4 	movi	r3,-1
 4030814:	10c00526 	beq	r2,r3,403082c <_isatty_r+0x44>
 4030818:	dfc00217 	ldw	ra,8(sp)
 403081c:	dc400117 	ldw	r17,4(sp)
 4030820:	dc000017 	ldw	r16,0(sp)
 4030824:	dec00304 	addi	sp,sp,12
 4030828:	f800283a 	ret
 403082c:	80c00017 	ldw	r3,0(r16)
 4030830:	183ff926 	beq	r3,zero,4030818 <__flash_rwdata_start+0xffffa5ac>
 4030834:	88c00015 	stw	r3,0(r17)
 4030838:	003ff706 	br	4030818 <__flash_rwdata_start+0xffffa5ac>

0403083c <_lseek_r>:
 403083c:	defffd04 	addi	sp,sp,-12
 4030840:	2805883a 	mov	r2,r5
 4030844:	dc000015 	stw	r16,0(sp)
 4030848:	04000034 	movhi	r16,0
 403084c:	dc400115 	stw	r17,4(sp)
 4030850:	300b883a 	mov	r5,r6
 4030854:	84087a04 	addi	r16,r16,8680
 4030858:	2023883a 	mov	r17,r4
 403085c:	380d883a 	mov	r6,r7
 4030860:	1009883a 	mov	r4,r2
 4030864:	dfc00215 	stw	ra,8(sp)
 4030868:	80000015 	stw	zero,0(r16)
 403086c:	40338200 	call	4033820 <lseek>
 4030870:	00ffffc4 	movi	r3,-1
 4030874:	10c00526 	beq	r2,r3,403088c <_lseek_r+0x50>
 4030878:	dfc00217 	ldw	ra,8(sp)
 403087c:	dc400117 	ldw	r17,4(sp)
 4030880:	dc000017 	ldw	r16,0(sp)
 4030884:	dec00304 	addi	sp,sp,12
 4030888:	f800283a 	ret
 403088c:	80c00017 	ldw	r3,0(r16)
 4030890:	183ff926 	beq	r3,zero,4030878 <__flash_rwdata_start+0xffffa60c>
 4030894:	88c00015 	stw	r3,0(r17)
 4030898:	003ff706 	br	4030878 <__flash_rwdata_start+0xffffa60c>

0403089c <_read_r>:
 403089c:	defffd04 	addi	sp,sp,-12
 40308a0:	2805883a 	mov	r2,r5
 40308a4:	dc000015 	stw	r16,0(sp)
 40308a8:	04000034 	movhi	r16,0
 40308ac:	dc400115 	stw	r17,4(sp)
 40308b0:	300b883a 	mov	r5,r6
 40308b4:	84087a04 	addi	r16,r16,8680
 40308b8:	2023883a 	mov	r17,r4
 40308bc:	380d883a 	mov	r6,r7
 40308c0:	1009883a 	mov	r4,r2
 40308c4:	dfc00215 	stw	ra,8(sp)
 40308c8:	80000015 	stw	zero,0(r16)
 40308cc:	40339f40 	call	40339f4 <read>
 40308d0:	00ffffc4 	movi	r3,-1
 40308d4:	10c00526 	beq	r2,r3,40308ec <_read_r+0x50>
 40308d8:	dfc00217 	ldw	ra,8(sp)
 40308dc:	dc400117 	ldw	r17,4(sp)
 40308e0:	dc000017 	ldw	r16,0(sp)
 40308e4:	dec00304 	addi	sp,sp,12
 40308e8:	f800283a 	ret
 40308ec:	80c00017 	ldw	r3,0(r16)
 40308f0:	183ff926 	beq	r3,zero,40308d8 <__flash_rwdata_start+0xffffa66c>
 40308f4:	88c00015 	stw	r3,0(r17)
 40308f8:	003ff706 	br	40308d8 <__flash_rwdata_start+0xffffa66c>

040308fc <_wcrtomb_r>:
 40308fc:	defff604 	addi	sp,sp,-40
 4030900:	00800034 	movhi	r2,0
 4030904:	dc800815 	stw	r18,32(sp)
 4030908:	dc400715 	stw	r17,28(sp)
 403090c:	dc000615 	stw	r16,24(sp)
 4030910:	10886604 	addi	r2,r2,8600
 4030914:	dfc00915 	stw	ra,36(sp)
 4030918:	2021883a 	mov	r16,r4
 403091c:	3823883a 	mov	r17,r7
 4030920:	14800017 	ldw	r18,0(r2)
 4030924:	28001426 	beq	r5,zero,4030978 <_wcrtomb_r+0x7c>
 4030928:	d9400415 	stw	r5,16(sp)
 403092c:	d9800515 	stw	r6,20(sp)
 4030930:	402cd4c0 	call	402cd4c <__locale_charset>
 4030934:	d9800517 	ldw	r6,20(sp)
 4030938:	d9400417 	ldw	r5,16(sp)
 403093c:	100f883a 	mov	r7,r2
 4030940:	dc400015 	stw	r17,0(sp)
 4030944:	8009883a 	mov	r4,r16
 4030948:	903ee83a 	callr	r18
 403094c:	00ffffc4 	movi	r3,-1
 4030950:	10c0031e 	bne	r2,r3,4030960 <_wcrtomb_r+0x64>
 4030954:	88000015 	stw	zero,0(r17)
 4030958:	00c02284 	movi	r3,138
 403095c:	80c00015 	stw	r3,0(r16)
 4030960:	dfc00917 	ldw	ra,36(sp)
 4030964:	dc800817 	ldw	r18,32(sp)
 4030968:	dc400717 	ldw	r17,28(sp)
 403096c:	dc000617 	ldw	r16,24(sp)
 4030970:	dec00a04 	addi	sp,sp,40
 4030974:	f800283a 	ret
 4030978:	402cd4c0 	call	402cd4c <__locale_charset>
 403097c:	100f883a 	mov	r7,r2
 4030980:	dc400015 	stw	r17,0(sp)
 4030984:	000d883a 	mov	r6,zero
 4030988:	d9400104 	addi	r5,sp,4
 403098c:	8009883a 	mov	r4,r16
 4030990:	903ee83a 	callr	r18
 4030994:	003fed06 	br	403094c <__flash_rwdata_start+0xffffa6e0>

04030998 <wcrtomb>:
 4030998:	defff604 	addi	sp,sp,-40
 403099c:	00800034 	movhi	r2,0
 40309a0:	dc800615 	stw	r18,24(sp)
 40309a4:	dc400515 	stw	r17,20(sp)
 40309a8:	10886404 	addi	r2,r2,8592
 40309ac:	dfc00915 	stw	ra,36(sp)
 40309b0:	dd000815 	stw	r20,32(sp)
 40309b4:	dcc00715 	stw	r19,28(sp)
 40309b8:	dc000415 	stw	r16,16(sp)
 40309bc:	3025883a 	mov	r18,r6
 40309c0:	14400017 	ldw	r17,0(r2)
 40309c4:	20001926 	beq	r4,zero,4030a2c <wcrtomb+0x94>
 40309c8:	00800034 	movhi	r2,0
 40309cc:	10886604 	addi	r2,r2,8600
 40309d0:	15000017 	ldw	r20,0(r2)
 40309d4:	2021883a 	mov	r16,r4
 40309d8:	2827883a 	mov	r19,r5
 40309dc:	402cd4c0 	call	402cd4c <__locale_charset>
 40309e0:	100f883a 	mov	r7,r2
 40309e4:	dc800015 	stw	r18,0(sp)
 40309e8:	980d883a 	mov	r6,r19
 40309ec:	800b883a 	mov	r5,r16
 40309f0:	8809883a 	mov	r4,r17
 40309f4:	a03ee83a 	callr	r20
 40309f8:	00ffffc4 	movi	r3,-1
 40309fc:	10c0031e 	bne	r2,r3,4030a0c <wcrtomb+0x74>
 4030a00:	90000015 	stw	zero,0(r18)
 4030a04:	00c02284 	movi	r3,138
 4030a08:	88c00015 	stw	r3,0(r17)
 4030a0c:	dfc00917 	ldw	ra,36(sp)
 4030a10:	dd000817 	ldw	r20,32(sp)
 4030a14:	dcc00717 	ldw	r19,28(sp)
 4030a18:	dc800617 	ldw	r18,24(sp)
 4030a1c:	dc400517 	ldw	r17,20(sp)
 4030a20:	dc000417 	ldw	r16,16(sp)
 4030a24:	dec00a04 	addi	sp,sp,40
 4030a28:	f800283a 	ret
 4030a2c:	00800034 	movhi	r2,0
 4030a30:	10886604 	addi	r2,r2,8600
 4030a34:	14000017 	ldw	r16,0(r2)
 4030a38:	402cd4c0 	call	402cd4c <__locale_charset>
 4030a3c:	100f883a 	mov	r7,r2
 4030a40:	dc800015 	stw	r18,0(sp)
 4030a44:	000d883a 	mov	r6,zero
 4030a48:	d9400104 	addi	r5,sp,4
 4030a4c:	8809883a 	mov	r4,r17
 4030a50:	803ee83a 	callr	r16
 4030a54:	003fe806 	br	40309f8 <__flash_rwdata_start+0xffffa78c>

04030a58 <__ascii_wctomb>:
 4030a58:	28000526 	beq	r5,zero,4030a70 <__ascii_wctomb+0x18>
 4030a5c:	00803fc4 	movi	r2,255
 4030a60:	11800536 	bltu	r2,r6,4030a78 <__ascii_wctomb+0x20>
 4030a64:	29800005 	stb	r6,0(r5)
 4030a68:	00800044 	movi	r2,1
 4030a6c:	f800283a 	ret
 4030a70:	0005883a 	mov	r2,zero
 4030a74:	f800283a 	ret
 4030a78:	00802284 	movi	r2,138
 4030a7c:	20800015 	stw	r2,0(r4)
 4030a80:	00bfffc4 	movi	r2,-1
 4030a84:	f800283a 	ret

04030a88 <_wctomb_r>:
 4030a88:	00800034 	movhi	r2,0
 4030a8c:	defff904 	addi	sp,sp,-28
 4030a90:	10886604 	addi	r2,r2,8600
 4030a94:	dfc00615 	stw	ra,24(sp)
 4030a98:	dc400515 	stw	r17,20(sp)
 4030a9c:	dc000415 	stw	r16,16(sp)
 4030aa0:	3823883a 	mov	r17,r7
 4030aa4:	14000017 	ldw	r16,0(r2)
 4030aa8:	d9000115 	stw	r4,4(sp)
 4030aac:	d9400215 	stw	r5,8(sp)
 4030ab0:	d9800315 	stw	r6,12(sp)
 4030ab4:	402cd4c0 	call	402cd4c <__locale_charset>
 4030ab8:	d9800317 	ldw	r6,12(sp)
 4030abc:	d9400217 	ldw	r5,8(sp)
 4030ac0:	d9000117 	ldw	r4,4(sp)
 4030ac4:	100f883a 	mov	r7,r2
 4030ac8:	dc400015 	stw	r17,0(sp)
 4030acc:	803ee83a 	callr	r16
 4030ad0:	dfc00617 	ldw	ra,24(sp)
 4030ad4:	dc400517 	ldw	r17,20(sp)
 4030ad8:	dc000417 	ldw	r16,16(sp)
 4030adc:	dec00704 	addi	sp,sp,28
 4030ae0:	f800283a 	ret

04030ae4 <__muldi3>:
 4030ae4:	223fffcc 	andi	r8,r4,65535
 4030ae8:	2006d43a 	srli	r3,r4,16
 4030aec:	32bfffcc 	andi	r10,r6,65535
 4030af0:	3012d43a 	srli	r9,r6,16
 4030af4:	4297383a 	mul	r11,r8,r10
 4030af8:	1a95383a 	mul	r10,r3,r10
 4030afc:	4251383a 	mul	r8,r8,r9
 4030b00:	5804d43a 	srli	r2,r11,16
 4030b04:	4291883a 	add	r8,r8,r10
 4030b08:	1205883a 	add	r2,r2,r8
 4030b0c:	1a51383a 	mul	r8,r3,r9
 4030b10:	1280022e 	bgeu	r2,r10,4030b1c <__muldi3+0x38>
 4030b14:	00c00074 	movhi	r3,1
 4030b18:	40d1883a 	add	r8,r8,r3
 4030b1c:	1006d43a 	srli	r3,r2,16
 4030b20:	21cf383a 	mul	r7,r4,r7
 4030b24:	314b383a 	mul	r5,r6,r5
 4030b28:	1004943a 	slli	r2,r2,16
 4030b2c:	1a11883a 	add	r8,r3,r8
 4030b30:	5affffcc 	andi	r11,r11,65535
 4030b34:	3947883a 	add	r3,r7,r5
 4030b38:	12c5883a 	add	r2,r2,r11
 4030b3c:	1a07883a 	add	r3,r3,r8
 4030b40:	f800283a 	ret

04030b44 <__udivdi3>:
 4030b44:	defff504 	addi	sp,sp,-44
 4030b48:	dcc00415 	stw	r19,16(sp)
 4030b4c:	dc000115 	stw	r16,4(sp)
 4030b50:	dfc00a15 	stw	ra,40(sp)
 4030b54:	df000915 	stw	fp,36(sp)
 4030b58:	ddc00815 	stw	r23,32(sp)
 4030b5c:	dd800715 	stw	r22,28(sp)
 4030b60:	dd400615 	stw	r21,24(sp)
 4030b64:	dd000515 	stw	r20,20(sp)
 4030b68:	dc800315 	stw	r18,12(sp)
 4030b6c:	dc400215 	stw	r17,8(sp)
 4030b70:	2027883a 	mov	r19,r4
 4030b74:	2821883a 	mov	r16,r5
 4030b78:	3800411e 	bne	r7,zero,4030c80 <__udivdi3+0x13c>
 4030b7c:	3023883a 	mov	r17,r6
 4030b80:	2025883a 	mov	r18,r4
 4030b84:	2980522e 	bgeu	r5,r6,4030cd0 <__udivdi3+0x18c>
 4030b88:	00bfffd4 	movui	r2,65535
 4030b8c:	282d883a 	mov	r22,r5
 4030b90:	1180a836 	bltu	r2,r6,4030e34 <__udivdi3+0x2f0>
 4030b94:	00803fc4 	movi	r2,255
 4030b98:	1185803a 	cmpltu	r2,r2,r6
 4030b9c:	100490fa 	slli	r2,r2,3
 4030ba0:	3086d83a 	srl	r3,r6,r2
 4030ba4:	01000034 	movhi	r4,0
 4030ba8:	2100e7c4 	addi	r4,r4,927
 4030bac:	20c7883a 	add	r3,r4,r3
 4030bb0:	18c00003 	ldbu	r3,0(r3)
 4030bb4:	1885883a 	add	r2,r3,r2
 4030bb8:	00c00804 	movi	r3,32
 4030bbc:	1887c83a 	sub	r3,r3,r2
 4030bc0:	18000526 	beq	r3,zero,4030bd8 <__udivdi3+0x94>
 4030bc4:	80e0983a 	sll	r16,r16,r3
 4030bc8:	9884d83a 	srl	r2,r19,r2
 4030bcc:	30e2983a 	sll	r17,r6,r3
 4030bd0:	98e4983a 	sll	r18,r19,r3
 4030bd4:	142cb03a 	or	r22,r2,r16
 4030bd8:	882ad43a 	srli	r21,r17,16
 4030bdc:	b009883a 	mov	r4,r22
 4030be0:	8d3fffcc 	andi	r20,r17,65535
 4030be4:	a80b883a 	mov	r5,r21
 4030be8:	40247500 	call	4024750 <__umodsi3>
 4030bec:	b009883a 	mov	r4,r22
 4030bf0:	a80b883a 	mov	r5,r21
 4030bf4:	1027883a 	mov	r19,r2
 4030bf8:	40246ec0 	call	40246ec <__udivsi3>
 4030bfc:	102d883a 	mov	r22,r2
 4030c00:	9826943a 	slli	r19,r19,16
 4030c04:	9004d43a 	srli	r2,r18,16
 4030c08:	a5a1383a 	mul	r16,r20,r22
 4030c0c:	14c4b03a 	or	r2,r2,r19
 4030c10:	1400052e 	bgeu	r2,r16,4030c28 <__udivdi3+0xe4>
 4030c14:	1445883a 	add	r2,r2,r17
 4030c18:	b0ffffc4 	addi	r3,r22,-1
 4030c1c:	14400136 	bltu	r2,r17,4030c24 <__udivdi3+0xe0>
 4030c20:	14012336 	bltu	r2,r16,40310b0 <__udivdi3+0x56c>
 4030c24:	182d883a 	mov	r22,r3
 4030c28:	1421c83a 	sub	r16,r2,r16
 4030c2c:	a80b883a 	mov	r5,r21
 4030c30:	8009883a 	mov	r4,r16
 4030c34:	40247500 	call	4024750 <__umodsi3>
 4030c38:	1027883a 	mov	r19,r2
 4030c3c:	a80b883a 	mov	r5,r21
 4030c40:	8009883a 	mov	r4,r16
 4030c44:	40246ec0 	call	40246ec <__udivsi3>
 4030c48:	9826943a 	slli	r19,r19,16
 4030c4c:	a0a9383a 	mul	r20,r20,r2
 4030c50:	94bfffcc 	andi	r18,r18,65535
 4030c54:	94e4b03a 	or	r18,r18,r19
 4030c58:	9500052e 	bgeu	r18,r20,4030c70 <__udivdi3+0x12c>
 4030c5c:	8ca5883a 	add	r18,r17,r18
 4030c60:	10ffffc4 	addi	r3,r2,-1
 4030c64:	9440f136 	bltu	r18,r17,403102c <__udivdi3+0x4e8>
 4030c68:	9500f02e 	bgeu	r18,r20,403102c <__udivdi3+0x4e8>
 4030c6c:	10bfff84 	addi	r2,r2,-2
 4030c70:	b00c943a 	slli	r6,r22,16
 4030c74:	0007883a 	mov	r3,zero
 4030c78:	3084b03a 	or	r2,r6,r2
 4030c7c:	00005906 	br	4030de4 <__udivdi3+0x2a0>
 4030c80:	29c05636 	bltu	r5,r7,4030ddc <__udivdi3+0x298>
 4030c84:	00bfffd4 	movui	r2,65535
 4030c88:	11c0622e 	bgeu	r2,r7,4030e14 <__udivdi3+0x2d0>
 4030c8c:	00804034 	movhi	r2,256
 4030c90:	10bfffc4 	addi	r2,r2,-1
 4030c94:	11c0ee36 	bltu	r2,r7,4031050 <__udivdi3+0x50c>
 4030c98:	00800404 	movi	r2,16
 4030c9c:	3886d83a 	srl	r3,r7,r2
 4030ca0:	01000034 	movhi	r4,0
 4030ca4:	2100e7c4 	addi	r4,r4,927
 4030ca8:	20c7883a 	add	r3,r4,r3
 4030cac:	18c00003 	ldbu	r3,0(r3)
 4030cb0:	05400804 	movi	r21,32
 4030cb4:	1885883a 	add	r2,r3,r2
 4030cb8:	a8abc83a 	sub	r21,r21,r2
 4030cbc:	a800621e 	bne	r21,zero,4030e48 <__udivdi3+0x304>
 4030cc0:	3c00e936 	bltu	r7,r16,4031068 <__udivdi3+0x524>
 4030cc4:	9985403a 	cmpgeu	r2,r19,r6
 4030cc8:	0007883a 	mov	r3,zero
 4030ccc:	00004506 	br	4030de4 <__udivdi3+0x2a0>
 4030cd0:	3000041e 	bne	r6,zero,4030ce4 <__udivdi3+0x1a0>
 4030cd4:	000b883a 	mov	r5,zero
 4030cd8:	01000044 	movi	r4,1
 4030cdc:	40246ec0 	call	40246ec <__udivsi3>
 4030ce0:	1023883a 	mov	r17,r2
 4030ce4:	00bfffd4 	movui	r2,65535
 4030ce8:	14404e2e 	bgeu	r2,r17,4030e24 <__udivdi3+0x2e0>
 4030cec:	00804034 	movhi	r2,256
 4030cf0:	10bfffc4 	addi	r2,r2,-1
 4030cf4:	1440d836 	bltu	r2,r17,4031058 <__udivdi3+0x514>
 4030cf8:	00800404 	movi	r2,16
 4030cfc:	8886d83a 	srl	r3,r17,r2
 4030d00:	01000034 	movhi	r4,0
 4030d04:	2100e7c4 	addi	r4,r4,927
 4030d08:	20c7883a 	add	r3,r4,r3
 4030d0c:	18c00003 	ldbu	r3,0(r3)
 4030d10:	1885883a 	add	r2,r3,r2
 4030d14:	00c00804 	movi	r3,32
 4030d18:	1887c83a 	sub	r3,r3,r2
 4030d1c:	18008f1e 	bne	r3,zero,4030f5c <__udivdi3+0x418>
 4030d20:	882ad43a 	srli	r21,r17,16
 4030d24:	8461c83a 	sub	r16,r16,r17
 4030d28:	8d3fffcc 	andi	r20,r17,65535
 4030d2c:	00c00044 	movi	r3,1
 4030d30:	8009883a 	mov	r4,r16
 4030d34:	a80b883a 	mov	r5,r21
 4030d38:	d8c00015 	stw	r3,0(sp)
 4030d3c:	40247500 	call	4024750 <__umodsi3>
 4030d40:	8009883a 	mov	r4,r16
 4030d44:	a80b883a 	mov	r5,r21
 4030d48:	1027883a 	mov	r19,r2
 4030d4c:	40246ec0 	call	40246ec <__udivsi3>
 4030d50:	9826943a 	slli	r19,r19,16
 4030d54:	9008d43a 	srli	r4,r18,16
 4030d58:	1521383a 	mul	r16,r2,r20
 4030d5c:	102d883a 	mov	r22,r2
 4030d60:	24c8b03a 	or	r4,r4,r19
 4030d64:	d8c00017 	ldw	r3,0(sp)
 4030d68:	2400052e 	bgeu	r4,r16,4030d80 <__udivdi3+0x23c>
 4030d6c:	2449883a 	add	r4,r4,r17
 4030d70:	b0bfffc4 	addi	r2,r22,-1
 4030d74:	24400136 	bltu	r4,r17,4030d7c <__udivdi3+0x238>
 4030d78:	2400ca36 	bltu	r4,r16,40310a4 <__udivdi3+0x560>
 4030d7c:	102d883a 	mov	r22,r2
 4030d80:	2421c83a 	sub	r16,r4,r16
 4030d84:	a80b883a 	mov	r5,r21
 4030d88:	8009883a 	mov	r4,r16
 4030d8c:	d8c00015 	stw	r3,0(sp)
 4030d90:	40247500 	call	4024750 <__umodsi3>
 4030d94:	1027883a 	mov	r19,r2
 4030d98:	a80b883a 	mov	r5,r21
 4030d9c:	8009883a 	mov	r4,r16
 4030da0:	40246ec0 	call	40246ec <__udivsi3>
 4030da4:	9826943a 	slli	r19,r19,16
 4030da8:	1529383a 	mul	r20,r2,r20
 4030dac:	94bfffcc 	andi	r18,r18,65535
 4030db0:	94e4b03a 	or	r18,r18,r19
 4030db4:	d8c00017 	ldw	r3,0(sp)
 4030db8:	9500052e 	bgeu	r18,r20,4030dd0 <__udivdi3+0x28c>
 4030dbc:	8ca5883a 	add	r18,r17,r18
 4030dc0:	113fffc4 	addi	r4,r2,-1
 4030dc4:	94409736 	bltu	r18,r17,4031024 <__udivdi3+0x4e0>
 4030dc8:	9500962e 	bgeu	r18,r20,4031024 <__udivdi3+0x4e0>
 4030dcc:	10bfff84 	addi	r2,r2,-2
 4030dd0:	b00c943a 	slli	r6,r22,16
 4030dd4:	3084b03a 	or	r2,r6,r2
 4030dd8:	00000206 	br	4030de4 <__udivdi3+0x2a0>
 4030ddc:	0007883a 	mov	r3,zero
 4030de0:	0005883a 	mov	r2,zero
 4030de4:	dfc00a17 	ldw	ra,40(sp)
 4030de8:	df000917 	ldw	fp,36(sp)
 4030dec:	ddc00817 	ldw	r23,32(sp)
 4030df0:	dd800717 	ldw	r22,28(sp)
 4030df4:	dd400617 	ldw	r21,24(sp)
 4030df8:	dd000517 	ldw	r20,20(sp)
 4030dfc:	dcc00417 	ldw	r19,16(sp)
 4030e00:	dc800317 	ldw	r18,12(sp)
 4030e04:	dc400217 	ldw	r17,8(sp)
 4030e08:	dc000117 	ldw	r16,4(sp)
 4030e0c:	dec00b04 	addi	sp,sp,44
 4030e10:	f800283a 	ret
 4030e14:	00803fc4 	movi	r2,255
 4030e18:	11c5803a 	cmpltu	r2,r2,r7
 4030e1c:	100490fa 	slli	r2,r2,3
 4030e20:	003f9e06 	br	4030c9c <__flash_rwdata_start+0xffffaa30>
 4030e24:	00803fc4 	movi	r2,255
 4030e28:	1445803a 	cmpltu	r2,r2,r17
 4030e2c:	100490fa 	slli	r2,r2,3
 4030e30:	003fb206 	br	4030cfc <__flash_rwdata_start+0xffffaa90>
 4030e34:	00804034 	movhi	r2,256
 4030e38:	10bfffc4 	addi	r2,r2,-1
 4030e3c:	11808836 	bltu	r2,r6,4031060 <__udivdi3+0x51c>
 4030e40:	00800404 	movi	r2,16
 4030e44:	003f5606 	br	4030ba0 <__flash_rwdata_start+0xffffa934>
 4030e48:	30aed83a 	srl	r23,r6,r2
 4030e4c:	3d4e983a 	sll	r7,r7,r21
 4030e50:	80acd83a 	srl	r22,r16,r2
 4030e54:	9884d83a 	srl	r2,r19,r2
 4030e58:	3deeb03a 	or	r23,r7,r23
 4030e5c:	b824d43a 	srli	r18,r23,16
 4030e60:	8560983a 	sll	r16,r16,r21
 4030e64:	b009883a 	mov	r4,r22
 4030e68:	900b883a 	mov	r5,r18
 4030e6c:	3568983a 	sll	r20,r6,r21
 4030e70:	1420b03a 	or	r16,r2,r16
 4030e74:	40247500 	call	4024750 <__umodsi3>
 4030e78:	b009883a 	mov	r4,r22
 4030e7c:	900b883a 	mov	r5,r18
 4030e80:	1023883a 	mov	r17,r2
 4030e84:	40246ec0 	call	40246ec <__udivsi3>
 4030e88:	8808943a 	slli	r4,r17,16
 4030e8c:	bf3fffcc 	andi	fp,r23,65535
 4030e90:	8006d43a 	srli	r3,r16,16
 4030e94:	e0a3383a 	mul	r17,fp,r2
 4030e98:	100d883a 	mov	r6,r2
 4030e9c:	1906b03a 	or	r3,r3,r4
 4030ea0:	1c40042e 	bgeu	r3,r17,4030eb4 <__udivdi3+0x370>
 4030ea4:	1dc7883a 	add	r3,r3,r23
 4030ea8:	10bfffc4 	addi	r2,r2,-1
 4030eac:	1dc0752e 	bgeu	r3,r23,4031084 <__udivdi3+0x540>
 4030eb0:	100d883a 	mov	r6,r2
 4030eb4:	1c63c83a 	sub	r17,r3,r17
 4030eb8:	900b883a 	mov	r5,r18
 4030ebc:	8809883a 	mov	r4,r17
 4030ec0:	d9800015 	stw	r6,0(sp)
 4030ec4:	40247500 	call	4024750 <__umodsi3>
 4030ec8:	102d883a 	mov	r22,r2
 4030ecc:	8809883a 	mov	r4,r17
 4030ed0:	900b883a 	mov	r5,r18
 4030ed4:	40246ec0 	call	40246ec <__udivsi3>
 4030ed8:	b02c943a 	slli	r22,r22,16
 4030edc:	e089383a 	mul	r4,fp,r2
 4030ee0:	843fffcc 	andi	r16,r16,65535
 4030ee4:	85a0b03a 	or	r16,r16,r22
 4030ee8:	d9800017 	ldw	r6,0(sp)
 4030eec:	8100042e 	bgeu	r16,r4,4030f00 <__udivdi3+0x3bc>
 4030ef0:	85e1883a 	add	r16,r16,r23
 4030ef4:	10ffffc4 	addi	r3,r2,-1
 4030ef8:	85c05e2e 	bgeu	r16,r23,4031074 <__udivdi3+0x530>
 4030efc:	1805883a 	mov	r2,r3
 4030f00:	300c943a 	slli	r6,r6,16
 4030f04:	a17fffcc 	andi	r5,r20,65535
 4030f08:	a028d43a 	srli	r20,r20,16
 4030f0c:	3084b03a 	or	r2,r6,r2
 4030f10:	10ffffcc 	andi	r3,r2,65535
 4030f14:	100cd43a 	srli	r6,r2,16
 4030f18:	194f383a 	mul	r7,r3,r5
 4030f1c:	1d07383a 	mul	r3,r3,r20
 4030f20:	314b383a 	mul	r5,r6,r5
 4030f24:	3810d43a 	srli	r8,r7,16
 4030f28:	8121c83a 	sub	r16,r16,r4
 4030f2c:	1947883a 	add	r3,r3,r5
 4030f30:	40c7883a 	add	r3,r8,r3
 4030f34:	350d383a 	mul	r6,r6,r20
 4030f38:	1940022e 	bgeu	r3,r5,4030f44 <__udivdi3+0x400>
 4030f3c:	01000074 	movhi	r4,1
 4030f40:	310d883a 	add	r6,r6,r4
 4030f44:	1828d43a 	srli	r20,r3,16
 4030f48:	a18d883a 	add	r6,r20,r6
 4030f4c:	81803e36 	bltu	r16,r6,4031048 <__udivdi3+0x504>
 4030f50:	81803826 	beq	r16,r6,4031034 <__udivdi3+0x4f0>
 4030f54:	0007883a 	mov	r3,zero
 4030f58:	003fa206 	br	4030de4 <__flash_rwdata_start+0xffffab78>
 4030f5c:	88e2983a 	sll	r17,r17,r3
 4030f60:	80a8d83a 	srl	r20,r16,r2
 4030f64:	80e0983a 	sll	r16,r16,r3
 4030f68:	882ad43a 	srli	r21,r17,16
 4030f6c:	9884d83a 	srl	r2,r19,r2
 4030f70:	a009883a 	mov	r4,r20
 4030f74:	a80b883a 	mov	r5,r21
 4030f78:	142eb03a 	or	r23,r2,r16
 4030f7c:	98e4983a 	sll	r18,r19,r3
 4030f80:	40247500 	call	4024750 <__umodsi3>
 4030f84:	a009883a 	mov	r4,r20
 4030f88:	a80b883a 	mov	r5,r21
 4030f8c:	1021883a 	mov	r16,r2
 4030f90:	40246ec0 	call	40246ec <__udivsi3>
 4030f94:	1039883a 	mov	fp,r2
 4030f98:	8d3fffcc 	andi	r20,r17,65535
 4030f9c:	8020943a 	slli	r16,r16,16
 4030fa0:	b804d43a 	srli	r2,r23,16
 4030fa4:	a72d383a 	mul	r22,r20,fp
 4030fa8:	1404b03a 	or	r2,r2,r16
 4030fac:	1580062e 	bgeu	r2,r22,4030fc8 <__udivdi3+0x484>
 4030fb0:	1445883a 	add	r2,r2,r17
 4030fb4:	e0ffffc4 	addi	r3,fp,-1
 4030fb8:	14403836 	bltu	r2,r17,403109c <__udivdi3+0x558>
 4030fbc:	1580372e 	bgeu	r2,r22,403109c <__udivdi3+0x558>
 4030fc0:	e73fff84 	addi	fp,fp,-2
 4030fc4:	1445883a 	add	r2,r2,r17
 4030fc8:	15adc83a 	sub	r22,r2,r22
 4030fcc:	a80b883a 	mov	r5,r21
 4030fd0:	b009883a 	mov	r4,r22
 4030fd4:	40247500 	call	4024750 <__umodsi3>
 4030fd8:	1027883a 	mov	r19,r2
 4030fdc:	b009883a 	mov	r4,r22
 4030fe0:	a80b883a 	mov	r5,r21
 4030fe4:	40246ec0 	call	40246ec <__udivsi3>
 4030fe8:	9826943a 	slli	r19,r19,16
 4030fec:	a0a1383a 	mul	r16,r20,r2
 4030ff0:	b93fffcc 	andi	r4,r23,65535
 4030ff4:	24c8b03a 	or	r4,r4,r19
 4030ff8:	2400062e 	bgeu	r4,r16,4031014 <__udivdi3+0x4d0>
 4030ffc:	2449883a 	add	r4,r4,r17
 4031000:	10ffffc4 	addi	r3,r2,-1
 4031004:	24402336 	bltu	r4,r17,4031094 <__udivdi3+0x550>
 4031008:	2400222e 	bgeu	r4,r16,4031094 <__udivdi3+0x550>
 403100c:	10bfff84 	addi	r2,r2,-2
 4031010:	2449883a 	add	r4,r4,r17
 4031014:	e038943a 	slli	fp,fp,16
 4031018:	2421c83a 	sub	r16,r4,r16
 403101c:	e086b03a 	or	r3,fp,r2
 4031020:	003f4306 	br	4030d30 <__flash_rwdata_start+0xffffaac4>
 4031024:	2005883a 	mov	r2,r4
 4031028:	003f6906 	br	4030dd0 <__flash_rwdata_start+0xffffab64>
 403102c:	1805883a 	mov	r2,r3
 4031030:	003f0f06 	br	4030c70 <__flash_rwdata_start+0xffffaa04>
 4031034:	1806943a 	slli	r3,r3,16
 4031038:	9d66983a 	sll	r19,r19,r21
 403103c:	39ffffcc 	andi	r7,r7,65535
 4031040:	19c7883a 	add	r3,r3,r7
 4031044:	98ffc32e 	bgeu	r19,r3,4030f54 <__flash_rwdata_start+0xfffface8>
 4031048:	10bfffc4 	addi	r2,r2,-1
 403104c:	003fc106 	br	4030f54 <__flash_rwdata_start+0xfffface8>
 4031050:	00800604 	movi	r2,24
 4031054:	003f1106 	br	4030c9c <__flash_rwdata_start+0xffffaa30>
 4031058:	00800604 	movi	r2,24
 403105c:	003f2706 	br	4030cfc <__flash_rwdata_start+0xffffaa90>
 4031060:	00800604 	movi	r2,24
 4031064:	003ece06 	br	4030ba0 <__flash_rwdata_start+0xffffa934>
 4031068:	0007883a 	mov	r3,zero
 403106c:	00800044 	movi	r2,1
 4031070:	003f5c06 	br	4030de4 <__flash_rwdata_start+0xffffab78>
 4031074:	813fa12e 	bgeu	r16,r4,4030efc <__flash_rwdata_start+0xffffac90>
 4031078:	10bfff84 	addi	r2,r2,-2
 403107c:	85e1883a 	add	r16,r16,r23
 4031080:	003f9f06 	br	4030f00 <__flash_rwdata_start+0xffffac94>
 4031084:	1c7f8a2e 	bgeu	r3,r17,4030eb0 <__flash_rwdata_start+0xffffac44>
 4031088:	31bfff84 	addi	r6,r6,-2
 403108c:	1dc7883a 	add	r3,r3,r23
 4031090:	003f8806 	br	4030eb4 <__flash_rwdata_start+0xffffac48>
 4031094:	1805883a 	mov	r2,r3
 4031098:	003fde06 	br	4031014 <__flash_rwdata_start+0xffffada8>
 403109c:	1839883a 	mov	fp,r3
 40310a0:	003fc906 	br	4030fc8 <__flash_rwdata_start+0xffffad5c>
 40310a4:	b5bfff84 	addi	r22,r22,-2
 40310a8:	2449883a 	add	r4,r4,r17
 40310ac:	003f3406 	br	4030d80 <__flash_rwdata_start+0xffffab14>
 40310b0:	b5bfff84 	addi	r22,r22,-2
 40310b4:	1445883a 	add	r2,r2,r17
 40310b8:	003edb06 	br	4030c28 <__flash_rwdata_start+0xffffa9bc>

040310bc <__umoddi3>:
 40310bc:	defff404 	addi	sp,sp,-48
 40310c0:	df000a15 	stw	fp,40(sp)
 40310c4:	dc400315 	stw	r17,12(sp)
 40310c8:	dc000215 	stw	r16,8(sp)
 40310cc:	dfc00b15 	stw	ra,44(sp)
 40310d0:	ddc00915 	stw	r23,36(sp)
 40310d4:	dd800815 	stw	r22,32(sp)
 40310d8:	dd400715 	stw	r21,28(sp)
 40310dc:	dd000615 	stw	r20,24(sp)
 40310e0:	dcc00515 	stw	r19,20(sp)
 40310e4:	dc800415 	stw	r18,16(sp)
 40310e8:	2021883a 	mov	r16,r4
 40310ec:	2823883a 	mov	r17,r5
 40310f0:	2839883a 	mov	fp,r5
 40310f4:	38003c1e 	bne	r7,zero,40311e8 <__umoddi3+0x12c>
 40310f8:	3027883a 	mov	r19,r6
 40310fc:	2029883a 	mov	r20,r4
 4031100:	2980512e 	bgeu	r5,r6,4031248 <__umoddi3+0x18c>
 4031104:	00bfffd4 	movui	r2,65535
 4031108:	11809a36 	bltu	r2,r6,4031374 <__umoddi3+0x2b8>
 403110c:	01003fc4 	movi	r4,255
 4031110:	2189803a 	cmpltu	r4,r4,r6
 4031114:	200890fa 	slli	r4,r4,3
 4031118:	3104d83a 	srl	r2,r6,r4
 403111c:	00c00034 	movhi	r3,0
 4031120:	18c0e7c4 	addi	r3,r3,927
 4031124:	1885883a 	add	r2,r3,r2
 4031128:	10c00003 	ldbu	r3,0(r2)
 403112c:	00800804 	movi	r2,32
 4031130:	1909883a 	add	r4,r3,r4
 4031134:	1125c83a 	sub	r18,r2,r4
 4031138:	90000526 	beq	r18,zero,4031150 <__umoddi3+0x94>
 403113c:	8ca2983a 	sll	r17,r17,r18
 4031140:	8108d83a 	srl	r4,r16,r4
 4031144:	34a6983a 	sll	r19,r6,r18
 4031148:	84a8983a 	sll	r20,r16,r18
 403114c:	2478b03a 	or	fp,r4,r17
 4031150:	982ed43a 	srli	r23,r19,16
 4031154:	e009883a 	mov	r4,fp
 4031158:	9dbfffcc 	andi	r22,r19,65535
 403115c:	b80b883a 	mov	r5,r23
 4031160:	40247500 	call	4024750 <__umodsi3>
 4031164:	e009883a 	mov	r4,fp
 4031168:	b80b883a 	mov	r5,r23
 403116c:	102b883a 	mov	r21,r2
 4031170:	40246ec0 	call	40246ec <__udivsi3>
 4031174:	a806943a 	slli	r3,r21,16
 4031178:	a008d43a 	srli	r4,r20,16
 403117c:	b085383a 	mul	r2,r22,r2
 4031180:	20c8b03a 	or	r4,r4,r3
 4031184:	2080032e 	bgeu	r4,r2,4031194 <__umoddi3+0xd8>
 4031188:	24c9883a 	add	r4,r4,r19
 403118c:	24c00136 	bltu	r4,r19,4031194 <__umoddi3+0xd8>
 4031190:	20811036 	bltu	r4,r2,40315d4 <__umoddi3+0x518>
 4031194:	20abc83a 	sub	r21,r4,r2
 4031198:	b80b883a 	mov	r5,r23
 403119c:	a809883a 	mov	r4,r21
 40311a0:	40247500 	call	4024750 <__umodsi3>
 40311a4:	1023883a 	mov	r17,r2
 40311a8:	b80b883a 	mov	r5,r23
 40311ac:	a809883a 	mov	r4,r21
 40311b0:	40246ec0 	call	40246ec <__udivsi3>
 40311b4:	8822943a 	slli	r17,r17,16
 40311b8:	b085383a 	mul	r2,r22,r2
 40311bc:	a0ffffcc 	andi	r3,r20,65535
 40311c0:	1c46b03a 	or	r3,r3,r17
 40311c4:	1880042e 	bgeu	r3,r2,40311d8 <__umoddi3+0x11c>
 40311c8:	1cc7883a 	add	r3,r3,r19
 40311cc:	1cc00236 	bltu	r3,r19,40311d8 <__umoddi3+0x11c>
 40311d0:	1880012e 	bgeu	r3,r2,40311d8 <__umoddi3+0x11c>
 40311d4:	1cc7883a 	add	r3,r3,r19
 40311d8:	1885c83a 	sub	r2,r3,r2
 40311dc:	1484d83a 	srl	r2,r2,r18
 40311e0:	0007883a 	mov	r3,zero
 40311e4:	00004f06 	br	4031324 <__umoddi3+0x268>
 40311e8:	29c04c36 	bltu	r5,r7,403131c <__umoddi3+0x260>
 40311ec:	00bfffd4 	movui	r2,65535
 40311f0:	11c0582e 	bgeu	r2,r7,4031354 <__umoddi3+0x298>
 40311f4:	00804034 	movhi	r2,256
 40311f8:	10bfffc4 	addi	r2,r2,-1
 40311fc:	11c0e736 	bltu	r2,r7,403159c <__umoddi3+0x4e0>
 4031200:	01000404 	movi	r4,16
 4031204:	3904d83a 	srl	r2,r7,r4
 4031208:	00c00034 	movhi	r3,0
 403120c:	18c0e7c4 	addi	r3,r3,927
 4031210:	1885883a 	add	r2,r3,r2
 4031214:	14c00003 	ldbu	r19,0(r2)
 4031218:	00c00804 	movi	r3,32
 403121c:	9927883a 	add	r19,r19,r4
 4031220:	1ce9c83a 	sub	r20,r3,r19
 4031224:	a000581e 	bne	r20,zero,4031388 <__umoddi3+0x2cc>
 4031228:	3c400136 	bltu	r7,r17,4031230 <__umoddi3+0x174>
 403122c:	8180eb36 	bltu	r16,r6,40315dc <__umoddi3+0x520>
 4031230:	8185c83a 	sub	r2,r16,r6
 4031234:	89e3c83a 	sub	r17,r17,r7
 4031238:	8089803a 	cmpltu	r4,r16,r2
 403123c:	8939c83a 	sub	fp,r17,r4
 4031240:	e007883a 	mov	r3,fp
 4031244:	00003706 	br	4031324 <__umoddi3+0x268>
 4031248:	3000041e 	bne	r6,zero,403125c <__umoddi3+0x1a0>
 403124c:	000b883a 	mov	r5,zero
 4031250:	01000044 	movi	r4,1
 4031254:	40246ec0 	call	40246ec <__udivsi3>
 4031258:	1027883a 	mov	r19,r2
 403125c:	00bfffd4 	movui	r2,65535
 4031260:	14c0402e 	bgeu	r2,r19,4031364 <__umoddi3+0x2a8>
 4031264:	00804034 	movhi	r2,256
 4031268:	10bfffc4 	addi	r2,r2,-1
 403126c:	14c0cd36 	bltu	r2,r19,40315a4 <__umoddi3+0x4e8>
 4031270:	00800404 	movi	r2,16
 4031274:	9886d83a 	srl	r3,r19,r2
 4031278:	01000034 	movhi	r4,0
 403127c:	2100e7c4 	addi	r4,r4,927
 4031280:	20c7883a 	add	r3,r4,r3
 4031284:	18c00003 	ldbu	r3,0(r3)
 4031288:	1887883a 	add	r3,r3,r2
 403128c:	00800804 	movi	r2,32
 4031290:	10e5c83a 	sub	r18,r2,r3
 4031294:	9000901e 	bne	r18,zero,40314d8 <__umoddi3+0x41c>
 4031298:	982cd43a 	srli	r22,r19,16
 403129c:	8ce3c83a 	sub	r17,r17,r19
 40312a0:	9d7fffcc 	andi	r21,r19,65535
 40312a4:	b00b883a 	mov	r5,r22
 40312a8:	8809883a 	mov	r4,r17
 40312ac:	40247500 	call	4024750 <__umodsi3>
 40312b0:	8809883a 	mov	r4,r17
 40312b4:	b00b883a 	mov	r5,r22
 40312b8:	1021883a 	mov	r16,r2
 40312bc:	40246ec0 	call	40246ec <__udivsi3>
 40312c0:	8006943a 	slli	r3,r16,16
 40312c4:	a008d43a 	srli	r4,r20,16
 40312c8:	1545383a 	mul	r2,r2,r21
 40312cc:	20c8b03a 	or	r4,r4,r3
 40312d0:	2080042e 	bgeu	r4,r2,40312e4 <__umoddi3+0x228>
 40312d4:	24c9883a 	add	r4,r4,r19
 40312d8:	24c00236 	bltu	r4,r19,40312e4 <__umoddi3+0x228>
 40312dc:	2080012e 	bgeu	r4,r2,40312e4 <__umoddi3+0x228>
 40312e0:	24c9883a 	add	r4,r4,r19
 40312e4:	20a1c83a 	sub	r16,r4,r2
 40312e8:	b00b883a 	mov	r5,r22
 40312ec:	8009883a 	mov	r4,r16
 40312f0:	40247500 	call	4024750 <__umodsi3>
 40312f4:	1023883a 	mov	r17,r2
 40312f8:	b00b883a 	mov	r5,r22
 40312fc:	8009883a 	mov	r4,r16
 4031300:	40246ec0 	call	40246ec <__udivsi3>
 4031304:	8822943a 	slli	r17,r17,16
 4031308:	1545383a 	mul	r2,r2,r21
 403130c:	a53fffcc 	andi	r20,r20,65535
 4031310:	a446b03a 	or	r3,r20,r17
 4031314:	18bfb02e 	bgeu	r3,r2,40311d8 <__flash_rwdata_start+0xffffaf6c>
 4031318:	003fab06 	br	40311c8 <__flash_rwdata_start+0xffffaf5c>
 403131c:	2005883a 	mov	r2,r4
 4031320:	2807883a 	mov	r3,r5
 4031324:	dfc00b17 	ldw	ra,44(sp)
 4031328:	df000a17 	ldw	fp,40(sp)
 403132c:	ddc00917 	ldw	r23,36(sp)
 4031330:	dd800817 	ldw	r22,32(sp)
 4031334:	dd400717 	ldw	r21,28(sp)
 4031338:	dd000617 	ldw	r20,24(sp)
 403133c:	dcc00517 	ldw	r19,20(sp)
 4031340:	dc800417 	ldw	r18,16(sp)
 4031344:	dc400317 	ldw	r17,12(sp)
 4031348:	dc000217 	ldw	r16,8(sp)
 403134c:	dec00c04 	addi	sp,sp,48
 4031350:	f800283a 	ret
 4031354:	04c03fc4 	movi	r19,255
 4031358:	99c9803a 	cmpltu	r4,r19,r7
 403135c:	200890fa 	slli	r4,r4,3
 4031360:	003fa806 	br	4031204 <__flash_rwdata_start+0xffffaf98>
 4031364:	00803fc4 	movi	r2,255
 4031368:	14c5803a 	cmpltu	r2,r2,r19
 403136c:	100490fa 	slli	r2,r2,3
 4031370:	003fc006 	br	4031274 <__flash_rwdata_start+0xffffb008>
 4031374:	00804034 	movhi	r2,256
 4031378:	10bfffc4 	addi	r2,r2,-1
 403137c:	11808b36 	bltu	r2,r6,40315ac <__umoddi3+0x4f0>
 4031380:	01000404 	movi	r4,16
 4031384:	003f6406 	br	4031118 <__flash_rwdata_start+0xffffaeac>
 4031388:	34c4d83a 	srl	r2,r6,r19
 403138c:	3d0e983a 	sll	r7,r7,r20
 4031390:	8cf8d83a 	srl	fp,r17,r19
 4031394:	8d10983a 	sll	r8,r17,r20
 4031398:	38aab03a 	or	r21,r7,r2
 403139c:	a82cd43a 	srli	r22,r21,16
 40313a0:	84e2d83a 	srl	r17,r16,r19
 40313a4:	e009883a 	mov	r4,fp
 40313a8:	b00b883a 	mov	r5,r22
 40313ac:	8a22b03a 	or	r17,r17,r8
 40313b0:	3524983a 	sll	r18,r6,r20
 40313b4:	40247500 	call	4024750 <__umodsi3>
 40313b8:	e009883a 	mov	r4,fp
 40313bc:	b00b883a 	mov	r5,r22
 40313c0:	102f883a 	mov	r23,r2
 40313c4:	40246ec0 	call	40246ec <__udivsi3>
 40313c8:	100d883a 	mov	r6,r2
 40313cc:	b808943a 	slli	r4,r23,16
 40313d0:	aa3fffcc 	andi	r8,r21,65535
 40313d4:	8804d43a 	srli	r2,r17,16
 40313d8:	41af383a 	mul	r23,r8,r6
 40313dc:	8520983a 	sll	r16,r16,r20
 40313e0:	1104b03a 	or	r2,r2,r4
 40313e4:	15c0042e 	bgeu	r2,r23,40313f8 <__umoddi3+0x33c>
 40313e8:	1545883a 	add	r2,r2,r21
 40313ec:	30ffffc4 	addi	r3,r6,-1
 40313f0:	1540742e 	bgeu	r2,r21,40315c4 <__umoddi3+0x508>
 40313f4:	180d883a 	mov	r6,r3
 40313f8:	15efc83a 	sub	r23,r2,r23
 40313fc:	b00b883a 	mov	r5,r22
 4031400:	b809883a 	mov	r4,r23
 4031404:	d9800115 	stw	r6,4(sp)
 4031408:	da000015 	stw	r8,0(sp)
 403140c:	40247500 	call	4024750 <__umodsi3>
 4031410:	b00b883a 	mov	r5,r22
 4031414:	b809883a 	mov	r4,r23
 4031418:	1039883a 	mov	fp,r2
 403141c:	40246ec0 	call	40246ec <__udivsi3>
 4031420:	da000017 	ldw	r8,0(sp)
 4031424:	e038943a 	slli	fp,fp,16
 4031428:	100b883a 	mov	r5,r2
 403142c:	4089383a 	mul	r4,r8,r2
 4031430:	8a3fffcc 	andi	r8,r17,65535
 4031434:	4710b03a 	or	r8,r8,fp
 4031438:	d9800117 	ldw	r6,4(sp)
 403143c:	4100042e 	bgeu	r8,r4,4031450 <__umoddi3+0x394>
 4031440:	4551883a 	add	r8,r8,r21
 4031444:	10bfffc4 	addi	r2,r2,-1
 4031448:	45405a2e 	bgeu	r8,r21,40315b4 <__umoddi3+0x4f8>
 403144c:	100b883a 	mov	r5,r2
 4031450:	300c943a 	slli	r6,r6,16
 4031454:	91ffffcc 	andi	r7,r18,65535
 4031458:	9004d43a 	srli	r2,r18,16
 403145c:	314cb03a 	or	r6,r6,r5
 4031460:	317fffcc 	andi	r5,r6,65535
 4031464:	300cd43a 	srli	r6,r6,16
 4031468:	29d3383a 	mul	r9,r5,r7
 403146c:	288b383a 	mul	r5,r5,r2
 4031470:	31cf383a 	mul	r7,r6,r7
 4031474:	4806d43a 	srli	r3,r9,16
 4031478:	4111c83a 	sub	r8,r8,r4
 403147c:	29cb883a 	add	r5,r5,r7
 4031480:	194b883a 	add	r5,r3,r5
 4031484:	3085383a 	mul	r2,r6,r2
 4031488:	29c0022e 	bgeu	r5,r7,4031494 <__umoddi3+0x3d8>
 403148c:	00c00074 	movhi	r3,1
 4031490:	10c5883a 	add	r2,r2,r3
 4031494:	2808d43a 	srli	r4,r5,16
 4031498:	280a943a 	slli	r5,r5,16
 403149c:	4a7fffcc 	andi	r9,r9,65535
 40314a0:	2085883a 	add	r2,r4,r2
 40314a4:	2a4b883a 	add	r5,r5,r9
 40314a8:	40803636 	bltu	r8,r2,4031584 <__umoddi3+0x4c8>
 40314ac:	40804d26 	beq	r8,r2,40315e4 <__umoddi3+0x528>
 40314b0:	4089c83a 	sub	r4,r8,r2
 40314b4:	280f883a 	mov	r7,r5
 40314b8:	81cfc83a 	sub	r7,r16,r7
 40314bc:	81c7803a 	cmpltu	r3,r16,r7
 40314c0:	20c7c83a 	sub	r3,r4,r3
 40314c4:	1cc4983a 	sll	r2,r3,r19
 40314c8:	3d0ed83a 	srl	r7,r7,r20
 40314cc:	1d06d83a 	srl	r3,r3,r20
 40314d0:	11c4b03a 	or	r2,r2,r7
 40314d4:	003f9306 	br	4031324 <__flash_rwdata_start+0xffffb0b8>
 40314d8:	9ca6983a 	sll	r19,r19,r18
 40314dc:	88e8d83a 	srl	r20,r17,r3
 40314e0:	80c4d83a 	srl	r2,r16,r3
 40314e4:	982cd43a 	srli	r22,r19,16
 40314e8:	8ca2983a 	sll	r17,r17,r18
 40314ec:	a009883a 	mov	r4,r20
 40314f0:	b00b883a 	mov	r5,r22
 40314f4:	1478b03a 	or	fp,r2,r17
 40314f8:	40247500 	call	4024750 <__umodsi3>
 40314fc:	a009883a 	mov	r4,r20
 4031500:	b00b883a 	mov	r5,r22
 4031504:	1023883a 	mov	r17,r2
 4031508:	40246ec0 	call	40246ec <__udivsi3>
 403150c:	9d7fffcc 	andi	r21,r19,65535
 4031510:	880a943a 	slli	r5,r17,16
 4031514:	e008d43a 	srli	r4,fp,16
 4031518:	a885383a 	mul	r2,r21,r2
 403151c:	84a8983a 	sll	r20,r16,r18
 4031520:	2148b03a 	or	r4,r4,r5
 4031524:	2080042e 	bgeu	r4,r2,4031538 <__umoddi3+0x47c>
 4031528:	24c9883a 	add	r4,r4,r19
 403152c:	24c00236 	bltu	r4,r19,4031538 <__umoddi3+0x47c>
 4031530:	2080012e 	bgeu	r4,r2,4031538 <__umoddi3+0x47c>
 4031534:	24c9883a 	add	r4,r4,r19
 4031538:	20a3c83a 	sub	r17,r4,r2
 403153c:	b00b883a 	mov	r5,r22
 4031540:	8809883a 	mov	r4,r17
 4031544:	40247500 	call	4024750 <__umodsi3>
 4031548:	102f883a 	mov	r23,r2
 403154c:	8809883a 	mov	r4,r17
 4031550:	b00b883a 	mov	r5,r22
 4031554:	40246ec0 	call	40246ec <__udivsi3>
 4031558:	b82e943a 	slli	r23,r23,16
 403155c:	a885383a 	mul	r2,r21,r2
 4031560:	e13fffcc 	andi	r4,fp,65535
 4031564:	25c8b03a 	or	r4,r4,r23
 4031568:	2080042e 	bgeu	r4,r2,403157c <__umoddi3+0x4c0>
 403156c:	24c9883a 	add	r4,r4,r19
 4031570:	24c00236 	bltu	r4,r19,403157c <__umoddi3+0x4c0>
 4031574:	2080012e 	bgeu	r4,r2,403157c <__umoddi3+0x4c0>
 4031578:	24c9883a 	add	r4,r4,r19
 403157c:	20a3c83a 	sub	r17,r4,r2
 4031580:	003f4806 	br	40312a4 <__flash_rwdata_start+0xffffb038>
 4031584:	2c8fc83a 	sub	r7,r5,r18
 4031588:	1545c83a 	sub	r2,r2,r21
 403158c:	29cb803a 	cmpltu	r5,r5,r7
 4031590:	1145c83a 	sub	r2,r2,r5
 4031594:	4089c83a 	sub	r4,r8,r2
 4031598:	003fc706 	br	40314b8 <__flash_rwdata_start+0xffffb24c>
 403159c:	01000604 	movi	r4,24
 40315a0:	003f1806 	br	4031204 <__flash_rwdata_start+0xffffaf98>
 40315a4:	00800604 	movi	r2,24
 40315a8:	003f3206 	br	4031274 <__flash_rwdata_start+0xffffb008>
 40315ac:	01000604 	movi	r4,24
 40315b0:	003ed906 	br	4031118 <__flash_rwdata_start+0xffffaeac>
 40315b4:	413fa52e 	bgeu	r8,r4,403144c <__flash_rwdata_start+0xffffb1e0>
 40315b8:	297fff84 	addi	r5,r5,-2
 40315bc:	4551883a 	add	r8,r8,r21
 40315c0:	003fa306 	br	4031450 <__flash_rwdata_start+0xffffb1e4>
 40315c4:	15ff8b2e 	bgeu	r2,r23,40313f4 <__flash_rwdata_start+0xffffb188>
 40315c8:	31bfff84 	addi	r6,r6,-2
 40315cc:	1545883a 	add	r2,r2,r21
 40315d0:	003f8906 	br	40313f8 <__flash_rwdata_start+0xffffb18c>
 40315d4:	24c9883a 	add	r4,r4,r19
 40315d8:	003eee06 	br	4031194 <__flash_rwdata_start+0xffffaf28>
 40315dc:	8005883a 	mov	r2,r16
 40315e0:	003f1706 	br	4031240 <__flash_rwdata_start+0xffffafd4>
 40315e4:	817fe736 	bltu	r16,r5,4031584 <__flash_rwdata_start+0xffffb318>
 40315e8:	280f883a 	mov	r7,r5
 40315ec:	0009883a 	mov	r4,zero
 40315f0:	003fb106 	br	40314b8 <__flash_rwdata_start+0xffffb24c>

040315f4 <__adddf3>:
 40315f4:	02c00434 	movhi	r11,16
 40315f8:	5affffc4 	addi	r11,r11,-1
 40315fc:	2806d7fa 	srli	r3,r5,31
 4031600:	2ad4703a 	and	r10,r5,r11
 4031604:	3ad2703a 	and	r9,r7,r11
 4031608:	3804d53a 	srli	r2,r7,20
 403160c:	3018d77a 	srli	r12,r6,29
 4031610:	280ad53a 	srli	r5,r5,20
 4031614:	501490fa 	slli	r10,r10,3
 4031618:	2010d77a 	srli	r8,r4,29
 403161c:	481290fa 	slli	r9,r9,3
 4031620:	380ed7fa 	srli	r7,r7,31
 4031624:	defffb04 	addi	sp,sp,-20
 4031628:	dc800215 	stw	r18,8(sp)
 403162c:	dc400115 	stw	r17,4(sp)
 4031630:	dc000015 	stw	r16,0(sp)
 4031634:	dfc00415 	stw	ra,16(sp)
 4031638:	dcc00315 	stw	r19,12(sp)
 403163c:	1c803fcc 	andi	r18,r3,255
 4031640:	2c01ffcc 	andi	r16,r5,2047
 4031644:	5210b03a 	or	r8,r10,r8
 4031648:	202290fa 	slli	r17,r4,3
 403164c:	1081ffcc 	andi	r2,r2,2047
 4031650:	4b12b03a 	or	r9,r9,r12
 4031654:	300c90fa 	slli	r6,r6,3
 4031658:	91c07526 	beq	r18,r7,4031830 <__adddf3+0x23c>
 403165c:	8087c83a 	sub	r3,r16,r2
 4031660:	00c0ab0e 	bge	zero,r3,4031910 <__adddf3+0x31c>
 4031664:	10002a1e 	bne	r2,zero,4031710 <__adddf3+0x11c>
 4031668:	4984b03a 	or	r2,r9,r6
 403166c:	1000961e 	bne	r2,zero,40318c8 <__adddf3+0x2d4>
 4031670:	888001cc 	andi	r2,r17,7
 4031674:	10000726 	beq	r2,zero,4031694 <__adddf3+0xa0>
 4031678:	888003cc 	andi	r2,r17,15
 403167c:	00c00104 	movi	r3,4
 4031680:	10c00426 	beq	r2,r3,4031694 <__adddf3+0xa0>
 4031684:	88c7883a 	add	r3,r17,r3
 4031688:	1c63803a 	cmpltu	r17,r3,r17
 403168c:	4451883a 	add	r8,r8,r17
 4031690:	1823883a 	mov	r17,r3
 4031694:	4080202c 	andhi	r2,r8,128
 4031698:	10005926 	beq	r2,zero,4031800 <__adddf3+0x20c>
 403169c:	84000044 	addi	r16,r16,1
 40316a0:	0081ffc4 	movi	r2,2047
 40316a4:	8080ba26 	beq	r16,r2,4031990 <__adddf3+0x39c>
 40316a8:	00bfe034 	movhi	r2,65408
 40316ac:	10bfffc4 	addi	r2,r2,-1
 40316b0:	4090703a 	and	r8,r8,r2
 40316b4:	4004977a 	slli	r2,r8,29
 40316b8:	4010927a 	slli	r8,r8,9
 40316bc:	8822d0fa 	srli	r17,r17,3
 40316c0:	8401ffcc 	andi	r16,r16,2047
 40316c4:	4010d33a 	srli	r8,r8,12
 40316c8:	9007883a 	mov	r3,r18
 40316cc:	1444b03a 	or	r2,r2,r17
 40316d0:	8401ffcc 	andi	r16,r16,2047
 40316d4:	8020953a 	slli	r16,r16,20
 40316d8:	18c03fcc 	andi	r3,r3,255
 40316dc:	01000434 	movhi	r4,16
 40316e0:	213fffc4 	addi	r4,r4,-1
 40316e4:	180697fa 	slli	r3,r3,31
 40316e8:	4110703a 	and	r8,r8,r4
 40316ec:	4410b03a 	or	r8,r8,r16
 40316f0:	40c6b03a 	or	r3,r8,r3
 40316f4:	dfc00417 	ldw	ra,16(sp)
 40316f8:	dcc00317 	ldw	r19,12(sp)
 40316fc:	dc800217 	ldw	r18,8(sp)
 4031700:	dc400117 	ldw	r17,4(sp)
 4031704:	dc000017 	ldw	r16,0(sp)
 4031708:	dec00504 	addi	sp,sp,20
 403170c:	f800283a 	ret
 4031710:	0081ffc4 	movi	r2,2047
 4031714:	80bfd626 	beq	r16,r2,4031670 <__flash_rwdata_start+0xffffb404>
 4031718:	4a402034 	orhi	r9,r9,128
 403171c:	00800e04 	movi	r2,56
 4031720:	10c09f16 	blt	r2,r3,40319a0 <__adddf3+0x3ac>
 4031724:	008007c4 	movi	r2,31
 4031728:	10c0c216 	blt	r2,r3,4031a34 <__adddf3+0x440>
 403172c:	00800804 	movi	r2,32
 4031730:	10c5c83a 	sub	r2,r2,r3
 4031734:	488a983a 	sll	r5,r9,r2
 4031738:	30c8d83a 	srl	r4,r6,r3
 403173c:	3084983a 	sll	r2,r6,r2
 4031740:	48c6d83a 	srl	r3,r9,r3
 4031744:	290cb03a 	or	r6,r5,r4
 4031748:	1004c03a 	cmpne	r2,r2,zero
 403174c:	308cb03a 	or	r6,r6,r2
 4031750:	898dc83a 	sub	r6,r17,r6
 4031754:	89a3803a 	cmpltu	r17,r17,r6
 4031758:	40d1c83a 	sub	r8,r8,r3
 403175c:	4451c83a 	sub	r8,r8,r17
 4031760:	3023883a 	mov	r17,r6
 4031764:	4080202c 	andhi	r2,r8,128
 4031768:	10002326 	beq	r2,zero,40317f8 <__adddf3+0x204>
 403176c:	04c02034 	movhi	r19,128
 4031770:	9cffffc4 	addi	r19,r19,-1
 4031774:	44e6703a 	and	r19,r8,r19
 4031778:	98007626 	beq	r19,zero,4031954 <__adddf3+0x360>
 403177c:	9809883a 	mov	r4,r19
 4031780:	4026ee40 	call	4026ee4 <__clzsi2>
 4031784:	10fffe04 	addi	r3,r2,-8
 4031788:	010007c4 	movi	r4,31
 403178c:	20c07716 	blt	r4,r3,403196c <__adddf3+0x378>
 4031790:	00800804 	movi	r2,32
 4031794:	10c5c83a 	sub	r2,r2,r3
 4031798:	8884d83a 	srl	r2,r17,r2
 403179c:	98d0983a 	sll	r8,r19,r3
 40317a0:	88e2983a 	sll	r17,r17,r3
 40317a4:	1204b03a 	or	r2,r2,r8
 40317a8:	1c007416 	blt	r3,r16,403197c <__adddf3+0x388>
 40317ac:	1c21c83a 	sub	r16,r3,r16
 40317b0:	82000044 	addi	r8,r16,1
 40317b4:	00c007c4 	movi	r3,31
 40317b8:	1a009116 	blt	r3,r8,4031a00 <__adddf3+0x40c>
 40317bc:	00c00804 	movi	r3,32
 40317c0:	1a07c83a 	sub	r3,r3,r8
 40317c4:	8a08d83a 	srl	r4,r17,r8
 40317c8:	88e2983a 	sll	r17,r17,r3
 40317cc:	10c6983a 	sll	r3,r2,r3
 40317d0:	1210d83a 	srl	r8,r2,r8
 40317d4:	8804c03a 	cmpne	r2,r17,zero
 40317d8:	1906b03a 	or	r3,r3,r4
 40317dc:	18a2b03a 	or	r17,r3,r2
 40317e0:	0021883a 	mov	r16,zero
 40317e4:	003fa206 	br	4031670 <__flash_rwdata_start+0xffffb404>
 40317e8:	1890b03a 	or	r8,r3,r2
 40317ec:	40017d26 	beq	r8,zero,4031de4 <__adddf3+0x7f0>
 40317f0:	1011883a 	mov	r8,r2
 40317f4:	1823883a 	mov	r17,r3
 40317f8:	888001cc 	andi	r2,r17,7
 40317fc:	103f9e1e 	bne	r2,zero,4031678 <__flash_rwdata_start+0xffffb40c>
 4031800:	4004977a 	slli	r2,r8,29
 4031804:	8822d0fa 	srli	r17,r17,3
 4031808:	4010d0fa 	srli	r8,r8,3
 403180c:	9007883a 	mov	r3,r18
 4031810:	1444b03a 	or	r2,r2,r17
 4031814:	0101ffc4 	movi	r4,2047
 4031818:	81002426 	beq	r16,r4,40318ac <__adddf3+0x2b8>
 403181c:	8120703a 	and	r16,r16,r4
 4031820:	01000434 	movhi	r4,16
 4031824:	213fffc4 	addi	r4,r4,-1
 4031828:	4110703a 	and	r8,r8,r4
 403182c:	003fa806 	br	40316d0 <__flash_rwdata_start+0xffffb464>
 4031830:	8089c83a 	sub	r4,r16,r2
 4031834:	01005e0e 	bge	zero,r4,40319b0 <__adddf3+0x3bc>
 4031838:	10002b26 	beq	r2,zero,40318e8 <__adddf3+0x2f4>
 403183c:	0081ffc4 	movi	r2,2047
 4031840:	80bf8b26 	beq	r16,r2,4031670 <__flash_rwdata_start+0xffffb404>
 4031844:	4a402034 	orhi	r9,r9,128
 4031848:	00800e04 	movi	r2,56
 403184c:	1100a40e 	bge	r2,r4,4031ae0 <__adddf3+0x4ec>
 4031850:	498cb03a 	or	r6,r9,r6
 4031854:	300ac03a 	cmpne	r5,r6,zero
 4031858:	0013883a 	mov	r9,zero
 403185c:	2c4b883a 	add	r5,r5,r17
 4031860:	2c63803a 	cmpltu	r17,r5,r17
 4031864:	4a11883a 	add	r8,r9,r8
 4031868:	8a11883a 	add	r8,r17,r8
 403186c:	2823883a 	mov	r17,r5
 4031870:	4080202c 	andhi	r2,r8,128
 4031874:	103fe026 	beq	r2,zero,40317f8 <__flash_rwdata_start+0xffffb58c>
 4031878:	84000044 	addi	r16,r16,1
 403187c:	0081ffc4 	movi	r2,2047
 4031880:	8080d226 	beq	r16,r2,4031bcc <__adddf3+0x5d8>
 4031884:	00bfe034 	movhi	r2,65408
 4031888:	10bfffc4 	addi	r2,r2,-1
 403188c:	4090703a 	and	r8,r8,r2
 4031890:	880ad07a 	srli	r5,r17,1
 4031894:	400897fa 	slli	r4,r8,31
 4031898:	88c0004c 	andi	r3,r17,1
 403189c:	28e2b03a 	or	r17,r5,r3
 40318a0:	4010d07a 	srli	r8,r8,1
 40318a4:	2462b03a 	or	r17,r4,r17
 40318a8:	003f7106 	br	4031670 <__flash_rwdata_start+0xffffb404>
 40318ac:	4088b03a 	or	r4,r8,r2
 40318b0:	20014526 	beq	r4,zero,4031dc8 <__adddf3+0x7d4>
 40318b4:	01000434 	movhi	r4,16
 40318b8:	42000234 	orhi	r8,r8,8
 40318bc:	213fffc4 	addi	r4,r4,-1
 40318c0:	4110703a 	and	r8,r8,r4
 40318c4:	003f8206 	br	40316d0 <__flash_rwdata_start+0xffffb464>
 40318c8:	18ffffc4 	addi	r3,r3,-1
 40318cc:	1800491e 	bne	r3,zero,40319f4 <__adddf3+0x400>
 40318d0:	898bc83a 	sub	r5,r17,r6
 40318d4:	8963803a 	cmpltu	r17,r17,r5
 40318d8:	4251c83a 	sub	r8,r8,r9
 40318dc:	4451c83a 	sub	r8,r8,r17
 40318e0:	2823883a 	mov	r17,r5
 40318e4:	003f9f06 	br	4031764 <__flash_rwdata_start+0xffffb4f8>
 40318e8:	4984b03a 	or	r2,r9,r6
 40318ec:	103f6026 	beq	r2,zero,4031670 <__flash_rwdata_start+0xffffb404>
 40318f0:	213fffc4 	addi	r4,r4,-1
 40318f4:	2000931e 	bne	r4,zero,4031b44 <__adddf3+0x550>
 40318f8:	898d883a 	add	r6,r17,r6
 40318fc:	3463803a 	cmpltu	r17,r6,r17
 4031900:	4251883a 	add	r8,r8,r9
 4031904:	8a11883a 	add	r8,r17,r8
 4031908:	3023883a 	mov	r17,r6
 403190c:	003fd806 	br	4031870 <__flash_rwdata_start+0xffffb604>
 4031910:	1800541e 	bne	r3,zero,4031a64 <__adddf3+0x470>
 4031914:	80800044 	addi	r2,r16,1
 4031918:	1081ffcc 	andi	r2,r2,2047
 403191c:	00c00044 	movi	r3,1
 4031920:	1880a00e 	bge	r3,r2,4031ba4 <__adddf3+0x5b0>
 4031924:	8989c83a 	sub	r4,r17,r6
 4031928:	8905803a 	cmpltu	r2,r17,r4
 403192c:	4267c83a 	sub	r19,r8,r9
 4031930:	98a7c83a 	sub	r19,r19,r2
 4031934:	9880202c 	andhi	r2,r19,128
 4031938:	10006326 	beq	r2,zero,4031ac8 <__adddf3+0x4d4>
 403193c:	3463c83a 	sub	r17,r6,r17
 4031940:	4a07c83a 	sub	r3,r9,r8
 4031944:	344d803a 	cmpltu	r6,r6,r17
 4031948:	19a7c83a 	sub	r19,r3,r6
 403194c:	3825883a 	mov	r18,r7
 4031950:	983f8a1e 	bne	r19,zero,403177c <__flash_rwdata_start+0xffffb510>
 4031954:	8809883a 	mov	r4,r17
 4031958:	4026ee40 	call	4026ee4 <__clzsi2>
 403195c:	10800804 	addi	r2,r2,32
 4031960:	10fffe04 	addi	r3,r2,-8
 4031964:	010007c4 	movi	r4,31
 4031968:	20ff890e 	bge	r4,r3,4031790 <__flash_rwdata_start+0xffffb524>
 403196c:	10bff604 	addi	r2,r2,-40
 4031970:	8884983a 	sll	r2,r17,r2
 4031974:	0023883a 	mov	r17,zero
 4031978:	1c3f8c0e 	bge	r3,r16,40317ac <__flash_rwdata_start+0xffffb540>
 403197c:	023fe034 	movhi	r8,65408
 4031980:	423fffc4 	addi	r8,r8,-1
 4031984:	80e1c83a 	sub	r16,r16,r3
 4031988:	1210703a 	and	r8,r2,r8
 403198c:	003f3806 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031990:	9007883a 	mov	r3,r18
 4031994:	0011883a 	mov	r8,zero
 4031998:	0005883a 	mov	r2,zero
 403199c:	003f4c06 	br	40316d0 <__flash_rwdata_start+0xffffb464>
 40319a0:	498cb03a 	or	r6,r9,r6
 40319a4:	300cc03a 	cmpne	r6,r6,zero
 40319a8:	0007883a 	mov	r3,zero
 40319ac:	003f6806 	br	4031750 <__flash_rwdata_start+0xffffb4e4>
 40319b0:	20009c1e 	bne	r4,zero,4031c24 <__adddf3+0x630>
 40319b4:	80800044 	addi	r2,r16,1
 40319b8:	1141ffcc 	andi	r5,r2,2047
 40319bc:	01000044 	movi	r4,1
 40319c0:	2140670e 	bge	r4,r5,4031b60 <__adddf3+0x56c>
 40319c4:	0101ffc4 	movi	r4,2047
 40319c8:	11007f26 	beq	r2,r4,4031bc8 <__adddf3+0x5d4>
 40319cc:	898d883a 	add	r6,r17,r6
 40319d0:	4247883a 	add	r3,r8,r9
 40319d4:	3451803a 	cmpltu	r8,r6,r17
 40319d8:	40d1883a 	add	r8,r8,r3
 40319dc:	402297fa 	slli	r17,r8,31
 40319e0:	300cd07a 	srli	r6,r6,1
 40319e4:	4010d07a 	srli	r8,r8,1
 40319e8:	1021883a 	mov	r16,r2
 40319ec:	89a2b03a 	or	r17,r17,r6
 40319f0:	003f1f06 	br	4031670 <__flash_rwdata_start+0xffffb404>
 40319f4:	0081ffc4 	movi	r2,2047
 40319f8:	80bf481e 	bne	r16,r2,403171c <__flash_rwdata_start+0xffffb4b0>
 40319fc:	003f1c06 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031a00:	843ff844 	addi	r16,r16,-31
 4031a04:	01000804 	movi	r4,32
 4031a08:	1406d83a 	srl	r3,r2,r16
 4031a0c:	41005026 	beq	r8,r4,4031b50 <__adddf3+0x55c>
 4031a10:	01001004 	movi	r4,64
 4031a14:	2211c83a 	sub	r8,r4,r8
 4031a18:	1204983a 	sll	r2,r2,r8
 4031a1c:	88a2b03a 	or	r17,r17,r2
 4031a20:	8822c03a 	cmpne	r17,r17,zero
 4031a24:	1c62b03a 	or	r17,r3,r17
 4031a28:	0011883a 	mov	r8,zero
 4031a2c:	0021883a 	mov	r16,zero
 4031a30:	003f7106 	br	40317f8 <__flash_rwdata_start+0xffffb58c>
 4031a34:	193ff804 	addi	r4,r3,-32
 4031a38:	00800804 	movi	r2,32
 4031a3c:	4908d83a 	srl	r4,r9,r4
 4031a40:	18804526 	beq	r3,r2,4031b58 <__adddf3+0x564>
 4031a44:	00801004 	movi	r2,64
 4031a48:	10c5c83a 	sub	r2,r2,r3
 4031a4c:	4886983a 	sll	r3,r9,r2
 4031a50:	198cb03a 	or	r6,r3,r6
 4031a54:	300cc03a 	cmpne	r6,r6,zero
 4031a58:	218cb03a 	or	r6,r4,r6
 4031a5c:	0007883a 	mov	r3,zero
 4031a60:	003f3b06 	br	4031750 <__flash_rwdata_start+0xffffb4e4>
 4031a64:	80002a26 	beq	r16,zero,4031b10 <__adddf3+0x51c>
 4031a68:	0101ffc4 	movi	r4,2047
 4031a6c:	11006826 	beq	r2,r4,4031c10 <__adddf3+0x61c>
 4031a70:	00c7c83a 	sub	r3,zero,r3
 4031a74:	42002034 	orhi	r8,r8,128
 4031a78:	01000e04 	movi	r4,56
 4031a7c:	20c07c16 	blt	r4,r3,4031c70 <__adddf3+0x67c>
 4031a80:	010007c4 	movi	r4,31
 4031a84:	20c0da16 	blt	r4,r3,4031df0 <__adddf3+0x7fc>
 4031a88:	01000804 	movi	r4,32
 4031a8c:	20c9c83a 	sub	r4,r4,r3
 4031a90:	4114983a 	sll	r10,r8,r4
 4031a94:	88cad83a 	srl	r5,r17,r3
 4031a98:	8908983a 	sll	r4,r17,r4
 4031a9c:	40c6d83a 	srl	r3,r8,r3
 4031aa0:	5162b03a 	or	r17,r10,r5
 4031aa4:	2008c03a 	cmpne	r4,r4,zero
 4031aa8:	8922b03a 	or	r17,r17,r4
 4031aac:	3463c83a 	sub	r17,r6,r17
 4031ab0:	48c7c83a 	sub	r3,r9,r3
 4031ab4:	344d803a 	cmpltu	r6,r6,r17
 4031ab8:	1991c83a 	sub	r8,r3,r6
 4031abc:	1021883a 	mov	r16,r2
 4031ac0:	3825883a 	mov	r18,r7
 4031ac4:	003f2706 	br	4031764 <__flash_rwdata_start+0xffffb4f8>
 4031ac8:	24d0b03a 	or	r8,r4,r19
 4031acc:	40001b1e 	bne	r8,zero,4031b3c <__adddf3+0x548>
 4031ad0:	0005883a 	mov	r2,zero
 4031ad4:	0007883a 	mov	r3,zero
 4031ad8:	0021883a 	mov	r16,zero
 4031adc:	003f4d06 	br	4031814 <__flash_rwdata_start+0xffffb5a8>
 4031ae0:	008007c4 	movi	r2,31
 4031ae4:	11003c16 	blt	r2,r4,4031bd8 <__adddf3+0x5e4>
 4031ae8:	00800804 	movi	r2,32
 4031aec:	1105c83a 	sub	r2,r2,r4
 4031af0:	488e983a 	sll	r7,r9,r2
 4031af4:	310ad83a 	srl	r5,r6,r4
 4031af8:	3084983a 	sll	r2,r6,r2
 4031afc:	4912d83a 	srl	r9,r9,r4
 4031b00:	394ab03a 	or	r5,r7,r5
 4031b04:	1004c03a 	cmpne	r2,r2,zero
 4031b08:	288ab03a 	or	r5,r5,r2
 4031b0c:	003f5306 	br	403185c <__flash_rwdata_start+0xffffb5f0>
 4031b10:	4448b03a 	or	r4,r8,r17
 4031b14:	20003e26 	beq	r4,zero,4031c10 <__adddf3+0x61c>
 4031b18:	00c6303a 	nor	r3,zero,r3
 4031b1c:	18003a1e 	bne	r3,zero,4031c08 <__adddf3+0x614>
 4031b20:	3463c83a 	sub	r17,r6,r17
 4031b24:	4a07c83a 	sub	r3,r9,r8
 4031b28:	344d803a 	cmpltu	r6,r6,r17
 4031b2c:	1991c83a 	sub	r8,r3,r6
 4031b30:	1021883a 	mov	r16,r2
 4031b34:	3825883a 	mov	r18,r7
 4031b38:	003f0a06 	br	4031764 <__flash_rwdata_start+0xffffb4f8>
 4031b3c:	2023883a 	mov	r17,r4
 4031b40:	003f0d06 	br	4031778 <__flash_rwdata_start+0xffffb50c>
 4031b44:	0081ffc4 	movi	r2,2047
 4031b48:	80bf3f1e 	bne	r16,r2,4031848 <__flash_rwdata_start+0xffffb5dc>
 4031b4c:	003ec806 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031b50:	0005883a 	mov	r2,zero
 4031b54:	003fb106 	br	4031a1c <__flash_rwdata_start+0xffffb7b0>
 4031b58:	0007883a 	mov	r3,zero
 4031b5c:	003fbc06 	br	4031a50 <__flash_rwdata_start+0xffffb7e4>
 4031b60:	4444b03a 	or	r2,r8,r17
 4031b64:	8000871e 	bne	r16,zero,4031d84 <__adddf3+0x790>
 4031b68:	1000ba26 	beq	r2,zero,4031e54 <__adddf3+0x860>
 4031b6c:	4984b03a 	or	r2,r9,r6
 4031b70:	103ebf26 	beq	r2,zero,4031670 <__flash_rwdata_start+0xffffb404>
 4031b74:	8985883a 	add	r2,r17,r6
 4031b78:	4247883a 	add	r3,r8,r9
 4031b7c:	1451803a 	cmpltu	r8,r2,r17
 4031b80:	40d1883a 	add	r8,r8,r3
 4031b84:	40c0202c 	andhi	r3,r8,128
 4031b88:	1023883a 	mov	r17,r2
 4031b8c:	183f1a26 	beq	r3,zero,40317f8 <__flash_rwdata_start+0xffffb58c>
 4031b90:	00bfe034 	movhi	r2,65408
 4031b94:	10bfffc4 	addi	r2,r2,-1
 4031b98:	2021883a 	mov	r16,r4
 4031b9c:	4090703a 	and	r8,r8,r2
 4031ba0:	003eb306 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031ba4:	4444b03a 	or	r2,r8,r17
 4031ba8:	8000291e 	bne	r16,zero,4031c50 <__adddf3+0x65c>
 4031bac:	10004b1e 	bne	r2,zero,4031cdc <__adddf3+0x6e8>
 4031bb0:	4990b03a 	or	r8,r9,r6
 4031bb4:	40008b26 	beq	r8,zero,4031de4 <__adddf3+0x7f0>
 4031bb8:	4811883a 	mov	r8,r9
 4031bbc:	3023883a 	mov	r17,r6
 4031bc0:	3825883a 	mov	r18,r7
 4031bc4:	003eaa06 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031bc8:	1021883a 	mov	r16,r2
 4031bcc:	0011883a 	mov	r8,zero
 4031bd0:	0005883a 	mov	r2,zero
 4031bd4:	003f0f06 	br	4031814 <__flash_rwdata_start+0xffffb5a8>
 4031bd8:	217ff804 	addi	r5,r4,-32
 4031bdc:	00800804 	movi	r2,32
 4031be0:	494ad83a 	srl	r5,r9,r5
 4031be4:	20807d26 	beq	r4,r2,4031ddc <__adddf3+0x7e8>
 4031be8:	00801004 	movi	r2,64
 4031bec:	1109c83a 	sub	r4,r2,r4
 4031bf0:	4912983a 	sll	r9,r9,r4
 4031bf4:	498cb03a 	or	r6,r9,r6
 4031bf8:	300cc03a 	cmpne	r6,r6,zero
 4031bfc:	298ab03a 	or	r5,r5,r6
 4031c00:	0013883a 	mov	r9,zero
 4031c04:	003f1506 	br	403185c <__flash_rwdata_start+0xffffb5f0>
 4031c08:	0101ffc4 	movi	r4,2047
 4031c0c:	113f9a1e 	bne	r2,r4,4031a78 <__flash_rwdata_start+0xffffb80c>
 4031c10:	4811883a 	mov	r8,r9
 4031c14:	3023883a 	mov	r17,r6
 4031c18:	1021883a 	mov	r16,r2
 4031c1c:	3825883a 	mov	r18,r7
 4031c20:	003e9306 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031c24:	8000161e 	bne	r16,zero,4031c80 <__adddf3+0x68c>
 4031c28:	444ab03a 	or	r5,r8,r17
 4031c2c:	28005126 	beq	r5,zero,4031d74 <__adddf3+0x780>
 4031c30:	0108303a 	nor	r4,zero,r4
 4031c34:	20004d1e 	bne	r4,zero,4031d6c <__adddf3+0x778>
 4031c38:	89a3883a 	add	r17,r17,r6
 4031c3c:	4253883a 	add	r9,r8,r9
 4031c40:	898d803a 	cmpltu	r6,r17,r6
 4031c44:	3251883a 	add	r8,r6,r9
 4031c48:	1021883a 	mov	r16,r2
 4031c4c:	003f0806 	br	4031870 <__flash_rwdata_start+0xffffb604>
 4031c50:	1000301e 	bne	r2,zero,4031d14 <__adddf3+0x720>
 4031c54:	4984b03a 	or	r2,r9,r6
 4031c58:	10007126 	beq	r2,zero,4031e20 <__adddf3+0x82c>
 4031c5c:	4811883a 	mov	r8,r9
 4031c60:	3023883a 	mov	r17,r6
 4031c64:	3825883a 	mov	r18,r7
 4031c68:	0401ffc4 	movi	r16,2047
 4031c6c:	003e8006 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031c70:	4462b03a 	or	r17,r8,r17
 4031c74:	8822c03a 	cmpne	r17,r17,zero
 4031c78:	0007883a 	mov	r3,zero
 4031c7c:	003f8b06 	br	4031aac <__flash_rwdata_start+0xffffb840>
 4031c80:	0141ffc4 	movi	r5,2047
 4031c84:	11403b26 	beq	r2,r5,4031d74 <__adddf3+0x780>
 4031c88:	0109c83a 	sub	r4,zero,r4
 4031c8c:	42002034 	orhi	r8,r8,128
 4031c90:	01400e04 	movi	r5,56
 4031c94:	29006716 	blt	r5,r4,4031e34 <__adddf3+0x840>
 4031c98:	014007c4 	movi	r5,31
 4031c9c:	29007016 	blt	r5,r4,4031e60 <__adddf3+0x86c>
 4031ca0:	01400804 	movi	r5,32
 4031ca4:	290bc83a 	sub	r5,r5,r4
 4031ca8:	4154983a 	sll	r10,r8,r5
 4031cac:	890ed83a 	srl	r7,r17,r4
 4031cb0:	894a983a 	sll	r5,r17,r5
 4031cb4:	4108d83a 	srl	r4,r8,r4
 4031cb8:	51e2b03a 	or	r17,r10,r7
 4031cbc:	280ac03a 	cmpne	r5,r5,zero
 4031cc0:	8962b03a 	or	r17,r17,r5
 4031cc4:	89a3883a 	add	r17,r17,r6
 4031cc8:	2253883a 	add	r9,r4,r9
 4031ccc:	898d803a 	cmpltu	r6,r17,r6
 4031cd0:	3251883a 	add	r8,r6,r9
 4031cd4:	1021883a 	mov	r16,r2
 4031cd8:	003ee506 	br	4031870 <__flash_rwdata_start+0xffffb604>
 4031cdc:	4984b03a 	or	r2,r9,r6
 4031ce0:	103e6326 	beq	r2,zero,4031670 <__flash_rwdata_start+0xffffb404>
 4031ce4:	8987c83a 	sub	r3,r17,r6
 4031ce8:	88c9803a 	cmpltu	r4,r17,r3
 4031cec:	4245c83a 	sub	r2,r8,r9
 4031cf0:	1105c83a 	sub	r2,r2,r4
 4031cf4:	1100202c 	andhi	r4,r2,128
 4031cf8:	203ebb26 	beq	r4,zero,40317e8 <__flash_rwdata_start+0xffffb57c>
 4031cfc:	3463c83a 	sub	r17,r6,r17
 4031d00:	4a07c83a 	sub	r3,r9,r8
 4031d04:	344d803a 	cmpltu	r6,r6,r17
 4031d08:	1991c83a 	sub	r8,r3,r6
 4031d0c:	3825883a 	mov	r18,r7
 4031d10:	003e5706 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031d14:	4984b03a 	or	r2,r9,r6
 4031d18:	10002e26 	beq	r2,zero,4031dd4 <__adddf3+0x7e0>
 4031d1c:	4004d0fa 	srli	r2,r8,3
 4031d20:	8822d0fa 	srli	r17,r17,3
 4031d24:	4010977a 	slli	r8,r8,29
 4031d28:	10c0022c 	andhi	r3,r2,8
 4031d2c:	4462b03a 	or	r17,r8,r17
 4031d30:	18000826 	beq	r3,zero,4031d54 <__adddf3+0x760>
 4031d34:	4808d0fa 	srli	r4,r9,3
 4031d38:	20c0022c 	andhi	r3,r4,8
 4031d3c:	1800051e 	bne	r3,zero,4031d54 <__adddf3+0x760>
 4031d40:	300cd0fa 	srli	r6,r6,3
 4031d44:	4806977a 	slli	r3,r9,29
 4031d48:	2005883a 	mov	r2,r4
 4031d4c:	3825883a 	mov	r18,r7
 4031d50:	19a2b03a 	or	r17,r3,r6
 4031d54:	8810d77a 	srli	r8,r17,29
 4031d58:	100490fa 	slli	r2,r2,3
 4031d5c:	882290fa 	slli	r17,r17,3
 4031d60:	0401ffc4 	movi	r16,2047
 4031d64:	4090b03a 	or	r8,r8,r2
 4031d68:	003e4106 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031d6c:	0141ffc4 	movi	r5,2047
 4031d70:	117fc71e 	bne	r2,r5,4031c90 <__flash_rwdata_start+0xffffba24>
 4031d74:	4811883a 	mov	r8,r9
 4031d78:	3023883a 	mov	r17,r6
 4031d7c:	1021883a 	mov	r16,r2
 4031d80:	003e3b06 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031d84:	10002f26 	beq	r2,zero,4031e44 <__adddf3+0x850>
 4031d88:	4984b03a 	or	r2,r9,r6
 4031d8c:	10001126 	beq	r2,zero,4031dd4 <__adddf3+0x7e0>
 4031d90:	4004d0fa 	srli	r2,r8,3
 4031d94:	8822d0fa 	srli	r17,r17,3
 4031d98:	4010977a 	slli	r8,r8,29
 4031d9c:	10c0022c 	andhi	r3,r2,8
 4031da0:	4462b03a 	or	r17,r8,r17
 4031da4:	183feb26 	beq	r3,zero,4031d54 <__flash_rwdata_start+0xffffbae8>
 4031da8:	4808d0fa 	srli	r4,r9,3
 4031dac:	20c0022c 	andhi	r3,r4,8
 4031db0:	183fe81e 	bne	r3,zero,4031d54 <__flash_rwdata_start+0xffffbae8>
 4031db4:	300cd0fa 	srli	r6,r6,3
 4031db8:	4806977a 	slli	r3,r9,29
 4031dbc:	2005883a 	mov	r2,r4
 4031dc0:	19a2b03a 	or	r17,r3,r6
 4031dc4:	003fe306 	br	4031d54 <__flash_rwdata_start+0xffffbae8>
 4031dc8:	0011883a 	mov	r8,zero
 4031dcc:	0005883a 	mov	r2,zero
 4031dd0:	003e3f06 	br	40316d0 <__flash_rwdata_start+0xffffb464>
 4031dd4:	0401ffc4 	movi	r16,2047
 4031dd8:	003e2506 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031ddc:	0013883a 	mov	r9,zero
 4031de0:	003f8406 	br	4031bf4 <__flash_rwdata_start+0xffffb988>
 4031de4:	0005883a 	mov	r2,zero
 4031de8:	0007883a 	mov	r3,zero
 4031dec:	003e8906 	br	4031814 <__flash_rwdata_start+0xffffb5a8>
 4031df0:	197ff804 	addi	r5,r3,-32
 4031df4:	01000804 	movi	r4,32
 4031df8:	414ad83a 	srl	r5,r8,r5
 4031dfc:	19002426 	beq	r3,r4,4031e90 <__adddf3+0x89c>
 4031e00:	01001004 	movi	r4,64
 4031e04:	20c7c83a 	sub	r3,r4,r3
 4031e08:	40c6983a 	sll	r3,r8,r3
 4031e0c:	1c46b03a 	or	r3,r3,r17
 4031e10:	1806c03a 	cmpne	r3,r3,zero
 4031e14:	28e2b03a 	or	r17,r5,r3
 4031e18:	0007883a 	mov	r3,zero
 4031e1c:	003f2306 	br	4031aac <__flash_rwdata_start+0xffffb840>
 4031e20:	0007883a 	mov	r3,zero
 4031e24:	5811883a 	mov	r8,r11
 4031e28:	00bfffc4 	movi	r2,-1
 4031e2c:	0401ffc4 	movi	r16,2047
 4031e30:	003e7806 	br	4031814 <__flash_rwdata_start+0xffffb5a8>
 4031e34:	4462b03a 	or	r17,r8,r17
 4031e38:	8822c03a 	cmpne	r17,r17,zero
 4031e3c:	0009883a 	mov	r4,zero
 4031e40:	003fa006 	br	4031cc4 <__flash_rwdata_start+0xffffba58>
 4031e44:	4811883a 	mov	r8,r9
 4031e48:	3023883a 	mov	r17,r6
 4031e4c:	0401ffc4 	movi	r16,2047
 4031e50:	003e0706 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031e54:	4811883a 	mov	r8,r9
 4031e58:	3023883a 	mov	r17,r6
 4031e5c:	003e0406 	br	4031670 <__flash_rwdata_start+0xffffb404>
 4031e60:	21fff804 	addi	r7,r4,-32
 4031e64:	01400804 	movi	r5,32
 4031e68:	41ced83a 	srl	r7,r8,r7
 4031e6c:	21400a26 	beq	r4,r5,4031e98 <__adddf3+0x8a4>
 4031e70:	01401004 	movi	r5,64
 4031e74:	2909c83a 	sub	r4,r5,r4
 4031e78:	4108983a 	sll	r4,r8,r4
 4031e7c:	2448b03a 	or	r4,r4,r17
 4031e80:	2008c03a 	cmpne	r4,r4,zero
 4031e84:	3922b03a 	or	r17,r7,r4
 4031e88:	0009883a 	mov	r4,zero
 4031e8c:	003f8d06 	br	4031cc4 <__flash_rwdata_start+0xffffba58>
 4031e90:	0007883a 	mov	r3,zero
 4031e94:	003fdd06 	br	4031e0c <__flash_rwdata_start+0xffffbba0>
 4031e98:	0009883a 	mov	r4,zero
 4031e9c:	003ff706 	br	4031e7c <__flash_rwdata_start+0xffffbc10>

04031ea0 <__eqdf2>:
 4031ea0:	2804d53a 	srli	r2,r5,20
 4031ea4:	3806d53a 	srli	r3,r7,20
 4031ea8:	02000434 	movhi	r8,16
 4031eac:	423fffc4 	addi	r8,r8,-1
 4031eb0:	1081ffcc 	andi	r2,r2,2047
 4031eb4:	0281ffc4 	movi	r10,2047
 4031eb8:	2a12703a 	and	r9,r5,r8
 4031ebc:	18c1ffcc 	andi	r3,r3,2047
 4031ec0:	3a10703a 	and	r8,r7,r8
 4031ec4:	280ad7fa 	srli	r5,r5,31
 4031ec8:	380ed7fa 	srli	r7,r7,31
 4031ecc:	12801026 	beq	r2,r10,4031f10 <__eqdf2+0x70>
 4031ed0:	0281ffc4 	movi	r10,2047
 4031ed4:	1a800a26 	beq	r3,r10,4031f00 <__eqdf2+0x60>
 4031ed8:	10c00226 	beq	r2,r3,4031ee4 <__eqdf2+0x44>
 4031edc:	00800044 	movi	r2,1
 4031ee0:	f800283a 	ret
 4031ee4:	4a3ffd1e 	bne	r9,r8,4031edc <__flash_rwdata_start+0xffffbc70>
 4031ee8:	21bffc1e 	bne	r4,r6,4031edc <__flash_rwdata_start+0xffffbc70>
 4031eec:	29c00c26 	beq	r5,r7,4031f20 <__eqdf2+0x80>
 4031ef0:	103ffa1e 	bne	r2,zero,4031edc <__flash_rwdata_start+0xffffbc70>
 4031ef4:	2244b03a 	or	r2,r4,r9
 4031ef8:	1004c03a 	cmpne	r2,r2,zero
 4031efc:	f800283a 	ret
 4031f00:	3214b03a 	or	r10,r6,r8
 4031f04:	503ff426 	beq	r10,zero,4031ed8 <__flash_rwdata_start+0xffffbc6c>
 4031f08:	00800044 	movi	r2,1
 4031f0c:	f800283a 	ret
 4031f10:	2254b03a 	or	r10,r4,r9
 4031f14:	503fee26 	beq	r10,zero,4031ed0 <__flash_rwdata_start+0xffffbc64>
 4031f18:	00800044 	movi	r2,1
 4031f1c:	f800283a 	ret
 4031f20:	0005883a 	mov	r2,zero
 4031f24:	f800283a 	ret

04031f28 <__gedf2>:
 4031f28:	2804d53a 	srli	r2,r5,20
 4031f2c:	3806d53a 	srli	r3,r7,20
 4031f30:	02000434 	movhi	r8,16
 4031f34:	423fffc4 	addi	r8,r8,-1
 4031f38:	1081ffcc 	andi	r2,r2,2047
 4031f3c:	0241ffc4 	movi	r9,2047
 4031f40:	2a14703a 	and	r10,r5,r8
 4031f44:	18c1ffcc 	andi	r3,r3,2047
 4031f48:	3a10703a 	and	r8,r7,r8
 4031f4c:	280ad7fa 	srli	r5,r5,31
 4031f50:	380ed7fa 	srli	r7,r7,31
 4031f54:	12401d26 	beq	r2,r9,4031fcc <__gedf2+0xa4>
 4031f58:	0241ffc4 	movi	r9,2047
 4031f5c:	1a401226 	beq	r3,r9,4031fa8 <__gedf2+0x80>
 4031f60:	1000081e 	bne	r2,zero,4031f84 <__gedf2+0x5c>
 4031f64:	2296b03a 	or	r11,r4,r10
 4031f68:	5813003a 	cmpeq	r9,r11,zero
 4031f6c:	1800091e 	bne	r3,zero,4031f94 <__gedf2+0x6c>
 4031f70:	3218b03a 	or	r12,r6,r8
 4031f74:	6000071e 	bne	r12,zero,4031f94 <__gedf2+0x6c>
 4031f78:	0005883a 	mov	r2,zero
 4031f7c:	5800101e 	bne	r11,zero,4031fc0 <__gedf2+0x98>
 4031f80:	f800283a 	ret
 4031f84:	18000c1e 	bne	r3,zero,4031fb8 <__gedf2+0x90>
 4031f88:	3212b03a 	or	r9,r6,r8
 4031f8c:	48000c26 	beq	r9,zero,4031fc0 <__gedf2+0x98>
 4031f90:	0013883a 	mov	r9,zero
 4031f94:	39c03fcc 	andi	r7,r7,255
 4031f98:	48000826 	beq	r9,zero,4031fbc <__gedf2+0x94>
 4031f9c:	38000926 	beq	r7,zero,4031fc4 <__gedf2+0x9c>
 4031fa0:	00800044 	movi	r2,1
 4031fa4:	f800283a 	ret
 4031fa8:	3212b03a 	or	r9,r6,r8
 4031fac:	483fec26 	beq	r9,zero,4031f60 <__flash_rwdata_start+0xffffbcf4>
 4031fb0:	00bfff84 	movi	r2,-2
 4031fb4:	f800283a 	ret
 4031fb8:	39c03fcc 	andi	r7,r7,255
 4031fbc:	29c00626 	beq	r5,r7,4031fd8 <__gedf2+0xb0>
 4031fc0:	283ff726 	beq	r5,zero,4031fa0 <__flash_rwdata_start+0xffffbd34>
 4031fc4:	00bfffc4 	movi	r2,-1
 4031fc8:	f800283a 	ret
 4031fcc:	2292b03a 	or	r9,r4,r10
 4031fd0:	483fe126 	beq	r9,zero,4031f58 <__flash_rwdata_start+0xffffbcec>
 4031fd4:	003ff606 	br	4031fb0 <__flash_rwdata_start+0xffffbd44>
 4031fd8:	18bff916 	blt	r3,r2,4031fc0 <__flash_rwdata_start+0xffffbd54>
 4031fdc:	10c00316 	blt	r2,r3,4031fec <__gedf2+0xc4>
 4031fe0:	42bff736 	bltu	r8,r10,4031fc0 <__flash_rwdata_start+0xffffbd54>
 4031fe4:	52000326 	beq	r10,r8,4031ff4 <__gedf2+0xcc>
 4031fe8:	5200042e 	bgeu	r10,r8,4031ffc <__gedf2+0xd4>
 4031fec:	283fec1e 	bne	r5,zero,4031fa0 <__flash_rwdata_start+0xffffbd34>
 4031ff0:	003ff406 	br	4031fc4 <__flash_rwdata_start+0xffffbd58>
 4031ff4:	313ff236 	bltu	r6,r4,4031fc0 <__flash_rwdata_start+0xffffbd54>
 4031ff8:	21bffc36 	bltu	r4,r6,4031fec <__flash_rwdata_start+0xffffbd80>
 4031ffc:	0005883a 	mov	r2,zero
 4032000:	f800283a 	ret

04032004 <__ledf2>:
 4032004:	2804d53a 	srli	r2,r5,20
 4032008:	3810d53a 	srli	r8,r7,20
 403200c:	00c00434 	movhi	r3,16
 4032010:	18ffffc4 	addi	r3,r3,-1
 4032014:	1081ffcc 	andi	r2,r2,2047
 4032018:	0241ffc4 	movi	r9,2047
 403201c:	28d4703a 	and	r10,r5,r3
 4032020:	4201ffcc 	andi	r8,r8,2047
 4032024:	38c6703a 	and	r3,r7,r3
 4032028:	280ad7fa 	srli	r5,r5,31
 403202c:	380ed7fa 	srli	r7,r7,31
 4032030:	12401f26 	beq	r2,r9,40320b0 <__ledf2+0xac>
 4032034:	0241ffc4 	movi	r9,2047
 4032038:	42401426 	beq	r8,r9,403208c <__ledf2+0x88>
 403203c:	1000091e 	bne	r2,zero,4032064 <__ledf2+0x60>
 4032040:	2296b03a 	or	r11,r4,r10
 4032044:	5813003a 	cmpeq	r9,r11,zero
 4032048:	29403fcc 	andi	r5,r5,255
 403204c:	40000a1e 	bne	r8,zero,4032078 <__ledf2+0x74>
 4032050:	30d8b03a 	or	r12,r6,r3
 4032054:	6000081e 	bne	r12,zero,4032078 <__ledf2+0x74>
 4032058:	0005883a 	mov	r2,zero
 403205c:	5800111e 	bne	r11,zero,40320a4 <__ledf2+0xa0>
 4032060:	f800283a 	ret
 4032064:	29403fcc 	andi	r5,r5,255
 4032068:	40000c1e 	bne	r8,zero,403209c <__ledf2+0x98>
 403206c:	30d2b03a 	or	r9,r6,r3
 4032070:	48000c26 	beq	r9,zero,40320a4 <__ledf2+0xa0>
 4032074:	0013883a 	mov	r9,zero
 4032078:	39c03fcc 	andi	r7,r7,255
 403207c:	48000826 	beq	r9,zero,40320a0 <__ledf2+0x9c>
 4032080:	38001126 	beq	r7,zero,40320c8 <__ledf2+0xc4>
 4032084:	00800044 	movi	r2,1
 4032088:	f800283a 	ret
 403208c:	30d2b03a 	or	r9,r6,r3
 4032090:	483fea26 	beq	r9,zero,403203c <__flash_rwdata_start+0xffffbdd0>
 4032094:	00800084 	movi	r2,2
 4032098:	f800283a 	ret
 403209c:	39c03fcc 	andi	r7,r7,255
 40320a0:	39400726 	beq	r7,r5,40320c0 <__ledf2+0xbc>
 40320a4:	2800081e 	bne	r5,zero,40320c8 <__ledf2+0xc4>
 40320a8:	00800044 	movi	r2,1
 40320ac:	f800283a 	ret
 40320b0:	2292b03a 	or	r9,r4,r10
 40320b4:	483fdf26 	beq	r9,zero,4032034 <__flash_rwdata_start+0xffffbdc8>
 40320b8:	00800084 	movi	r2,2
 40320bc:	f800283a 	ret
 40320c0:	4080030e 	bge	r8,r2,40320d0 <__ledf2+0xcc>
 40320c4:	383fef26 	beq	r7,zero,4032084 <__flash_rwdata_start+0xffffbe18>
 40320c8:	00bfffc4 	movi	r2,-1
 40320cc:	f800283a 	ret
 40320d0:	123feb16 	blt	r2,r8,4032080 <__flash_rwdata_start+0xffffbe14>
 40320d4:	1abff336 	bltu	r3,r10,40320a4 <__flash_rwdata_start+0xffffbe38>
 40320d8:	50c00326 	beq	r10,r3,40320e8 <__ledf2+0xe4>
 40320dc:	50c0042e 	bgeu	r10,r3,40320f0 <__ledf2+0xec>
 40320e0:	283fe81e 	bne	r5,zero,4032084 <__flash_rwdata_start+0xffffbe18>
 40320e4:	003ff806 	br	40320c8 <__flash_rwdata_start+0xffffbe5c>
 40320e8:	313fee36 	bltu	r6,r4,40320a4 <__flash_rwdata_start+0xffffbe38>
 40320ec:	21bffc36 	bltu	r4,r6,40320e0 <__flash_rwdata_start+0xffffbe74>
 40320f0:	0005883a 	mov	r2,zero
 40320f4:	f800283a 	ret

040320f8 <__muldf3>:
 40320f8:	defff304 	addi	sp,sp,-52
 40320fc:	2804d53a 	srli	r2,r5,20
 4032100:	dd800915 	stw	r22,36(sp)
 4032104:	282cd7fa 	srli	r22,r5,31
 4032108:	dc000315 	stw	r16,12(sp)
 403210c:	04000434 	movhi	r16,16
 4032110:	dd400815 	stw	r21,32(sp)
 4032114:	dc800515 	stw	r18,20(sp)
 4032118:	843fffc4 	addi	r16,r16,-1
 403211c:	dfc00c15 	stw	ra,48(sp)
 4032120:	df000b15 	stw	fp,44(sp)
 4032124:	ddc00a15 	stw	r23,40(sp)
 4032128:	dd000715 	stw	r20,28(sp)
 403212c:	dcc00615 	stw	r19,24(sp)
 4032130:	dc400415 	stw	r17,16(sp)
 4032134:	1481ffcc 	andi	r18,r2,2047
 4032138:	2c20703a 	and	r16,r5,r16
 403213c:	b02b883a 	mov	r21,r22
 4032140:	b2403fcc 	andi	r9,r22,255
 4032144:	90006026 	beq	r18,zero,40322c8 <__muldf3+0x1d0>
 4032148:	0081ffc4 	movi	r2,2047
 403214c:	2029883a 	mov	r20,r4
 4032150:	90803626 	beq	r18,r2,403222c <__muldf3+0x134>
 4032154:	80800434 	orhi	r2,r16,16
 4032158:	100490fa 	slli	r2,r2,3
 403215c:	2020d77a 	srli	r16,r4,29
 4032160:	202890fa 	slli	r20,r4,3
 4032164:	94bf0044 	addi	r18,r18,-1023
 4032168:	80a0b03a 	or	r16,r16,r2
 403216c:	0027883a 	mov	r19,zero
 4032170:	0039883a 	mov	fp,zero
 4032174:	3804d53a 	srli	r2,r7,20
 4032178:	382ed7fa 	srli	r23,r7,31
 403217c:	04400434 	movhi	r17,16
 4032180:	8c7fffc4 	addi	r17,r17,-1
 4032184:	1081ffcc 	andi	r2,r2,2047
 4032188:	3011883a 	mov	r8,r6
 403218c:	3c62703a 	and	r17,r7,r17
 4032190:	ba803fcc 	andi	r10,r23,255
 4032194:	10006d26 	beq	r2,zero,403234c <__muldf3+0x254>
 4032198:	00c1ffc4 	movi	r3,2047
 403219c:	10c06526 	beq	r2,r3,4032334 <__muldf3+0x23c>
 40321a0:	88c00434 	orhi	r3,r17,16
 40321a4:	180690fa 	slli	r3,r3,3
 40321a8:	3022d77a 	srli	r17,r6,29
 40321ac:	301090fa 	slli	r8,r6,3
 40321b0:	10bf0044 	addi	r2,r2,-1023
 40321b4:	88e2b03a 	or	r17,r17,r3
 40321b8:	000b883a 	mov	r5,zero
 40321bc:	9085883a 	add	r2,r18,r2
 40321c0:	2cc8b03a 	or	r4,r5,r19
 40321c4:	00c003c4 	movi	r3,15
 40321c8:	bdacf03a 	xor	r22,r23,r22
 40321cc:	12c00044 	addi	r11,r2,1
 40321d0:	19009936 	bltu	r3,r4,4032438 <__muldf3+0x340>
 40321d4:	200890ba 	slli	r4,r4,2
 40321d8:	00c100f4 	movhi	r3,1027
 40321dc:	18c87b04 	addi	r3,r3,8684
 40321e0:	20c9883a 	add	r4,r4,r3
 40321e4:	20c00017 	ldw	r3,0(r4)
 40321e8:	1800683a 	jmp	r3
 40321ec:	04032438 	rdprs	r16,zero,3216
 40321f0:	0403224c 	andi	r16,zero,3209
 40321f4:	0403224c 	andi	r16,zero,3209
 40321f8:	04032248 	cmpgei	r16,zero,3209
 40321fc:	04032414 	movui	r16,3216
 4032200:	04032414 	movui	r16,3216
 4032204:	040323fc 	xorhi	r16,zero,3215
 4032208:	04032248 	cmpgei	r16,zero,3209
 403220c:	04032414 	movui	r16,3216
 4032210:	040323fc 	xorhi	r16,zero,3215
 4032214:	04032414 	movui	r16,3216
 4032218:	04032248 	cmpgei	r16,zero,3209
 403221c:	04032424 	muli	r16,zero,3216
 4032220:	04032424 	muli	r16,zero,3216
 4032224:	04032424 	muli	r16,zero,3216
 4032228:	04032640 	call	403264 <__alt_heap_start+0x3b5f18>
 403222c:	2404b03a 	or	r2,r4,r16
 4032230:	10006f1e 	bne	r2,zero,40323f0 <__muldf3+0x2f8>
 4032234:	04c00204 	movi	r19,8
 4032238:	0021883a 	mov	r16,zero
 403223c:	0029883a 	mov	r20,zero
 4032240:	07000084 	movi	fp,2
 4032244:	003fcb06 	br	4032174 <__flash_rwdata_start+0xffffbf08>
 4032248:	502d883a 	mov	r22,r10
 403224c:	00800084 	movi	r2,2
 4032250:	28805726 	beq	r5,r2,40323b0 <__muldf3+0x2b8>
 4032254:	008000c4 	movi	r2,3
 4032258:	28816626 	beq	r5,r2,40327f4 <__muldf3+0x6fc>
 403225c:	00800044 	movi	r2,1
 4032260:	2881411e 	bne	r5,r2,4032768 <__muldf3+0x670>
 4032264:	b02b883a 	mov	r21,r22
 4032268:	0005883a 	mov	r2,zero
 403226c:	000b883a 	mov	r5,zero
 4032270:	0029883a 	mov	r20,zero
 4032274:	1004953a 	slli	r2,r2,20
 4032278:	a8c03fcc 	andi	r3,r21,255
 403227c:	04400434 	movhi	r17,16
 4032280:	8c7fffc4 	addi	r17,r17,-1
 4032284:	180697fa 	slli	r3,r3,31
 4032288:	2c4a703a 	and	r5,r5,r17
 403228c:	288ab03a 	or	r5,r5,r2
 4032290:	28c6b03a 	or	r3,r5,r3
 4032294:	a005883a 	mov	r2,r20
 4032298:	dfc00c17 	ldw	ra,48(sp)
 403229c:	df000b17 	ldw	fp,44(sp)
 40322a0:	ddc00a17 	ldw	r23,40(sp)
 40322a4:	dd800917 	ldw	r22,36(sp)
 40322a8:	dd400817 	ldw	r21,32(sp)
 40322ac:	dd000717 	ldw	r20,28(sp)
 40322b0:	dcc00617 	ldw	r19,24(sp)
 40322b4:	dc800517 	ldw	r18,20(sp)
 40322b8:	dc400417 	ldw	r17,16(sp)
 40322bc:	dc000317 	ldw	r16,12(sp)
 40322c0:	dec00d04 	addi	sp,sp,52
 40322c4:	f800283a 	ret
 40322c8:	2404b03a 	or	r2,r4,r16
 40322cc:	2027883a 	mov	r19,r4
 40322d0:	10004226 	beq	r2,zero,40323dc <__muldf3+0x2e4>
 40322d4:	8000fc26 	beq	r16,zero,40326c8 <__muldf3+0x5d0>
 40322d8:	8009883a 	mov	r4,r16
 40322dc:	d9800215 	stw	r6,8(sp)
 40322e0:	d9c00015 	stw	r7,0(sp)
 40322e4:	da400115 	stw	r9,4(sp)
 40322e8:	4026ee40 	call	4026ee4 <__clzsi2>
 40322ec:	d9800217 	ldw	r6,8(sp)
 40322f0:	d9c00017 	ldw	r7,0(sp)
 40322f4:	da400117 	ldw	r9,4(sp)
 40322f8:	113ffd44 	addi	r4,r2,-11
 40322fc:	00c00704 	movi	r3,28
 4032300:	1900ed16 	blt	r3,r4,40326b8 <__muldf3+0x5c0>
 4032304:	00c00744 	movi	r3,29
 4032308:	147ffe04 	addi	r17,r2,-8
 403230c:	1907c83a 	sub	r3,r3,r4
 4032310:	8460983a 	sll	r16,r16,r17
 4032314:	98c6d83a 	srl	r3,r19,r3
 4032318:	9c68983a 	sll	r20,r19,r17
 403231c:	1c20b03a 	or	r16,r3,r16
 4032320:	1080fcc4 	addi	r2,r2,1011
 4032324:	00a5c83a 	sub	r18,zero,r2
 4032328:	0027883a 	mov	r19,zero
 403232c:	0039883a 	mov	fp,zero
 4032330:	003f9006 	br	4032174 <__flash_rwdata_start+0xffffbf08>
 4032334:	3446b03a 	or	r3,r6,r17
 4032338:	1800261e 	bne	r3,zero,40323d4 <__muldf3+0x2dc>
 403233c:	0023883a 	mov	r17,zero
 4032340:	0011883a 	mov	r8,zero
 4032344:	01400084 	movi	r5,2
 4032348:	003f9c06 	br	40321bc <__flash_rwdata_start+0xffffbf50>
 403234c:	3446b03a 	or	r3,r6,r17
 4032350:	18001c26 	beq	r3,zero,40323c4 <__muldf3+0x2cc>
 4032354:	8800ce26 	beq	r17,zero,4032690 <__muldf3+0x598>
 4032358:	8809883a 	mov	r4,r17
 403235c:	d9800215 	stw	r6,8(sp)
 4032360:	da400115 	stw	r9,4(sp)
 4032364:	da800015 	stw	r10,0(sp)
 4032368:	4026ee40 	call	4026ee4 <__clzsi2>
 403236c:	d9800217 	ldw	r6,8(sp)
 4032370:	da400117 	ldw	r9,4(sp)
 4032374:	da800017 	ldw	r10,0(sp)
 4032378:	113ffd44 	addi	r4,r2,-11
 403237c:	00c00704 	movi	r3,28
 4032380:	1900bf16 	blt	r3,r4,4032680 <__muldf3+0x588>
 4032384:	00c00744 	movi	r3,29
 4032388:	123ffe04 	addi	r8,r2,-8
 403238c:	1907c83a 	sub	r3,r3,r4
 4032390:	8a22983a 	sll	r17,r17,r8
 4032394:	30c6d83a 	srl	r3,r6,r3
 4032398:	3210983a 	sll	r8,r6,r8
 403239c:	1c62b03a 	or	r17,r3,r17
 40323a0:	1080fcc4 	addi	r2,r2,1011
 40323a4:	0085c83a 	sub	r2,zero,r2
 40323a8:	000b883a 	mov	r5,zero
 40323ac:	003f8306 	br	40321bc <__flash_rwdata_start+0xffffbf50>
 40323b0:	b02b883a 	mov	r21,r22
 40323b4:	0081ffc4 	movi	r2,2047
 40323b8:	000b883a 	mov	r5,zero
 40323bc:	0029883a 	mov	r20,zero
 40323c0:	003fac06 	br	4032274 <__flash_rwdata_start+0xffffc008>
 40323c4:	0023883a 	mov	r17,zero
 40323c8:	0011883a 	mov	r8,zero
 40323cc:	01400044 	movi	r5,1
 40323d0:	003f7a06 	br	40321bc <__flash_rwdata_start+0xffffbf50>
 40323d4:	014000c4 	movi	r5,3
 40323d8:	003f7806 	br	40321bc <__flash_rwdata_start+0xffffbf50>
 40323dc:	04c00104 	movi	r19,4
 40323e0:	0021883a 	mov	r16,zero
 40323e4:	0029883a 	mov	r20,zero
 40323e8:	07000044 	movi	fp,1
 40323ec:	003f6106 	br	4032174 <__flash_rwdata_start+0xffffbf08>
 40323f0:	04c00304 	movi	r19,12
 40323f4:	070000c4 	movi	fp,3
 40323f8:	003f5e06 	br	4032174 <__flash_rwdata_start+0xffffbf08>
 40323fc:	01400434 	movhi	r5,16
 4032400:	002b883a 	mov	r21,zero
 4032404:	297fffc4 	addi	r5,r5,-1
 4032408:	053fffc4 	movi	r20,-1
 403240c:	0081ffc4 	movi	r2,2047
 4032410:	003f9806 	br	4032274 <__flash_rwdata_start+0xffffc008>
 4032414:	8023883a 	mov	r17,r16
 4032418:	a011883a 	mov	r8,r20
 403241c:	e00b883a 	mov	r5,fp
 4032420:	003f8a06 	br	403224c <__flash_rwdata_start+0xffffbfe0>
 4032424:	8023883a 	mov	r17,r16
 4032428:	a011883a 	mov	r8,r20
 403242c:	482d883a 	mov	r22,r9
 4032430:	e00b883a 	mov	r5,fp
 4032434:	003f8506 	br	403224c <__flash_rwdata_start+0xffffbfe0>
 4032438:	a00ad43a 	srli	r5,r20,16
 403243c:	401ad43a 	srli	r13,r8,16
 4032440:	a53fffcc 	andi	r20,r20,65535
 4032444:	423fffcc 	andi	r8,r8,65535
 4032448:	4519383a 	mul	r12,r8,r20
 403244c:	4147383a 	mul	r3,r8,r5
 4032450:	6d09383a 	mul	r4,r13,r20
 4032454:	600cd43a 	srli	r6,r12,16
 4032458:	2b5d383a 	mul	r14,r5,r13
 403245c:	20c9883a 	add	r4,r4,r3
 4032460:	310d883a 	add	r6,r6,r4
 4032464:	30c0022e 	bgeu	r6,r3,4032470 <__muldf3+0x378>
 4032468:	00c00074 	movhi	r3,1
 403246c:	70dd883a 	add	r14,r14,r3
 4032470:	8826d43a 	srli	r19,r17,16
 4032474:	8bffffcc 	andi	r15,r17,65535
 4032478:	7d23383a 	mul	r17,r15,r20
 403247c:	7949383a 	mul	r4,r15,r5
 4032480:	9d29383a 	mul	r20,r19,r20
 4032484:	8814d43a 	srli	r10,r17,16
 4032488:	3012943a 	slli	r9,r6,16
 403248c:	a129883a 	add	r20,r20,r4
 4032490:	633fffcc 	andi	r12,r12,65535
 4032494:	5515883a 	add	r10,r10,r20
 4032498:	3006d43a 	srli	r3,r6,16
 403249c:	4b13883a 	add	r9,r9,r12
 40324a0:	2ccb383a 	mul	r5,r5,r19
 40324a4:	5100022e 	bgeu	r10,r4,40324b0 <__muldf3+0x3b8>
 40324a8:	01000074 	movhi	r4,1
 40324ac:	290b883a 	add	r5,r5,r4
 40324b0:	802ad43a 	srli	r21,r16,16
 40324b4:	843fffcc 	andi	r16,r16,65535
 40324b8:	440d383a 	mul	r6,r8,r16
 40324bc:	4565383a 	mul	r18,r8,r21
 40324c0:	8349383a 	mul	r4,r16,r13
 40324c4:	500e943a 	slli	r7,r10,16
 40324c8:	3010d43a 	srli	r8,r6,16
 40324cc:	5028d43a 	srli	r20,r10,16
 40324d0:	2489883a 	add	r4,r4,r18
 40324d4:	8abfffcc 	andi	r10,r17,65535
 40324d8:	3a95883a 	add	r10,r7,r10
 40324dc:	4119883a 	add	r12,r8,r4
 40324e0:	a169883a 	add	r20,r20,r5
 40324e4:	1a87883a 	add	r3,r3,r10
 40324e8:	6d5b383a 	mul	r13,r13,r21
 40324ec:	6480022e 	bgeu	r12,r18,40324f8 <__muldf3+0x400>
 40324f0:	01000074 	movhi	r4,1
 40324f4:	691b883a 	add	r13,r13,r4
 40324f8:	7c25383a 	mul	r18,r15,r16
 40324fc:	7d4b383a 	mul	r5,r15,r21
 4032500:	84cf383a 	mul	r7,r16,r19
 4032504:	901ed43a 	srli	r15,r18,16
 4032508:	6008d43a 	srli	r4,r12,16
 403250c:	6010943a 	slli	r8,r12,16
 4032510:	394f883a 	add	r7,r7,r5
 4032514:	333fffcc 	andi	r12,r6,65535
 4032518:	79df883a 	add	r15,r15,r7
 403251c:	235b883a 	add	r13,r4,r13
 4032520:	9d63383a 	mul	r17,r19,r21
 4032524:	4309883a 	add	r4,r8,r12
 4032528:	7940022e 	bgeu	r15,r5,4032534 <__muldf3+0x43c>
 403252c:	01400074 	movhi	r5,1
 4032530:	8963883a 	add	r17,r17,r5
 4032534:	780a943a 	slli	r5,r15,16
 4032538:	91bfffcc 	andi	r6,r18,65535
 403253c:	70c7883a 	add	r3,r14,r3
 4032540:	298d883a 	add	r6,r5,r6
 4032544:	1a8f803a 	cmpltu	r7,r3,r10
 4032548:	350b883a 	add	r5,r6,r20
 403254c:	20c7883a 	add	r3,r4,r3
 4032550:	3955883a 	add	r10,r7,r5
 4032554:	1909803a 	cmpltu	r4,r3,r4
 4032558:	6a91883a 	add	r8,r13,r10
 403255c:	780cd43a 	srli	r6,r15,16
 4032560:	2219883a 	add	r12,r4,r8
 4032564:	2d0b803a 	cmpltu	r5,r5,r20
 4032568:	51cf803a 	cmpltu	r7,r10,r7
 403256c:	29ceb03a 	or	r7,r5,r7
 4032570:	4351803a 	cmpltu	r8,r8,r13
 4032574:	610b803a 	cmpltu	r5,r12,r4
 4032578:	4148b03a 	or	r4,r8,r5
 403257c:	398f883a 	add	r7,r7,r6
 4032580:	3909883a 	add	r4,r7,r4
 4032584:	1810927a 	slli	r8,r3,9
 4032588:	2449883a 	add	r4,r4,r17
 403258c:	2008927a 	slli	r4,r4,9
 4032590:	6022d5fa 	srli	r17,r12,23
 4032594:	1806d5fa 	srli	r3,r3,23
 4032598:	4252b03a 	or	r9,r8,r9
 403259c:	600a927a 	slli	r5,r12,9
 40325a0:	4810c03a 	cmpne	r8,r9,zero
 40325a4:	2462b03a 	or	r17,r4,r17
 40325a8:	40c6b03a 	or	r3,r8,r3
 40325ac:	8900402c 	andhi	r4,r17,256
 40325b0:	1950b03a 	or	r8,r3,r5
 40325b4:	20000726 	beq	r4,zero,40325d4 <__muldf3+0x4dc>
 40325b8:	4006d07a 	srli	r3,r8,1
 40325bc:	880497fa 	slli	r2,r17,31
 40325c0:	4200004c 	andi	r8,r8,1
 40325c4:	8822d07a 	srli	r17,r17,1
 40325c8:	1a10b03a 	or	r8,r3,r8
 40325cc:	1210b03a 	or	r8,r2,r8
 40325d0:	5805883a 	mov	r2,r11
 40325d4:	1140ffc4 	addi	r5,r2,1023
 40325d8:	0140440e 	bge	zero,r5,40326ec <__muldf3+0x5f4>
 40325dc:	40c001cc 	andi	r3,r8,7
 40325e0:	18000726 	beq	r3,zero,4032600 <__muldf3+0x508>
 40325e4:	40c003cc 	andi	r3,r8,15
 40325e8:	01000104 	movi	r4,4
 40325ec:	19000426 	beq	r3,r4,4032600 <__muldf3+0x508>
 40325f0:	4107883a 	add	r3,r8,r4
 40325f4:	1a11803a 	cmpltu	r8,r3,r8
 40325f8:	8a23883a 	add	r17,r17,r8
 40325fc:	1811883a 	mov	r8,r3
 4032600:	88c0402c 	andhi	r3,r17,256
 4032604:	18000426 	beq	r3,zero,4032618 <__muldf3+0x520>
 4032608:	11410004 	addi	r5,r2,1024
 403260c:	00bfc034 	movhi	r2,65280
 4032610:	10bfffc4 	addi	r2,r2,-1
 4032614:	88a2703a 	and	r17,r17,r2
 4032618:	0081ff84 	movi	r2,2046
 403261c:	117f6416 	blt	r2,r5,40323b0 <__flash_rwdata_start+0xffffc144>
 4032620:	8828977a 	slli	r20,r17,29
 4032624:	4010d0fa 	srli	r8,r8,3
 4032628:	8822927a 	slli	r17,r17,9
 403262c:	2881ffcc 	andi	r2,r5,2047
 4032630:	a228b03a 	or	r20,r20,r8
 4032634:	880ad33a 	srli	r5,r17,12
 4032638:	b02b883a 	mov	r21,r22
 403263c:	003f0d06 	br	4032274 <__flash_rwdata_start+0xffffc008>
 4032640:	8080022c 	andhi	r2,r16,8
 4032644:	10000926 	beq	r2,zero,403266c <__muldf3+0x574>
 4032648:	8880022c 	andhi	r2,r17,8
 403264c:	1000071e 	bne	r2,zero,403266c <__muldf3+0x574>
 4032650:	00800434 	movhi	r2,16
 4032654:	89400234 	orhi	r5,r17,8
 4032658:	10bfffc4 	addi	r2,r2,-1
 403265c:	b82b883a 	mov	r21,r23
 4032660:	288a703a 	and	r5,r5,r2
 4032664:	4029883a 	mov	r20,r8
 4032668:	003f6806 	br	403240c <__flash_rwdata_start+0xffffc1a0>
 403266c:	00800434 	movhi	r2,16
 4032670:	81400234 	orhi	r5,r16,8
 4032674:	10bfffc4 	addi	r2,r2,-1
 4032678:	288a703a 	and	r5,r5,r2
 403267c:	003f6306 	br	403240c <__flash_rwdata_start+0xffffc1a0>
 4032680:	147ff604 	addi	r17,r2,-40
 4032684:	3462983a 	sll	r17,r6,r17
 4032688:	0011883a 	mov	r8,zero
 403268c:	003f4406 	br	40323a0 <__flash_rwdata_start+0xffffc134>
 4032690:	3009883a 	mov	r4,r6
 4032694:	d9800215 	stw	r6,8(sp)
 4032698:	da400115 	stw	r9,4(sp)
 403269c:	da800015 	stw	r10,0(sp)
 40326a0:	4026ee40 	call	4026ee4 <__clzsi2>
 40326a4:	10800804 	addi	r2,r2,32
 40326a8:	da800017 	ldw	r10,0(sp)
 40326ac:	da400117 	ldw	r9,4(sp)
 40326b0:	d9800217 	ldw	r6,8(sp)
 40326b4:	003f3006 	br	4032378 <__flash_rwdata_start+0xffffc10c>
 40326b8:	143ff604 	addi	r16,r2,-40
 40326bc:	9c20983a 	sll	r16,r19,r16
 40326c0:	0029883a 	mov	r20,zero
 40326c4:	003f1606 	br	4032320 <__flash_rwdata_start+0xffffc0b4>
 40326c8:	d9800215 	stw	r6,8(sp)
 40326cc:	d9c00015 	stw	r7,0(sp)
 40326d0:	da400115 	stw	r9,4(sp)
 40326d4:	4026ee40 	call	4026ee4 <__clzsi2>
 40326d8:	10800804 	addi	r2,r2,32
 40326dc:	da400117 	ldw	r9,4(sp)
 40326e0:	d9c00017 	ldw	r7,0(sp)
 40326e4:	d9800217 	ldw	r6,8(sp)
 40326e8:	003f0306 	br	40322f8 <__flash_rwdata_start+0xffffc08c>
 40326ec:	00c00044 	movi	r3,1
 40326f0:	1947c83a 	sub	r3,r3,r5
 40326f4:	00800e04 	movi	r2,56
 40326f8:	10feda16 	blt	r2,r3,4032264 <__flash_rwdata_start+0xffffbff8>
 40326fc:	008007c4 	movi	r2,31
 4032700:	10c01b16 	blt	r2,r3,4032770 <__muldf3+0x678>
 4032704:	00800804 	movi	r2,32
 4032708:	10c5c83a 	sub	r2,r2,r3
 403270c:	888a983a 	sll	r5,r17,r2
 4032710:	40c8d83a 	srl	r4,r8,r3
 4032714:	4084983a 	sll	r2,r8,r2
 4032718:	88e2d83a 	srl	r17,r17,r3
 403271c:	2906b03a 	or	r3,r5,r4
 4032720:	1004c03a 	cmpne	r2,r2,zero
 4032724:	1886b03a 	or	r3,r3,r2
 4032728:	188001cc 	andi	r2,r3,7
 403272c:	10000726 	beq	r2,zero,403274c <__muldf3+0x654>
 4032730:	188003cc 	andi	r2,r3,15
 4032734:	01000104 	movi	r4,4
 4032738:	11000426 	beq	r2,r4,403274c <__muldf3+0x654>
 403273c:	1805883a 	mov	r2,r3
 4032740:	10c00104 	addi	r3,r2,4
 4032744:	1885803a 	cmpltu	r2,r3,r2
 4032748:	88a3883a 	add	r17,r17,r2
 403274c:	8880202c 	andhi	r2,r17,128
 4032750:	10001c26 	beq	r2,zero,40327c4 <__muldf3+0x6cc>
 4032754:	b02b883a 	mov	r21,r22
 4032758:	00800044 	movi	r2,1
 403275c:	000b883a 	mov	r5,zero
 4032760:	0029883a 	mov	r20,zero
 4032764:	003ec306 	br	4032274 <__flash_rwdata_start+0xffffc008>
 4032768:	5805883a 	mov	r2,r11
 403276c:	003f9906 	br	40325d4 <__flash_rwdata_start+0xffffc368>
 4032770:	00bff844 	movi	r2,-31
 4032774:	1145c83a 	sub	r2,r2,r5
 4032778:	8888d83a 	srl	r4,r17,r2
 403277c:	00800804 	movi	r2,32
 4032780:	18801a26 	beq	r3,r2,40327ec <__muldf3+0x6f4>
 4032784:	00801004 	movi	r2,64
 4032788:	10c5c83a 	sub	r2,r2,r3
 403278c:	8884983a 	sll	r2,r17,r2
 4032790:	1204b03a 	or	r2,r2,r8
 4032794:	1004c03a 	cmpne	r2,r2,zero
 4032798:	2084b03a 	or	r2,r4,r2
 403279c:	144001cc 	andi	r17,r2,7
 40327a0:	88000d1e 	bne	r17,zero,40327d8 <__muldf3+0x6e0>
 40327a4:	000b883a 	mov	r5,zero
 40327a8:	1028d0fa 	srli	r20,r2,3
 40327ac:	b02b883a 	mov	r21,r22
 40327b0:	0005883a 	mov	r2,zero
 40327b4:	a468b03a 	or	r20,r20,r17
 40327b8:	003eae06 	br	4032274 <__flash_rwdata_start+0xffffc008>
 40327bc:	1007883a 	mov	r3,r2
 40327c0:	0023883a 	mov	r17,zero
 40327c4:	880a927a 	slli	r5,r17,9
 40327c8:	1805883a 	mov	r2,r3
 40327cc:	8822977a 	slli	r17,r17,29
 40327d0:	280ad33a 	srli	r5,r5,12
 40327d4:	003ff406 	br	40327a8 <__flash_rwdata_start+0xffffc53c>
 40327d8:	10c003cc 	andi	r3,r2,15
 40327dc:	01000104 	movi	r4,4
 40327e0:	193ff626 	beq	r3,r4,40327bc <__flash_rwdata_start+0xffffc550>
 40327e4:	0023883a 	mov	r17,zero
 40327e8:	003fd506 	br	4032740 <__flash_rwdata_start+0xffffc4d4>
 40327ec:	0005883a 	mov	r2,zero
 40327f0:	003fe706 	br	4032790 <__flash_rwdata_start+0xffffc524>
 40327f4:	00800434 	movhi	r2,16
 40327f8:	89400234 	orhi	r5,r17,8
 40327fc:	10bfffc4 	addi	r2,r2,-1
 4032800:	b02b883a 	mov	r21,r22
 4032804:	288a703a 	and	r5,r5,r2
 4032808:	4029883a 	mov	r20,r8
 403280c:	003eff06 	br	403240c <__flash_rwdata_start+0xffffc1a0>

04032810 <__subdf3>:
 4032810:	02000434 	movhi	r8,16
 4032814:	423fffc4 	addi	r8,r8,-1
 4032818:	defffb04 	addi	sp,sp,-20
 403281c:	2a14703a 	and	r10,r5,r8
 4032820:	3812d53a 	srli	r9,r7,20
 4032824:	3a10703a 	and	r8,r7,r8
 4032828:	2006d77a 	srli	r3,r4,29
 403282c:	3004d77a 	srli	r2,r6,29
 4032830:	dc000015 	stw	r16,0(sp)
 4032834:	501490fa 	slli	r10,r10,3
 4032838:	2820d53a 	srli	r16,r5,20
 403283c:	401090fa 	slli	r8,r8,3
 4032840:	dc800215 	stw	r18,8(sp)
 4032844:	dc400115 	stw	r17,4(sp)
 4032848:	dfc00415 	stw	ra,16(sp)
 403284c:	202290fa 	slli	r17,r4,3
 4032850:	dcc00315 	stw	r19,12(sp)
 4032854:	4a41ffcc 	andi	r9,r9,2047
 4032858:	0101ffc4 	movi	r4,2047
 403285c:	2824d7fa 	srli	r18,r5,31
 4032860:	8401ffcc 	andi	r16,r16,2047
 4032864:	50c6b03a 	or	r3,r10,r3
 4032868:	380ed7fa 	srli	r7,r7,31
 403286c:	408ab03a 	or	r5,r8,r2
 4032870:	300c90fa 	slli	r6,r6,3
 4032874:	49009626 	beq	r9,r4,4032ad0 <__subdf3+0x2c0>
 4032878:	39c0005c 	xori	r7,r7,1
 403287c:	8245c83a 	sub	r2,r16,r9
 4032880:	3c807426 	beq	r7,r18,4032a54 <__subdf3+0x244>
 4032884:	0080af0e 	bge	zero,r2,4032b44 <__subdf3+0x334>
 4032888:	48002a1e 	bne	r9,zero,4032934 <__subdf3+0x124>
 403288c:	2988b03a 	or	r4,r5,r6
 4032890:	20009a1e 	bne	r4,zero,4032afc <__subdf3+0x2ec>
 4032894:	888001cc 	andi	r2,r17,7
 4032898:	10000726 	beq	r2,zero,40328b8 <__subdf3+0xa8>
 403289c:	888003cc 	andi	r2,r17,15
 40328a0:	01000104 	movi	r4,4
 40328a4:	11000426 	beq	r2,r4,40328b8 <__subdf3+0xa8>
 40328a8:	890b883a 	add	r5,r17,r4
 40328ac:	2c63803a 	cmpltu	r17,r5,r17
 40328b0:	1c47883a 	add	r3,r3,r17
 40328b4:	2823883a 	mov	r17,r5
 40328b8:	1880202c 	andhi	r2,r3,128
 40328bc:	10005926 	beq	r2,zero,4032a24 <__subdf3+0x214>
 40328c0:	84000044 	addi	r16,r16,1
 40328c4:	0081ffc4 	movi	r2,2047
 40328c8:	8080be26 	beq	r16,r2,4032bc4 <__subdf3+0x3b4>
 40328cc:	017fe034 	movhi	r5,65408
 40328d0:	297fffc4 	addi	r5,r5,-1
 40328d4:	1946703a 	and	r3,r3,r5
 40328d8:	1804977a 	slli	r2,r3,29
 40328dc:	1806927a 	slli	r3,r3,9
 40328e0:	8822d0fa 	srli	r17,r17,3
 40328e4:	8401ffcc 	andi	r16,r16,2047
 40328e8:	180ad33a 	srli	r5,r3,12
 40328ec:	9100004c 	andi	r4,r18,1
 40328f0:	1444b03a 	or	r2,r2,r17
 40328f4:	80c1ffcc 	andi	r3,r16,2047
 40328f8:	1820953a 	slli	r16,r3,20
 40328fc:	20c03fcc 	andi	r3,r4,255
 4032900:	180897fa 	slli	r4,r3,31
 4032904:	00c00434 	movhi	r3,16
 4032908:	18ffffc4 	addi	r3,r3,-1
 403290c:	28c6703a 	and	r3,r5,r3
 4032910:	1c06b03a 	or	r3,r3,r16
 4032914:	1906b03a 	or	r3,r3,r4
 4032918:	dfc00417 	ldw	ra,16(sp)
 403291c:	dcc00317 	ldw	r19,12(sp)
 4032920:	dc800217 	ldw	r18,8(sp)
 4032924:	dc400117 	ldw	r17,4(sp)
 4032928:	dc000017 	ldw	r16,0(sp)
 403292c:	dec00504 	addi	sp,sp,20
 4032930:	f800283a 	ret
 4032934:	0101ffc4 	movi	r4,2047
 4032938:	813fd626 	beq	r16,r4,4032894 <__flash_rwdata_start+0xffffc628>
 403293c:	29402034 	orhi	r5,r5,128
 4032940:	01000e04 	movi	r4,56
 4032944:	2080a316 	blt	r4,r2,4032bd4 <__subdf3+0x3c4>
 4032948:	010007c4 	movi	r4,31
 403294c:	2080c616 	blt	r4,r2,4032c68 <__subdf3+0x458>
 4032950:	01000804 	movi	r4,32
 4032954:	2089c83a 	sub	r4,r4,r2
 4032958:	2910983a 	sll	r8,r5,r4
 403295c:	308ed83a 	srl	r7,r6,r2
 4032960:	3108983a 	sll	r4,r6,r4
 4032964:	2884d83a 	srl	r2,r5,r2
 4032968:	41ccb03a 	or	r6,r8,r7
 403296c:	2008c03a 	cmpne	r4,r4,zero
 4032970:	310cb03a 	or	r6,r6,r4
 4032974:	898dc83a 	sub	r6,r17,r6
 4032978:	89a3803a 	cmpltu	r17,r17,r6
 403297c:	1887c83a 	sub	r3,r3,r2
 4032980:	1c47c83a 	sub	r3,r3,r17
 4032984:	3023883a 	mov	r17,r6
 4032988:	1880202c 	andhi	r2,r3,128
 403298c:	10002326 	beq	r2,zero,4032a1c <__subdf3+0x20c>
 4032990:	04c02034 	movhi	r19,128
 4032994:	9cffffc4 	addi	r19,r19,-1
 4032998:	1ce6703a 	and	r19,r3,r19
 403299c:	98007a26 	beq	r19,zero,4032b88 <__subdf3+0x378>
 40329a0:	9809883a 	mov	r4,r19
 40329a4:	4026ee40 	call	4026ee4 <__clzsi2>
 40329a8:	113ffe04 	addi	r4,r2,-8
 40329ac:	00c007c4 	movi	r3,31
 40329b0:	19007b16 	blt	r3,r4,4032ba0 <__subdf3+0x390>
 40329b4:	00800804 	movi	r2,32
 40329b8:	1105c83a 	sub	r2,r2,r4
 40329bc:	8884d83a 	srl	r2,r17,r2
 40329c0:	9906983a 	sll	r3,r19,r4
 40329c4:	8922983a 	sll	r17,r17,r4
 40329c8:	10c4b03a 	or	r2,r2,r3
 40329cc:	24007816 	blt	r4,r16,4032bb0 <__subdf3+0x3a0>
 40329d0:	2421c83a 	sub	r16,r4,r16
 40329d4:	80c00044 	addi	r3,r16,1
 40329d8:	010007c4 	movi	r4,31
 40329dc:	20c09516 	blt	r4,r3,4032c34 <__subdf3+0x424>
 40329e0:	01400804 	movi	r5,32
 40329e4:	28cbc83a 	sub	r5,r5,r3
 40329e8:	88c8d83a 	srl	r4,r17,r3
 40329ec:	8962983a 	sll	r17,r17,r5
 40329f0:	114a983a 	sll	r5,r2,r5
 40329f4:	10c6d83a 	srl	r3,r2,r3
 40329f8:	8804c03a 	cmpne	r2,r17,zero
 40329fc:	290ab03a 	or	r5,r5,r4
 4032a00:	28a2b03a 	or	r17,r5,r2
 4032a04:	0021883a 	mov	r16,zero
 4032a08:	003fa206 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032a0c:	2090b03a 	or	r8,r4,r2
 4032a10:	40018e26 	beq	r8,zero,403304c <__subdf3+0x83c>
 4032a14:	1007883a 	mov	r3,r2
 4032a18:	2023883a 	mov	r17,r4
 4032a1c:	888001cc 	andi	r2,r17,7
 4032a20:	103f9e1e 	bne	r2,zero,403289c <__flash_rwdata_start+0xffffc630>
 4032a24:	1804977a 	slli	r2,r3,29
 4032a28:	8822d0fa 	srli	r17,r17,3
 4032a2c:	1810d0fa 	srli	r8,r3,3
 4032a30:	9100004c 	andi	r4,r18,1
 4032a34:	1444b03a 	or	r2,r2,r17
 4032a38:	00c1ffc4 	movi	r3,2047
 4032a3c:	80c02826 	beq	r16,r3,4032ae0 <__subdf3+0x2d0>
 4032a40:	01400434 	movhi	r5,16
 4032a44:	297fffc4 	addi	r5,r5,-1
 4032a48:	80e0703a 	and	r16,r16,r3
 4032a4c:	414a703a 	and	r5,r8,r5
 4032a50:	003fa806 	br	40328f4 <__flash_rwdata_start+0xffffc688>
 4032a54:	0080630e 	bge	zero,r2,4032be4 <__subdf3+0x3d4>
 4032a58:	48003026 	beq	r9,zero,4032b1c <__subdf3+0x30c>
 4032a5c:	0101ffc4 	movi	r4,2047
 4032a60:	813f8c26 	beq	r16,r4,4032894 <__flash_rwdata_start+0xffffc628>
 4032a64:	29402034 	orhi	r5,r5,128
 4032a68:	01000e04 	movi	r4,56
 4032a6c:	2080a90e 	bge	r4,r2,4032d14 <__subdf3+0x504>
 4032a70:	298cb03a 	or	r6,r5,r6
 4032a74:	3012c03a 	cmpne	r9,r6,zero
 4032a78:	0005883a 	mov	r2,zero
 4032a7c:	4c53883a 	add	r9,r9,r17
 4032a80:	4c63803a 	cmpltu	r17,r9,r17
 4032a84:	10c7883a 	add	r3,r2,r3
 4032a88:	88c7883a 	add	r3,r17,r3
 4032a8c:	4823883a 	mov	r17,r9
 4032a90:	1880202c 	andhi	r2,r3,128
 4032a94:	1000d026 	beq	r2,zero,4032dd8 <__subdf3+0x5c8>
 4032a98:	84000044 	addi	r16,r16,1
 4032a9c:	0081ffc4 	movi	r2,2047
 4032aa0:	8080fe26 	beq	r16,r2,4032e9c <__subdf3+0x68c>
 4032aa4:	00bfe034 	movhi	r2,65408
 4032aa8:	10bfffc4 	addi	r2,r2,-1
 4032aac:	1886703a 	and	r3,r3,r2
 4032ab0:	880ad07a 	srli	r5,r17,1
 4032ab4:	180497fa 	slli	r2,r3,31
 4032ab8:	8900004c 	andi	r4,r17,1
 4032abc:	2922b03a 	or	r17,r5,r4
 4032ac0:	1806d07a 	srli	r3,r3,1
 4032ac4:	1462b03a 	or	r17,r2,r17
 4032ac8:	3825883a 	mov	r18,r7
 4032acc:	003f7106 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032ad0:	2984b03a 	or	r2,r5,r6
 4032ad4:	103f6826 	beq	r2,zero,4032878 <__flash_rwdata_start+0xffffc60c>
 4032ad8:	39c03fcc 	andi	r7,r7,255
 4032adc:	003f6706 	br	403287c <__flash_rwdata_start+0xffffc610>
 4032ae0:	4086b03a 	or	r3,r8,r2
 4032ae4:	18015226 	beq	r3,zero,4033030 <__subdf3+0x820>
 4032ae8:	00c00434 	movhi	r3,16
 4032aec:	41400234 	orhi	r5,r8,8
 4032af0:	18ffffc4 	addi	r3,r3,-1
 4032af4:	28ca703a 	and	r5,r5,r3
 4032af8:	003f7e06 	br	40328f4 <__flash_rwdata_start+0xffffc688>
 4032afc:	10bfffc4 	addi	r2,r2,-1
 4032b00:	1000491e 	bne	r2,zero,4032c28 <__subdf3+0x418>
 4032b04:	898fc83a 	sub	r7,r17,r6
 4032b08:	89e3803a 	cmpltu	r17,r17,r7
 4032b0c:	1947c83a 	sub	r3,r3,r5
 4032b10:	1c47c83a 	sub	r3,r3,r17
 4032b14:	3823883a 	mov	r17,r7
 4032b18:	003f9b06 	br	4032988 <__flash_rwdata_start+0xffffc71c>
 4032b1c:	2988b03a 	or	r4,r5,r6
 4032b20:	203f5c26 	beq	r4,zero,4032894 <__flash_rwdata_start+0xffffc628>
 4032b24:	10bfffc4 	addi	r2,r2,-1
 4032b28:	1000931e 	bne	r2,zero,4032d78 <__subdf3+0x568>
 4032b2c:	898d883a 	add	r6,r17,r6
 4032b30:	3463803a 	cmpltu	r17,r6,r17
 4032b34:	1947883a 	add	r3,r3,r5
 4032b38:	88c7883a 	add	r3,r17,r3
 4032b3c:	3023883a 	mov	r17,r6
 4032b40:	003fd306 	br	4032a90 <__flash_rwdata_start+0xffffc824>
 4032b44:	1000541e 	bne	r2,zero,4032c98 <__subdf3+0x488>
 4032b48:	80800044 	addi	r2,r16,1
 4032b4c:	1081ffcc 	andi	r2,r2,2047
 4032b50:	01000044 	movi	r4,1
 4032b54:	2080a20e 	bge	r4,r2,4032de0 <__subdf3+0x5d0>
 4032b58:	8989c83a 	sub	r4,r17,r6
 4032b5c:	8905803a 	cmpltu	r2,r17,r4
 4032b60:	1967c83a 	sub	r19,r3,r5
 4032b64:	98a7c83a 	sub	r19,r19,r2
 4032b68:	9880202c 	andhi	r2,r19,128
 4032b6c:	10006326 	beq	r2,zero,4032cfc <__subdf3+0x4ec>
 4032b70:	3463c83a 	sub	r17,r6,r17
 4032b74:	28c7c83a 	sub	r3,r5,r3
 4032b78:	344d803a 	cmpltu	r6,r6,r17
 4032b7c:	19a7c83a 	sub	r19,r3,r6
 4032b80:	3825883a 	mov	r18,r7
 4032b84:	983f861e 	bne	r19,zero,40329a0 <__flash_rwdata_start+0xffffc734>
 4032b88:	8809883a 	mov	r4,r17
 4032b8c:	4026ee40 	call	4026ee4 <__clzsi2>
 4032b90:	10800804 	addi	r2,r2,32
 4032b94:	113ffe04 	addi	r4,r2,-8
 4032b98:	00c007c4 	movi	r3,31
 4032b9c:	193f850e 	bge	r3,r4,40329b4 <__flash_rwdata_start+0xffffc748>
 4032ba0:	10bff604 	addi	r2,r2,-40
 4032ba4:	8884983a 	sll	r2,r17,r2
 4032ba8:	0023883a 	mov	r17,zero
 4032bac:	243f880e 	bge	r4,r16,40329d0 <__flash_rwdata_start+0xffffc764>
 4032bb0:	00ffe034 	movhi	r3,65408
 4032bb4:	18ffffc4 	addi	r3,r3,-1
 4032bb8:	8121c83a 	sub	r16,r16,r4
 4032bbc:	10c6703a 	and	r3,r2,r3
 4032bc0:	003f3406 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032bc4:	9100004c 	andi	r4,r18,1
 4032bc8:	000b883a 	mov	r5,zero
 4032bcc:	0005883a 	mov	r2,zero
 4032bd0:	003f4806 	br	40328f4 <__flash_rwdata_start+0xffffc688>
 4032bd4:	298cb03a 	or	r6,r5,r6
 4032bd8:	300cc03a 	cmpne	r6,r6,zero
 4032bdc:	0005883a 	mov	r2,zero
 4032be0:	003f6406 	br	4032974 <__flash_rwdata_start+0xffffc708>
 4032be4:	10009a1e 	bne	r2,zero,4032e50 <__subdf3+0x640>
 4032be8:	82400044 	addi	r9,r16,1
 4032bec:	4881ffcc 	andi	r2,r9,2047
 4032bf0:	02800044 	movi	r10,1
 4032bf4:	5080670e 	bge	r10,r2,4032d94 <__subdf3+0x584>
 4032bf8:	0081ffc4 	movi	r2,2047
 4032bfc:	4880af26 	beq	r9,r2,4032ebc <__subdf3+0x6ac>
 4032c00:	898d883a 	add	r6,r17,r6
 4032c04:	1945883a 	add	r2,r3,r5
 4032c08:	3447803a 	cmpltu	r3,r6,r17
 4032c0c:	1887883a 	add	r3,r3,r2
 4032c10:	182297fa 	slli	r17,r3,31
 4032c14:	300cd07a 	srli	r6,r6,1
 4032c18:	1806d07a 	srli	r3,r3,1
 4032c1c:	4821883a 	mov	r16,r9
 4032c20:	89a2b03a 	or	r17,r17,r6
 4032c24:	003f1b06 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032c28:	0101ffc4 	movi	r4,2047
 4032c2c:	813f441e 	bne	r16,r4,4032940 <__flash_rwdata_start+0xffffc6d4>
 4032c30:	003f1806 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032c34:	843ff844 	addi	r16,r16,-31
 4032c38:	01400804 	movi	r5,32
 4032c3c:	1408d83a 	srl	r4,r2,r16
 4032c40:	19405026 	beq	r3,r5,4032d84 <__subdf3+0x574>
 4032c44:	01401004 	movi	r5,64
 4032c48:	28c7c83a 	sub	r3,r5,r3
 4032c4c:	10c4983a 	sll	r2,r2,r3
 4032c50:	88a2b03a 	or	r17,r17,r2
 4032c54:	8822c03a 	cmpne	r17,r17,zero
 4032c58:	2462b03a 	or	r17,r4,r17
 4032c5c:	0007883a 	mov	r3,zero
 4032c60:	0021883a 	mov	r16,zero
 4032c64:	003f6d06 	br	4032a1c <__flash_rwdata_start+0xffffc7b0>
 4032c68:	11fff804 	addi	r7,r2,-32
 4032c6c:	01000804 	movi	r4,32
 4032c70:	29ced83a 	srl	r7,r5,r7
 4032c74:	11004526 	beq	r2,r4,4032d8c <__subdf3+0x57c>
 4032c78:	01001004 	movi	r4,64
 4032c7c:	2089c83a 	sub	r4,r4,r2
 4032c80:	2904983a 	sll	r2,r5,r4
 4032c84:	118cb03a 	or	r6,r2,r6
 4032c88:	300cc03a 	cmpne	r6,r6,zero
 4032c8c:	398cb03a 	or	r6,r7,r6
 4032c90:	0005883a 	mov	r2,zero
 4032c94:	003f3706 	br	4032974 <__flash_rwdata_start+0xffffc708>
 4032c98:	80002a26 	beq	r16,zero,4032d44 <__subdf3+0x534>
 4032c9c:	0101ffc4 	movi	r4,2047
 4032ca0:	49006626 	beq	r9,r4,4032e3c <__subdf3+0x62c>
 4032ca4:	0085c83a 	sub	r2,zero,r2
 4032ca8:	18c02034 	orhi	r3,r3,128
 4032cac:	01000e04 	movi	r4,56
 4032cb0:	20807e16 	blt	r4,r2,4032eac <__subdf3+0x69c>
 4032cb4:	010007c4 	movi	r4,31
 4032cb8:	2080e716 	blt	r4,r2,4033058 <__subdf3+0x848>
 4032cbc:	01000804 	movi	r4,32
 4032cc0:	2089c83a 	sub	r4,r4,r2
 4032cc4:	1914983a 	sll	r10,r3,r4
 4032cc8:	8890d83a 	srl	r8,r17,r2
 4032ccc:	8908983a 	sll	r4,r17,r4
 4032cd0:	1884d83a 	srl	r2,r3,r2
 4032cd4:	5222b03a 	or	r17,r10,r8
 4032cd8:	2006c03a 	cmpne	r3,r4,zero
 4032cdc:	88e2b03a 	or	r17,r17,r3
 4032ce0:	3463c83a 	sub	r17,r6,r17
 4032ce4:	2885c83a 	sub	r2,r5,r2
 4032ce8:	344d803a 	cmpltu	r6,r6,r17
 4032cec:	1187c83a 	sub	r3,r2,r6
 4032cf0:	4821883a 	mov	r16,r9
 4032cf4:	3825883a 	mov	r18,r7
 4032cf8:	003f2306 	br	4032988 <__flash_rwdata_start+0xffffc71c>
 4032cfc:	24d0b03a 	or	r8,r4,r19
 4032d00:	40001b1e 	bne	r8,zero,4032d70 <__subdf3+0x560>
 4032d04:	0005883a 	mov	r2,zero
 4032d08:	0009883a 	mov	r4,zero
 4032d0c:	0021883a 	mov	r16,zero
 4032d10:	003f4906 	br	4032a38 <__flash_rwdata_start+0xffffc7cc>
 4032d14:	010007c4 	movi	r4,31
 4032d18:	20803a16 	blt	r4,r2,4032e04 <__subdf3+0x5f4>
 4032d1c:	01000804 	movi	r4,32
 4032d20:	2089c83a 	sub	r4,r4,r2
 4032d24:	2912983a 	sll	r9,r5,r4
 4032d28:	3090d83a 	srl	r8,r6,r2
 4032d2c:	3108983a 	sll	r4,r6,r4
 4032d30:	2884d83a 	srl	r2,r5,r2
 4032d34:	4a12b03a 	or	r9,r9,r8
 4032d38:	2008c03a 	cmpne	r4,r4,zero
 4032d3c:	4912b03a 	or	r9,r9,r4
 4032d40:	003f4e06 	br	4032a7c <__flash_rwdata_start+0xffffc810>
 4032d44:	1c48b03a 	or	r4,r3,r17
 4032d48:	20003c26 	beq	r4,zero,4032e3c <__subdf3+0x62c>
 4032d4c:	0084303a 	nor	r2,zero,r2
 4032d50:	1000381e 	bne	r2,zero,4032e34 <__subdf3+0x624>
 4032d54:	3463c83a 	sub	r17,r6,r17
 4032d58:	28c5c83a 	sub	r2,r5,r3
 4032d5c:	344d803a 	cmpltu	r6,r6,r17
 4032d60:	1187c83a 	sub	r3,r2,r6
 4032d64:	4821883a 	mov	r16,r9
 4032d68:	3825883a 	mov	r18,r7
 4032d6c:	003f0606 	br	4032988 <__flash_rwdata_start+0xffffc71c>
 4032d70:	2023883a 	mov	r17,r4
 4032d74:	003f0906 	br	403299c <__flash_rwdata_start+0xffffc730>
 4032d78:	0101ffc4 	movi	r4,2047
 4032d7c:	813f3a1e 	bne	r16,r4,4032a68 <__flash_rwdata_start+0xffffc7fc>
 4032d80:	003ec406 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032d84:	0005883a 	mov	r2,zero
 4032d88:	003fb106 	br	4032c50 <__flash_rwdata_start+0xffffc9e4>
 4032d8c:	0005883a 	mov	r2,zero
 4032d90:	003fbc06 	br	4032c84 <__flash_rwdata_start+0xffffca18>
 4032d94:	1c44b03a 	or	r2,r3,r17
 4032d98:	80008e1e 	bne	r16,zero,4032fd4 <__subdf3+0x7c4>
 4032d9c:	1000c826 	beq	r2,zero,40330c0 <__subdf3+0x8b0>
 4032da0:	2984b03a 	or	r2,r5,r6
 4032da4:	103ebb26 	beq	r2,zero,4032894 <__flash_rwdata_start+0xffffc628>
 4032da8:	8989883a 	add	r4,r17,r6
 4032dac:	1945883a 	add	r2,r3,r5
 4032db0:	2447803a 	cmpltu	r3,r4,r17
 4032db4:	1887883a 	add	r3,r3,r2
 4032db8:	1880202c 	andhi	r2,r3,128
 4032dbc:	2023883a 	mov	r17,r4
 4032dc0:	103f1626 	beq	r2,zero,4032a1c <__flash_rwdata_start+0xffffc7b0>
 4032dc4:	00bfe034 	movhi	r2,65408
 4032dc8:	10bfffc4 	addi	r2,r2,-1
 4032dcc:	5021883a 	mov	r16,r10
 4032dd0:	1886703a 	and	r3,r3,r2
 4032dd4:	003eaf06 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032dd8:	3825883a 	mov	r18,r7
 4032ddc:	003f0f06 	br	4032a1c <__flash_rwdata_start+0xffffc7b0>
 4032de0:	1c44b03a 	or	r2,r3,r17
 4032de4:	8000251e 	bne	r16,zero,4032e7c <__subdf3+0x66c>
 4032de8:	1000661e 	bne	r2,zero,4032f84 <__subdf3+0x774>
 4032dec:	2990b03a 	or	r8,r5,r6
 4032df0:	40009626 	beq	r8,zero,403304c <__subdf3+0x83c>
 4032df4:	2807883a 	mov	r3,r5
 4032df8:	3023883a 	mov	r17,r6
 4032dfc:	3825883a 	mov	r18,r7
 4032e00:	003ea406 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032e04:	127ff804 	addi	r9,r2,-32
 4032e08:	01000804 	movi	r4,32
 4032e0c:	2a52d83a 	srl	r9,r5,r9
 4032e10:	11008c26 	beq	r2,r4,4033044 <__subdf3+0x834>
 4032e14:	01001004 	movi	r4,64
 4032e18:	2085c83a 	sub	r2,r4,r2
 4032e1c:	2884983a 	sll	r2,r5,r2
 4032e20:	118cb03a 	or	r6,r2,r6
 4032e24:	300cc03a 	cmpne	r6,r6,zero
 4032e28:	4992b03a 	or	r9,r9,r6
 4032e2c:	0005883a 	mov	r2,zero
 4032e30:	003f1206 	br	4032a7c <__flash_rwdata_start+0xffffc810>
 4032e34:	0101ffc4 	movi	r4,2047
 4032e38:	493f9c1e 	bne	r9,r4,4032cac <__flash_rwdata_start+0xffffca40>
 4032e3c:	2807883a 	mov	r3,r5
 4032e40:	3023883a 	mov	r17,r6
 4032e44:	4821883a 	mov	r16,r9
 4032e48:	3825883a 	mov	r18,r7
 4032e4c:	003e9106 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032e50:	80001f1e 	bne	r16,zero,4032ed0 <__subdf3+0x6c0>
 4032e54:	1c48b03a 	or	r4,r3,r17
 4032e58:	20005a26 	beq	r4,zero,4032fc4 <__subdf3+0x7b4>
 4032e5c:	0084303a 	nor	r2,zero,r2
 4032e60:	1000561e 	bne	r2,zero,4032fbc <__subdf3+0x7ac>
 4032e64:	89a3883a 	add	r17,r17,r6
 4032e68:	1945883a 	add	r2,r3,r5
 4032e6c:	898d803a 	cmpltu	r6,r17,r6
 4032e70:	3087883a 	add	r3,r6,r2
 4032e74:	4821883a 	mov	r16,r9
 4032e78:	003f0506 	br	4032a90 <__flash_rwdata_start+0xffffc824>
 4032e7c:	10002b1e 	bne	r2,zero,4032f2c <__subdf3+0x71c>
 4032e80:	2984b03a 	or	r2,r5,r6
 4032e84:	10008026 	beq	r2,zero,4033088 <__subdf3+0x878>
 4032e88:	2807883a 	mov	r3,r5
 4032e8c:	3023883a 	mov	r17,r6
 4032e90:	3825883a 	mov	r18,r7
 4032e94:	0401ffc4 	movi	r16,2047
 4032e98:	003e7e06 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032e9c:	3809883a 	mov	r4,r7
 4032ea0:	0011883a 	mov	r8,zero
 4032ea4:	0005883a 	mov	r2,zero
 4032ea8:	003ee306 	br	4032a38 <__flash_rwdata_start+0xffffc7cc>
 4032eac:	1c62b03a 	or	r17,r3,r17
 4032eb0:	8822c03a 	cmpne	r17,r17,zero
 4032eb4:	0005883a 	mov	r2,zero
 4032eb8:	003f8906 	br	4032ce0 <__flash_rwdata_start+0xffffca74>
 4032ebc:	3809883a 	mov	r4,r7
 4032ec0:	4821883a 	mov	r16,r9
 4032ec4:	0011883a 	mov	r8,zero
 4032ec8:	0005883a 	mov	r2,zero
 4032ecc:	003eda06 	br	4032a38 <__flash_rwdata_start+0xffffc7cc>
 4032ed0:	0101ffc4 	movi	r4,2047
 4032ed4:	49003b26 	beq	r9,r4,4032fc4 <__subdf3+0x7b4>
 4032ed8:	0085c83a 	sub	r2,zero,r2
 4032edc:	18c02034 	orhi	r3,r3,128
 4032ee0:	01000e04 	movi	r4,56
 4032ee4:	20806e16 	blt	r4,r2,40330a0 <__subdf3+0x890>
 4032ee8:	010007c4 	movi	r4,31
 4032eec:	20807716 	blt	r4,r2,40330cc <__subdf3+0x8bc>
 4032ef0:	01000804 	movi	r4,32
 4032ef4:	2089c83a 	sub	r4,r4,r2
 4032ef8:	1914983a 	sll	r10,r3,r4
 4032efc:	8890d83a 	srl	r8,r17,r2
 4032f00:	8908983a 	sll	r4,r17,r4
 4032f04:	1884d83a 	srl	r2,r3,r2
 4032f08:	5222b03a 	or	r17,r10,r8
 4032f0c:	2006c03a 	cmpne	r3,r4,zero
 4032f10:	88e2b03a 	or	r17,r17,r3
 4032f14:	89a3883a 	add	r17,r17,r6
 4032f18:	1145883a 	add	r2,r2,r5
 4032f1c:	898d803a 	cmpltu	r6,r17,r6
 4032f20:	3087883a 	add	r3,r6,r2
 4032f24:	4821883a 	mov	r16,r9
 4032f28:	003ed906 	br	4032a90 <__flash_rwdata_start+0xffffc824>
 4032f2c:	2984b03a 	or	r2,r5,r6
 4032f30:	10004226 	beq	r2,zero,403303c <__subdf3+0x82c>
 4032f34:	1808d0fa 	srli	r4,r3,3
 4032f38:	8822d0fa 	srli	r17,r17,3
 4032f3c:	1806977a 	slli	r3,r3,29
 4032f40:	2080022c 	andhi	r2,r4,8
 4032f44:	1c62b03a 	or	r17,r3,r17
 4032f48:	10000826 	beq	r2,zero,4032f6c <__subdf3+0x75c>
 4032f4c:	2812d0fa 	srli	r9,r5,3
 4032f50:	4880022c 	andhi	r2,r9,8
 4032f54:	1000051e 	bne	r2,zero,4032f6c <__subdf3+0x75c>
 4032f58:	300cd0fa 	srli	r6,r6,3
 4032f5c:	2804977a 	slli	r2,r5,29
 4032f60:	4809883a 	mov	r4,r9
 4032f64:	3825883a 	mov	r18,r7
 4032f68:	11a2b03a 	or	r17,r2,r6
 4032f6c:	8806d77a 	srli	r3,r17,29
 4032f70:	200890fa 	slli	r4,r4,3
 4032f74:	882290fa 	slli	r17,r17,3
 4032f78:	0401ffc4 	movi	r16,2047
 4032f7c:	1906b03a 	or	r3,r3,r4
 4032f80:	003e4406 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032f84:	2984b03a 	or	r2,r5,r6
 4032f88:	103e4226 	beq	r2,zero,4032894 <__flash_rwdata_start+0xffffc628>
 4032f8c:	8989c83a 	sub	r4,r17,r6
 4032f90:	8911803a 	cmpltu	r8,r17,r4
 4032f94:	1945c83a 	sub	r2,r3,r5
 4032f98:	1205c83a 	sub	r2,r2,r8
 4032f9c:	1200202c 	andhi	r8,r2,128
 4032fa0:	403e9a26 	beq	r8,zero,4032a0c <__flash_rwdata_start+0xffffc7a0>
 4032fa4:	3463c83a 	sub	r17,r6,r17
 4032fa8:	28c5c83a 	sub	r2,r5,r3
 4032fac:	344d803a 	cmpltu	r6,r6,r17
 4032fb0:	1187c83a 	sub	r3,r2,r6
 4032fb4:	3825883a 	mov	r18,r7
 4032fb8:	003e3606 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032fbc:	0101ffc4 	movi	r4,2047
 4032fc0:	493fc71e 	bne	r9,r4,4032ee0 <__flash_rwdata_start+0xffffcc74>
 4032fc4:	2807883a 	mov	r3,r5
 4032fc8:	3023883a 	mov	r17,r6
 4032fcc:	4821883a 	mov	r16,r9
 4032fd0:	003e3006 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4032fd4:	10003626 	beq	r2,zero,40330b0 <__subdf3+0x8a0>
 4032fd8:	2984b03a 	or	r2,r5,r6
 4032fdc:	10001726 	beq	r2,zero,403303c <__subdf3+0x82c>
 4032fe0:	1808d0fa 	srli	r4,r3,3
 4032fe4:	8822d0fa 	srli	r17,r17,3
 4032fe8:	1806977a 	slli	r3,r3,29
 4032fec:	2080022c 	andhi	r2,r4,8
 4032ff0:	1c62b03a 	or	r17,r3,r17
 4032ff4:	10000726 	beq	r2,zero,4033014 <__subdf3+0x804>
 4032ff8:	2812d0fa 	srli	r9,r5,3
 4032ffc:	4880022c 	andhi	r2,r9,8
 4033000:	1000041e 	bne	r2,zero,4033014 <__subdf3+0x804>
 4033004:	300cd0fa 	srli	r6,r6,3
 4033008:	2804977a 	slli	r2,r5,29
 403300c:	4809883a 	mov	r4,r9
 4033010:	11a2b03a 	or	r17,r2,r6
 4033014:	8806d77a 	srli	r3,r17,29
 4033018:	200890fa 	slli	r4,r4,3
 403301c:	882290fa 	slli	r17,r17,3
 4033020:	3825883a 	mov	r18,r7
 4033024:	1906b03a 	or	r3,r3,r4
 4033028:	0401ffc4 	movi	r16,2047
 403302c:	003e1906 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4033030:	000b883a 	mov	r5,zero
 4033034:	0005883a 	mov	r2,zero
 4033038:	003e2e06 	br	40328f4 <__flash_rwdata_start+0xffffc688>
 403303c:	0401ffc4 	movi	r16,2047
 4033040:	003e1406 	br	4032894 <__flash_rwdata_start+0xffffc628>
 4033044:	0005883a 	mov	r2,zero
 4033048:	003f7506 	br	4032e20 <__flash_rwdata_start+0xffffcbb4>
 403304c:	0005883a 	mov	r2,zero
 4033050:	0009883a 	mov	r4,zero
 4033054:	003e7806 	br	4032a38 <__flash_rwdata_start+0xffffc7cc>
 4033058:	123ff804 	addi	r8,r2,-32
 403305c:	01000804 	movi	r4,32
 4033060:	1a10d83a 	srl	r8,r3,r8
 4033064:	11002526 	beq	r2,r4,40330fc <__subdf3+0x8ec>
 4033068:	01001004 	movi	r4,64
 403306c:	2085c83a 	sub	r2,r4,r2
 4033070:	1884983a 	sll	r2,r3,r2
 4033074:	1444b03a 	or	r2,r2,r17
 4033078:	1004c03a 	cmpne	r2,r2,zero
 403307c:	40a2b03a 	or	r17,r8,r2
 4033080:	0005883a 	mov	r2,zero
 4033084:	003f1606 	br	4032ce0 <__flash_rwdata_start+0xffffca74>
 4033088:	02000434 	movhi	r8,16
 403308c:	0009883a 	mov	r4,zero
 4033090:	423fffc4 	addi	r8,r8,-1
 4033094:	00bfffc4 	movi	r2,-1
 4033098:	0401ffc4 	movi	r16,2047
 403309c:	003e6606 	br	4032a38 <__flash_rwdata_start+0xffffc7cc>
 40330a0:	1c62b03a 	or	r17,r3,r17
 40330a4:	8822c03a 	cmpne	r17,r17,zero
 40330a8:	0005883a 	mov	r2,zero
 40330ac:	003f9906 	br	4032f14 <__flash_rwdata_start+0xffffcca8>
 40330b0:	2807883a 	mov	r3,r5
 40330b4:	3023883a 	mov	r17,r6
 40330b8:	0401ffc4 	movi	r16,2047
 40330bc:	003df506 	br	4032894 <__flash_rwdata_start+0xffffc628>
 40330c0:	2807883a 	mov	r3,r5
 40330c4:	3023883a 	mov	r17,r6
 40330c8:	003df206 	br	4032894 <__flash_rwdata_start+0xffffc628>
 40330cc:	123ff804 	addi	r8,r2,-32
 40330d0:	01000804 	movi	r4,32
 40330d4:	1a10d83a 	srl	r8,r3,r8
 40330d8:	11000a26 	beq	r2,r4,4033104 <__subdf3+0x8f4>
 40330dc:	01001004 	movi	r4,64
 40330e0:	2085c83a 	sub	r2,r4,r2
 40330e4:	1884983a 	sll	r2,r3,r2
 40330e8:	1444b03a 	or	r2,r2,r17
 40330ec:	1004c03a 	cmpne	r2,r2,zero
 40330f0:	40a2b03a 	or	r17,r8,r2
 40330f4:	0005883a 	mov	r2,zero
 40330f8:	003f8606 	br	4032f14 <__flash_rwdata_start+0xffffcca8>
 40330fc:	0005883a 	mov	r2,zero
 4033100:	003fdc06 	br	4033074 <__flash_rwdata_start+0xffffce08>
 4033104:	0005883a 	mov	r2,zero
 4033108:	003ff706 	br	40330e8 <__flash_rwdata_start+0xffffce7c>

0403310c <__fixdfsi>:
 403310c:	280cd53a 	srli	r6,r5,20
 4033110:	00c00434 	movhi	r3,16
 4033114:	18ffffc4 	addi	r3,r3,-1
 4033118:	3181ffcc 	andi	r6,r6,2047
 403311c:	01c0ff84 	movi	r7,1022
 4033120:	28c6703a 	and	r3,r5,r3
 4033124:	280ad7fa 	srli	r5,r5,31
 4033128:	3980120e 	bge	r7,r6,4033174 <__fixdfsi+0x68>
 403312c:	00810744 	movi	r2,1053
 4033130:	11800c16 	blt	r2,r6,4033164 <__fixdfsi+0x58>
 4033134:	00810cc4 	movi	r2,1075
 4033138:	1185c83a 	sub	r2,r2,r6
 403313c:	01c007c4 	movi	r7,31
 4033140:	18c00434 	orhi	r3,r3,16
 4033144:	38800d16 	blt	r7,r2,403317c <__fixdfsi+0x70>
 4033148:	31befb44 	addi	r6,r6,-1043
 403314c:	2084d83a 	srl	r2,r4,r2
 4033150:	1986983a 	sll	r3,r3,r6
 4033154:	1884b03a 	or	r2,r3,r2
 4033158:	28000726 	beq	r5,zero,4033178 <__fixdfsi+0x6c>
 403315c:	0085c83a 	sub	r2,zero,r2
 4033160:	f800283a 	ret
 4033164:	00a00034 	movhi	r2,32768
 4033168:	10bfffc4 	addi	r2,r2,-1
 403316c:	2885883a 	add	r2,r5,r2
 4033170:	f800283a 	ret
 4033174:	0005883a 	mov	r2,zero
 4033178:	f800283a 	ret
 403317c:	008104c4 	movi	r2,1043
 4033180:	1185c83a 	sub	r2,r2,r6
 4033184:	1884d83a 	srl	r2,r3,r2
 4033188:	003ff306 	br	4033158 <__flash_rwdata_start+0xffffceec>

0403318c <__floatunsidf>:
 403318c:	defffe04 	addi	sp,sp,-8
 4033190:	dc000015 	stw	r16,0(sp)
 4033194:	dfc00115 	stw	ra,4(sp)
 4033198:	2021883a 	mov	r16,r4
 403319c:	20002226 	beq	r4,zero,4033228 <__floatunsidf+0x9c>
 40331a0:	4026ee40 	call	4026ee4 <__clzsi2>
 40331a4:	01010784 	movi	r4,1054
 40331a8:	2089c83a 	sub	r4,r4,r2
 40331ac:	01810cc4 	movi	r6,1075
 40331b0:	310dc83a 	sub	r6,r6,r4
 40331b4:	00c007c4 	movi	r3,31
 40331b8:	1980120e 	bge	r3,r6,4033204 <__floatunsidf+0x78>
 40331bc:	00c104c4 	movi	r3,1043
 40331c0:	1907c83a 	sub	r3,r3,r4
 40331c4:	80ca983a 	sll	r5,r16,r3
 40331c8:	00800434 	movhi	r2,16
 40331cc:	10bfffc4 	addi	r2,r2,-1
 40331d0:	2101ffcc 	andi	r4,r4,2047
 40331d4:	0021883a 	mov	r16,zero
 40331d8:	288a703a 	and	r5,r5,r2
 40331dc:	2008953a 	slli	r4,r4,20
 40331e0:	00c00434 	movhi	r3,16
 40331e4:	18ffffc4 	addi	r3,r3,-1
 40331e8:	28c6703a 	and	r3,r5,r3
 40331ec:	8005883a 	mov	r2,r16
 40331f0:	1906b03a 	or	r3,r3,r4
 40331f4:	dfc00117 	ldw	ra,4(sp)
 40331f8:	dc000017 	ldw	r16,0(sp)
 40331fc:	dec00204 	addi	sp,sp,8
 4033200:	f800283a 	ret
 4033204:	00c002c4 	movi	r3,11
 4033208:	188bc83a 	sub	r5,r3,r2
 403320c:	814ad83a 	srl	r5,r16,r5
 4033210:	00c00434 	movhi	r3,16
 4033214:	18ffffc4 	addi	r3,r3,-1
 4033218:	81a0983a 	sll	r16,r16,r6
 403321c:	2101ffcc 	andi	r4,r4,2047
 4033220:	28ca703a 	and	r5,r5,r3
 4033224:	003fed06 	br	40331dc <__flash_rwdata_start+0xffffcf70>
 4033228:	0009883a 	mov	r4,zero
 403322c:	000b883a 	mov	r5,zero
 4033230:	003fea06 	br	40331dc <__flash_rwdata_start+0xffffcf70>

04033234 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4033234:	defffe04 	addi	sp,sp,-8
 4033238:	dfc00115 	stw	ra,4(sp)
 403323c:	df000015 	stw	fp,0(sp)
 4033240:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4033244:	d0a01b17 	ldw	r2,-32660(gp)
 4033248:	10000326 	beq	r2,zero,4033258 <alt_get_errno+0x24>
 403324c:	d0a01b17 	ldw	r2,-32660(gp)
 4033250:	103ee83a 	callr	r2
 4033254:	00000106 	br	403325c <alt_get_errno+0x28>
 4033258:	d0a02904 	addi	r2,gp,-32604
}
 403325c:	e037883a 	mov	sp,fp
 4033260:	dfc00117 	ldw	ra,4(sp)
 4033264:	df000017 	ldw	fp,0(sp)
 4033268:	dec00204 	addi	sp,sp,8
 403326c:	f800283a 	ret

04033270 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 4033270:	defffb04 	addi	sp,sp,-20
 4033274:	dfc00415 	stw	ra,16(sp)
 4033278:	df000315 	stw	fp,12(sp)
 403327c:	df000304 	addi	fp,sp,12
 4033280:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 4033284:	e0bfff17 	ldw	r2,-4(fp)
 4033288:	10000616 	blt	r2,zero,40332a4 <close+0x34>
 403328c:	e0bfff17 	ldw	r2,-4(fp)
 4033290:	10c00324 	muli	r3,r2,12
 4033294:	00800034 	movhi	r2,0
 4033298:	1083d904 	addi	r2,r2,3940
 403329c:	1885883a 	add	r2,r3,r2
 40332a0:	00000106 	br	40332a8 <close+0x38>
 40332a4:	0005883a 	mov	r2,zero
 40332a8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 40332ac:	e0bffd17 	ldw	r2,-12(fp)
 40332b0:	10001926 	beq	r2,zero,4033318 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 40332b4:	e0bffd17 	ldw	r2,-12(fp)
 40332b8:	10800017 	ldw	r2,0(r2)
 40332bc:	10800417 	ldw	r2,16(r2)
 40332c0:	10000626 	beq	r2,zero,40332dc <close+0x6c>
 40332c4:	e0bffd17 	ldw	r2,-12(fp)
 40332c8:	10800017 	ldw	r2,0(r2)
 40332cc:	10800417 	ldw	r2,16(r2)
 40332d0:	e13ffd17 	ldw	r4,-12(fp)
 40332d4:	103ee83a 	callr	r2
 40332d8:	00000106 	br	40332e0 <close+0x70>
 40332dc:	0005883a 	mov	r2,zero
 40332e0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 40332e4:	e13fff17 	ldw	r4,-4(fp)
 40332e8:	4033af00 	call	4033af0 <alt_release_fd>
    if (rval < 0)
 40332ec:	e0bffe17 	ldw	r2,-8(fp)
 40332f0:	1000070e 	bge	r2,zero,4033310 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 40332f4:	40332340 	call	4033234 <alt_get_errno>
 40332f8:	1007883a 	mov	r3,r2
 40332fc:	e0bffe17 	ldw	r2,-8(fp)
 4033300:	0085c83a 	sub	r2,zero,r2
 4033304:	18800015 	stw	r2,0(r3)
      return -1;
 4033308:	00bfffc4 	movi	r2,-1
 403330c:	00000706 	br	403332c <close+0xbc>
    }
    return 0;
 4033310:	0005883a 	mov	r2,zero
 4033314:	00000506 	br	403332c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4033318:	40332340 	call	4033234 <alt_get_errno>
 403331c:	1007883a 	mov	r3,r2
 4033320:	00801444 	movi	r2,81
 4033324:	18800015 	stw	r2,0(r3)
    return -1;
 4033328:	00bfffc4 	movi	r2,-1
  }
}
 403332c:	e037883a 	mov	sp,fp
 4033330:	dfc00117 	ldw	ra,4(sp)
 4033334:	df000017 	ldw	fp,0(sp)
 4033338:	dec00204 	addi	sp,sp,8
 403333c:	f800283a 	ret

04033340 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 4033340:	defffc04 	addi	sp,sp,-16
 4033344:	df000315 	stw	fp,12(sp)
 4033348:	df000304 	addi	fp,sp,12
 403334c:	e13ffd15 	stw	r4,-12(fp)
 4033350:	e17ffe15 	stw	r5,-8(fp)
 4033354:	e1bfff15 	stw	r6,-4(fp)
  return len;
 4033358:	e0bfff17 	ldw	r2,-4(fp)
}
 403335c:	e037883a 	mov	sp,fp
 4033360:	df000017 	ldw	fp,0(sp)
 4033364:	dec00104 	addi	sp,sp,4
 4033368:	f800283a 	ret

0403336c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 403336c:	defffd04 	addi	sp,sp,-12
 4033370:	df000215 	stw	fp,8(sp)
 4033374:	df000204 	addi	fp,sp,8
 4033378:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 403337c:	0001883a 	nop
 4033380:	e0bfff17 	ldw	r2,-4(fp)
 4033384:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4033388:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 403338c:	10000226 	beq	r2,zero,4033398 <_exit+0x2c>
    ALT_SIM_FAIL();
 4033390:	002af070 	cmpltui	zero,zero,43969
 4033394:	00000106 	br	403339c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4033398:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 403339c:	003fff06 	br	403339c <__flash_rwdata_start+0xffffd130>

040333a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40333a0:	defffe04 	addi	sp,sp,-8
 40333a4:	dfc00115 	stw	ra,4(sp)
 40333a8:	df000015 	stw	fp,0(sp)
 40333ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40333b0:	d0a01b17 	ldw	r2,-32660(gp)
 40333b4:	10000326 	beq	r2,zero,40333c4 <alt_get_errno+0x24>
 40333b8:	d0a01b17 	ldw	r2,-32660(gp)
 40333bc:	103ee83a 	callr	r2
 40333c0:	00000106 	br	40333c8 <alt_get_errno+0x28>
 40333c4:	d0a02904 	addi	r2,gp,-32604
}
 40333c8:	e037883a 	mov	sp,fp
 40333cc:	dfc00117 	ldw	ra,4(sp)
 40333d0:	df000017 	ldw	fp,0(sp)
 40333d4:	dec00204 	addi	sp,sp,8
 40333d8:	f800283a 	ret

040333dc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 40333dc:	defffb04 	addi	sp,sp,-20
 40333e0:	dfc00415 	stw	ra,16(sp)
 40333e4:	df000315 	stw	fp,12(sp)
 40333e8:	df000304 	addi	fp,sp,12
 40333ec:	e13ffe15 	stw	r4,-8(fp)
 40333f0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 40333f4:	e0bffe17 	ldw	r2,-8(fp)
 40333f8:	10000616 	blt	r2,zero,4033414 <fstat+0x38>
 40333fc:	e0bffe17 	ldw	r2,-8(fp)
 4033400:	10c00324 	muli	r3,r2,12
 4033404:	00800034 	movhi	r2,0
 4033408:	1083d904 	addi	r2,r2,3940
 403340c:	1885883a 	add	r2,r3,r2
 4033410:	00000106 	br	4033418 <fstat+0x3c>
 4033414:	0005883a 	mov	r2,zero
 4033418:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 403341c:	e0bffd17 	ldw	r2,-12(fp)
 4033420:	10001026 	beq	r2,zero,4033464 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 4033424:	e0bffd17 	ldw	r2,-12(fp)
 4033428:	10800017 	ldw	r2,0(r2)
 403342c:	10800817 	ldw	r2,32(r2)
 4033430:	10000726 	beq	r2,zero,4033450 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 4033434:	e0bffd17 	ldw	r2,-12(fp)
 4033438:	10800017 	ldw	r2,0(r2)
 403343c:	10800817 	ldw	r2,32(r2)
 4033440:	e17fff17 	ldw	r5,-4(fp)
 4033444:	e13ffd17 	ldw	r4,-12(fp)
 4033448:	103ee83a 	callr	r2
 403344c:	00000a06 	br	4033478 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 4033450:	e0bfff17 	ldw	r2,-4(fp)
 4033454:	00c80004 	movi	r3,8192
 4033458:	10c00115 	stw	r3,4(r2)
      return 0;
 403345c:	0005883a 	mov	r2,zero
 4033460:	00000506 	br	4033478 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4033464:	40333a00 	call	40333a0 <alt_get_errno>
 4033468:	1007883a 	mov	r3,r2
 403346c:	00801444 	movi	r2,81
 4033470:	18800015 	stw	r2,0(r3)
    return -1;
 4033474:	00bfffc4 	movi	r2,-1
  }
}
 4033478:	e037883a 	mov	sp,fp
 403347c:	dfc00117 	ldw	ra,4(sp)
 4033480:	df000017 	ldw	fp,0(sp)
 4033484:	dec00204 	addi	sp,sp,8
 4033488:	f800283a 	ret

0403348c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 403348c:	deffff04 	addi	sp,sp,-4
 4033490:	df000015 	stw	fp,0(sp)
 4033494:	d839883a 	mov	fp,sp
  return 0;
 4033498:	0005883a 	mov	r2,zero
}
 403349c:	e037883a 	mov	sp,fp
 40334a0:	df000017 	ldw	fp,0(sp)
 40334a4:	dec00104 	addi	sp,sp,4
 40334a8:	f800283a 	ret

040334ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40334ac:	defffe04 	addi	sp,sp,-8
 40334b0:	dfc00115 	stw	ra,4(sp)
 40334b4:	df000015 	stw	fp,0(sp)
 40334b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40334bc:	d0a01b17 	ldw	r2,-32660(gp)
 40334c0:	10000326 	beq	r2,zero,40334d0 <alt_get_errno+0x24>
 40334c4:	d0a01b17 	ldw	r2,-32660(gp)
 40334c8:	103ee83a 	callr	r2
 40334cc:	00000106 	br	40334d4 <alt_get_errno+0x28>
 40334d0:	d0a02904 	addi	r2,gp,-32604
}
 40334d4:	e037883a 	mov	sp,fp
 40334d8:	dfc00117 	ldw	ra,4(sp)
 40334dc:	df000017 	ldw	fp,0(sp)
 40334e0:	dec00204 	addi	sp,sp,8
 40334e4:	f800283a 	ret

040334e8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 40334e8:	deffed04 	addi	sp,sp,-76
 40334ec:	dfc01215 	stw	ra,72(sp)
 40334f0:	df001115 	stw	fp,68(sp)
 40334f4:	df001104 	addi	fp,sp,68
 40334f8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 40334fc:	e0bfff17 	ldw	r2,-4(fp)
 4033500:	10000616 	blt	r2,zero,403351c <isatty+0x34>
 4033504:	e0bfff17 	ldw	r2,-4(fp)
 4033508:	10c00324 	muli	r3,r2,12
 403350c:	00800034 	movhi	r2,0
 4033510:	1083d904 	addi	r2,r2,3940
 4033514:	1885883a 	add	r2,r3,r2
 4033518:	00000106 	br	4033520 <isatty+0x38>
 403351c:	0005883a 	mov	r2,zero
 4033520:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 4033524:	e0bfef17 	ldw	r2,-68(fp)
 4033528:	10000e26 	beq	r2,zero,4033564 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 403352c:	e0bfef17 	ldw	r2,-68(fp)
 4033530:	10800017 	ldw	r2,0(r2)
 4033534:	10800817 	ldw	r2,32(r2)
 4033538:	1000021e 	bne	r2,zero,4033544 <isatty+0x5c>
    {
      return 1;
 403353c:	00800044 	movi	r2,1
 4033540:	00000d06 	br	4033578 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 4033544:	e0bff004 	addi	r2,fp,-64
 4033548:	100b883a 	mov	r5,r2
 403354c:	e13fff17 	ldw	r4,-4(fp)
 4033550:	40333dc0 	call	40333dc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 4033554:	e0bff117 	ldw	r2,-60(fp)
 4033558:	10880020 	cmpeqi	r2,r2,8192
 403355c:	10803fcc 	andi	r2,r2,255
 4033560:	00000506 	br	4033578 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4033564:	40334ac0 	call	40334ac <alt_get_errno>
 4033568:	1007883a 	mov	r3,r2
 403356c:	00801444 	movi	r2,81
 4033570:	18800015 	stw	r2,0(r3)
    return 0;
 4033574:	0005883a 	mov	r2,zero
  }
}
 4033578:	e037883a 	mov	sp,fp
 403357c:	dfc00117 	ldw	ra,4(sp)
 4033580:	df000017 	ldw	fp,0(sp)
 4033584:	dec00204 	addi	sp,sp,8
 4033588:	f800283a 	ret

0403358c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 403358c:	defffe04 	addi	sp,sp,-8
 4033590:	dfc00115 	stw	ra,4(sp)
 4033594:	df000015 	stw	fp,0(sp)
 4033598:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 403359c:	d0a01b17 	ldw	r2,-32660(gp)
 40335a0:	10000326 	beq	r2,zero,40335b0 <alt_get_errno+0x24>
 40335a4:	d0a01b17 	ldw	r2,-32660(gp)
 40335a8:	103ee83a 	callr	r2
 40335ac:	00000106 	br	40335b4 <alt_get_errno+0x28>
 40335b0:	d0a02904 	addi	r2,gp,-32604
}
 40335b4:	e037883a 	mov	sp,fp
 40335b8:	dfc00117 	ldw	ra,4(sp)
 40335bc:	df000017 	ldw	fp,0(sp)
 40335c0:	dec00204 	addi	sp,sp,8
 40335c4:	f800283a 	ret

040335c8 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 40335c8:	defffb04 	addi	sp,sp,-20
 40335cc:	dfc00415 	stw	ra,16(sp)
 40335d0:	df000315 	stw	fp,12(sp)
 40335d4:	df000304 	addi	fp,sp,12
 40335d8:	e13ffe15 	stw	r4,-8(fp)
 40335dc:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 40335e0:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 40335e4:	e0bffe17 	ldw	r2,-8(fp)
 40335e8:	00802f16 	blt	zero,r2,40336a8 <kill+0xe0>
  {
    switch (sig)
 40335ec:	e0bfff17 	ldw	r2,-4(fp)
 40335f0:	10800828 	cmpgeui	r2,r2,32
 40335f4:	1000291e 	bne	r2,zero,403369c <kill+0xd4>
 40335f8:	e0bfff17 	ldw	r2,-4(fp)
 40335fc:	100690ba 	slli	r3,r2,2
 4033600:	008100f4 	movhi	r2,1027
 4033604:	108d8504 	addi	r2,r2,13844
 4033608:	1885883a 	add	r2,r3,r2
 403360c:	10800017 	ldw	r2,0(r2)
 4033610:	1000683a 	jmp	r2
 4033614:	040336bc 	xorhi	r16,zero,3290
 4033618:	0403369c 	xori	r16,zero,3290
 403361c:	0403369c 	xori	r16,zero,3290
 4033620:	04033694 	movui	r16,3290
 4033624:	04033694 	movui	r16,3290
 4033628:	04033694 	movui	r16,3290
 403362c:	04033694 	movui	r16,3290
 4033630:	0403369c 	xori	r16,zero,3290
 4033634:	04033694 	movui	r16,3290
 4033638:	04033694 	movui	r16,3290
 403363c:	04033694 	movui	r16,3290
 4033640:	04033694 	movui	r16,3290
 4033644:	04033694 	movui	r16,3290
 4033648:	04033694 	movui	r16,3290
 403364c:	04033694 	movui	r16,3290
 4033650:	04033694 	movui	r16,3290
 4033654:	040336bc 	xorhi	r16,zero,3290
 4033658:	0403369c 	xori	r16,zero,3290
 403365c:	0403369c 	xori	r16,zero,3290
 4033660:	0403369c 	xori	r16,zero,3290
 4033664:	040336bc 	xorhi	r16,zero,3290
 4033668:	0403369c 	xori	r16,zero,3290
 403366c:	0403369c 	xori	r16,zero,3290
 4033670:	04033694 	movui	r16,3290
 4033674:	04033694 	movui	r16,3290
 4033678:	04033694 	movui	r16,3290
 403367c:	04033694 	movui	r16,3290
 4033680:	04033694 	movui	r16,3290
 4033684:	0403369c 	xori	r16,zero,3290
 4033688:	0403369c 	xori	r16,zero,3290
 403368c:	04033694 	movui	r16,3290
 4033690:	04033694 	movui	r16,3290
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 4033694:	0009883a 	mov	r4,zero
 4033698:	403336c0 	call	403336c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 403369c:	00800584 	movi	r2,22
 40336a0:	e0bffd15 	stw	r2,-12(fp)
 40336a4:	00000606 	br	40336c0 <kill+0xf8>
    }
  }

  else if (pid > 0)
 40336a8:	e0bffe17 	ldw	r2,-8(fp)
 40336ac:	0080040e 	bge	zero,r2,40336c0 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 40336b0:	008000c4 	movi	r2,3
 40336b4:	e0bffd15 	stw	r2,-12(fp)
 40336b8:	00000106 	br	40336c0 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 40336bc:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
 40336c0:	e0bffd17 	ldw	r2,-12(fp)
 40336c4:	10000626 	beq	r2,zero,40336e0 <kill+0x118>
  {
    ALT_ERRNO = status;
 40336c8:	403358c0 	call	403358c <alt_get_errno>
 40336cc:	1007883a 	mov	r3,r2
 40336d0:	e0bffd17 	ldw	r2,-12(fp)
 40336d4:	18800015 	stw	r2,0(r3)
    return -1;
 40336d8:	00bfffc4 	movi	r2,-1
 40336dc:	00000106 	br	40336e4 <kill+0x11c>
  }

  return 0;
 40336e0:	0005883a 	mov	r2,zero
}
 40336e4:	e037883a 	mov	sp,fp
 40336e8:	dfc00117 	ldw	ra,4(sp)
 40336ec:	df000017 	ldw	fp,0(sp)
 40336f0:	dec00204 	addi	sp,sp,8
 40336f4:	f800283a 	ret

040336f8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 40336f8:	defffc04 	addi	sp,sp,-16
 40336fc:	df000315 	stw	fp,12(sp)
 4033700:	df000304 	addi	fp,sp,12
 4033704:	e13ffd15 	stw	r4,-12(fp)
 4033708:	e17ffe15 	stw	r5,-8(fp)
 403370c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 4033710:	e0fffe17 	ldw	r3,-8(fp)
 4033714:	e0bffd17 	ldw	r2,-12(fp)
 4033718:	18800c26 	beq	r3,r2,403374c <alt_load_section+0x54>
  {
    while( to != end )
 403371c:	00000806 	br	4033740 <alt_load_section+0x48>
    {
      *to++ = *from++;
 4033720:	e0bffe17 	ldw	r2,-8(fp)
 4033724:	10c00104 	addi	r3,r2,4
 4033728:	e0fffe15 	stw	r3,-8(fp)
 403372c:	e0fffd17 	ldw	r3,-12(fp)
 4033730:	19000104 	addi	r4,r3,4
 4033734:	e13ffd15 	stw	r4,-12(fp)
 4033738:	18c00017 	ldw	r3,0(r3)
 403373c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 4033740:	e0fffe17 	ldw	r3,-8(fp)
 4033744:	e0bfff17 	ldw	r2,-4(fp)
 4033748:	18bff51e 	bne	r3,r2,4033720 <__flash_rwdata_start+0xffffd4b4>
    {
      *to++ = *from++;
    }
  }
}
 403374c:	0001883a 	nop
 4033750:	e037883a 	mov	sp,fp
 4033754:	df000017 	ldw	fp,0(sp)
 4033758:	dec00104 	addi	sp,sp,4
 403375c:	f800283a 	ret

04033760 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 4033760:	defffe04 	addi	sp,sp,-8
 4033764:	dfc00115 	stw	ra,4(sp)
 4033768:	df000015 	stw	fp,0(sp)
 403376c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 4033770:	01800034 	movhi	r6,0
 4033774:	31887104 	addi	r6,r6,8644
 4033778:	01400034 	movhi	r5,0
 403377c:	2941a604 	addi	r5,r5,1688
 4033780:	010100f4 	movhi	r4,1027
 4033784:	21189b04 	addi	r4,r4,25196
 4033788:	40336f80 	call	40336f8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 403378c:	018100b4 	movhi	r6,1026
 4033790:	31809104 	addi	r6,r6,580
 4033794:	014100b4 	movhi	r5,1026
 4033798:	29400804 	addi	r5,r5,32
 403379c:	010100b4 	movhi	r4,1026
 40337a0:	21000804 	addi	r4,r4,32
 40337a4:	40336f80 	call	40336f8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 40337a8:	01800034 	movhi	r6,0
 40337ac:	3181a604 	addi	r6,r6,1688
 40337b0:	01400034 	movhi	r5,0
 40337b4:	29400004 	addi	r5,r5,0
 40337b8:	010100f4 	movhi	r4,1027
 40337bc:	2116f504 	addi	r4,r4,23508
 40337c0:	40336f80 	call	40336f8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 40337c4:	4034c340 	call	4034c34 <alt_dcache_flush_all>
  alt_icache_flush_all();
 40337c8:	4034e1c0 	call	4034e1c <alt_icache_flush_all>
}
 40337cc:	0001883a 	nop
 40337d0:	e037883a 	mov	sp,fp
 40337d4:	dfc00117 	ldw	ra,4(sp)
 40337d8:	df000017 	ldw	fp,0(sp)
 40337dc:	dec00204 	addi	sp,sp,8
 40337e0:	f800283a 	ret

040337e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40337e4:	defffe04 	addi	sp,sp,-8
 40337e8:	dfc00115 	stw	ra,4(sp)
 40337ec:	df000015 	stw	fp,0(sp)
 40337f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40337f4:	d0a01b17 	ldw	r2,-32660(gp)
 40337f8:	10000326 	beq	r2,zero,4033808 <alt_get_errno+0x24>
 40337fc:	d0a01b17 	ldw	r2,-32660(gp)
 4033800:	103ee83a 	callr	r2
 4033804:	00000106 	br	403380c <alt_get_errno+0x28>
 4033808:	d0a02904 	addi	r2,gp,-32604
}
 403380c:	e037883a 	mov	sp,fp
 4033810:	dfc00117 	ldw	ra,4(sp)
 4033814:	df000017 	ldw	fp,0(sp)
 4033818:	dec00204 	addi	sp,sp,8
 403381c:	f800283a 	ret

04033820 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 4033820:	defff904 	addi	sp,sp,-28
 4033824:	dfc00615 	stw	ra,24(sp)
 4033828:	df000515 	stw	fp,20(sp)
 403382c:	df000504 	addi	fp,sp,20
 4033830:	e13ffd15 	stw	r4,-12(fp)
 4033834:	e17ffe15 	stw	r5,-8(fp)
 4033838:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 403383c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4033840:	e0bffd17 	ldw	r2,-12(fp)
 4033844:	10000616 	blt	r2,zero,4033860 <lseek+0x40>
 4033848:	e0bffd17 	ldw	r2,-12(fp)
 403384c:	10c00324 	muli	r3,r2,12
 4033850:	00800034 	movhi	r2,0
 4033854:	1083d904 	addi	r2,r2,3940
 4033858:	1885883a 	add	r2,r3,r2
 403385c:	00000106 	br	4033864 <lseek+0x44>
 4033860:	0005883a 	mov	r2,zero
 4033864:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 4033868:	e0bffc17 	ldw	r2,-16(fp)
 403386c:	10001026 	beq	r2,zero,40338b0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 4033870:	e0bffc17 	ldw	r2,-16(fp)
 4033874:	10800017 	ldw	r2,0(r2)
 4033878:	10800717 	ldw	r2,28(r2)
 403387c:	10000926 	beq	r2,zero,40338a4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 4033880:	e0bffc17 	ldw	r2,-16(fp)
 4033884:	10800017 	ldw	r2,0(r2)
 4033888:	10800717 	ldw	r2,28(r2)
 403388c:	e1bfff17 	ldw	r6,-4(fp)
 4033890:	e17ffe17 	ldw	r5,-8(fp)
 4033894:	e13ffc17 	ldw	r4,-16(fp)
 4033898:	103ee83a 	callr	r2
 403389c:	e0bffb15 	stw	r2,-20(fp)
 40338a0:	00000506 	br	40338b8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 40338a4:	00bfde84 	movi	r2,-134
 40338a8:	e0bffb15 	stw	r2,-20(fp)
 40338ac:	00000206 	br	40338b8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 40338b0:	00bfebc4 	movi	r2,-81
 40338b4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 40338b8:	e0bffb17 	ldw	r2,-20(fp)
 40338bc:	1000070e 	bge	r2,zero,40338dc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 40338c0:	40337e40 	call	40337e4 <alt_get_errno>
 40338c4:	1007883a 	mov	r3,r2
 40338c8:	e0bffb17 	ldw	r2,-20(fp)
 40338cc:	0085c83a 	sub	r2,zero,r2
 40338d0:	18800015 	stw	r2,0(r3)
    rc = -1;
 40338d4:	00bfffc4 	movi	r2,-1
 40338d8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 40338dc:	e0bffb17 	ldw	r2,-20(fp)
}
 40338e0:	e037883a 	mov	sp,fp
 40338e4:	dfc00117 	ldw	ra,4(sp)
 40338e8:	df000017 	ldw	fp,0(sp)
 40338ec:	dec00204 	addi	sp,sp,8
 40338f0:	f800283a 	ret

040338f4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 40338f4:	defffd04 	addi	sp,sp,-12
 40338f8:	dfc00215 	stw	ra,8(sp)
 40338fc:	df000115 	stw	fp,4(sp)
 4033900:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 4033904:	0009883a 	mov	r4,zero
 4033908:	4033f100 	call	4033f10 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 403390c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 4033910:	4033f480 	call	4033f48 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 4033914:	01800034 	movhi	r6,0
 4033918:	31819e04 	addi	r6,r6,1656
 403391c:	01400034 	movhi	r5,0
 4033920:	29419e04 	addi	r5,r5,1656
 4033924:	01000034 	movhi	r4,0
 4033928:	21019e04 	addi	r4,r4,1656
 403392c:	40351b40 	call	40351b4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 4033930:	4034d5c0 	call	4034d5c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 4033934:	010100f4 	movhi	r4,1027
 4033938:	21136f04 	addi	r4,r4,19900
 403393c:	40358100 	call	4035810 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 4033940:	d0a02d17 	ldw	r2,-32588(gp)
 4033944:	d0e02e17 	ldw	r3,-32584(gp)
 4033948:	d1202f17 	ldw	r4,-32580(gp)
 403394c:	200d883a 	mov	r6,r4
 4033950:	180b883a 	mov	r5,r3
 4033954:	1009883a 	mov	r4,r2
 4033958:	40221f00 	call	40221f0 <main>
 403395c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 4033960:	01000044 	movi	r4,1
 4033964:	40332700 	call	4033270 <close>
  exit (result);
 4033968:	e13fff17 	ldw	r4,-4(fp)
 403396c:	40358240 	call	4035824 <exit>

04033970 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 4033970:	defffe04 	addi	sp,sp,-8
 4033974:	df000115 	stw	fp,4(sp)
 4033978:	df000104 	addi	fp,sp,4
 403397c:	e13fff15 	stw	r4,-4(fp)
}
 4033980:	0001883a 	nop
 4033984:	e037883a 	mov	sp,fp
 4033988:	df000017 	ldw	fp,0(sp)
 403398c:	dec00104 	addi	sp,sp,4
 4033990:	f800283a 	ret

04033994 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 4033994:	defffe04 	addi	sp,sp,-8
 4033998:	df000115 	stw	fp,4(sp)
 403399c:	df000104 	addi	fp,sp,4
 40339a0:	e13fff15 	stw	r4,-4(fp)
}
 40339a4:	0001883a 	nop
 40339a8:	e037883a 	mov	sp,fp
 40339ac:	df000017 	ldw	fp,0(sp)
 40339b0:	dec00104 	addi	sp,sp,4
 40339b4:	f800283a 	ret

040339b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40339b8:	defffe04 	addi	sp,sp,-8
 40339bc:	dfc00115 	stw	ra,4(sp)
 40339c0:	df000015 	stw	fp,0(sp)
 40339c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40339c8:	d0a01b17 	ldw	r2,-32660(gp)
 40339cc:	10000326 	beq	r2,zero,40339dc <alt_get_errno+0x24>
 40339d0:	d0a01b17 	ldw	r2,-32660(gp)
 40339d4:	103ee83a 	callr	r2
 40339d8:	00000106 	br	40339e0 <alt_get_errno+0x28>
 40339dc:	d0a02904 	addi	r2,gp,-32604
}
 40339e0:	e037883a 	mov	sp,fp
 40339e4:	dfc00117 	ldw	ra,4(sp)
 40339e8:	df000017 	ldw	fp,0(sp)
 40339ec:	dec00204 	addi	sp,sp,8
 40339f0:	f800283a 	ret

040339f4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 40339f4:	defff904 	addi	sp,sp,-28
 40339f8:	dfc00615 	stw	ra,24(sp)
 40339fc:	df000515 	stw	fp,20(sp)
 4033a00:	df000504 	addi	fp,sp,20
 4033a04:	e13ffd15 	stw	r4,-12(fp)
 4033a08:	e17ffe15 	stw	r5,-8(fp)
 4033a0c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4033a10:	e0bffd17 	ldw	r2,-12(fp)
 4033a14:	10000616 	blt	r2,zero,4033a30 <read+0x3c>
 4033a18:	e0bffd17 	ldw	r2,-12(fp)
 4033a1c:	10c00324 	muli	r3,r2,12
 4033a20:	00800034 	movhi	r2,0
 4033a24:	1083d904 	addi	r2,r2,3940
 4033a28:	1885883a 	add	r2,r3,r2
 4033a2c:	00000106 	br	4033a34 <read+0x40>
 4033a30:	0005883a 	mov	r2,zero
 4033a34:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4033a38:	e0bffb17 	ldw	r2,-20(fp)
 4033a3c:	10002226 	beq	r2,zero,4033ac8 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4033a40:	e0bffb17 	ldw	r2,-20(fp)
 4033a44:	10800217 	ldw	r2,8(r2)
 4033a48:	108000cc 	andi	r2,r2,3
 4033a4c:	10800060 	cmpeqi	r2,r2,1
 4033a50:	1000181e 	bne	r2,zero,4033ab4 <read+0xc0>
        (fd->dev->read))
 4033a54:	e0bffb17 	ldw	r2,-20(fp)
 4033a58:	10800017 	ldw	r2,0(r2)
 4033a5c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4033a60:	10001426 	beq	r2,zero,4033ab4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 4033a64:	e0bffb17 	ldw	r2,-20(fp)
 4033a68:	10800017 	ldw	r2,0(r2)
 4033a6c:	10800517 	ldw	r2,20(r2)
 4033a70:	e0ffff17 	ldw	r3,-4(fp)
 4033a74:	180d883a 	mov	r6,r3
 4033a78:	e17ffe17 	ldw	r5,-8(fp)
 4033a7c:	e13ffb17 	ldw	r4,-20(fp)
 4033a80:	103ee83a 	callr	r2
 4033a84:	e0bffc15 	stw	r2,-16(fp)
 4033a88:	e0bffc17 	ldw	r2,-16(fp)
 4033a8c:	1000070e 	bge	r2,zero,4033aac <read+0xb8>
        {
          ALT_ERRNO = -rval;
 4033a90:	40339b80 	call	40339b8 <alt_get_errno>
 4033a94:	1007883a 	mov	r3,r2
 4033a98:	e0bffc17 	ldw	r2,-16(fp)
 4033a9c:	0085c83a 	sub	r2,zero,r2
 4033aa0:	18800015 	stw	r2,0(r3)
          return -1;
 4033aa4:	00bfffc4 	movi	r2,-1
 4033aa8:	00000c06 	br	4033adc <read+0xe8>
        }
        return rval;
 4033aac:	e0bffc17 	ldw	r2,-16(fp)
 4033ab0:	00000a06 	br	4033adc <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 4033ab4:	40339b80 	call	40339b8 <alt_get_errno>
 4033ab8:	1007883a 	mov	r3,r2
 4033abc:	00800344 	movi	r2,13
 4033ac0:	18800015 	stw	r2,0(r3)
 4033ac4:	00000406 	br	4033ad8 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 4033ac8:	40339b80 	call	40339b8 <alt_get_errno>
 4033acc:	1007883a 	mov	r3,r2
 4033ad0:	00801444 	movi	r2,81
 4033ad4:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4033ad8:	00bfffc4 	movi	r2,-1
}
 4033adc:	e037883a 	mov	sp,fp
 4033ae0:	dfc00117 	ldw	ra,4(sp)
 4033ae4:	df000017 	ldw	fp,0(sp)
 4033ae8:	dec00204 	addi	sp,sp,8
 4033aec:	f800283a 	ret

04033af0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 4033af0:	defffe04 	addi	sp,sp,-8
 4033af4:	df000115 	stw	fp,4(sp)
 4033af8:	df000104 	addi	fp,sp,4
 4033afc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 4033b00:	e0bfff17 	ldw	r2,-4(fp)
 4033b04:	108000d0 	cmplti	r2,r2,3
 4033b08:	10000d1e 	bne	r2,zero,4033b40 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 4033b0c:	00800034 	movhi	r2,0
 4033b10:	1083d904 	addi	r2,r2,3940
 4033b14:	e0ffff17 	ldw	r3,-4(fp)
 4033b18:	18c00324 	muli	r3,r3,12
 4033b1c:	10c5883a 	add	r2,r2,r3
 4033b20:	10800204 	addi	r2,r2,8
 4033b24:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 4033b28:	00800034 	movhi	r2,0
 4033b2c:	1083d904 	addi	r2,r2,3940
 4033b30:	e0ffff17 	ldw	r3,-4(fp)
 4033b34:	18c00324 	muli	r3,r3,12
 4033b38:	10c5883a 	add	r2,r2,r3
 4033b3c:	10000015 	stw	zero,0(r2)
  }
}
 4033b40:	0001883a 	nop
 4033b44:	e037883a 	mov	sp,fp
 4033b48:	df000017 	ldw	fp,0(sp)
 4033b4c:	dec00104 	addi	sp,sp,4
 4033b50:	f800283a 	ret

04033b54 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 4033b54:	defff904 	addi	sp,sp,-28
 4033b58:	df000615 	stw	fp,24(sp)
 4033b5c:	df000604 	addi	fp,sp,24
 4033b60:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4033b64:	0005303a 	rdctl	r2,status
 4033b68:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4033b6c:	e0fffe17 	ldw	r3,-8(fp)
 4033b70:	00bfff84 	movi	r2,-2
 4033b74:	1884703a 	and	r2,r3,r2
 4033b78:	1001703a 	wrctl	status,r2
  
  return context;
 4033b7c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 4033b80:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 4033b84:	d0a01c17 	ldw	r2,-32656(gp)
 4033b88:	10c000c4 	addi	r3,r2,3
 4033b8c:	00bfff04 	movi	r2,-4
 4033b90:	1884703a 	and	r2,r3,r2
 4033b94:	d0a01c15 	stw	r2,-32656(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 4033b98:	d0e01c17 	ldw	r3,-32656(gp)
 4033b9c:	e0bfff17 	ldw	r2,-4(fp)
 4033ba0:	1887883a 	add	r3,r3,r2
 4033ba4:	00810034 	movhi	r2,1024
 4033ba8:	10800004 	addi	r2,r2,0
 4033bac:	10c0062e 	bgeu	r2,r3,4033bc8 <sbrk+0x74>
 4033bb0:	e0bffb17 	ldw	r2,-20(fp)
 4033bb4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4033bb8:	e0bffa17 	ldw	r2,-24(fp)
 4033bbc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 4033bc0:	00bfffc4 	movi	r2,-1
 4033bc4:	00000b06 	br	4033bf4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 4033bc8:	d0a01c17 	ldw	r2,-32656(gp)
 4033bcc:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 4033bd0:	d0e01c17 	ldw	r3,-32656(gp)
 4033bd4:	e0bfff17 	ldw	r2,-4(fp)
 4033bd8:	1885883a 	add	r2,r3,r2
 4033bdc:	d0a01c15 	stw	r2,-32656(gp)
 4033be0:	e0bffb17 	ldw	r2,-20(fp)
 4033be4:	e0bffc15 	stw	r2,-16(fp)
 4033be8:	e0bffc17 	ldw	r2,-16(fp)
 4033bec:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 4033bf0:	e0bffd17 	ldw	r2,-12(fp)
} 
 4033bf4:	e037883a 	mov	sp,fp
 4033bf8:	df000017 	ldw	fp,0(sp)
 4033bfc:	dec00104 	addi	sp,sp,4
 4033c00:	f800283a 	ret

04033c04 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 4033c04:	defffa04 	addi	sp,sp,-24
 4033c08:	df000515 	stw	fp,20(sp)
 4033c0c:	df000504 	addi	fp,sp,20
 4033c10:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4033c14:	0005303a 	rdctl	r2,status
 4033c18:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4033c1c:	e0fffc17 	ldw	r3,-16(fp)
 4033c20:	00bfff84 	movi	r2,-2
 4033c24:	1884703a 	and	r2,r3,r2
 4033c28:	1001703a 	wrctl	status,r2
  
  return context;
 4033c2c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 4033c30:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 4033c34:	e0bfff17 	ldw	r2,-4(fp)
 4033c38:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 4033c3c:	e0bffd17 	ldw	r2,-12(fp)
 4033c40:	10800017 	ldw	r2,0(r2)
 4033c44:	e0fffd17 	ldw	r3,-12(fp)
 4033c48:	18c00117 	ldw	r3,4(r3)
 4033c4c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 4033c50:	e0bffd17 	ldw	r2,-12(fp)
 4033c54:	10800117 	ldw	r2,4(r2)
 4033c58:	e0fffd17 	ldw	r3,-12(fp)
 4033c5c:	18c00017 	ldw	r3,0(r3)
 4033c60:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 4033c64:	e0bffd17 	ldw	r2,-12(fp)
 4033c68:	e0fffd17 	ldw	r3,-12(fp)
 4033c6c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 4033c70:	e0bffd17 	ldw	r2,-12(fp)
 4033c74:	e0fffd17 	ldw	r3,-12(fp)
 4033c78:	10c00015 	stw	r3,0(r2)
 4033c7c:	e0bffb17 	ldw	r2,-20(fp)
 4033c80:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4033c84:	e0bffe17 	ldw	r2,-8(fp)
 4033c88:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 4033c8c:	0001883a 	nop
 4033c90:	e037883a 	mov	sp,fp
 4033c94:	df000017 	ldw	fp,0(sp)
 4033c98:	dec00104 	addi	sp,sp,4
 4033c9c:	f800283a 	ret

04033ca0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 4033ca0:	defffb04 	addi	sp,sp,-20
 4033ca4:	dfc00415 	stw	ra,16(sp)
 4033ca8:	df000315 	stw	fp,12(sp)
 4033cac:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 4033cb0:	d0a01d17 	ldw	r2,-32652(gp)
 4033cb4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 4033cb8:	d0a03117 	ldw	r2,-32572(gp)
 4033cbc:	10800044 	addi	r2,r2,1
 4033cc0:	d0a03115 	stw	r2,-32572(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4033cc4:	00002e06 	br	4033d80 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 4033cc8:	e0bffd17 	ldw	r2,-12(fp)
 4033ccc:	10800017 	ldw	r2,0(r2)
 4033cd0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 4033cd4:	e0bffd17 	ldw	r2,-12(fp)
 4033cd8:	10800403 	ldbu	r2,16(r2)
 4033cdc:	10803fcc 	andi	r2,r2,255
 4033ce0:	10000426 	beq	r2,zero,4033cf4 <alt_tick+0x54>
 4033ce4:	d0a03117 	ldw	r2,-32572(gp)
 4033ce8:	1000021e 	bne	r2,zero,4033cf4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 4033cec:	e0bffd17 	ldw	r2,-12(fp)
 4033cf0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 4033cf4:	e0bffd17 	ldw	r2,-12(fp)
 4033cf8:	10800217 	ldw	r2,8(r2)
 4033cfc:	d0e03117 	ldw	r3,-32572(gp)
 4033d00:	18801d36 	bltu	r3,r2,4033d78 <alt_tick+0xd8>
 4033d04:	e0bffd17 	ldw	r2,-12(fp)
 4033d08:	10800403 	ldbu	r2,16(r2)
 4033d0c:	10803fcc 	andi	r2,r2,255
 4033d10:	1000191e 	bne	r2,zero,4033d78 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 4033d14:	e0bffd17 	ldw	r2,-12(fp)
 4033d18:	10800317 	ldw	r2,12(r2)
 4033d1c:	e0fffd17 	ldw	r3,-12(fp)
 4033d20:	18c00517 	ldw	r3,20(r3)
 4033d24:	1809883a 	mov	r4,r3
 4033d28:	103ee83a 	callr	r2
 4033d2c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 4033d30:	e0bfff17 	ldw	r2,-4(fp)
 4033d34:	1000031e 	bne	r2,zero,4033d44 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 4033d38:	e13ffd17 	ldw	r4,-12(fp)
 4033d3c:	4033c040 	call	4033c04 <alt_alarm_stop>
 4033d40:	00000d06 	br	4033d78 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 4033d44:	e0bffd17 	ldw	r2,-12(fp)
 4033d48:	10c00217 	ldw	r3,8(r2)
 4033d4c:	e0bfff17 	ldw	r2,-4(fp)
 4033d50:	1887883a 	add	r3,r3,r2
 4033d54:	e0bffd17 	ldw	r2,-12(fp)
 4033d58:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 4033d5c:	e0bffd17 	ldw	r2,-12(fp)
 4033d60:	10c00217 	ldw	r3,8(r2)
 4033d64:	d0a03117 	ldw	r2,-32572(gp)
 4033d68:	1880032e 	bgeu	r3,r2,4033d78 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 4033d6c:	e0bffd17 	ldw	r2,-12(fp)
 4033d70:	00c00044 	movi	r3,1
 4033d74:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 4033d78:	e0bffe17 	ldw	r2,-8(fp)
 4033d7c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4033d80:	e0fffd17 	ldw	r3,-12(fp)
 4033d84:	d0a01d04 	addi	r2,gp,-32652
 4033d88:	18bfcf1e 	bne	r3,r2,4033cc8 <__flash_rwdata_start+0xffffda5c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 4033d8c:	0001883a 	nop
}
 4033d90:	0001883a 	nop
 4033d94:	e037883a 	mov	sp,fp
 4033d98:	dfc00117 	ldw	ra,4(sp)
 4033d9c:	df000017 	ldw	fp,0(sp)
 4033da0:	dec00204 	addi	sp,sp,8
 4033da4:	f800283a 	ret

04033da8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4033da8:	defffe04 	addi	sp,sp,-8
 4033dac:	dfc00115 	stw	ra,4(sp)
 4033db0:	df000015 	stw	fp,0(sp)
 4033db4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4033db8:	d0a01b17 	ldw	r2,-32660(gp)
 4033dbc:	10000326 	beq	r2,zero,4033dcc <alt_get_errno+0x24>
 4033dc0:	d0a01b17 	ldw	r2,-32660(gp)
 4033dc4:	103ee83a 	callr	r2
 4033dc8:	00000106 	br	4033dd0 <alt_get_errno+0x28>
 4033dcc:	d0a02904 	addi	r2,gp,-32604
}
 4033dd0:	e037883a 	mov	sp,fp
 4033dd4:	dfc00117 	ldw	ra,4(sp)
 4033dd8:	df000017 	ldw	fp,0(sp)
 4033ddc:	dec00204 	addi	sp,sp,8
 4033de0:	f800283a 	ret

04033de4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 4033de4:	defff904 	addi	sp,sp,-28
 4033de8:	dfc00615 	stw	ra,24(sp)
 4033dec:	df000515 	stw	fp,20(sp)
 4033df0:	df000504 	addi	fp,sp,20
 4033df4:	e13ffd15 	stw	r4,-12(fp)
 4033df8:	e17ffe15 	stw	r5,-8(fp)
 4033dfc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4033e00:	e0bffd17 	ldw	r2,-12(fp)
 4033e04:	10000616 	blt	r2,zero,4033e20 <write+0x3c>
 4033e08:	e0bffd17 	ldw	r2,-12(fp)
 4033e0c:	10c00324 	muli	r3,r2,12
 4033e10:	00800034 	movhi	r2,0
 4033e14:	1083d904 	addi	r2,r2,3940
 4033e18:	1885883a 	add	r2,r3,r2
 4033e1c:	00000106 	br	4033e24 <write+0x40>
 4033e20:	0005883a 	mov	r2,zero
 4033e24:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4033e28:	e0bffb17 	ldw	r2,-20(fp)
 4033e2c:	10002126 	beq	r2,zero,4033eb4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 4033e30:	e0bffb17 	ldw	r2,-20(fp)
 4033e34:	10800217 	ldw	r2,8(r2)
 4033e38:	108000cc 	andi	r2,r2,3
 4033e3c:	10001826 	beq	r2,zero,4033ea0 <write+0xbc>
 4033e40:	e0bffb17 	ldw	r2,-20(fp)
 4033e44:	10800017 	ldw	r2,0(r2)
 4033e48:	10800617 	ldw	r2,24(r2)
 4033e4c:	10001426 	beq	r2,zero,4033ea0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 4033e50:	e0bffb17 	ldw	r2,-20(fp)
 4033e54:	10800017 	ldw	r2,0(r2)
 4033e58:	10800617 	ldw	r2,24(r2)
 4033e5c:	e0ffff17 	ldw	r3,-4(fp)
 4033e60:	180d883a 	mov	r6,r3
 4033e64:	e17ffe17 	ldw	r5,-8(fp)
 4033e68:	e13ffb17 	ldw	r4,-20(fp)
 4033e6c:	103ee83a 	callr	r2
 4033e70:	e0bffc15 	stw	r2,-16(fp)
 4033e74:	e0bffc17 	ldw	r2,-16(fp)
 4033e78:	1000070e 	bge	r2,zero,4033e98 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 4033e7c:	4033da80 	call	4033da8 <alt_get_errno>
 4033e80:	1007883a 	mov	r3,r2
 4033e84:	e0bffc17 	ldw	r2,-16(fp)
 4033e88:	0085c83a 	sub	r2,zero,r2
 4033e8c:	18800015 	stw	r2,0(r3)
        return -1;
 4033e90:	00bfffc4 	movi	r2,-1
 4033e94:	00000c06 	br	4033ec8 <write+0xe4>
      }
      return rval;
 4033e98:	e0bffc17 	ldw	r2,-16(fp)
 4033e9c:	00000a06 	br	4033ec8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 4033ea0:	4033da80 	call	4033da8 <alt_get_errno>
 4033ea4:	1007883a 	mov	r3,r2
 4033ea8:	00800344 	movi	r2,13
 4033eac:	18800015 	stw	r2,0(r3)
 4033eb0:	00000406 	br	4033ec4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 4033eb4:	4033da80 	call	4033da8 <alt_get_errno>
 4033eb8:	1007883a 	mov	r3,r2
 4033ebc:	00801444 	movi	r2,81
 4033ec0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4033ec4:	00bfffc4 	movi	r2,-1
}
 4033ec8:	e037883a 	mov	sp,fp
 4033ecc:	dfc00117 	ldw	ra,4(sp)
 4033ed0:	df000017 	ldw	fp,0(sp)
 4033ed4:	dec00204 	addi	sp,sp,8
 4033ed8:	f800283a 	ret

04033edc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 4033edc:	defffd04 	addi	sp,sp,-12
 4033ee0:	dfc00215 	stw	ra,8(sp)
 4033ee4:	df000115 	stw	fp,4(sp)
 4033ee8:	df000104 	addi	fp,sp,4
 4033eec:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 4033ef0:	d1601804 	addi	r5,gp,-32672
 4033ef4:	e13fff17 	ldw	r4,-4(fp)
 4033ef8:	4034cb80 	call	4034cb8 <alt_dev_llist_insert>
}
 4033efc:	e037883a 	mov	sp,fp
 4033f00:	dfc00117 	ldw	ra,4(sp)
 4033f04:	df000017 	ldw	fp,0(sp)
 4033f08:	dec00204 	addi	sp,sp,8
 4033f0c:	f800283a 	ret

04033f10 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 4033f10:	defffd04 	addi	sp,sp,-12
 4033f14:	dfc00215 	stw	ra,8(sp)
 4033f18:	df000115 	stw	fp,4(sp)
 4033f1c:	df000104 	addi	fp,sp,4
 4033f20:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 4033f24:	40354840 	call	4035484 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 4033f28:	00800044 	movi	r2,1
 4033f2c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 4033f30:	0001883a 	nop
 4033f34:	e037883a 	mov	sp,fp
 4033f38:	dfc00117 	ldw	ra,4(sp)
 4033f3c:	df000017 	ldw	fp,0(sp)
 4033f40:	dec00204 	addi	sp,sp,8
 4033f44:	f800283a 	ret

04033f48 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 4033f48:	defffe04 	addi	sp,sp,-8
 4033f4c:	dfc00115 	stw	ra,4(sp)
 4033f50:	df000015 	stw	fp,0(sp)
 4033f54:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 4033f58:	01c0fa04 	movi	r7,1000
 4033f5c:	01800044 	movi	r6,1
 4033f60:	000b883a 	mov	r5,zero
 4033f64:	01010134 	movhi	r4,1028
 4033f68:	21041004 	addi	r4,r4,4160
 4033f6c:	4034a8c0 	call	4034a8c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 4033f70:	000d883a 	mov	r6,zero
 4033f74:	000b883a 	mov	r5,zero
 4033f78:	01000034 	movhi	r4,0
 4033f7c:	21044304 	addi	r4,r4,4364
 4033f80:	40341100 	call	4034110 <altera_avalon_jtag_uart_init>
 4033f84:	01000034 	movhi	r4,0
 4033f88:	21043904 	addi	r4,r4,4324
 4033f8c:	4033edc0 	call	4033edc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 4033f90:	0001883a 	nop
}
 4033f94:	0001883a 	nop
 4033f98:	e037883a 	mov	sp,fp
 4033f9c:	dfc00117 	ldw	ra,4(sp)
 4033fa0:	df000017 	ldw	fp,0(sp)
 4033fa4:	dec00204 	addi	sp,sp,8
 4033fa8:	f800283a 	ret

04033fac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 4033fac:	defffa04 	addi	sp,sp,-24
 4033fb0:	dfc00515 	stw	ra,20(sp)
 4033fb4:	df000415 	stw	fp,16(sp)
 4033fb8:	df000404 	addi	fp,sp,16
 4033fbc:	e13ffd15 	stw	r4,-12(fp)
 4033fc0:	e17ffe15 	stw	r5,-8(fp)
 4033fc4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4033fc8:	e0bffd17 	ldw	r2,-12(fp)
 4033fcc:	10800017 	ldw	r2,0(r2)
 4033fd0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 4033fd4:	e0bffc17 	ldw	r2,-16(fp)
 4033fd8:	10c00a04 	addi	r3,r2,40
 4033fdc:	e0bffd17 	ldw	r2,-12(fp)
 4033fe0:	10800217 	ldw	r2,8(r2)
 4033fe4:	100f883a 	mov	r7,r2
 4033fe8:	e1bfff17 	ldw	r6,-4(fp)
 4033fec:	e17ffe17 	ldw	r5,-8(fp)
 4033ff0:	1809883a 	mov	r4,r3
 4033ff4:	40345d40 	call	40345d4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 4033ff8:	e037883a 	mov	sp,fp
 4033ffc:	dfc00117 	ldw	ra,4(sp)
 4034000:	df000017 	ldw	fp,0(sp)
 4034004:	dec00204 	addi	sp,sp,8
 4034008:	f800283a 	ret

0403400c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 403400c:	defffa04 	addi	sp,sp,-24
 4034010:	dfc00515 	stw	ra,20(sp)
 4034014:	df000415 	stw	fp,16(sp)
 4034018:	df000404 	addi	fp,sp,16
 403401c:	e13ffd15 	stw	r4,-12(fp)
 4034020:	e17ffe15 	stw	r5,-8(fp)
 4034024:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4034028:	e0bffd17 	ldw	r2,-12(fp)
 403402c:	10800017 	ldw	r2,0(r2)
 4034030:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 4034034:	e0bffc17 	ldw	r2,-16(fp)
 4034038:	10c00a04 	addi	r3,r2,40
 403403c:	e0bffd17 	ldw	r2,-12(fp)
 4034040:	10800217 	ldw	r2,8(r2)
 4034044:	100f883a 	mov	r7,r2
 4034048:	e1bfff17 	ldw	r6,-4(fp)
 403404c:	e17ffe17 	ldw	r5,-8(fp)
 4034050:	1809883a 	mov	r4,r3
 4034054:	40347f00 	call	40347f0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 4034058:	e037883a 	mov	sp,fp
 403405c:	dfc00117 	ldw	ra,4(sp)
 4034060:	df000017 	ldw	fp,0(sp)
 4034064:	dec00204 	addi	sp,sp,8
 4034068:	f800283a 	ret

0403406c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 403406c:	defffc04 	addi	sp,sp,-16
 4034070:	dfc00315 	stw	ra,12(sp)
 4034074:	df000215 	stw	fp,8(sp)
 4034078:	df000204 	addi	fp,sp,8
 403407c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4034080:	e0bfff17 	ldw	r2,-4(fp)
 4034084:	10800017 	ldw	r2,0(r2)
 4034088:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 403408c:	e0bffe17 	ldw	r2,-8(fp)
 4034090:	10c00a04 	addi	r3,r2,40
 4034094:	e0bfff17 	ldw	r2,-4(fp)
 4034098:	10800217 	ldw	r2,8(r2)
 403409c:	100b883a 	mov	r5,r2
 40340a0:	1809883a 	mov	r4,r3
 40340a4:	403447c0 	call	403447c <altera_avalon_jtag_uart_close>
}
 40340a8:	e037883a 	mov	sp,fp
 40340ac:	dfc00117 	ldw	ra,4(sp)
 40340b0:	df000017 	ldw	fp,0(sp)
 40340b4:	dec00204 	addi	sp,sp,8
 40340b8:	f800283a 	ret

040340bc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 40340bc:	defffa04 	addi	sp,sp,-24
 40340c0:	dfc00515 	stw	ra,20(sp)
 40340c4:	df000415 	stw	fp,16(sp)
 40340c8:	df000404 	addi	fp,sp,16
 40340cc:	e13ffd15 	stw	r4,-12(fp)
 40340d0:	e17ffe15 	stw	r5,-8(fp)
 40340d4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 40340d8:	e0bffd17 	ldw	r2,-12(fp)
 40340dc:	10800017 	ldw	r2,0(r2)
 40340e0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 40340e4:	e0bffc17 	ldw	r2,-16(fp)
 40340e8:	10800a04 	addi	r2,r2,40
 40340ec:	e1bfff17 	ldw	r6,-4(fp)
 40340f0:	e17ffe17 	ldw	r5,-8(fp)
 40340f4:	1009883a 	mov	r4,r2
 40340f8:	40344e40 	call	40344e4 <altera_avalon_jtag_uart_ioctl>
}
 40340fc:	e037883a 	mov	sp,fp
 4034100:	dfc00117 	ldw	ra,4(sp)
 4034104:	df000017 	ldw	fp,0(sp)
 4034108:	dec00204 	addi	sp,sp,8
 403410c:	f800283a 	ret

04034110 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 4034110:	defffa04 	addi	sp,sp,-24
 4034114:	dfc00515 	stw	ra,20(sp)
 4034118:	df000415 	stw	fp,16(sp)
 403411c:	df000404 	addi	fp,sp,16
 4034120:	e13ffd15 	stw	r4,-12(fp)
 4034124:	e17ffe15 	stw	r5,-8(fp)
 4034128:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 403412c:	e0bffd17 	ldw	r2,-12(fp)
 4034130:	00c00044 	movi	r3,1
 4034134:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 4034138:	e0bffd17 	ldw	r2,-12(fp)
 403413c:	10800017 	ldw	r2,0(r2)
 4034140:	10800104 	addi	r2,r2,4
 4034144:	1007883a 	mov	r3,r2
 4034148:	e0bffd17 	ldw	r2,-12(fp)
 403414c:	10800817 	ldw	r2,32(r2)
 4034150:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 4034154:	e0bffe17 	ldw	r2,-8(fp)
 4034158:	e0ffff17 	ldw	r3,-4(fp)
 403415c:	d8000015 	stw	zero,0(sp)
 4034160:	e1fffd17 	ldw	r7,-12(fp)
 4034164:	018100f4 	movhi	r6,1027
 4034168:	31907404 	addi	r6,r6,16848
 403416c:	180b883a 	mov	r5,r3
 4034170:	1009883a 	mov	r4,r2
 4034174:	4034e500 	call	4034e50 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 4034178:	e0bffd17 	ldw	r2,-12(fp)
 403417c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 4034180:	e0bffd17 	ldw	r2,-12(fp)
 4034184:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 4034188:	d0e03017 	ldw	r3,-32576(gp)
 403418c:	e1fffd17 	ldw	r7,-12(fp)
 4034190:	018100f4 	movhi	r6,1027
 4034194:	3190f704 	addi	r6,r6,17372
 4034198:	180b883a 	mov	r5,r3
 403419c:	1009883a 	mov	r4,r2
 40341a0:	4034b080 	call	4034b08 <alt_alarm_start>
 40341a4:	1000040e 	bge	r2,zero,40341b8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 40341a8:	e0fffd17 	ldw	r3,-12(fp)
 40341ac:	00a00034 	movhi	r2,32768
 40341b0:	10bfffc4 	addi	r2,r2,-1
 40341b4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 40341b8:	0001883a 	nop
 40341bc:	e037883a 	mov	sp,fp
 40341c0:	dfc00117 	ldw	ra,4(sp)
 40341c4:	df000017 	ldw	fp,0(sp)
 40341c8:	dec00204 	addi	sp,sp,8
 40341cc:	f800283a 	ret

040341d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 40341d0:	defff804 	addi	sp,sp,-32
 40341d4:	df000715 	stw	fp,28(sp)
 40341d8:	df000704 	addi	fp,sp,28
 40341dc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 40341e0:	e0bfff17 	ldw	r2,-4(fp)
 40341e4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 40341e8:	e0bffb17 	ldw	r2,-20(fp)
 40341ec:	10800017 	ldw	r2,0(r2)
 40341f0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40341f4:	e0bffc17 	ldw	r2,-16(fp)
 40341f8:	10800104 	addi	r2,r2,4
 40341fc:	10800037 	ldwio	r2,0(r2)
 4034200:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 4034204:	e0bffd17 	ldw	r2,-12(fp)
 4034208:	1080c00c 	andi	r2,r2,768
 403420c:	10006d26 	beq	r2,zero,40343c4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 4034210:	e0bffd17 	ldw	r2,-12(fp)
 4034214:	1080400c 	andi	r2,r2,256
 4034218:	10003526 	beq	r2,zero,40342f0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 403421c:	00800074 	movhi	r2,1
 4034220:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4034224:	e0bffb17 	ldw	r2,-20(fp)
 4034228:	10800a17 	ldw	r2,40(r2)
 403422c:	10800044 	addi	r2,r2,1
 4034230:	1081ffcc 	andi	r2,r2,2047
 4034234:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 4034238:	e0bffb17 	ldw	r2,-20(fp)
 403423c:	10c00b17 	ldw	r3,44(r2)
 4034240:	e0bffe17 	ldw	r2,-8(fp)
 4034244:	18801526 	beq	r3,r2,403429c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 4034248:	e0bffc17 	ldw	r2,-16(fp)
 403424c:	10800037 	ldwio	r2,0(r2)
 4034250:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 4034254:	e0bff917 	ldw	r2,-28(fp)
 4034258:	10a0000c 	andi	r2,r2,32768
 403425c:	10001126 	beq	r2,zero,40342a4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 4034260:	e0bffb17 	ldw	r2,-20(fp)
 4034264:	10800a17 	ldw	r2,40(r2)
 4034268:	e0fff917 	ldw	r3,-28(fp)
 403426c:	1809883a 	mov	r4,r3
 4034270:	e0fffb17 	ldw	r3,-20(fp)
 4034274:	1885883a 	add	r2,r3,r2
 4034278:	10800e04 	addi	r2,r2,56
 403427c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4034280:	e0bffb17 	ldw	r2,-20(fp)
 4034284:	10800a17 	ldw	r2,40(r2)
 4034288:	10800044 	addi	r2,r2,1
 403428c:	10c1ffcc 	andi	r3,r2,2047
 4034290:	e0bffb17 	ldw	r2,-20(fp)
 4034294:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 4034298:	003fe206 	br	4034224 <__flash_rwdata_start+0xffffdfb8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 403429c:	0001883a 	nop
 40342a0:	00000106 	br	40342a8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 40342a4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 40342a8:	e0bff917 	ldw	r2,-28(fp)
 40342ac:	10bfffec 	andhi	r2,r2,65535
 40342b0:	10000f26 	beq	r2,zero,40342f0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 40342b4:	e0bffb17 	ldw	r2,-20(fp)
 40342b8:	10c00817 	ldw	r3,32(r2)
 40342bc:	00bfff84 	movi	r2,-2
 40342c0:	1886703a 	and	r3,r3,r2
 40342c4:	e0bffb17 	ldw	r2,-20(fp)
 40342c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 40342cc:	e0bffc17 	ldw	r2,-16(fp)
 40342d0:	10800104 	addi	r2,r2,4
 40342d4:	1007883a 	mov	r3,r2
 40342d8:	e0bffb17 	ldw	r2,-20(fp)
 40342dc:	10800817 	ldw	r2,32(r2)
 40342e0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40342e4:	e0bffc17 	ldw	r2,-16(fp)
 40342e8:	10800104 	addi	r2,r2,4
 40342ec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 40342f0:	e0bffd17 	ldw	r2,-12(fp)
 40342f4:	1080800c 	andi	r2,r2,512
 40342f8:	103fbe26 	beq	r2,zero,40341f4 <__flash_rwdata_start+0xffffdf88>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 40342fc:	e0bffd17 	ldw	r2,-12(fp)
 4034300:	1004d43a 	srli	r2,r2,16
 4034304:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 4034308:	00001406 	br	403435c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 403430c:	e0bffc17 	ldw	r2,-16(fp)
 4034310:	e0fffb17 	ldw	r3,-20(fp)
 4034314:	18c00d17 	ldw	r3,52(r3)
 4034318:	e13ffb17 	ldw	r4,-20(fp)
 403431c:	20c7883a 	add	r3,r4,r3
 4034320:	18c20e04 	addi	r3,r3,2104
 4034324:	18c00003 	ldbu	r3,0(r3)
 4034328:	18c03fcc 	andi	r3,r3,255
 403432c:	18c0201c 	xori	r3,r3,128
 4034330:	18ffe004 	addi	r3,r3,-128
 4034334:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4034338:	e0bffb17 	ldw	r2,-20(fp)
 403433c:	10800d17 	ldw	r2,52(r2)
 4034340:	10800044 	addi	r2,r2,1
 4034344:	10c1ffcc 	andi	r3,r2,2047
 4034348:	e0bffb17 	ldw	r2,-20(fp)
 403434c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 4034350:	e0bffa17 	ldw	r2,-24(fp)
 4034354:	10bfffc4 	addi	r2,r2,-1
 4034358:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 403435c:	e0bffa17 	ldw	r2,-24(fp)
 4034360:	10000526 	beq	r2,zero,4034378 <altera_avalon_jtag_uart_irq+0x1a8>
 4034364:	e0bffb17 	ldw	r2,-20(fp)
 4034368:	10c00d17 	ldw	r3,52(r2)
 403436c:	e0bffb17 	ldw	r2,-20(fp)
 4034370:	10800c17 	ldw	r2,48(r2)
 4034374:	18bfe51e 	bne	r3,r2,403430c <__flash_rwdata_start+0xffffe0a0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 4034378:	e0bffa17 	ldw	r2,-24(fp)
 403437c:	103f9d26 	beq	r2,zero,40341f4 <__flash_rwdata_start+0xffffdf88>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 4034380:	e0bffb17 	ldw	r2,-20(fp)
 4034384:	10c00817 	ldw	r3,32(r2)
 4034388:	00bfff44 	movi	r2,-3
 403438c:	1886703a 	and	r3,r3,r2
 4034390:	e0bffb17 	ldw	r2,-20(fp)
 4034394:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4034398:	e0bffb17 	ldw	r2,-20(fp)
 403439c:	10800017 	ldw	r2,0(r2)
 40343a0:	10800104 	addi	r2,r2,4
 40343a4:	1007883a 	mov	r3,r2
 40343a8:	e0bffb17 	ldw	r2,-20(fp)
 40343ac:	10800817 	ldw	r2,32(r2)
 40343b0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40343b4:	e0bffc17 	ldw	r2,-16(fp)
 40343b8:	10800104 	addi	r2,r2,4
 40343bc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 40343c0:	003f8c06 	br	40341f4 <__flash_rwdata_start+0xffffdf88>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 40343c4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 40343c8:	0001883a 	nop
 40343cc:	e037883a 	mov	sp,fp
 40343d0:	df000017 	ldw	fp,0(sp)
 40343d4:	dec00104 	addi	sp,sp,4
 40343d8:	f800283a 	ret

040343dc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 40343dc:	defff804 	addi	sp,sp,-32
 40343e0:	df000715 	stw	fp,28(sp)
 40343e4:	df000704 	addi	fp,sp,28
 40343e8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 40343ec:	e0bffb17 	ldw	r2,-20(fp)
 40343f0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 40343f4:	e0bff917 	ldw	r2,-28(fp)
 40343f8:	10800017 	ldw	r2,0(r2)
 40343fc:	10800104 	addi	r2,r2,4
 4034400:	10800037 	ldwio	r2,0(r2)
 4034404:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 4034408:	e0bffa17 	ldw	r2,-24(fp)
 403440c:	1081000c 	andi	r2,r2,1024
 4034410:	10000b26 	beq	r2,zero,4034440 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 4034414:	e0bff917 	ldw	r2,-28(fp)
 4034418:	10800017 	ldw	r2,0(r2)
 403441c:	10800104 	addi	r2,r2,4
 4034420:	1007883a 	mov	r3,r2
 4034424:	e0bff917 	ldw	r2,-28(fp)
 4034428:	10800817 	ldw	r2,32(r2)
 403442c:	10810014 	ori	r2,r2,1024
 4034430:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 4034434:	e0bff917 	ldw	r2,-28(fp)
 4034438:	10000915 	stw	zero,36(r2)
 403443c:	00000a06 	br	4034468 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 4034440:	e0bff917 	ldw	r2,-28(fp)
 4034444:	10c00917 	ldw	r3,36(r2)
 4034448:	00a00034 	movhi	r2,32768
 403444c:	10bfff04 	addi	r2,r2,-4
 4034450:	10c00536 	bltu	r2,r3,4034468 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 4034454:	e0bff917 	ldw	r2,-28(fp)
 4034458:	10800917 	ldw	r2,36(r2)
 403445c:	10c00044 	addi	r3,r2,1
 4034460:	e0bff917 	ldw	r2,-28(fp)
 4034464:	10c00915 	stw	r3,36(r2)
 4034468:	d0a03017 	ldw	r2,-32576(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 403446c:	e037883a 	mov	sp,fp
 4034470:	df000017 	ldw	fp,0(sp)
 4034474:	dec00104 	addi	sp,sp,4
 4034478:	f800283a 	ret

0403447c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 403447c:	defffd04 	addi	sp,sp,-12
 4034480:	df000215 	stw	fp,8(sp)
 4034484:	df000204 	addi	fp,sp,8
 4034488:	e13ffe15 	stw	r4,-8(fp)
 403448c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 4034490:	00000506 	br	40344a8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 4034494:	e0bfff17 	ldw	r2,-4(fp)
 4034498:	1090000c 	andi	r2,r2,16384
 403449c:	10000226 	beq	r2,zero,40344a8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 40344a0:	00bffd44 	movi	r2,-11
 40344a4:	00000b06 	br	40344d4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40344a8:	e0bffe17 	ldw	r2,-8(fp)
 40344ac:	10c00d17 	ldw	r3,52(r2)
 40344b0:	e0bffe17 	ldw	r2,-8(fp)
 40344b4:	10800c17 	ldw	r2,48(r2)
 40344b8:	18800526 	beq	r3,r2,40344d0 <altera_avalon_jtag_uart_close+0x54>
 40344bc:	e0bffe17 	ldw	r2,-8(fp)
 40344c0:	10c00917 	ldw	r3,36(r2)
 40344c4:	e0bffe17 	ldw	r2,-8(fp)
 40344c8:	10800117 	ldw	r2,4(r2)
 40344cc:	18bff136 	bltu	r3,r2,4034494 <__flash_rwdata_start+0xffffe228>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 40344d0:	0005883a 	mov	r2,zero
}
 40344d4:	e037883a 	mov	sp,fp
 40344d8:	df000017 	ldw	fp,0(sp)
 40344dc:	dec00104 	addi	sp,sp,4
 40344e0:	f800283a 	ret

040344e4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 40344e4:	defffa04 	addi	sp,sp,-24
 40344e8:	df000515 	stw	fp,20(sp)
 40344ec:	df000504 	addi	fp,sp,20
 40344f0:	e13ffd15 	stw	r4,-12(fp)
 40344f4:	e17ffe15 	stw	r5,-8(fp)
 40344f8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 40344fc:	00bff9c4 	movi	r2,-25
 4034500:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 4034504:	e0bffe17 	ldw	r2,-8(fp)
 4034508:	10da8060 	cmpeqi	r3,r2,27137
 403450c:	1800031e 	bne	r3,zero,403451c <altera_avalon_jtag_uart_ioctl+0x38>
 4034510:	109a80a0 	cmpeqi	r2,r2,27138
 4034514:	1000181e 	bne	r2,zero,4034578 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 4034518:	00002906 	br	40345c0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 403451c:	e0bffd17 	ldw	r2,-12(fp)
 4034520:	10c00117 	ldw	r3,4(r2)
 4034524:	00a00034 	movhi	r2,32768
 4034528:	10bfffc4 	addi	r2,r2,-1
 403452c:	18802126 	beq	r3,r2,40345b4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 4034530:	e0bfff17 	ldw	r2,-4(fp)
 4034534:	10800017 	ldw	r2,0(r2)
 4034538:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 403453c:	e0bffc17 	ldw	r2,-16(fp)
 4034540:	10800090 	cmplti	r2,r2,2
 4034544:	1000061e 	bne	r2,zero,4034560 <altera_avalon_jtag_uart_ioctl+0x7c>
 4034548:	e0fffc17 	ldw	r3,-16(fp)
 403454c:	00a00034 	movhi	r2,32768
 4034550:	10bfffc4 	addi	r2,r2,-1
 4034554:	18800226 	beq	r3,r2,4034560 <altera_avalon_jtag_uart_ioctl+0x7c>
 4034558:	e0bffc17 	ldw	r2,-16(fp)
 403455c:	00000206 	br	4034568 <altera_avalon_jtag_uart_ioctl+0x84>
 4034560:	00a00034 	movhi	r2,32768
 4034564:	10bfff84 	addi	r2,r2,-2
 4034568:	e0fffd17 	ldw	r3,-12(fp)
 403456c:	18800115 	stw	r2,4(r3)
      rc = 0;
 4034570:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 4034574:	00000f06 	br	40345b4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 4034578:	e0bffd17 	ldw	r2,-12(fp)
 403457c:	10c00117 	ldw	r3,4(r2)
 4034580:	00a00034 	movhi	r2,32768
 4034584:	10bfffc4 	addi	r2,r2,-1
 4034588:	18800c26 	beq	r3,r2,40345bc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 403458c:	e0bffd17 	ldw	r2,-12(fp)
 4034590:	10c00917 	ldw	r3,36(r2)
 4034594:	e0bffd17 	ldw	r2,-12(fp)
 4034598:	10800117 	ldw	r2,4(r2)
 403459c:	1885803a 	cmpltu	r2,r3,r2
 40345a0:	10c03fcc 	andi	r3,r2,255
 40345a4:	e0bfff17 	ldw	r2,-4(fp)
 40345a8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 40345ac:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 40345b0:	00000206 	br	40345bc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 40345b4:	0001883a 	nop
 40345b8:	00000106 	br	40345c0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 40345bc:	0001883a 	nop

  default:
    break;
  }

  return rc;
 40345c0:	e0bffb17 	ldw	r2,-20(fp)
}
 40345c4:	e037883a 	mov	sp,fp
 40345c8:	df000017 	ldw	fp,0(sp)
 40345cc:	dec00104 	addi	sp,sp,4
 40345d0:	f800283a 	ret

040345d4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 40345d4:	defff304 	addi	sp,sp,-52
 40345d8:	dfc00c15 	stw	ra,48(sp)
 40345dc:	df000b15 	stw	fp,44(sp)
 40345e0:	df000b04 	addi	fp,sp,44
 40345e4:	e13ffc15 	stw	r4,-16(fp)
 40345e8:	e17ffd15 	stw	r5,-12(fp)
 40345ec:	e1bffe15 	stw	r6,-8(fp)
 40345f0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 40345f4:	e0bffd17 	ldw	r2,-12(fp)
 40345f8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 40345fc:	00004706 	br	403471c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 4034600:	e0bffc17 	ldw	r2,-16(fp)
 4034604:	10800a17 	ldw	r2,40(r2)
 4034608:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 403460c:	e0bffc17 	ldw	r2,-16(fp)
 4034610:	10800b17 	ldw	r2,44(r2)
 4034614:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 4034618:	e0fff717 	ldw	r3,-36(fp)
 403461c:	e0bff817 	ldw	r2,-32(fp)
 4034620:	18800536 	bltu	r3,r2,4034638 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 4034624:	e0fff717 	ldw	r3,-36(fp)
 4034628:	e0bff817 	ldw	r2,-32(fp)
 403462c:	1885c83a 	sub	r2,r3,r2
 4034630:	e0bff615 	stw	r2,-40(fp)
 4034634:	00000406 	br	4034648 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 4034638:	00c20004 	movi	r3,2048
 403463c:	e0bff817 	ldw	r2,-32(fp)
 4034640:	1885c83a 	sub	r2,r3,r2
 4034644:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4034648:	e0bff617 	ldw	r2,-40(fp)
 403464c:	10001e26 	beq	r2,zero,40346c8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 4034650:	e0fffe17 	ldw	r3,-8(fp)
 4034654:	e0bff617 	ldw	r2,-40(fp)
 4034658:	1880022e 	bgeu	r3,r2,4034664 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 403465c:	e0bffe17 	ldw	r2,-8(fp)
 4034660:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 4034664:	e0bffc17 	ldw	r2,-16(fp)
 4034668:	10c00e04 	addi	r3,r2,56
 403466c:	e0bff817 	ldw	r2,-32(fp)
 4034670:	1885883a 	add	r2,r3,r2
 4034674:	e1bff617 	ldw	r6,-40(fp)
 4034678:	100b883a 	mov	r5,r2
 403467c:	e13ff517 	ldw	r4,-44(fp)
 4034680:	402d04c0 	call	402d04c <memcpy>
      ptr   += n;
 4034684:	e0fff517 	ldw	r3,-44(fp)
 4034688:	e0bff617 	ldw	r2,-40(fp)
 403468c:	1885883a 	add	r2,r3,r2
 4034690:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 4034694:	e0fffe17 	ldw	r3,-8(fp)
 4034698:	e0bff617 	ldw	r2,-40(fp)
 403469c:	1885c83a 	sub	r2,r3,r2
 40346a0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40346a4:	e0fff817 	ldw	r3,-32(fp)
 40346a8:	e0bff617 	ldw	r2,-40(fp)
 40346ac:	1885883a 	add	r2,r3,r2
 40346b0:	10c1ffcc 	andi	r3,r2,2047
 40346b4:	e0bffc17 	ldw	r2,-16(fp)
 40346b8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 40346bc:	e0bffe17 	ldw	r2,-8(fp)
 40346c0:	00bfcf16 	blt	zero,r2,4034600 <__flash_rwdata_start+0xffffe394>
 40346c4:	00000106 	br	40346cc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 40346c8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 40346cc:	e0fff517 	ldw	r3,-44(fp)
 40346d0:	e0bffd17 	ldw	r2,-12(fp)
 40346d4:	1880141e 	bne	r3,r2,4034728 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 40346d8:	e0bfff17 	ldw	r2,-4(fp)
 40346dc:	1090000c 	andi	r2,r2,16384
 40346e0:	1000131e 	bne	r2,zero,4034730 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 40346e4:	0001883a 	nop
 40346e8:	e0bffc17 	ldw	r2,-16(fp)
 40346ec:	10c00a17 	ldw	r3,40(r2)
 40346f0:	e0bff717 	ldw	r2,-36(fp)
 40346f4:	1880051e 	bne	r3,r2,403470c <altera_avalon_jtag_uart_read+0x138>
 40346f8:	e0bffc17 	ldw	r2,-16(fp)
 40346fc:	10c00917 	ldw	r3,36(r2)
 4034700:	e0bffc17 	ldw	r2,-16(fp)
 4034704:	10800117 	ldw	r2,4(r2)
 4034708:	18bff736 	bltu	r3,r2,40346e8 <__flash_rwdata_start+0xffffe47c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 403470c:	e0bffc17 	ldw	r2,-16(fp)
 4034710:	10c00a17 	ldw	r3,40(r2)
 4034714:	e0bff717 	ldw	r2,-36(fp)
 4034718:	18800726 	beq	r3,r2,4034738 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 403471c:	e0bffe17 	ldw	r2,-8(fp)
 4034720:	00bfb716 	blt	zero,r2,4034600 <__flash_rwdata_start+0xffffe394>
 4034724:	00000506 	br	403473c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 4034728:	0001883a 	nop
 403472c:	00000306 	br	403473c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 4034730:	0001883a 	nop
 4034734:	00000106 	br	403473c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 4034738:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 403473c:	e0fff517 	ldw	r3,-44(fp)
 4034740:	e0bffd17 	ldw	r2,-12(fp)
 4034744:	18801826 	beq	r3,r2,40347a8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034748:	0005303a 	rdctl	r2,status
 403474c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034750:	e0fffb17 	ldw	r3,-20(fp)
 4034754:	00bfff84 	movi	r2,-2
 4034758:	1884703a 	and	r2,r3,r2
 403475c:	1001703a 	wrctl	status,r2
  
  return context;
 4034760:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 4034764:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 4034768:	e0bffc17 	ldw	r2,-16(fp)
 403476c:	10800817 	ldw	r2,32(r2)
 4034770:	10c00054 	ori	r3,r2,1
 4034774:	e0bffc17 	ldw	r2,-16(fp)
 4034778:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 403477c:	e0bffc17 	ldw	r2,-16(fp)
 4034780:	10800017 	ldw	r2,0(r2)
 4034784:	10800104 	addi	r2,r2,4
 4034788:	1007883a 	mov	r3,r2
 403478c:	e0bffc17 	ldw	r2,-16(fp)
 4034790:	10800817 	ldw	r2,32(r2)
 4034794:	18800035 	stwio	r2,0(r3)
 4034798:	e0bffa17 	ldw	r2,-24(fp)
 403479c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 40347a0:	e0bff917 	ldw	r2,-28(fp)
 40347a4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 40347a8:	e0fff517 	ldw	r3,-44(fp)
 40347ac:	e0bffd17 	ldw	r2,-12(fp)
 40347b0:	18800426 	beq	r3,r2,40347c4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 40347b4:	e0fff517 	ldw	r3,-44(fp)
 40347b8:	e0bffd17 	ldw	r2,-12(fp)
 40347bc:	1885c83a 	sub	r2,r3,r2
 40347c0:	00000606 	br	40347dc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 40347c4:	e0bfff17 	ldw	r2,-4(fp)
 40347c8:	1090000c 	andi	r2,r2,16384
 40347cc:	10000226 	beq	r2,zero,40347d8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 40347d0:	00bffd44 	movi	r2,-11
 40347d4:	00000106 	br	40347dc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 40347d8:	00bffec4 	movi	r2,-5
}
 40347dc:	e037883a 	mov	sp,fp
 40347e0:	dfc00117 	ldw	ra,4(sp)
 40347e4:	df000017 	ldw	fp,0(sp)
 40347e8:	dec00204 	addi	sp,sp,8
 40347ec:	f800283a 	ret

040347f0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 40347f0:	defff304 	addi	sp,sp,-52
 40347f4:	dfc00c15 	stw	ra,48(sp)
 40347f8:	df000b15 	stw	fp,44(sp)
 40347fc:	df000b04 	addi	fp,sp,44
 4034800:	e13ffc15 	stw	r4,-16(fp)
 4034804:	e17ffd15 	stw	r5,-12(fp)
 4034808:	e1bffe15 	stw	r6,-8(fp)
 403480c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 4034810:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 4034814:	e0bffd17 	ldw	r2,-12(fp)
 4034818:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 403481c:	00003706 	br	40348fc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 4034820:	e0bffc17 	ldw	r2,-16(fp)
 4034824:	10800c17 	ldw	r2,48(r2)
 4034828:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 403482c:	e0bffc17 	ldw	r2,-16(fp)
 4034830:	10800d17 	ldw	r2,52(r2)
 4034834:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 4034838:	e0fff917 	ldw	r3,-28(fp)
 403483c:	e0bff517 	ldw	r2,-44(fp)
 4034840:	1880062e 	bgeu	r3,r2,403485c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 4034844:	e0fff517 	ldw	r3,-44(fp)
 4034848:	e0bff917 	ldw	r2,-28(fp)
 403484c:	1885c83a 	sub	r2,r3,r2
 4034850:	10bfffc4 	addi	r2,r2,-1
 4034854:	e0bff615 	stw	r2,-40(fp)
 4034858:	00000b06 	br	4034888 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 403485c:	e0bff517 	ldw	r2,-44(fp)
 4034860:	10000526 	beq	r2,zero,4034878 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 4034864:	00c20004 	movi	r3,2048
 4034868:	e0bff917 	ldw	r2,-28(fp)
 403486c:	1885c83a 	sub	r2,r3,r2
 4034870:	e0bff615 	stw	r2,-40(fp)
 4034874:	00000406 	br	4034888 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 4034878:	00c1ffc4 	movi	r3,2047
 403487c:	e0bff917 	ldw	r2,-28(fp)
 4034880:	1885c83a 	sub	r2,r3,r2
 4034884:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4034888:	e0bff617 	ldw	r2,-40(fp)
 403488c:	10001e26 	beq	r2,zero,4034908 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 4034890:	e0fffe17 	ldw	r3,-8(fp)
 4034894:	e0bff617 	ldw	r2,-40(fp)
 4034898:	1880022e 	bgeu	r3,r2,40348a4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 403489c:	e0bffe17 	ldw	r2,-8(fp)
 40348a0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 40348a4:	e0bffc17 	ldw	r2,-16(fp)
 40348a8:	10c20e04 	addi	r3,r2,2104
 40348ac:	e0bff917 	ldw	r2,-28(fp)
 40348b0:	1885883a 	add	r2,r3,r2
 40348b4:	e1bff617 	ldw	r6,-40(fp)
 40348b8:	e17ffd17 	ldw	r5,-12(fp)
 40348bc:	1009883a 	mov	r4,r2
 40348c0:	402d04c0 	call	402d04c <memcpy>
      ptr   += n;
 40348c4:	e0fffd17 	ldw	r3,-12(fp)
 40348c8:	e0bff617 	ldw	r2,-40(fp)
 40348cc:	1885883a 	add	r2,r3,r2
 40348d0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 40348d4:	e0fffe17 	ldw	r3,-8(fp)
 40348d8:	e0bff617 	ldw	r2,-40(fp)
 40348dc:	1885c83a 	sub	r2,r3,r2
 40348e0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40348e4:	e0fff917 	ldw	r3,-28(fp)
 40348e8:	e0bff617 	ldw	r2,-40(fp)
 40348ec:	1885883a 	add	r2,r3,r2
 40348f0:	10c1ffcc 	andi	r3,r2,2047
 40348f4:	e0bffc17 	ldw	r2,-16(fp)
 40348f8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 40348fc:	e0bffe17 	ldw	r2,-8(fp)
 4034900:	00bfc716 	blt	zero,r2,4034820 <__flash_rwdata_start+0xffffe5b4>
 4034904:	00000106 	br	403490c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 4034908:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 403490c:	0005303a 	rdctl	r2,status
 4034910:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034914:	e0fffb17 	ldw	r3,-20(fp)
 4034918:	00bfff84 	movi	r2,-2
 403491c:	1884703a 	and	r2,r3,r2
 4034920:	1001703a 	wrctl	status,r2
  
  return context;
 4034924:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 4034928:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 403492c:	e0bffc17 	ldw	r2,-16(fp)
 4034930:	10800817 	ldw	r2,32(r2)
 4034934:	10c00094 	ori	r3,r2,2
 4034938:	e0bffc17 	ldw	r2,-16(fp)
 403493c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4034940:	e0bffc17 	ldw	r2,-16(fp)
 4034944:	10800017 	ldw	r2,0(r2)
 4034948:	10800104 	addi	r2,r2,4
 403494c:	1007883a 	mov	r3,r2
 4034950:	e0bffc17 	ldw	r2,-16(fp)
 4034954:	10800817 	ldw	r2,32(r2)
 4034958:	18800035 	stwio	r2,0(r3)
 403495c:	e0bffa17 	ldw	r2,-24(fp)
 4034960:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034964:	e0bff817 	ldw	r2,-32(fp)
 4034968:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 403496c:	e0bffe17 	ldw	r2,-8(fp)
 4034970:	0080100e 	bge	zero,r2,40349b4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 4034974:	e0bfff17 	ldw	r2,-4(fp)
 4034978:	1090000c 	andi	r2,r2,16384
 403497c:	1000101e 	bne	r2,zero,40349c0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 4034980:	0001883a 	nop
 4034984:	e0bffc17 	ldw	r2,-16(fp)
 4034988:	10c00d17 	ldw	r3,52(r2)
 403498c:	e0bff517 	ldw	r2,-44(fp)
 4034990:	1880051e 	bne	r3,r2,40349a8 <altera_avalon_jtag_uart_write+0x1b8>
 4034994:	e0bffc17 	ldw	r2,-16(fp)
 4034998:	10c00917 	ldw	r3,36(r2)
 403499c:	e0bffc17 	ldw	r2,-16(fp)
 40349a0:	10800117 	ldw	r2,4(r2)
 40349a4:	18bff736 	bltu	r3,r2,4034984 <__flash_rwdata_start+0xffffe718>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 40349a8:	e0bffc17 	ldw	r2,-16(fp)
 40349ac:	10800917 	ldw	r2,36(r2)
 40349b0:	1000051e 	bne	r2,zero,40349c8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 40349b4:	e0bffe17 	ldw	r2,-8(fp)
 40349b8:	00bfd016 	blt	zero,r2,40348fc <__flash_rwdata_start+0xffffe690>
 40349bc:	00000306 	br	40349cc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 40349c0:	0001883a 	nop
 40349c4:	00000106 	br	40349cc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 40349c8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 40349cc:	e0fffd17 	ldw	r3,-12(fp)
 40349d0:	e0bff717 	ldw	r2,-36(fp)
 40349d4:	18800426 	beq	r3,r2,40349e8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 40349d8:	e0fffd17 	ldw	r3,-12(fp)
 40349dc:	e0bff717 	ldw	r2,-36(fp)
 40349e0:	1885c83a 	sub	r2,r3,r2
 40349e4:	00000606 	br	4034a00 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 40349e8:	e0bfff17 	ldw	r2,-4(fp)
 40349ec:	1090000c 	andi	r2,r2,16384
 40349f0:	10000226 	beq	r2,zero,40349fc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 40349f4:	00bffd44 	movi	r2,-11
 40349f8:	00000106 	br	4034a00 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 40349fc:	00bffec4 	movi	r2,-5
}
 4034a00:	e037883a 	mov	sp,fp
 4034a04:	dfc00117 	ldw	ra,4(sp)
 4034a08:	df000017 	ldw	fp,0(sp)
 4034a0c:	dec00204 	addi	sp,sp,8
 4034a10:	f800283a 	ret

04034a14 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 4034a14:	defffa04 	addi	sp,sp,-24
 4034a18:	dfc00515 	stw	ra,20(sp)
 4034a1c:	df000415 	stw	fp,16(sp)
 4034a20:	df000404 	addi	fp,sp,16
 4034a24:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 4034a28:	0007883a 	mov	r3,zero
 4034a2c:	e0bfff17 	ldw	r2,-4(fp)
 4034a30:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 4034a34:	e0bfff17 	ldw	r2,-4(fp)
 4034a38:	10800104 	addi	r2,r2,4
 4034a3c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034a40:	0005303a 	rdctl	r2,status
 4034a44:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034a48:	e0fffd17 	ldw	r3,-12(fp)
 4034a4c:	00bfff84 	movi	r2,-2
 4034a50:	1884703a 	and	r2,r3,r2
 4034a54:	1001703a 	wrctl	status,r2
  
  return context;
 4034a58:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 4034a5c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 4034a60:	4033ca00 	call	4033ca0 <alt_tick>
 4034a64:	e0bffc17 	ldw	r2,-16(fp)
 4034a68:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034a6c:	e0bffe17 	ldw	r2,-8(fp)
 4034a70:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 4034a74:	0001883a 	nop
 4034a78:	e037883a 	mov	sp,fp
 4034a7c:	dfc00117 	ldw	ra,4(sp)
 4034a80:	df000017 	ldw	fp,0(sp)
 4034a84:	dec00204 	addi	sp,sp,8
 4034a88:	f800283a 	ret

04034a8c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 4034a8c:	defff804 	addi	sp,sp,-32
 4034a90:	dfc00715 	stw	ra,28(sp)
 4034a94:	df000615 	stw	fp,24(sp)
 4034a98:	df000604 	addi	fp,sp,24
 4034a9c:	e13ffc15 	stw	r4,-16(fp)
 4034aa0:	e17ffd15 	stw	r5,-12(fp)
 4034aa4:	e1bffe15 	stw	r6,-8(fp)
 4034aa8:	e1ffff15 	stw	r7,-4(fp)
 4034aac:	e0bfff17 	ldw	r2,-4(fp)
 4034ab0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 4034ab4:	d0a03017 	ldw	r2,-32576(gp)
 4034ab8:	1000021e 	bne	r2,zero,4034ac4 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 4034abc:	e0bffb17 	ldw	r2,-20(fp)
 4034ac0:	d0a03015 	stw	r2,-32576(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 4034ac4:	e0bffc17 	ldw	r2,-16(fp)
 4034ac8:	10800104 	addi	r2,r2,4
 4034acc:	00c001c4 	movi	r3,7
 4034ad0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 4034ad4:	d8000015 	stw	zero,0(sp)
 4034ad8:	e1fffc17 	ldw	r7,-16(fp)
 4034adc:	018100f4 	movhi	r6,1027
 4034ae0:	31928504 	addi	r6,r6,18964
 4034ae4:	e17ffe17 	ldw	r5,-8(fp)
 4034ae8:	e13ffd17 	ldw	r4,-12(fp)
 4034aec:	4034e500 	call	4034e50 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 4034af0:	0001883a 	nop
 4034af4:	e037883a 	mov	sp,fp
 4034af8:	dfc00117 	ldw	ra,4(sp)
 4034afc:	df000017 	ldw	fp,0(sp)
 4034b00:	dec00204 	addi	sp,sp,8
 4034b04:	f800283a 	ret

04034b08 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 4034b08:	defff504 	addi	sp,sp,-44
 4034b0c:	df000a15 	stw	fp,40(sp)
 4034b10:	df000a04 	addi	fp,sp,40
 4034b14:	e13ffc15 	stw	r4,-16(fp)
 4034b18:	e17ffd15 	stw	r5,-12(fp)
 4034b1c:	e1bffe15 	stw	r6,-8(fp)
 4034b20:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 4034b24:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 4034b28:	d0a03017 	ldw	r2,-32576(gp)
  
  if (alt_ticks_per_second ())
 4034b2c:	10003c26 	beq	r2,zero,4034c20 <alt_alarm_start+0x118>
  {
    if (alarm)
 4034b30:	e0bffc17 	ldw	r2,-16(fp)
 4034b34:	10003826 	beq	r2,zero,4034c18 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 4034b38:	e0bffc17 	ldw	r2,-16(fp)
 4034b3c:	e0fffe17 	ldw	r3,-8(fp)
 4034b40:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 4034b44:	e0bffc17 	ldw	r2,-16(fp)
 4034b48:	e0ffff17 	ldw	r3,-4(fp)
 4034b4c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034b50:	0005303a 	rdctl	r2,status
 4034b54:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034b58:	e0fff917 	ldw	r3,-28(fp)
 4034b5c:	00bfff84 	movi	r2,-2
 4034b60:	1884703a 	and	r2,r3,r2
 4034b64:	1001703a 	wrctl	status,r2
  
  return context;
 4034b68:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 4034b6c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4034b70:	d0a03117 	ldw	r2,-32572(gp)
      
      current_nticks = alt_nticks();
 4034b74:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 4034b78:	e0fffd17 	ldw	r3,-12(fp)
 4034b7c:	e0bff617 	ldw	r2,-40(fp)
 4034b80:	1885883a 	add	r2,r3,r2
 4034b84:	10c00044 	addi	r3,r2,1
 4034b88:	e0bffc17 	ldw	r2,-16(fp)
 4034b8c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 4034b90:	e0bffc17 	ldw	r2,-16(fp)
 4034b94:	10c00217 	ldw	r3,8(r2)
 4034b98:	e0bff617 	ldw	r2,-40(fp)
 4034b9c:	1880042e 	bgeu	r3,r2,4034bb0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 4034ba0:	e0bffc17 	ldw	r2,-16(fp)
 4034ba4:	00c00044 	movi	r3,1
 4034ba8:	10c00405 	stb	r3,16(r2)
 4034bac:	00000206 	br	4034bb8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 4034bb0:	e0bffc17 	ldw	r2,-16(fp)
 4034bb4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 4034bb8:	e0bffc17 	ldw	r2,-16(fp)
 4034bbc:	d0e01d04 	addi	r3,gp,-32652
 4034bc0:	e0fffa15 	stw	r3,-24(fp)
 4034bc4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4034bc8:	e0bffb17 	ldw	r2,-20(fp)
 4034bcc:	e0fffa17 	ldw	r3,-24(fp)
 4034bd0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 4034bd4:	e0bffa17 	ldw	r2,-24(fp)
 4034bd8:	10c00017 	ldw	r3,0(r2)
 4034bdc:	e0bffb17 	ldw	r2,-20(fp)
 4034be0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 4034be4:	e0bffa17 	ldw	r2,-24(fp)
 4034be8:	10800017 	ldw	r2,0(r2)
 4034bec:	e0fffb17 	ldw	r3,-20(fp)
 4034bf0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 4034bf4:	e0bffa17 	ldw	r2,-24(fp)
 4034bf8:	e0fffb17 	ldw	r3,-20(fp)
 4034bfc:	10c00015 	stw	r3,0(r2)
 4034c00:	e0bff817 	ldw	r2,-32(fp)
 4034c04:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034c08:	e0bff717 	ldw	r2,-36(fp)
 4034c0c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 4034c10:	0005883a 	mov	r2,zero
 4034c14:	00000306 	br	4034c24 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 4034c18:	00bffa84 	movi	r2,-22
 4034c1c:	00000106 	br	4034c24 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 4034c20:	00bfde84 	movi	r2,-134
  }
}
 4034c24:	e037883a 	mov	sp,fp
 4034c28:	df000017 	ldw	fp,0(sp)
 4034c2c:	dec00104 	addi	sp,sp,4
 4034c30:	f800283a 	ret

04034c34 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 4034c34:	defffe04 	addi	sp,sp,-8
 4034c38:	df000115 	stw	fp,4(sp)
 4034c3c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4034c40:	e03fff15 	stw	zero,-4(fp)
 4034c44:	00000506 	br	4034c5c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 4034c48:	e0bfff17 	ldw	r2,-4(fp)
 4034c4c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4034c50:	e0bfff17 	ldw	r2,-4(fp)
 4034c54:	10800804 	addi	r2,r2,32
 4034c58:	e0bfff15 	stw	r2,-4(fp)
 4034c5c:	e0bfff17 	ldw	r2,-4(fp)
 4034c60:	10820030 	cmpltui	r2,r2,2048
 4034c64:	103ff81e 	bne	r2,zero,4034c48 <__flash_rwdata_start+0xffffe9dc>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 4034c68:	0001883a 	nop
 4034c6c:	e037883a 	mov	sp,fp
 4034c70:	df000017 	ldw	fp,0(sp)
 4034c74:	dec00104 	addi	sp,sp,4
 4034c78:	f800283a 	ret

04034c7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4034c7c:	defffe04 	addi	sp,sp,-8
 4034c80:	dfc00115 	stw	ra,4(sp)
 4034c84:	df000015 	stw	fp,0(sp)
 4034c88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4034c8c:	d0a01b17 	ldw	r2,-32660(gp)
 4034c90:	10000326 	beq	r2,zero,4034ca0 <alt_get_errno+0x24>
 4034c94:	d0a01b17 	ldw	r2,-32660(gp)
 4034c98:	103ee83a 	callr	r2
 4034c9c:	00000106 	br	4034ca4 <alt_get_errno+0x28>
 4034ca0:	d0a02904 	addi	r2,gp,-32604
}
 4034ca4:	e037883a 	mov	sp,fp
 4034ca8:	dfc00117 	ldw	ra,4(sp)
 4034cac:	df000017 	ldw	fp,0(sp)
 4034cb0:	dec00204 	addi	sp,sp,8
 4034cb4:	f800283a 	ret

04034cb8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 4034cb8:	defffa04 	addi	sp,sp,-24
 4034cbc:	dfc00515 	stw	ra,20(sp)
 4034cc0:	df000415 	stw	fp,16(sp)
 4034cc4:	df000404 	addi	fp,sp,16
 4034cc8:	e13ffe15 	stw	r4,-8(fp)
 4034ccc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 4034cd0:	e0bffe17 	ldw	r2,-8(fp)
 4034cd4:	10000326 	beq	r2,zero,4034ce4 <alt_dev_llist_insert+0x2c>
 4034cd8:	e0bffe17 	ldw	r2,-8(fp)
 4034cdc:	10800217 	ldw	r2,8(r2)
 4034ce0:	1000061e 	bne	r2,zero,4034cfc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 4034ce4:	4034c7c0 	call	4034c7c <alt_get_errno>
 4034ce8:	1007883a 	mov	r3,r2
 4034cec:	00800584 	movi	r2,22
 4034cf0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 4034cf4:	00bffa84 	movi	r2,-22
 4034cf8:	00001306 	br	4034d48 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 4034cfc:	e0bffe17 	ldw	r2,-8(fp)
 4034d00:	e0ffff17 	ldw	r3,-4(fp)
 4034d04:	e0fffc15 	stw	r3,-16(fp)
 4034d08:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4034d0c:	e0bffd17 	ldw	r2,-12(fp)
 4034d10:	e0fffc17 	ldw	r3,-16(fp)
 4034d14:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 4034d18:	e0bffc17 	ldw	r2,-16(fp)
 4034d1c:	10c00017 	ldw	r3,0(r2)
 4034d20:	e0bffd17 	ldw	r2,-12(fp)
 4034d24:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 4034d28:	e0bffc17 	ldw	r2,-16(fp)
 4034d2c:	10800017 	ldw	r2,0(r2)
 4034d30:	e0fffd17 	ldw	r3,-12(fp)
 4034d34:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 4034d38:	e0bffc17 	ldw	r2,-16(fp)
 4034d3c:	e0fffd17 	ldw	r3,-12(fp)
 4034d40:	10c00015 	stw	r3,0(r2)

  return 0;  
 4034d44:	0005883a 	mov	r2,zero
}
 4034d48:	e037883a 	mov	sp,fp
 4034d4c:	dfc00117 	ldw	ra,4(sp)
 4034d50:	df000017 	ldw	fp,0(sp)
 4034d54:	dec00204 	addi	sp,sp,8
 4034d58:	f800283a 	ret

04034d5c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 4034d5c:	defffd04 	addi	sp,sp,-12
 4034d60:	dfc00215 	stw	ra,8(sp)
 4034d64:	df000115 	stw	fp,4(sp)
 4034d68:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 4034d6c:	008100f4 	movhi	r2,1027
 4034d70:	1096f404 	addi	r2,r2,23504
 4034d74:	e0bfff15 	stw	r2,-4(fp)
 4034d78:	00000606 	br	4034d94 <_do_ctors+0x38>
        (*ctor) (); 
 4034d7c:	e0bfff17 	ldw	r2,-4(fp)
 4034d80:	10800017 	ldw	r2,0(r2)
 4034d84:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 4034d88:	e0bfff17 	ldw	r2,-4(fp)
 4034d8c:	10bfff04 	addi	r2,r2,-4
 4034d90:	e0bfff15 	stw	r2,-4(fp)
 4034d94:	e0ffff17 	ldw	r3,-4(fp)
 4034d98:	008100f4 	movhi	r2,1027
 4034d9c:	1096f344 	addi	r2,r2,23501
 4034da0:	18bff62e 	bgeu	r3,r2,4034d7c <__flash_rwdata_start+0xffffeb10>
        (*ctor) (); 
}
 4034da4:	0001883a 	nop
 4034da8:	e037883a 	mov	sp,fp
 4034dac:	dfc00117 	ldw	ra,4(sp)
 4034db0:	df000017 	ldw	fp,0(sp)
 4034db4:	dec00204 	addi	sp,sp,8
 4034db8:	f800283a 	ret

04034dbc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 4034dbc:	defffd04 	addi	sp,sp,-12
 4034dc0:	dfc00215 	stw	ra,8(sp)
 4034dc4:	df000115 	stw	fp,4(sp)
 4034dc8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4034dcc:	008100f4 	movhi	r2,1027
 4034dd0:	1096f404 	addi	r2,r2,23504
 4034dd4:	e0bfff15 	stw	r2,-4(fp)
 4034dd8:	00000606 	br	4034df4 <_do_dtors+0x38>
        (*dtor) (); 
 4034ddc:	e0bfff17 	ldw	r2,-4(fp)
 4034de0:	10800017 	ldw	r2,0(r2)
 4034de4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4034de8:	e0bfff17 	ldw	r2,-4(fp)
 4034dec:	10bfff04 	addi	r2,r2,-4
 4034df0:	e0bfff15 	stw	r2,-4(fp)
 4034df4:	e0ffff17 	ldw	r3,-4(fp)
 4034df8:	008100f4 	movhi	r2,1027
 4034dfc:	1096f504 	addi	r2,r2,23508
 4034e00:	18bff62e 	bgeu	r3,r2,4034ddc <__flash_rwdata_start+0xffffeb70>
        (*dtor) (); 
}
 4034e04:	0001883a 	nop
 4034e08:	e037883a 	mov	sp,fp
 4034e0c:	dfc00117 	ldw	ra,4(sp)
 4034e10:	df000017 	ldw	fp,0(sp)
 4034e14:	dec00204 	addi	sp,sp,8
 4034e18:	f800283a 	ret

04034e1c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 4034e1c:	defffe04 	addi	sp,sp,-8
 4034e20:	dfc00115 	stw	ra,4(sp)
 4034e24:	df000015 	stw	fp,0(sp)
 4034e28:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 4034e2c:	01440004 	movi	r5,4096
 4034e30:	0009883a 	mov	r4,zero
 4034e34:	40356e40 	call	40356e4 <alt_icache_flush>
#endif
}
 4034e38:	0001883a 	nop
 4034e3c:	e037883a 	mov	sp,fp
 4034e40:	dfc00117 	ldw	ra,4(sp)
 4034e44:	df000017 	ldw	fp,0(sp)
 4034e48:	dec00204 	addi	sp,sp,8
 4034e4c:	f800283a 	ret

04034e50 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 4034e50:	defff904 	addi	sp,sp,-28
 4034e54:	dfc00615 	stw	ra,24(sp)
 4034e58:	df000515 	stw	fp,20(sp)
 4034e5c:	df000504 	addi	fp,sp,20
 4034e60:	e13ffc15 	stw	r4,-16(fp)
 4034e64:	e17ffd15 	stw	r5,-12(fp)
 4034e68:	e1bffe15 	stw	r6,-8(fp)
 4034e6c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 4034e70:	e0800217 	ldw	r2,8(fp)
 4034e74:	d8800015 	stw	r2,0(sp)
 4034e78:	e1ffff17 	ldw	r7,-4(fp)
 4034e7c:	e1bffe17 	ldw	r6,-8(fp)
 4034e80:	e17ffd17 	ldw	r5,-12(fp)
 4034e84:	e13ffc17 	ldw	r4,-16(fp)
 4034e88:	40350000 	call	4035000 <alt_iic_isr_register>
}  
 4034e8c:	e037883a 	mov	sp,fp
 4034e90:	dfc00117 	ldw	ra,4(sp)
 4034e94:	df000017 	ldw	fp,0(sp)
 4034e98:	dec00204 	addi	sp,sp,8
 4034e9c:	f800283a 	ret

04034ea0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 4034ea0:	defff904 	addi	sp,sp,-28
 4034ea4:	df000615 	stw	fp,24(sp)
 4034ea8:	df000604 	addi	fp,sp,24
 4034eac:	e13ffe15 	stw	r4,-8(fp)
 4034eb0:	e17fff15 	stw	r5,-4(fp)
 4034eb4:	e0bfff17 	ldw	r2,-4(fp)
 4034eb8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034ebc:	0005303a 	rdctl	r2,status
 4034ec0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034ec4:	e0fffb17 	ldw	r3,-20(fp)
 4034ec8:	00bfff84 	movi	r2,-2
 4034ecc:	1884703a 	and	r2,r3,r2
 4034ed0:	1001703a 	wrctl	status,r2
  
  return context;
 4034ed4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4034ed8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 4034edc:	00c00044 	movi	r3,1
 4034ee0:	e0bffa17 	ldw	r2,-24(fp)
 4034ee4:	1884983a 	sll	r2,r3,r2
 4034ee8:	1007883a 	mov	r3,r2
 4034eec:	d0a03217 	ldw	r2,-32568(gp)
 4034ef0:	1884b03a 	or	r2,r3,r2
 4034ef4:	d0a03215 	stw	r2,-32568(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4034ef8:	d0a03217 	ldw	r2,-32568(gp)
 4034efc:	100170fa 	wrctl	ienable,r2
 4034f00:	e0bffc17 	ldw	r2,-16(fp)
 4034f04:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034f08:	e0bffd17 	ldw	r2,-12(fp)
 4034f0c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 4034f10:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 4034f14:	0001883a 	nop
}
 4034f18:	e037883a 	mov	sp,fp
 4034f1c:	df000017 	ldw	fp,0(sp)
 4034f20:	dec00104 	addi	sp,sp,4
 4034f24:	f800283a 	ret

04034f28 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 4034f28:	defff904 	addi	sp,sp,-28
 4034f2c:	df000615 	stw	fp,24(sp)
 4034f30:	df000604 	addi	fp,sp,24
 4034f34:	e13ffe15 	stw	r4,-8(fp)
 4034f38:	e17fff15 	stw	r5,-4(fp)
 4034f3c:	e0bfff17 	ldw	r2,-4(fp)
 4034f40:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034f44:	0005303a 	rdctl	r2,status
 4034f48:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034f4c:	e0fffb17 	ldw	r3,-20(fp)
 4034f50:	00bfff84 	movi	r2,-2
 4034f54:	1884703a 	and	r2,r3,r2
 4034f58:	1001703a 	wrctl	status,r2
  
  return context;
 4034f5c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4034f60:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 4034f64:	00c00044 	movi	r3,1
 4034f68:	e0bffa17 	ldw	r2,-24(fp)
 4034f6c:	1884983a 	sll	r2,r3,r2
 4034f70:	0084303a 	nor	r2,zero,r2
 4034f74:	1007883a 	mov	r3,r2
 4034f78:	d0a03217 	ldw	r2,-32568(gp)
 4034f7c:	1884703a 	and	r2,r3,r2
 4034f80:	d0a03215 	stw	r2,-32568(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4034f84:	d0a03217 	ldw	r2,-32568(gp)
 4034f88:	100170fa 	wrctl	ienable,r2
 4034f8c:	e0bffc17 	ldw	r2,-16(fp)
 4034f90:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034f94:	e0bffd17 	ldw	r2,-12(fp)
 4034f98:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 4034f9c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 4034fa0:	0001883a 	nop
}
 4034fa4:	e037883a 	mov	sp,fp
 4034fa8:	df000017 	ldw	fp,0(sp)
 4034fac:	dec00104 	addi	sp,sp,4
 4034fb0:	f800283a 	ret

04034fb4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 4034fb4:	defffc04 	addi	sp,sp,-16
 4034fb8:	df000315 	stw	fp,12(sp)
 4034fbc:	df000304 	addi	fp,sp,12
 4034fc0:	e13ffe15 	stw	r4,-8(fp)
 4034fc4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 4034fc8:	000530fa 	rdctl	r2,ienable
 4034fcc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 4034fd0:	00c00044 	movi	r3,1
 4034fd4:	e0bfff17 	ldw	r2,-4(fp)
 4034fd8:	1884983a 	sll	r2,r3,r2
 4034fdc:	1007883a 	mov	r3,r2
 4034fe0:	e0bffd17 	ldw	r2,-12(fp)
 4034fe4:	1884703a 	and	r2,r3,r2
 4034fe8:	1004c03a 	cmpne	r2,r2,zero
 4034fec:	10803fcc 	andi	r2,r2,255
}
 4034ff0:	e037883a 	mov	sp,fp
 4034ff4:	df000017 	ldw	fp,0(sp)
 4034ff8:	dec00104 	addi	sp,sp,4
 4034ffc:	f800283a 	ret

04035000 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 4035000:	defff504 	addi	sp,sp,-44
 4035004:	dfc00a15 	stw	ra,40(sp)
 4035008:	df000915 	stw	fp,36(sp)
 403500c:	df000904 	addi	fp,sp,36
 4035010:	e13ffc15 	stw	r4,-16(fp)
 4035014:	e17ffd15 	stw	r5,-12(fp)
 4035018:	e1bffe15 	stw	r6,-8(fp)
 403501c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 4035020:	00bffa84 	movi	r2,-22
 4035024:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 4035028:	e0bffd17 	ldw	r2,-12(fp)
 403502c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 4035030:	e0bff817 	ldw	r2,-32(fp)
 4035034:	10800808 	cmpgei	r2,r2,32
 4035038:	1000271e 	bne	r2,zero,40350d8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 403503c:	0005303a 	rdctl	r2,status
 4035040:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4035044:	e0fffb17 	ldw	r3,-20(fp)
 4035048:	00bfff84 	movi	r2,-2
 403504c:	1884703a 	and	r2,r3,r2
 4035050:	1001703a 	wrctl	status,r2
  
  return context;
 4035054:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 4035058:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 403505c:	00800174 	movhi	r2,5
 4035060:	10b49304 	addi	r2,r2,-11700
 4035064:	e0fff817 	ldw	r3,-32(fp)
 4035068:	180690fa 	slli	r3,r3,3
 403506c:	10c5883a 	add	r2,r2,r3
 4035070:	e0fffe17 	ldw	r3,-8(fp)
 4035074:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 4035078:	00800174 	movhi	r2,5
 403507c:	10b49304 	addi	r2,r2,-11700
 4035080:	e0fff817 	ldw	r3,-32(fp)
 4035084:	180690fa 	slli	r3,r3,3
 4035088:	10c5883a 	add	r2,r2,r3
 403508c:	10800104 	addi	r2,r2,4
 4035090:	e0ffff17 	ldw	r3,-4(fp)
 4035094:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 4035098:	e0bffe17 	ldw	r2,-8(fp)
 403509c:	10000526 	beq	r2,zero,40350b4 <alt_iic_isr_register+0xb4>
 40350a0:	e0bff817 	ldw	r2,-32(fp)
 40350a4:	100b883a 	mov	r5,r2
 40350a8:	e13ffc17 	ldw	r4,-16(fp)
 40350ac:	4034ea00 	call	4034ea0 <alt_ic_irq_enable>
 40350b0:	00000406 	br	40350c4 <alt_iic_isr_register+0xc4>
 40350b4:	e0bff817 	ldw	r2,-32(fp)
 40350b8:	100b883a 	mov	r5,r2
 40350bc:	e13ffc17 	ldw	r4,-16(fp)
 40350c0:	4034f280 	call	4034f28 <alt_ic_irq_disable>
 40350c4:	e0bff715 	stw	r2,-36(fp)
 40350c8:	e0bffa17 	ldw	r2,-24(fp)
 40350cc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 40350d0:	e0bff917 	ldw	r2,-28(fp)
 40350d4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 40350d8:	e0bff717 	ldw	r2,-36(fp)
}
 40350dc:	e037883a 	mov	sp,fp
 40350e0:	dfc00117 	ldw	ra,4(sp)
 40350e4:	df000017 	ldw	fp,0(sp)
 40350e8:	dec00204 	addi	sp,sp,8
 40350ec:	f800283a 	ret

040350f0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 40350f0:	defff904 	addi	sp,sp,-28
 40350f4:	dfc00615 	stw	ra,24(sp)
 40350f8:	df000515 	stw	fp,20(sp)
 40350fc:	df000504 	addi	fp,sp,20
 4035100:	e13ffc15 	stw	r4,-16(fp)
 4035104:	e17ffd15 	stw	r5,-12(fp)
 4035108:	e1bffe15 	stw	r6,-8(fp)
 403510c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 4035110:	e1bfff17 	ldw	r6,-4(fp)
 4035114:	e17ffe17 	ldw	r5,-8(fp)
 4035118:	e13ffd17 	ldw	r4,-12(fp)
 403511c:	40353300 	call	4035330 <open>
 4035120:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 4035124:	e0bffb17 	ldw	r2,-20(fp)
 4035128:	10001c16 	blt	r2,zero,403519c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 403512c:	00800034 	movhi	r2,0
 4035130:	1083d904 	addi	r2,r2,3940
 4035134:	e0fffb17 	ldw	r3,-20(fp)
 4035138:	18c00324 	muli	r3,r3,12
 403513c:	10c5883a 	add	r2,r2,r3
 4035140:	10c00017 	ldw	r3,0(r2)
 4035144:	e0bffc17 	ldw	r2,-16(fp)
 4035148:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 403514c:	00800034 	movhi	r2,0
 4035150:	1083d904 	addi	r2,r2,3940
 4035154:	e0fffb17 	ldw	r3,-20(fp)
 4035158:	18c00324 	muli	r3,r3,12
 403515c:	10c5883a 	add	r2,r2,r3
 4035160:	10800104 	addi	r2,r2,4
 4035164:	10c00017 	ldw	r3,0(r2)
 4035168:	e0bffc17 	ldw	r2,-16(fp)
 403516c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 4035170:	00800034 	movhi	r2,0
 4035174:	1083d904 	addi	r2,r2,3940
 4035178:	e0fffb17 	ldw	r3,-20(fp)
 403517c:	18c00324 	muli	r3,r3,12
 4035180:	10c5883a 	add	r2,r2,r3
 4035184:	10800204 	addi	r2,r2,8
 4035188:	10c00017 	ldw	r3,0(r2)
 403518c:	e0bffc17 	ldw	r2,-16(fp)
 4035190:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 4035194:	e13ffb17 	ldw	r4,-20(fp)
 4035198:	4033af00 	call	4033af0 <alt_release_fd>
  }
} 
 403519c:	0001883a 	nop
 40351a0:	e037883a 	mov	sp,fp
 40351a4:	dfc00117 	ldw	ra,4(sp)
 40351a8:	df000017 	ldw	fp,0(sp)
 40351ac:	dec00204 	addi	sp,sp,8
 40351b0:	f800283a 	ret

040351b4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 40351b4:	defffb04 	addi	sp,sp,-20
 40351b8:	dfc00415 	stw	ra,16(sp)
 40351bc:	df000315 	stw	fp,12(sp)
 40351c0:	df000304 	addi	fp,sp,12
 40351c4:	e13ffd15 	stw	r4,-12(fp)
 40351c8:	e17ffe15 	stw	r5,-8(fp)
 40351cc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 40351d0:	01c07fc4 	movi	r7,511
 40351d4:	01800044 	movi	r6,1
 40351d8:	e17ffd17 	ldw	r5,-12(fp)
 40351dc:	01000034 	movhi	r4,0
 40351e0:	2103dc04 	addi	r4,r4,3952
 40351e4:	40350f00 	call	40350f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 40351e8:	01c07fc4 	movi	r7,511
 40351ec:	000d883a 	mov	r6,zero
 40351f0:	e17ffe17 	ldw	r5,-8(fp)
 40351f4:	01000034 	movhi	r4,0
 40351f8:	2103d904 	addi	r4,r4,3940
 40351fc:	40350f00 	call	40350f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 4035200:	01c07fc4 	movi	r7,511
 4035204:	01800044 	movi	r6,1
 4035208:	e17fff17 	ldw	r5,-4(fp)
 403520c:	01000034 	movhi	r4,0
 4035210:	2103df04 	addi	r4,r4,3964
 4035214:	40350f00 	call	40350f0 <alt_open_fd>
}  
 4035218:	0001883a 	nop
 403521c:	e037883a 	mov	sp,fp
 4035220:	dfc00117 	ldw	ra,4(sp)
 4035224:	df000017 	ldw	fp,0(sp)
 4035228:	dec00204 	addi	sp,sp,8
 403522c:	f800283a 	ret

04035230 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4035230:	defffe04 	addi	sp,sp,-8
 4035234:	dfc00115 	stw	ra,4(sp)
 4035238:	df000015 	stw	fp,0(sp)
 403523c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4035240:	d0a01b17 	ldw	r2,-32660(gp)
 4035244:	10000326 	beq	r2,zero,4035254 <alt_get_errno+0x24>
 4035248:	d0a01b17 	ldw	r2,-32660(gp)
 403524c:	103ee83a 	callr	r2
 4035250:	00000106 	br	4035258 <alt_get_errno+0x28>
 4035254:	d0a02904 	addi	r2,gp,-32604
}
 4035258:	e037883a 	mov	sp,fp
 403525c:	dfc00117 	ldw	ra,4(sp)
 4035260:	df000017 	ldw	fp,0(sp)
 4035264:	dec00204 	addi	sp,sp,8
 4035268:	f800283a 	ret

0403526c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 403526c:	defffd04 	addi	sp,sp,-12
 4035270:	df000215 	stw	fp,8(sp)
 4035274:	df000204 	addi	fp,sp,8
 4035278:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 403527c:	e0bfff17 	ldw	r2,-4(fp)
 4035280:	10800217 	ldw	r2,8(r2)
 4035284:	10d00034 	orhi	r3,r2,16384
 4035288:	e0bfff17 	ldw	r2,-4(fp)
 403528c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4035290:	e03ffe15 	stw	zero,-8(fp)
 4035294:	00001d06 	br	403530c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4035298:	00800034 	movhi	r2,0
 403529c:	1083d904 	addi	r2,r2,3940
 40352a0:	e0fffe17 	ldw	r3,-8(fp)
 40352a4:	18c00324 	muli	r3,r3,12
 40352a8:	10c5883a 	add	r2,r2,r3
 40352ac:	10c00017 	ldw	r3,0(r2)
 40352b0:	e0bfff17 	ldw	r2,-4(fp)
 40352b4:	10800017 	ldw	r2,0(r2)
 40352b8:	1880111e 	bne	r3,r2,4035300 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 40352bc:	00800034 	movhi	r2,0
 40352c0:	1083d904 	addi	r2,r2,3940
 40352c4:	e0fffe17 	ldw	r3,-8(fp)
 40352c8:	18c00324 	muli	r3,r3,12
 40352cc:	10c5883a 	add	r2,r2,r3
 40352d0:	10800204 	addi	r2,r2,8
 40352d4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 40352d8:	1000090e 	bge	r2,zero,4035300 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 40352dc:	e0bffe17 	ldw	r2,-8(fp)
 40352e0:	10c00324 	muli	r3,r2,12
 40352e4:	00800034 	movhi	r2,0
 40352e8:	1083d904 	addi	r2,r2,3940
 40352ec:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 40352f0:	e0bfff17 	ldw	r2,-4(fp)
 40352f4:	18800226 	beq	r3,r2,4035300 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 40352f8:	00bffcc4 	movi	r2,-13
 40352fc:	00000806 	br	4035320 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4035300:	e0bffe17 	ldw	r2,-8(fp)
 4035304:	10800044 	addi	r2,r2,1
 4035308:	e0bffe15 	stw	r2,-8(fp)
 403530c:	d0a01a17 	ldw	r2,-32664(gp)
 4035310:	1007883a 	mov	r3,r2
 4035314:	e0bffe17 	ldw	r2,-8(fp)
 4035318:	18bfdf2e 	bgeu	r3,r2,4035298 <__flash_rwdata_start+0xfffff02c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 403531c:	0005883a 	mov	r2,zero
}
 4035320:	e037883a 	mov	sp,fp
 4035324:	df000017 	ldw	fp,0(sp)
 4035328:	dec00104 	addi	sp,sp,4
 403532c:	f800283a 	ret

04035330 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4035330:	defff604 	addi	sp,sp,-40
 4035334:	dfc00915 	stw	ra,36(sp)
 4035338:	df000815 	stw	fp,32(sp)
 403533c:	df000804 	addi	fp,sp,32
 4035340:	e13ffd15 	stw	r4,-12(fp)
 4035344:	e17ffe15 	stw	r5,-8(fp)
 4035348:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 403534c:	00bfffc4 	movi	r2,-1
 4035350:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 4035354:	00bffb44 	movi	r2,-19
 4035358:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 403535c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4035360:	d1601804 	addi	r5,gp,-32672
 4035364:	e13ffd17 	ldw	r4,-12(fp)
 4035368:	40354a80 	call	40354a8 <alt_find_dev>
 403536c:	e0bff815 	stw	r2,-32(fp)
 4035370:	e0bff817 	ldw	r2,-32(fp)
 4035374:	1000051e 	bne	r2,zero,403538c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 4035378:	e13ffd17 	ldw	r4,-12(fp)
 403537c:	40355380 	call	4035538 <alt_find_file>
 4035380:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 4035384:	00800044 	movi	r2,1
 4035388:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 403538c:	e0bff817 	ldw	r2,-32(fp)
 4035390:	10002926 	beq	r2,zero,4035438 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 4035394:	e13ff817 	ldw	r4,-32(fp)
 4035398:	40356400 	call	4035640 <alt_get_fd>
 403539c:	e0bff915 	stw	r2,-28(fp)
 40353a0:	e0bff917 	ldw	r2,-28(fp)
 40353a4:	1000030e 	bge	r2,zero,40353b4 <open+0x84>
    {
      status = index;
 40353a8:	e0bff917 	ldw	r2,-28(fp)
 40353ac:	e0bffa15 	stw	r2,-24(fp)
 40353b0:	00002306 	br	4035440 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 40353b4:	e0bff917 	ldw	r2,-28(fp)
 40353b8:	10c00324 	muli	r3,r2,12
 40353bc:	00800034 	movhi	r2,0
 40353c0:	1083d904 	addi	r2,r2,3940
 40353c4:	1885883a 	add	r2,r3,r2
 40353c8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 40353cc:	e0fffe17 	ldw	r3,-8(fp)
 40353d0:	00900034 	movhi	r2,16384
 40353d4:	10bfffc4 	addi	r2,r2,-1
 40353d8:	1886703a 	and	r3,r3,r2
 40353dc:	e0bffc17 	ldw	r2,-16(fp)
 40353e0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 40353e4:	e0bffb17 	ldw	r2,-20(fp)
 40353e8:	1000051e 	bne	r2,zero,4035400 <open+0xd0>
 40353ec:	e13ffc17 	ldw	r4,-16(fp)
 40353f0:	403526c0 	call	403526c <alt_file_locked>
 40353f4:	e0bffa15 	stw	r2,-24(fp)
 40353f8:	e0bffa17 	ldw	r2,-24(fp)
 40353fc:	10001016 	blt	r2,zero,4035440 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4035400:	e0bff817 	ldw	r2,-32(fp)
 4035404:	10800317 	ldw	r2,12(r2)
 4035408:	10000826 	beq	r2,zero,403542c <open+0xfc>
 403540c:	e0bff817 	ldw	r2,-32(fp)
 4035410:	10800317 	ldw	r2,12(r2)
 4035414:	e1ffff17 	ldw	r7,-4(fp)
 4035418:	e1bffe17 	ldw	r6,-8(fp)
 403541c:	e17ffd17 	ldw	r5,-12(fp)
 4035420:	e13ffc17 	ldw	r4,-16(fp)
 4035424:	103ee83a 	callr	r2
 4035428:	00000106 	br	4035430 <open+0x100>
 403542c:	0005883a 	mov	r2,zero
 4035430:	e0bffa15 	stw	r2,-24(fp)
 4035434:	00000206 	br	4035440 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 4035438:	00bffb44 	movi	r2,-19
 403543c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4035440:	e0bffa17 	ldw	r2,-24(fp)
 4035444:	1000090e 	bge	r2,zero,403546c <open+0x13c>
  {
    alt_release_fd (index);  
 4035448:	e13ff917 	ldw	r4,-28(fp)
 403544c:	4033af00 	call	4033af0 <alt_release_fd>
    ALT_ERRNO = -status;
 4035450:	40352300 	call	4035230 <alt_get_errno>
 4035454:	1007883a 	mov	r3,r2
 4035458:	e0bffa17 	ldw	r2,-24(fp)
 403545c:	0085c83a 	sub	r2,zero,r2
 4035460:	18800015 	stw	r2,0(r3)
    return -1;
 4035464:	00bfffc4 	movi	r2,-1
 4035468:	00000106 	br	4035470 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 403546c:	e0bff917 	ldw	r2,-28(fp)
}
 4035470:	e037883a 	mov	sp,fp
 4035474:	dfc00117 	ldw	ra,4(sp)
 4035478:	df000017 	ldw	fp,0(sp)
 403547c:	dec00204 	addi	sp,sp,8
 4035480:	f800283a 	ret

04035484 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 4035484:	deffff04 	addi	sp,sp,-4
 4035488:	df000015 	stw	fp,0(sp)
 403548c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 4035490:	000170fa 	wrctl	ienable,zero
}
 4035494:	0001883a 	nop
 4035498:	e037883a 	mov	sp,fp
 403549c:	df000017 	ldw	fp,0(sp)
 40354a0:	dec00104 	addi	sp,sp,4
 40354a4:	f800283a 	ret

040354a8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 40354a8:	defffa04 	addi	sp,sp,-24
 40354ac:	dfc00515 	stw	ra,20(sp)
 40354b0:	df000415 	stw	fp,16(sp)
 40354b4:	df000404 	addi	fp,sp,16
 40354b8:	e13ffe15 	stw	r4,-8(fp)
 40354bc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40354c0:	e0bfff17 	ldw	r2,-4(fp)
 40354c4:	10800017 	ldw	r2,0(r2)
 40354c8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40354cc:	e13ffe17 	ldw	r4,-8(fp)
 40354d0:	4027ecc0 	call	4027ecc <strlen>
 40354d4:	10800044 	addi	r2,r2,1
 40354d8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40354dc:	00000d06 	br	4035514 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 40354e0:	e0bffc17 	ldw	r2,-16(fp)
 40354e4:	10800217 	ldw	r2,8(r2)
 40354e8:	e0fffd17 	ldw	r3,-12(fp)
 40354ec:	180d883a 	mov	r6,r3
 40354f0:	e17ffe17 	ldw	r5,-8(fp)
 40354f4:	1009883a 	mov	r4,r2
 40354f8:	403585c0 	call	403585c <memcmp>
 40354fc:	1000021e 	bne	r2,zero,4035508 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4035500:	e0bffc17 	ldw	r2,-16(fp)
 4035504:	00000706 	br	4035524 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 4035508:	e0bffc17 	ldw	r2,-16(fp)
 403550c:	10800017 	ldw	r2,0(r2)
 4035510:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4035514:	e0fffc17 	ldw	r3,-16(fp)
 4035518:	e0bfff17 	ldw	r2,-4(fp)
 403551c:	18bff01e 	bne	r3,r2,40354e0 <__flash_rwdata_start+0xfffff274>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4035520:	0005883a 	mov	r2,zero
}
 4035524:	e037883a 	mov	sp,fp
 4035528:	dfc00117 	ldw	ra,4(sp)
 403552c:	df000017 	ldw	fp,0(sp)
 4035530:	dec00204 	addi	sp,sp,8
 4035534:	f800283a 	ret

04035538 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 4035538:	defffb04 	addi	sp,sp,-20
 403553c:	dfc00415 	stw	ra,16(sp)
 4035540:	df000315 	stw	fp,12(sp)
 4035544:	df000304 	addi	fp,sp,12
 4035548:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 403554c:	d0a01617 	ldw	r2,-32680(gp)
 4035550:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4035554:	00003106 	br	403561c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 4035558:	e0bffd17 	ldw	r2,-12(fp)
 403555c:	10800217 	ldw	r2,8(r2)
 4035560:	1009883a 	mov	r4,r2
 4035564:	4027ecc0 	call	4027ecc <strlen>
 4035568:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 403556c:	e0bffd17 	ldw	r2,-12(fp)
 4035570:	10c00217 	ldw	r3,8(r2)
 4035574:	e0bffe17 	ldw	r2,-8(fp)
 4035578:	10bfffc4 	addi	r2,r2,-1
 403557c:	1885883a 	add	r2,r3,r2
 4035580:	10800003 	ldbu	r2,0(r2)
 4035584:	10803fcc 	andi	r2,r2,255
 4035588:	1080201c 	xori	r2,r2,128
 403558c:	10bfe004 	addi	r2,r2,-128
 4035590:	10800bd8 	cmpnei	r2,r2,47
 4035594:	1000031e 	bne	r2,zero,40355a4 <alt_find_file+0x6c>
    {
      len -= 1;
 4035598:	e0bffe17 	ldw	r2,-8(fp)
 403559c:	10bfffc4 	addi	r2,r2,-1
 40355a0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40355a4:	e0bffe17 	ldw	r2,-8(fp)
 40355a8:	e0ffff17 	ldw	r3,-4(fp)
 40355ac:	1885883a 	add	r2,r3,r2
 40355b0:	10800003 	ldbu	r2,0(r2)
 40355b4:	10803fcc 	andi	r2,r2,255
 40355b8:	1080201c 	xori	r2,r2,128
 40355bc:	10bfe004 	addi	r2,r2,-128
 40355c0:	10800be0 	cmpeqi	r2,r2,47
 40355c4:	1000081e 	bne	r2,zero,40355e8 <alt_find_file+0xb0>
 40355c8:	e0bffe17 	ldw	r2,-8(fp)
 40355cc:	e0ffff17 	ldw	r3,-4(fp)
 40355d0:	1885883a 	add	r2,r3,r2
 40355d4:	10800003 	ldbu	r2,0(r2)
 40355d8:	10803fcc 	andi	r2,r2,255
 40355dc:	1080201c 	xori	r2,r2,128
 40355e0:	10bfe004 	addi	r2,r2,-128
 40355e4:	10000a1e 	bne	r2,zero,4035610 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 40355e8:	e0bffd17 	ldw	r2,-12(fp)
 40355ec:	10800217 	ldw	r2,8(r2)
 40355f0:	e0fffe17 	ldw	r3,-8(fp)
 40355f4:	180d883a 	mov	r6,r3
 40355f8:	e17fff17 	ldw	r5,-4(fp)
 40355fc:	1009883a 	mov	r4,r2
 4035600:	403585c0 	call	403585c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4035604:	1000021e 	bne	r2,zero,4035610 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 4035608:	e0bffd17 	ldw	r2,-12(fp)
 403560c:	00000706 	br	403562c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 4035610:	e0bffd17 	ldw	r2,-12(fp)
 4035614:	10800017 	ldw	r2,0(r2)
 4035618:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 403561c:	e0fffd17 	ldw	r3,-12(fp)
 4035620:	d0a01604 	addi	r2,gp,-32680
 4035624:	18bfcc1e 	bne	r3,r2,4035558 <__flash_rwdata_start+0xfffff2ec>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 4035628:	0005883a 	mov	r2,zero
}
 403562c:	e037883a 	mov	sp,fp
 4035630:	dfc00117 	ldw	ra,4(sp)
 4035634:	df000017 	ldw	fp,0(sp)
 4035638:	dec00204 	addi	sp,sp,8
 403563c:	f800283a 	ret

04035640 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4035640:	defffc04 	addi	sp,sp,-16
 4035644:	df000315 	stw	fp,12(sp)
 4035648:	df000304 	addi	fp,sp,12
 403564c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4035650:	00bffa04 	movi	r2,-24
 4035654:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4035658:	e03ffd15 	stw	zero,-12(fp)
 403565c:	00001906 	br	40356c4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4035660:	00800034 	movhi	r2,0
 4035664:	1083d904 	addi	r2,r2,3940
 4035668:	e0fffd17 	ldw	r3,-12(fp)
 403566c:	18c00324 	muli	r3,r3,12
 4035670:	10c5883a 	add	r2,r2,r3
 4035674:	10800017 	ldw	r2,0(r2)
 4035678:	10000f1e 	bne	r2,zero,40356b8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 403567c:	00800034 	movhi	r2,0
 4035680:	1083d904 	addi	r2,r2,3940
 4035684:	e0fffd17 	ldw	r3,-12(fp)
 4035688:	18c00324 	muli	r3,r3,12
 403568c:	10c5883a 	add	r2,r2,r3
 4035690:	e0ffff17 	ldw	r3,-4(fp)
 4035694:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 4035698:	d0e01a17 	ldw	r3,-32664(gp)
 403569c:	e0bffd17 	ldw	r2,-12(fp)
 40356a0:	1880020e 	bge	r3,r2,40356ac <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 40356a4:	e0bffd17 	ldw	r2,-12(fp)
 40356a8:	d0a01a15 	stw	r2,-32664(gp)
      }
      rc = i;
 40356ac:	e0bffd17 	ldw	r2,-12(fp)
 40356b0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 40356b4:	00000606 	br	40356d0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40356b8:	e0bffd17 	ldw	r2,-12(fp)
 40356bc:	10800044 	addi	r2,r2,1
 40356c0:	e0bffd15 	stw	r2,-12(fp)
 40356c4:	e0bffd17 	ldw	r2,-12(fp)
 40356c8:	10800810 	cmplti	r2,r2,32
 40356cc:	103fe41e 	bne	r2,zero,4035660 <__flash_rwdata_start+0xfffff3f4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40356d0:	e0bffe17 	ldw	r2,-8(fp)
}
 40356d4:	e037883a 	mov	sp,fp
 40356d8:	df000017 	ldw	fp,0(sp)
 40356dc:	dec00104 	addi	sp,sp,4
 40356e0:	f800283a 	ret

040356e4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 40356e4:	defffb04 	addi	sp,sp,-20
 40356e8:	df000415 	stw	fp,16(sp)
 40356ec:	df000404 	addi	fp,sp,16
 40356f0:	e13ffe15 	stw	r4,-8(fp)
 40356f4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 40356f8:	e0bfff17 	ldw	r2,-4(fp)
 40356fc:	10840070 	cmpltui	r2,r2,4097
 4035700:	1000021e 	bne	r2,zero,403570c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 4035704:	00840004 	movi	r2,4096
 4035708:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 403570c:	e0fffe17 	ldw	r3,-8(fp)
 4035710:	e0bfff17 	ldw	r2,-4(fp)
 4035714:	1885883a 	add	r2,r3,r2
 4035718:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 403571c:	e0bffe17 	ldw	r2,-8(fp)
 4035720:	e0bffc15 	stw	r2,-16(fp)
 4035724:	00000506 	br	403573c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 4035728:	e0bffc17 	ldw	r2,-16(fp)
 403572c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4035730:	e0bffc17 	ldw	r2,-16(fp)
 4035734:	10800804 	addi	r2,r2,32
 4035738:	e0bffc15 	stw	r2,-16(fp)
 403573c:	e0fffc17 	ldw	r3,-16(fp)
 4035740:	e0bffd17 	ldw	r2,-12(fp)
 4035744:	18bff836 	bltu	r3,r2,4035728 <__flash_rwdata_start+0xfffff4bc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 4035748:	e0bffe17 	ldw	r2,-8(fp)
 403574c:	108007cc 	andi	r2,r2,31
 4035750:	10000226 	beq	r2,zero,403575c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 4035754:	e0bffc17 	ldw	r2,-16(fp)
 4035758:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 403575c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 4035760:	0001883a 	nop
 4035764:	e037883a 	mov	sp,fp
 4035768:	df000017 	ldw	fp,0(sp)
 403576c:	dec00104 	addi	sp,sp,4
 4035770:	f800283a 	ret

04035774 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4035774:	defffe04 	addi	sp,sp,-8
 4035778:	df000115 	stw	fp,4(sp)
 403577c:	df000104 	addi	fp,sp,4
 4035780:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 4035784:	e0bfff17 	ldw	r2,-4(fp)
 4035788:	10bffe84 	addi	r2,r2,-6
 403578c:	10c00428 	cmpgeui	r3,r2,16
 4035790:	18001a1e 	bne	r3,zero,40357fc <alt_exception_cause_generated_bad_addr+0x88>
 4035794:	100690ba 	slli	r3,r2,2
 4035798:	008100f4 	movhi	r2,1027
 403579c:	1095eb04 	addi	r2,r2,22444
 40357a0:	1885883a 	add	r2,r3,r2
 40357a4:	10800017 	ldw	r2,0(r2)
 40357a8:	1000683a 	jmp	r2
 40357ac:	040357ec 	andhi	r16,zero,3423
 40357b0:	040357ec 	andhi	r16,zero,3423
 40357b4:	040357fc 	xorhi	r16,zero,3423
 40357b8:	040357fc 	xorhi	r16,zero,3423
 40357bc:	040357fc 	xorhi	r16,zero,3423
 40357c0:	040357ec 	andhi	r16,zero,3423
 40357c4:	040357f4 	movhi	r16,3423
 40357c8:	040357fc 	xorhi	r16,zero,3423
 40357cc:	040357ec 	andhi	r16,zero,3423
 40357d0:	040357ec 	andhi	r16,zero,3423
 40357d4:	040357fc 	xorhi	r16,zero,3423
 40357d8:	040357ec 	andhi	r16,zero,3423
 40357dc:	040357f4 	movhi	r16,3423
 40357e0:	040357fc 	xorhi	r16,zero,3423
 40357e4:	040357fc 	xorhi	r16,zero,3423
 40357e8:	040357ec 	andhi	r16,zero,3423
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 40357ec:	00800044 	movi	r2,1
 40357f0:	00000306 	br	4035800 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 40357f4:	0005883a 	mov	r2,zero
 40357f8:	00000106 	br	4035800 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 40357fc:	0005883a 	mov	r2,zero
  }
}
 4035800:	e037883a 	mov	sp,fp
 4035804:	df000017 	ldw	fp,0(sp)
 4035808:	dec00104 	addi	sp,sp,4
 403580c:	f800283a 	ret

04035810 <atexit>:
 4035810:	200b883a 	mov	r5,r4
 4035814:	000f883a 	mov	r7,zero
 4035818:	000d883a 	mov	r6,zero
 403581c:	0009883a 	mov	r4,zero
 4035820:	40358d81 	jmpi	40358d8 <__register_exitproc>

04035824 <exit>:
 4035824:	defffe04 	addi	sp,sp,-8
 4035828:	000b883a 	mov	r5,zero
 403582c:	dc000015 	stw	r16,0(sp)
 4035830:	dfc00115 	stw	ra,4(sp)
 4035834:	2021883a 	mov	r16,r4
 4035838:	40359f00 	call	40359f0 <__call_exitprocs>
 403583c:	00800034 	movhi	r2,0
 4035840:	10886304 	addi	r2,r2,8588
 4035844:	11000017 	ldw	r4,0(r2)
 4035848:	20800f17 	ldw	r2,60(r4)
 403584c:	10000126 	beq	r2,zero,4035854 <exit+0x30>
 4035850:	103ee83a 	callr	r2
 4035854:	8009883a 	mov	r4,r16
 4035858:	403336c0 	call	403336c <_exit>

0403585c <memcmp>:
 403585c:	01c000c4 	movi	r7,3
 4035860:	3980192e 	bgeu	r7,r6,40358c8 <memcmp+0x6c>
 4035864:	2144b03a 	or	r2,r4,r5
 4035868:	11c4703a 	and	r2,r2,r7
 403586c:	10000f26 	beq	r2,zero,40358ac <memcmp+0x50>
 4035870:	20800003 	ldbu	r2,0(r4)
 4035874:	28c00003 	ldbu	r3,0(r5)
 4035878:	10c0151e 	bne	r2,r3,40358d0 <memcmp+0x74>
 403587c:	31bfff84 	addi	r6,r6,-2
 4035880:	01ffffc4 	movi	r7,-1
 4035884:	00000406 	br	4035898 <memcmp+0x3c>
 4035888:	20800003 	ldbu	r2,0(r4)
 403588c:	28c00003 	ldbu	r3,0(r5)
 4035890:	31bfffc4 	addi	r6,r6,-1
 4035894:	10c00e1e 	bne	r2,r3,40358d0 <memcmp+0x74>
 4035898:	21000044 	addi	r4,r4,1
 403589c:	29400044 	addi	r5,r5,1
 40358a0:	31fff91e 	bne	r6,r7,4035888 <__flash_rwdata_start+0xfffff61c>
 40358a4:	0005883a 	mov	r2,zero
 40358a8:	f800283a 	ret
 40358ac:	20c00017 	ldw	r3,0(r4)
 40358b0:	28800017 	ldw	r2,0(r5)
 40358b4:	18bfee1e 	bne	r3,r2,4035870 <__flash_rwdata_start+0xfffff604>
 40358b8:	31bfff04 	addi	r6,r6,-4
 40358bc:	21000104 	addi	r4,r4,4
 40358c0:	29400104 	addi	r5,r5,4
 40358c4:	39bff936 	bltu	r7,r6,40358ac <__flash_rwdata_start+0xfffff640>
 40358c8:	303fe91e 	bne	r6,zero,4035870 <__flash_rwdata_start+0xfffff604>
 40358cc:	003ff506 	br	40358a4 <__flash_rwdata_start+0xfffff638>
 40358d0:	10c5c83a 	sub	r2,r2,r3
 40358d4:	f800283a 	ret

040358d8 <__register_exitproc>:
 40358d8:	defffa04 	addi	sp,sp,-24
 40358dc:	dc000315 	stw	r16,12(sp)
 40358e0:	04000034 	movhi	r16,0
 40358e4:	84086304 	addi	r16,r16,8588
 40358e8:	80c00017 	ldw	r3,0(r16)
 40358ec:	dc400415 	stw	r17,16(sp)
 40358f0:	dfc00515 	stw	ra,20(sp)
 40358f4:	18805217 	ldw	r2,328(r3)
 40358f8:	2023883a 	mov	r17,r4
 40358fc:	10003726 	beq	r2,zero,40359dc <__register_exitproc+0x104>
 4035900:	10c00117 	ldw	r3,4(r2)
 4035904:	010007c4 	movi	r4,31
 4035908:	20c00e16 	blt	r4,r3,4035944 <__register_exitproc+0x6c>
 403590c:	1a000044 	addi	r8,r3,1
 4035910:	8800221e 	bne	r17,zero,403599c <__register_exitproc+0xc4>
 4035914:	18c00084 	addi	r3,r3,2
 4035918:	18c7883a 	add	r3,r3,r3
 403591c:	18c7883a 	add	r3,r3,r3
 4035920:	12000115 	stw	r8,4(r2)
 4035924:	10c7883a 	add	r3,r2,r3
 4035928:	19400015 	stw	r5,0(r3)
 403592c:	0005883a 	mov	r2,zero
 4035930:	dfc00517 	ldw	ra,20(sp)
 4035934:	dc400417 	ldw	r17,16(sp)
 4035938:	dc000317 	ldw	r16,12(sp)
 403593c:	dec00604 	addi	sp,sp,24
 4035940:	f800283a 	ret
 4035944:	008100b4 	movhi	r2,1026
 4035948:	109bd804 	addi	r2,r2,28512
 403594c:	10002626 	beq	r2,zero,40359e8 <__register_exitproc+0x110>
 4035950:	01006404 	movi	r4,400
 4035954:	d9400015 	stw	r5,0(sp)
 4035958:	d9800115 	stw	r6,4(sp)
 403595c:	d9c00215 	stw	r7,8(sp)
 4035960:	4026f600 	call	4026f60 <malloc>
 4035964:	d9400017 	ldw	r5,0(sp)
 4035968:	d9800117 	ldw	r6,4(sp)
 403596c:	d9c00217 	ldw	r7,8(sp)
 4035970:	10001d26 	beq	r2,zero,40359e8 <__register_exitproc+0x110>
 4035974:	81000017 	ldw	r4,0(r16)
 4035978:	10000115 	stw	zero,4(r2)
 403597c:	02000044 	movi	r8,1
 4035980:	22405217 	ldw	r9,328(r4)
 4035984:	0007883a 	mov	r3,zero
 4035988:	12400015 	stw	r9,0(r2)
 403598c:	20805215 	stw	r2,328(r4)
 4035990:	10006215 	stw	zero,392(r2)
 4035994:	10006315 	stw	zero,396(r2)
 4035998:	883fde26 	beq	r17,zero,4035914 <__flash_rwdata_start+0xfffff6a8>
 403599c:	18c9883a 	add	r4,r3,r3
 40359a0:	2109883a 	add	r4,r4,r4
 40359a4:	1109883a 	add	r4,r2,r4
 40359a8:	21802215 	stw	r6,136(r4)
 40359ac:	01800044 	movi	r6,1
 40359b0:	12406217 	ldw	r9,392(r2)
 40359b4:	30cc983a 	sll	r6,r6,r3
 40359b8:	4992b03a 	or	r9,r9,r6
 40359bc:	12406215 	stw	r9,392(r2)
 40359c0:	21c04215 	stw	r7,264(r4)
 40359c4:	01000084 	movi	r4,2
 40359c8:	893fd21e 	bne	r17,r4,4035914 <__flash_rwdata_start+0xfffff6a8>
 40359cc:	11006317 	ldw	r4,396(r2)
 40359d0:	218cb03a 	or	r6,r4,r6
 40359d4:	11806315 	stw	r6,396(r2)
 40359d8:	003fce06 	br	4035914 <__flash_rwdata_start+0xfffff6a8>
 40359dc:	18805304 	addi	r2,r3,332
 40359e0:	18805215 	stw	r2,328(r3)
 40359e4:	003fc606 	br	4035900 <__flash_rwdata_start+0xfffff694>
 40359e8:	00bfffc4 	movi	r2,-1
 40359ec:	003fd006 	br	4035930 <__flash_rwdata_start+0xfffff6c4>

040359f0 <__call_exitprocs>:
 40359f0:	defff504 	addi	sp,sp,-44
 40359f4:	df000915 	stw	fp,36(sp)
 40359f8:	dd400615 	stw	r21,24(sp)
 40359fc:	dc800315 	stw	r18,12(sp)
 4035a00:	dfc00a15 	stw	ra,40(sp)
 4035a04:	ddc00815 	stw	r23,32(sp)
 4035a08:	dd800715 	stw	r22,28(sp)
 4035a0c:	dd000515 	stw	r20,20(sp)
 4035a10:	dcc00415 	stw	r19,16(sp)
 4035a14:	dc400215 	stw	r17,8(sp)
 4035a18:	dc000115 	stw	r16,4(sp)
 4035a1c:	d9000015 	stw	r4,0(sp)
 4035a20:	2839883a 	mov	fp,r5
 4035a24:	04800044 	movi	r18,1
 4035a28:	057fffc4 	movi	r21,-1
 4035a2c:	00800034 	movhi	r2,0
 4035a30:	10886304 	addi	r2,r2,8588
 4035a34:	12000017 	ldw	r8,0(r2)
 4035a38:	45005217 	ldw	r20,328(r8)
 4035a3c:	44c05204 	addi	r19,r8,328
 4035a40:	a0001c26 	beq	r20,zero,4035ab4 <__call_exitprocs+0xc4>
 4035a44:	a0800117 	ldw	r2,4(r20)
 4035a48:	15ffffc4 	addi	r23,r2,-1
 4035a4c:	b8000d16 	blt	r23,zero,4035a84 <__call_exitprocs+0x94>
 4035a50:	14000044 	addi	r16,r2,1
 4035a54:	8421883a 	add	r16,r16,r16
 4035a58:	8421883a 	add	r16,r16,r16
 4035a5c:	84402004 	addi	r17,r16,128
 4035a60:	a463883a 	add	r17,r20,r17
 4035a64:	a421883a 	add	r16,r20,r16
 4035a68:	e0001e26 	beq	fp,zero,4035ae4 <__call_exitprocs+0xf4>
 4035a6c:	80804017 	ldw	r2,256(r16)
 4035a70:	e0801c26 	beq	fp,r2,4035ae4 <__call_exitprocs+0xf4>
 4035a74:	bdffffc4 	addi	r23,r23,-1
 4035a78:	843fff04 	addi	r16,r16,-4
 4035a7c:	8c7fff04 	addi	r17,r17,-4
 4035a80:	bd7ff91e 	bne	r23,r21,4035a68 <__flash_rwdata_start+0xfffff7fc>
 4035a84:	008100b4 	movhi	r2,1026
 4035a88:	109bdd04 	addi	r2,r2,28532
 4035a8c:	10000926 	beq	r2,zero,4035ab4 <__call_exitprocs+0xc4>
 4035a90:	a0800117 	ldw	r2,4(r20)
 4035a94:	1000301e 	bne	r2,zero,4035b58 <__call_exitprocs+0x168>
 4035a98:	a0800017 	ldw	r2,0(r20)
 4035a9c:	10003226 	beq	r2,zero,4035b68 <__call_exitprocs+0x178>
 4035aa0:	a009883a 	mov	r4,r20
 4035aa4:	98800015 	stw	r2,0(r19)
 4035aa8:	4026f740 	call	4026f74 <free>
 4035aac:	9d000017 	ldw	r20,0(r19)
 4035ab0:	a03fe41e 	bne	r20,zero,4035a44 <__flash_rwdata_start+0xfffff7d8>
 4035ab4:	dfc00a17 	ldw	ra,40(sp)
 4035ab8:	df000917 	ldw	fp,36(sp)
 4035abc:	ddc00817 	ldw	r23,32(sp)
 4035ac0:	dd800717 	ldw	r22,28(sp)
 4035ac4:	dd400617 	ldw	r21,24(sp)
 4035ac8:	dd000517 	ldw	r20,20(sp)
 4035acc:	dcc00417 	ldw	r19,16(sp)
 4035ad0:	dc800317 	ldw	r18,12(sp)
 4035ad4:	dc400217 	ldw	r17,8(sp)
 4035ad8:	dc000117 	ldw	r16,4(sp)
 4035adc:	dec00b04 	addi	sp,sp,44
 4035ae0:	f800283a 	ret
 4035ae4:	a0800117 	ldw	r2,4(r20)
 4035ae8:	80c00017 	ldw	r3,0(r16)
 4035aec:	10bfffc4 	addi	r2,r2,-1
 4035af0:	15c01426 	beq	r2,r23,4035b44 <__call_exitprocs+0x154>
 4035af4:	80000015 	stw	zero,0(r16)
 4035af8:	183fde26 	beq	r3,zero,4035a74 <__flash_rwdata_start+0xfffff808>
 4035afc:	95c8983a 	sll	r4,r18,r23
 4035b00:	a0806217 	ldw	r2,392(r20)
 4035b04:	a5800117 	ldw	r22,4(r20)
 4035b08:	2084703a 	and	r2,r4,r2
 4035b0c:	10000b26 	beq	r2,zero,4035b3c <__call_exitprocs+0x14c>
 4035b10:	a0806317 	ldw	r2,396(r20)
 4035b14:	2088703a 	and	r4,r4,r2
 4035b18:	20000c1e 	bne	r4,zero,4035b4c <__call_exitprocs+0x15c>
 4035b1c:	89400017 	ldw	r5,0(r17)
 4035b20:	d9000017 	ldw	r4,0(sp)
 4035b24:	183ee83a 	callr	r3
 4035b28:	a0800117 	ldw	r2,4(r20)
 4035b2c:	15bfbf1e 	bne	r2,r22,4035a2c <__flash_rwdata_start+0xfffff7c0>
 4035b30:	98800017 	ldw	r2,0(r19)
 4035b34:	153fcf26 	beq	r2,r20,4035a74 <__flash_rwdata_start+0xfffff808>
 4035b38:	003fbc06 	br	4035a2c <__flash_rwdata_start+0xfffff7c0>
 4035b3c:	183ee83a 	callr	r3
 4035b40:	003ff906 	br	4035b28 <__flash_rwdata_start+0xfffff8bc>
 4035b44:	a5c00115 	stw	r23,4(r20)
 4035b48:	003feb06 	br	4035af8 <__flash_rwdata_start+0xfffff88c>
 4035b4c:	89000017 	ldw	r4,0(r17)
 4035b50:	183ee83a 	callr	r3
 4035b54:	003ff406 	br	4035b28 <__flash_rwdata_start+0xfffff8bc>
 4035b58:	a0800017 	ldw	r2,0(r20)
 4035b5c:	a027883a 	mov	r19,r20
 4035b60:	1029883a 	mov	r20,r2
 4035b64:	003fb606 	br	4035a40 <__flash_rwdata_start+0xfffff7d4>
 4035b68:	0005883a 	mov	r2,zero
 4035b6c:	003ffb06 	br	4035b5c <__flash_rwdata_start+0xfffff8f0>
 4035b70:	0201ffff 	0x201ffff
 4035b74:	ffff0000 	call	ffff000 <__flash_rwdata_start+0xbfc8d94>
 4035b78:	00000201 	jmpi	20 <__alt_mem_sdram+0x20>
 4035b7c:	0401ffff 	0x401ffff
 4035b80:	00010000 	call	1000 <alt_fd_list+0x9c>
 4035b84:	010d0bff 	0x10d0bff
 4035b88:	7f010002 	0x7f010002
 4035b8c:	00000000 	call	0 <__alt_mem_sdram>
 4035b90:	00000170 	cmpltui	zero,zero,5
 4035b94:	883a0001 	jmpi	883a000 <__flash_rwdata_start+0x4803d94>
 4035b98:	010d0bff 	0x10d0bff
 4035b9c:	01010002 	0x1010002
	...
 4035ba8:	010d0bff 	0x10d0bff
 4035bac:	01010004 	movi	r4,1024
 4035bb0:	00000100 	call	10 <__alt_mem_sdram+0x10>
 4035bb4:	00000000 	call	0 <__alt_mem_sdram>
 4035bb8:	01110bff 	0x1110bff
 4035bbc:	01010004 	movi	r4,1024
 4035bc0:	7f000105 	stb	fp,4(r15)
 4035bc4:	007d0000 	call	7d000 <__alt_heap_start+0x2fcb4>
 4035bc8:	00000000 	call	0 <__alt_mem_sdram>
 4035bcc:	01883a00 	call	1883a0 <__alt_heap_start+0x13b054>
 4035bd0:	04024130 	cmpltui	r16,zero,2308
